(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_i32_i32_i64_=>_i32 (func (param i32 i32 i32 i32 i64) (result i32)))
 (type $i32_i32_i32_i32_f64_=>_i32 (func (param i32 i32 i32 i32 f64) (result i32)))
 (type $i32_i32_i32_i32_i32_f64_=>_i32 (func (param i32 i32 i32 i32 i32 f64) (result i32)))
 (type $i32_i64_i32_=>_i64 (func (param i32 i64 i32) (result i64)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $i32_f64_i32_i32_i32_i32_=>_i32 (func (param i32 f64 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_=>_i64 (func (param i32 i32 i32 i32) (result i64)))
 (type $i32_i32_i32_=>_f64 (func (param i32 i32 i32) (result f64)))
 (type $i32_i32_i64_i32_i32_=>_none (func (param i32 i32 i64 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $f64_=>_f64 (func (param f64) (result f64)))
 (type $f64_i32_=>_f64 (func (param f64 i32) (result f64)))
 (type $f64_f64_=>_f64 (func (param f64 f64) (result f64)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $i32_i32_i32_i64_=>_i64 (func (param i32 i32 i32 i64) (result i64)))
 (type $i32_i32_i32_i32_=>_f32 (func (param i32 i32 i32 i32) (result f32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_f32_f32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 f32 f32 i32 i32 i32 i32)))
 (type $i32_i32_i64_=>_none (func (param i32 i32 i64)))
 (type $i32_i32_f32_=>_none (func (param i32 i32 f32)))
 (type $i32_i64_=>_none (func (param i32 i64)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_f32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 f32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_f32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 f32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_f32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 f32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_f32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 f32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_f64_=>_i32 (func (param i32 i32 i32 i32 i32 i32 f64) (result i32)))
 (type $i32_i32_f64_i32_i32_i32_i32_=>_i32 (func (param i32 i32 f64 i32 i32 i32 i32) (result i32)))
 (type $i64_i32_i32_=>_i32 (func (param i64 i32 i32) (result i32)))
 (type $f64_i32_=>_i32 (func (param f64 i32) (result i32)))
 (type $i32_i32_=>_i64 (func (param i32 i32) (result i64)))
 (type $i32_i32_i32_=>_f32 (func (param i32 i32 i32) (result f32)))
 (type $f32_f32_i32_i32_=>_f32 (func (param f32 f32 i32 i32) (result f32)))
 (type $i32_i32_i32_i32_i32_=>_f64 (func (param i32 i32 i32 i32 i32) (result f64)))
 (type $i32_i32_i32_i32_i32_i32_=>_f64 (func (param i32 i32 i32 i32 i32 i32) (result f64)))
 (type $f64_f64_i32_=>_f64 (func (param f64 f64 i32) (result f64)))
 (import "env" "memory" (memory $memory 256 256))
 (data (i32.const 1025) "\01\01\01\02\03\03\03\02\03\03\03\02\03\03\03\00\03\0c\0f03<?\c0\c3\cc\cf\f0\f3\fc\ff\01\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\02\00\00\00\01\00\00\00\07\00\00\00\00\00\00\00\04\00\00\00\03\00\00\00\06\00\00\00\01\00\00\00\05\00\00\00\02\00\00\00\0f\00\00\00\00\00\00\00\08\00\00\00\07\00\00\00\0c\00\00\00\03\00\00\00\0b\00\00\00\04\00\00\00\0e\00\00\00\01\00\00\00\t\00\00\00\06\00\00\00\0d\00\00\00\02\00\00\00\n\00\00\00\05")
 (data (i32.const 1185) "@\caE\1bL\ffR\82Z\b3b\a2k`u\00\ff\00\ff\00\ff\00\ff\00\ff\00\fe\01\00\01\ff\00\fe\00\fd\02\00\01\ff\00\fe\00\fd\03\00\01\ff\00\00\9d>\00@^>\00\c0\04>\00\80\ed>\00@\89>\00\00\00\00\00\c0L?\00\00\cd=")
 (data (i32.const 1280) "@\05\00\00\00\08\00\00\bc\n\00\00t\0d\00\00(\10\00\00\d8\12\00\00\84\15\00\00\ec\16\00\00\a8\17\00\00\1c\18\00\00h\18\00\00\a0\18\00\00\c0\18\00\00\d8\18\00\00\e4\18\00\00\00\00\00\00\01")
 (data (i32.constt\00\00\00\0b\00\00\00\0d\00\00\00\0f\00\00\00\11\00\00\00\13\00\00\00\15\00\00\00\17\00\00\00\19\00\00\00\1b\00\00\00\1d\00\00\00\1f\00\00\00!\00\00\00#\00\00\00%\00\00\00\'\00\00\00)\00\00\00+\00\00\00-\00\00\00/\00\00\001\00\00\003\00\00\005\00\00\007\00\00\009\00\00\00;\00\00\00=\00\00\00?\00\00\00A\00\00\00C\00\00\00E\00\00\00G\00\00\00I\00\00\00K\00\00\00M\00\00\00O\00\00\00Q\00\00\00S\00\00\00U\00\00\00W\00\00\00Y\00\00\00[\00\00\00]\00\00\00_\00\00\00a\00\00\00c\00\00\00e\00\00\00g\00\00\00i\00\00\00k\00\00\00m\00\00\00o\00\00\00q\00\00\00s\00\00\00u\00\00\00w\00\00\00y\00\00\00{\00\00\00}\00\00\00\7f\00\00\00\81\00\00\00\83\00\00\00\85\00\00\00\87\00\00\00\89\00\00\00\8b\00\00\00\8d\00\00\00\8f\00\00\00\91\00\00\00\93\00\00\00\95\00\00\00\97\00\00\00\99\00\00\00\9b\00\00\00\9d\00\00\00\9f\00\00\00\a1\00\00\00\a3\00\00\00\a5\00\00\00\a7\00\00\00\a9\00\00\00\ab\00\00\00\ad\00\00\00\af\00\00\00\b1\00\00\00\b3\00\00\00\b5\00\00\00\b7\00\00\00\b9\00\00\00\bb\00\00\00\bd\00\00\00\bf\00\00\00\c1\00\00\00\c3\00\00\00\c5\00\00\00\c7\00\00\00\c9\00\00\00\cb\00\00\00\cd\00\00\00\cf\00\00\00\d1\00\00\00\d3\00\00\00\d5\00\00\00\d7\00\00\00\d9\00\00\00\db\00\00\00\dd\00\00\00\df\00\00\00\e1\00\00\00\e3\00\00\00\e5\00\00\00\e7\00\00\00\e9\00\00\00\eb\00\00\00\ed\00\00\00\ef\00\00\00\f1\00\00\00\f3\00\00\00\f5\00\00\00\f7\00\00\00\f9\00\00\00\fb\00\00\00\fd\00\00\00\ff\00\00\00\01\01\00\00\03\01\00\00\05\01\00\00\07\01\00\00\t\01\00\00\0b\01\00\00\0d\01\00\00\0f\01\00\00\11\01\00\00\13\01\00\00\15\01\00\00\17\01\00\00\19\01\00\00\1b\01\00\00\1d\01\00\00\1f\01\00\00!\01\00\00#\01\00\00%\01\00\00\'\01\00\00)\01\00\00+\01\00\00-\01\00\00/\01\00\001\01\00\003\01\00\005\01\00\007\01\00\009\01\00\00;\01\00\00=\01\00\00?\01\00\00A\01\00\00C\01\00\00E\01\00\00G\01\00\00I\01\00\00K\01\00\00M\01\00\00O\01\00\00Q\01\00\00S\01\00\00U\01\00\00W\01\00\00Y\01\00\00[\01\00\00]\01\00\00_\01\00\00\0d\00\00\00\19\00\00\00)\00\00\00=\00\00\00U\00\00\00q\00\00\00\91\00\00\00\b5\00\00\00\dd\00\00\00\t\01\00\009\01\00\00m\01\00\00\a5\01\00\00\e1\01\00\00!\02\00\00e\02\00\00\ad\02\00\00\f9\02\00\00I\03\00\00\9d\03\00\00\f5\03\00\00Q\04\00\00\b1\04\00\00\15\05\00\00}\05\00\00\e9\05\00\00Y\06\00\00\cd\06\00\00E\07\00\00\c1\07\00\00A\08\00\00\c5\08\00\00M\t\00\00\d9\t\00\00i\n\00\00\fd\n\00\00\95\0b\00\001\0c\00\00\d1\0c\00\00u\0d\00\00\1d\0e\00\00\c9\0e\00\00y\0f\00\00-\10\00\00\e5\10\00\00\a1\11\00\00a\12\00\00%\13\00\00\ed\13\00\00\b9\14\00\00\89\15\00\00]\16\00\005\17\00\00\11\18\00\00\f1\18\00\00\d5\19\00\00\bd\1a\00\00\a9\1b\00\00\99\1c\00\00\8d\1d\00\00\85\1e\00\00\81\1f\00\00\81 \00\00\85!\00\00\8d\"\00\00\99#\00\00\a9$\00\00\bd%\00\00\d5&\00\00\f1\'\00\00\11)\00\005*\00\00]+\00\00\89,\00\00\b9-\00\00\ed.\00\00%0\00\00a1\00\00\a12\00\00\e53\00\00-5\00\00y6\00\00\c97\00\00\1d9\00\00u:\00\00\d1;\00\001=\00\00\95>\00\00\fd?\00\00iA\00\00\d9B\00\00MD\00\00\c5E\00\00AG\00\00\c1H\00\00EJ\00\00\cdK\00\00YM\00\00\e9N\00\00}P\00\00\15R\00\00\b1S\00\00QU\00\00\f5V\00\00\9dX\00\00IZ\00\00\f9[\00\00\ad]\00\00e_\00\00!a\00\00\e1b\00\00\a5d\00\00mf\00\009h\00\00\tj\00\00\ddk\00\00\b5m\00\00\91o\00\00qq\00\00Us\00\00=u\00\00)w\00\00\19y\00\00\0d{\00\00\05}\00\00\01\7f\00\00\01\81\00\00\05\83\00\00\0d\85\00\00\19\87\00\00)\89\00\00=\8b\00\00U\8d\00\00q\8f\00\00\91\91\00\00\b5\93\00\00\dd\95\00\00\t\98\00\009\9a\00\00m\9c\00\00\a5\9e\00\00\e1\a0\00\00!\a3\00\00e\a5\00\00\ad\a7\00\00\f9\a9\00\00I\ac\00\00\9d\ae\00\00\f5\b0\00\00Q\b3\00\00\b1\b5\00\00\15\b8\00\00}\ba\00\00\e9\bc\00\00Y\bf\00\00\cd\c1\00\00E\c4\00\00\c1\c6\00\00A\c9\00\00\c5\cb\00\00M\ce\00\00\d9\d0\00\00i\d3\00\00\fd\d5\00\00\95\d8\00\001\db\00\00\d1\dd\00\00u\e0\00\00\1d\e3\00\00\c9\e5\00\00y\e8\00\00-\eb\00\00\e5\ed\00\00\a1\f0\00\00?\00\00\00\81\00\00\00\e7\00\00\00y\01\00\00?\02\00\00A\03\00\00\87\04\00\00\19\06\00\00\ff\07\00\00A\n\00\00\e7\0c\00\00\f9\0f\00\00\7f\13\00\00\81\17\00\00\07\1c\00\00\19!\00\00\bf&\00\00\01-\00\00\e73\00\00y;\00\00\bfC\00\00\c1L\00\00\87V\00\00\19a\00\00\7fl\00\00\c1x\00\00\e7\85\00\00\f9\93\00\00\ff\a2\00\00\01\b3\00\00\07\c4\00\00\19\d6\00\00?\e9\00\00\81\fd\00\00\e7\12\01\00y)\01\00?A\01\00AZ\01\00\87t\01\00\19\90\01\00\ff\ac\01\00A\cb\01\00\e7\ea\01\00\f9\0b\02\00\7f.\02\00\81R\02\00\07x\02\00\19\9f\02\00\bf\c7\02\00\01\f2\02\00\e7\1d\03\00yK\03\00\bfz\03\00\c1\ab\03\00\87\de\03\00\19\13\04\00\7fI\04\00\c1\81\04\00\e7\bb\04\00\f9\f7\04\00\ff5\05\00\01v\05\00\07\b8\05\00\19\fc\05\00?B\06\00\81\8a\06\00\e7\d4\06\00y!\07\00?p\07\00A\c1\07\00\87\14\08\00\19j\08\00\ff\c1\08\00A\1c\t\00\e7x\t\00\f9\d7\t\00\7f9\n\00\81\9d\n\00\07\04\0b\00\19m\0b\00\bf\d8\0b\00\01G\0c\00\e7\b7\0c\00y+\0d\00\bf\a1\0d\00\c1\1a\0e\00\87\96\0e\00\19\15\0f\00\7f\96\0f\00\c1\1a\10\00\e7\a1\10\00\f9+\11\00\ff\b8\11\00\01I\12\00\07\dc\12\00\19r\13\00?\0b\14\00\81\a7\14\00\e7F\15\00y\e9\15\00?\8f\16\00A8\17\00\87\e4\17\00\19\94\18\00\ffF\19\00A\fd\19\00\e7\b6\1a\00\f9s\1b\00\7f4\1c\00\81\f8\1c\00\07\c0\1d\00\19\8b\1e\00\bfY\1f\00\01, \00\e7\01!\00y\db!\00\bf\b8\"\00\c1\99#\00\87~$\00\19g%\00\7fS&\00\c1C\'\00\e77(\00\f9/)\00\ff+*\00\01,+\00\070,\00\198-\00?D.\00\81T/\00\e7h0\00y\811\00?\9e2\00A\bf3\00\87\e44\00\19\0e6\00\ff;7\00An8\00\e7\a49\00\f9\df:\00\7f\1f<\00\81c=\00\07\ac>\00\19\f9?\00\bfJA\00\01\a1B\00\e7\fbC\00y[E\00\bf\bfF\00\c1(H\00\87\96I\00\19\tK\00\7f\80L\00\c1\fcM\00\e7}O\00\f9\03Q\00\ff\8eR\00\01\1fT\00\07\b4U\00\19NW\00?\edX\00\81\91Z\00\e7:\\\00y\e9]\00?\9d_\00AVa\00\87\14c\00\19\d8d\00\ff\a0f\00Aoh\00\e7Bj\00\f9\1bl\00\7f\fam\00A\01\00\00\a9\02\00\00\t\05\00\00\c1\08\00\00A\0e\00\00\t\16\00\00\a9 \00\00\c1.\00\00\01A\00\00)X\00\00\tu\00\00\81\98\00\00\81\c3\00\00\t\f7\00\00)4\01\00\01|\01\00\c1\cf\01\00\a90\02\00\t\a0\02\00A\1f\03\00\c1\af\03\00\tS\04\00\a9\n\05\00A\d8\05\00\81\bd\06\00)\bc\07\00\t\d6\08\00\01\0d\n\00\01c\0b\00\t\da\0c\00)t\0e\00\813\10\00A\1a\12\00\a9*\14\00\tg\16\00\c1\d1\18\00Am\1b\00\t<\1e\00\a9@!\00\c1}$\00\01\f6\'\00)\ac+\00\t\a3/\00\81\dd3\00\81^8\00\t)=\00)@B\00\01\a7G\00\c1`M\00\a9pS\00\t\daY\00A\a0`\00\c1\c6g\00\tQo\00\a9Bw\00A\9f\7f\00\81j\88\00)\a8\91\00\t\\\9b\00\01\8a\a5\00\016\b0\00\td\bb\00)\18\c7\00\81V\d3\00A#\e0\00\a9\82\ed\00\ty\fb\00\c1\n\n\01A<\19\01\t\12)\01\a9\909\01\c1\bcJ\01\01\9b\\\01)0o\01\t\81\82\01\81\92\96\01\81i\ab\01\t\0b\c1\01)|\d7\01\01\c2\ee\01\c1\e1\06\02\a9\e0\1f\02\t\c49\02A\91T\02\c1Mp\02\t\ff\8c\02\a9\aa\aa\02AV\c9\02\81\07\e9\02)\c4\t\03\t\92+\03\01wN\03\01yr\03\t\9e\97\03)\ec\bd\03\81i\e5\03A\1c\0e\04\a9\n8\04\t;c\04\c1\b3\8f\04A{\bd\04\t\98\ec\04\a9\10\1d\05\c1\ebN\05\010\82\05)\e4\b6\05\t\0f\ed\05\81\b7$\06\81\e4]\06\t\9d\98\06)\e8\d4\06\01\cd\12\07\c1RR\07\a9\80\93\07\t^\d6\07A\f2\1a\08\c1Da\08\t]\a9\08\a9B\f3\08A\fd>\t\81\94\8c\t)\10\dc\t\tx-\n\01\d4\80\n\01,\d6\n\t\88-\0b)\f0\86\0b\81l\e2\0bA\05@\0c\a9\c2\9f\0c\t\ad\01\0d\c1\cce\0dA*\cc\0d\t\ce4\0e\a9\c0\9f\0e\c1\n\0d\0f\01\b5|\0f)\c8\ee\0f\tMc\10\81L\da\10\81\cfS\11\t\df\cf\11)\84N\12\01\c8\cf\12\c1\b3S\13\a9P\da\13\t\a8c\14A\c3\ef\14\c1\ab~\15\tk\10\16\a9\n\a5\16A\94<\17\81\11\d7\17)\8ct\18\t\0e\15\19\01\a1\b8\19\01O_\1a\t\"\t\1b)$\b6\1b\81_f\1cA\de\19\1d\a9\aa\d0\1d\t\cf\8a\1e\c1UH\1fAI\t \t\b4\cd \a9\a0\95!\c1\19a\"\01*0#)\dc\02$\t;\d9$\81Q\b3%\93\06\00\00E\0e\00\00\0f\1c\00\00\113\00\00[W\00\00\0d\8e\00\00w\dd\00\009M\01\00c\e6\01\00\95\b3\02\00\1f\c1\03\00!\1d\05\00\ab\d7\06\00\dd\02\t\00\07\b3\0b\00\c9\fe\0e\003\ff\12\00\e5\cf\17\00/\8f\1d\001^$\00\fb`,\00\ad\be5\00\97\a1@\00Y7M\00\03\b1[\005Cl\00?&\7f\00A\96\94\00K\d3\ac\00}!\c8\00\'\c9\e6\00\e9\16\t\01\d3[/\01\85\edY\01O&\89\01Qe\bd\01\9b\0e\f7\01M\8b6\02\b7I|\02y\bd\c8\02\a3_\1c\03\d5\aew\03_/\db\03akG\04\eb\f2\bc\04\1d\\<\05GC\c6\05\tK[\06s\1c\fc\06%g\a9\07o\e1c\08qH,\t;`\03\n\ed\f3\e9\n\d7\d5\e0\0b\99\df\e8\0cC\f2\02\0eu\f6/\0f\7f\dcp\10\81\9c\c6\11\8b62\13\bd\b2\b4\14g!O\16)\9b\02\18\13A\d0\19\c5<\b9\1b\8f\c0\be\1d\91\07\e2\1f\dbU$\"\8d\f8\86$\f7E\0b\'\b9\9d\b2)\e3h~,\15\1ap/\9f-\892\a1)\cb5+\9e79]%\d0<\87c\96@I\07\8cD\b3\c9\b2Hen\0cM\af\c3\9aQ\b1\a2_V{\ef\\[-\99\94`\17\9a\08f\d9\f7\bak\83\c3\adq\b5\19\e3w\bf\"]~\1d#\00\00qM\00\00\91\9c\00\00\fd&\01\00e\0c\02\00\e9w\03\00\99\a2\05\005\d6\08\00-p\0d\00\e1\e4\13\00!\c3\1c\00\ed\b7(\00u\928\00YHM\00)\fag\00%\f8\89\00=\c7\b4\00Q&\ea\00\b1\13,\01\dd\d2|\01\85\f2\de\01\c9RU\02\b9+\e3\02\15\14\8c\03M\08T\04\c1q?\05A.S\06\cd\97\94\07\95\8c\t\t9w\b8\nIW\a8\0c\05\ca\e0\0e]\13j\111\'M\14\d1\b2\93\17\bd&H\1b\a5\c0u\1f\a9\95($\d9\9cm)\f5\b9R/m\c8\e65\a1\a69=aA\\E\ad\9f`N\b5\eeYX\19\8e\\ci\1c~o\e5\83\d5|\ff\bd\00\00\01\a8\01\00\8fk\03\00\f1\9e\06\00?#\0c\00\c1=\15\00\8f\b6#\00\f1\fc9\00\ffQ[\00\01\fa\8b\00\0fu\d1\00q\bf2\01?\9a\b8\01\c1\dcm\02\0f\cf_\03q\8e\9e\04\ff{=\06\01\b6S\08\8f\9c\fc\n\f1aX\0e?\a7\8c\12\c1%\c5\17\8fe4\1e\f1\81\14&\ff\fb\a7/\01\9c:;\0fb\"Iq\86\c0Y?\8a\82m\c1X\e3\84\01\0e\04\00\91!\t\00\11,\13\00A\ee%\00AOG\00\91C\80\00\11\f7\dd\00\01Fs\01\01\92Z\02\11\01\b8\03\915\bc\05A\8f\a7\08A\06\ce\0c\11\b2\9b\12\91\0f\9a\1a\01\1av%\01L\074\91\9eWG\11\9d\ac`A\a6\91\81#Q\16\00\c5\9e2\00\17\b9k\00\99\f6\d8\00k\89\a0\01\0d\c4\fe\02\1f\01P\05!\d9\1d\t3l0\0f\d5\a2\a4\18\a7g\08\')\fd}<{\b5\e7[\1dw\1d\89\af\a0-\c9\ad\8e{\00\89\e6\19\019\96^\02=\16\d8\04\b5cw\t\e1(\c6\11!\034 uH\828}WW`\bf[\af\02\81\d8\'\06\f7\84^\0d\e9\fe\ad\1b\7f\8b\eb6\81\b7\e5h\17\03\9c\c1\c1\0c\ff\0e9j\85\"\19\ee\91K\81x+\9e3\e1\tT\95\8b\00\007\98\00\00\ff\a5\00\00\04\b5\00\00g\c5\00\00E\d7\00\00\c1\ea\00\00\ff\ff\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\n\00\0c\00\0e\00\10\00\14\00\18\00\1c\00\"\00(\000\00<\00N\00d")
 (data (i32.const 6533) "ZPKE?81(\"\1d\14\12\n\00\00\00\00\00\00\00\00ndZTNGA:3-\' \1a\14\0c\00\00\00\00\00\00vng]VPKFA;5/(\1f\17\0f\04\00\00\00\00~wph_YSNHB<6/\' \19\11\0c\01\00\00\86\7fxrga[UNHB<6/)#\1d\17\10\n\01\90\89\82|qke_XRLF@93-\'!\1a\0f\01\98\91\8a\84{uoib\\VPJC=71+$\14\01\a2\9b\94\8e\85\7fyslf`ZTMGA;5.\1e\01\ac\a5\9e\98\8f\89\83}vpjd^WQKE?8-\14\c8\c8\c8\c8\c8\c8\c8\c8\c6\c1\bc\b7\b2\ad\a8\a3\9e\99\94\81h")
 (data (i32.const 6768) "\08\00\08\00\08\00\08\00\10\00\10\00\10\00\15\00\15\00\18\00\1d\00\"\00$\00\00\00\00\00\00\00j\1c\8d8R\bb\1e:\08i\dc:\82\edW;\89c\b2;\03*\05<0\dc9<\b4>w<\1c\a3\9e<\d1\f2\c5<\fe\86\f1<\9b\ab\10=\05\ad*=\84\c2F=S\e6d=\11\89\82=\87\9f\93=\cb\b2\a5=\d1\be\b8=:\bf\cc=T\af\e1=\14\8a\f7=\0e%\07>\d9\f4\12>_1\1f>h\d7+>\8a\e38>0RF>\94\1fT>\bfGb>\8e\c6p>\b0\97\7f>R[\87>`\0f\8f>\98\e5\96>y\db\9e>p\ee\a6>\d8\1b\af>\fb`\b7>\11\bb\bf>F\'\c8>\b7\a2\d0>x*\d9>\94\bb\e1>\0cS\ea>\de\ed\f2>\06\89\fb>\be\10\02?\1fZ\06?$\9f\n?P\de\0e?+\16\13?AE\17?%j\1b?s\83\1f?\ce\8f#?\e6\8d\'?t|+??Z/?\19&3?\e7\de6?\99\83:?3\13>?\c5\8cA?w\efD?\7f:H?\'mK?\ce\86N?\e5\86Q?\f1lT?\8e8W?i\e9Y?E\7f\\?\fa\f9^?sYa?\af\9dc?\c1\c6e?\cf\d4g?\11\c8i?\d2\a0k?n_m?P\04o?\f4\8fp?\e6\02r?\bd]s?\1f\a1t?\bf\cdu?W\e4v?\b0\e5w?\97\d2x?\e3\aby?srz?\'\'{?\e7\ca{?\9d^|?5\e3|?\9cY}?\bd\c2}?\86\1f~?\dep~?\ab\b7~?\cf\f4~?&)\7f?\86U\7f?\bez\7f?\96\99\7f?\cc\b2\7f?\14\c7\7f?\1c\d7\7f?\82\e3\7f?\dd\ec\7f?\b6\f3\7f?\8a\f8\7f?\c8\fb\7f?\d6\fd\7f?\07\ff\7f?\a5\ff\7f?\e8\ff\7f?\fd\ff\7f?\00\00\80?\ff\ff\7f?\8e\ff\7f?j\fe\7f?\93\fc\7f?\07\fa\7f?\c8\f6\7f?\d6\f2\7f?0\ee\7f?\d6\e8\7f?\c8\e2\7f?\07\dc\7f?\93\d4\7f?k\cc\7f?\8f\c3\7f?\00\ba\7f?\bd\af\7f?\c7\a4\7f?\1d\99\7f?\c0\8c\7f?\b0\7f\7f?\ecq\7f?vc\7f?KT\7f?nD\7f?\de3\7f?\9a\"\7f?\a3\10\7f?\fa\fd~?\9d\ea~?\8d\d6~?\cb\c1~?V\ac~?.\96~?S\7f~?\c6g~?\86O~?\946~?\ef\1c~?\98\02~?\8f\e7}?\d3\cb}?f\af}?F\92}?tt}?\f1U}?\bc6}?\d5\16}?<\f6|?\f2\d4|?\f6\b2|?I\90|?\ebl|?\dbH|?\1b$|?\a9\fe{?\87\d8{?\b4\b1{?0\8a{?\fca{?\179{?\82\0f{?=\e5z?H\baz?\a2\8ez?Mbz?H5z?\94\07z?0\d9y?\1d\aay?Zzy?\e9Iy?\c8\18y?\f9\e6x?{\b4x?N\81x?sMx?\ea\18x?\b2\e3w?\cd\adw?:ww?\f9?w?\n\08w?n\cfv?%\96v?/\\v?\8c!v?<\e6u?@\aau?\97mu?B0u?A\f2t?\94\b3t?;tt?74t?\87\f3s?,\b2s?&ps?v-s?\1a\ear?\14\a6r?dar?\n\1cr?\05\d6q?W\8fq?\00Hq?\ff\ffp?U\b7p?\02np?\06$p?b\d9o?\15\8eo? Bo?\84\f5n??\a8n?SZn?\c0\0bn?\86\bcm?\a5lm?\1d\1cm?\ef\cal?\1byl?\a1&l?\80\d3k?\bb\7fk?P+k?@\d6j?\8c\80j?2*j?5\d3i?\93{i?M#i?d\cah?\d8ph?\a8\16h?\d5\bbg?``g?H\04g?\8f\a7f?3Jf?6\ece?\97\8de?W.e?w\ced?\f5md?\d4\0cd?\12\abc?\b1Hc?\b0\e5b?\10\82b?\d1\1db?\f3\b8a?wSa?\\\ed`?\a4\86`?N\1f`?[\b7_?\cbN_?\9e\e5^?\d5{^?p\11^?n\a6]?\d2:]?\9a\ce\\?\c6a\\?Y\f4[?Q\86[?\ae\17[?r\a8Z?\9d8Z?.\c8Y?\'WY?\87\e5X?OsX?\7f\00X?\17\8dW?\18\19W?\82\a4V?V/V?\93\b9U?:CU?K\ccT?\c7TT?\ae\dcS?\01dS?\bf\eaR?\e9pR?\7f\f6Q?\82{Q?\f2\ffP?\cf\83P?\1a\07P?\d2\89O?\fa\0bO?\90\8dN?\94\0eN?\t\8fM?\ed\0eM?A\8eL?\05\0dL?;\8bK?\e1\08K?\f9\85J?\83\02J?\7f~I?\ee\f9H?\cftH?$\efG?\edhG?)\e2F?\daZF?\00\d3E?\9bJE?\ac\c1D?28D?/\aeC?\a2#C?\8d\98B?\ef\0cB?\c8\80A?\1a\f4@?\e5f@?(\d9??\e5J??\1b\bc>?\cc,>?\f7\9c=?\9d\0c=?\be{<?\\\ea;?uX;?\n\c6:?\1d3:?\ad\9f9?\bb\0b9?Gw8?Q\e27?\daL7?\e3\b66?k 6?t\895?\fd\f14?\07Z4?\93\c13?\a0(3?0\8f2?B\f51?\d8Z1?\f1\bf0?\8e$0?\af\88/?U\ec.?\81O.?2\b2-?i\14-?\'v,?k\d7+?78+?\8b\98*?g\f8)?\ccW)?\ba\b6(?2\15(?3s\'?\bf\d0&?\d6-&?y\8a%?\a7\e6$?aB$?\a9\9d#?}\f8\"?\dfR\"?\cf\ac!?M\06!?[_ ?\f8\b7\1f?%\10\1f?\e2g\1e?0\bf\1d?\10\16\1d?\81l\1c?\84\c2\1b?\1a\18\1b?Cm\1a?\00\c2\19?Q\16\19?6j\18?\b1\bd\17?\c1\10\17?gc\16?\a3\b5\15?v\07\15?\e1X\14?\e4\a9\13?\7f\fa\12?\b3J\12?\80\9a\11?\e7\e9\10?\e88\10?\84\87\0f?\bb\d5\0e?\8e#\0e?\fep\0d?\n\be\0c?\b3\n\0c?\faV\0b?\df\a2\n?c\ee\t?\869\t?I\84\08?\ac\ce\07?\af\18\07?Tb\06?\9b\ab\05?\83\f4\04?\0f=\04?=\85\03?\0f\cd\02?\86\14\02?\a1[\01?a\a2\00?\8f\d1\ff>\a7]\fe>\0e\e9\fc>\c2s\fb>\c6\fd\f9>\1b\87\f8>\c1\0f\f7>\ba\97\f5>\06\1f\f4>\a8\a5\f2>\9e+\f1>\ec\b0\ef>\915\ee>\90\b9\ec>\e8<\eb>\9a\bf\e9>\a9A\e8>\15\c3\e6>\dfC\e5>\08\c4\e3>\91C\e2>|\c2\e0>\c8@\df>x\be\dd>\8c;\dc>\06\b8\da>\e63\d9>.\af\d7>\df)\d6>\f9\a3\d4>}\1d\d3>n\96\d1>\cc\0e\d0>\97\86\ce>\d2\fd\cc>}t\cb>\99\ea\c9>\'`\c8>(\d5\c6>\9fI\c5>\8a\bd\c3>\ec0\c2>\c6\a3\c0>\19\16\bf>\e6\87\bd>-\f9\bb>\f1i\ba>2\da\b8>\f1I\b7>/\b9\b5>\ee\'\b4>/\96\b2>\f2\03\b1>9q\af>\04\de\ad>VJ\ac>/\b6\aa>\90!\a9>z\8c\a7>\ef\f6\a5>\ef`\a4>|\ca\a2>\973\a1>@\9c\9f>z\04\9e>Dl\9c>\a1\d3\9a>\91:\99>\16\a1\97>0\07\96>\e1l\94>)\d2\92>\0b7\91>\87\9b\8f>\9e\ff\8d>Qc\8c>\a2\c6\8a>\91)\89> \8c\87>P\ee\85>\"P\84>\97\b1\82>\b0\12\81>\de\e6~>\a9\a7{>\c3gx>/\'u>\ee\e5q>\04\a4n>sak><\1eh>b\dad>\e8\95a>\cfP^>\1a\0b[>\cc\c4W>\e6}T>k6Q>]\eeM>\bf\a5J>\92\\G>\da\12D>\97\c8@>\ce}=>\802:>\ae\e66>]\9a3>\8dM0>B\00->}\b2)>Bd&>\91\15#>n\c6\1f>\dbv\1c>\da&\19>m\d6\15>\98\85\12>[4\0f>\ba\e2\0b>\b7\90\08>T>\05>\94\eb\01>\f00\fd=\06\8a\f6=q\e2\ef=3:\e9=O\91\e2=\cf\e7\db=\b5=\d5=\03\93\ce=\c0\e7\c7=\f2;\c1=\9c\8f\ba=\c3\e2\b3=l5\ad=\9b\87\a6=U\d9\9f=\9f*\99=~{\92=\f6\cb\8b=\0b\1c\85=\87\d7|=Fvo=]\14b=\d6\b1T=\b9NG=\10\eb9=\e5\86,=@\"\1f=,\bd\11=\b2W\04=\b5\e3\ed<`\17\d3<vJ\b8<\0b}\9d<2\af\82<\fa\c1O<\fe$\1a<*\0f\c9;\99\a7;;.}\d6\b9\d2Fq\bb\ab\de\e3\bb\a6\8c\'\bc\81)]\bc\e1b\89\bc\a00\a4\bc\ec\fd\be\bc\b3\ca\d9\bc\e0\96\f4\bc1\b1\07\bd\93\16\15\bd\8c{\"\bd\13\e0/\bd\1eD=\bd\a5\a7J\bd\9d\nX\bd\fele\bd\be\cer\bd\ea\17\80\bd\1b\c8\86\bd\edw\8d\bd\\\'\94\bdc\d6\9a\bd\fd\84\a1\bd&3\a8\bd\d9\e0\ae\bd\11\8e\b5\bd\ca:\bc\bd\fe\e6\c2\bd\aa\92\c9\bd\c8=\d0\bdT\e8\d6\bdJ\92\dd\bd\a4;\e4\bd]\e4\ea\bdr\8c\f1\bd\dd3\f8\bd\9a\da\fe\bdR\c0\02\be\fc\12\06\beGe\t\be2\b7\0c\be\ba\08\10\be\ddY\13\be\98\aa\16\be\ea\fa\19\be\d0J\1d\beG\9a \beN\e9#\be\e17\'\be\00\86*\be\a6\d3-\be\d3 1\be\83m4\be\b5\b97\bee\05;\be\93P>\be:\9bA\beZ\e5D\be\f0.H\be\f9wK\bet\c0N\be]\08R\be\b3OU\bes\96X\be\9c\dc[\be*\"_\be\1bgb\bem\abe\be\1f\efh\be,2l\be\94to\beT\b6r\bej\f7u\be\d37y\be\8dw|\be\96\b6\7f\beuz\81\beE\19\83\be\b9\b7\84\be\d0U\86\be\88\f3\87\be\e1\90\89\be\da-\8b\bep\ca\8c\be\a4f\8e\bet\02\90\be\df\9d\91\be\e48\93\be\81\d3\94\be\b6m\96\be\81\07\98\be\e2\a0\99\be\d79\9b\be_\d2\9c\beyj\9e\be#\02\a0\be^\99\a1\be&0\a3\be}\c6\a4\be`\\\a6\be\ce\f1\a7\be\c6\86\a9\beG\1b\ab\beP\af\ac\be\e0B\ae\be\f5\d5\af\be\8fh\b1\be\ad\fa\b2\beM\8c\b4\ben\1d\b6\be\10\ae\b7\be0>\b9\be\cf\cd\ba\be\ea\\\bc\be\82\eb\bd\be\94y\bf\be\1f\07\c1\be#\94\c2\be\9f \c4\be\91\ac\c5\be\f87\c7\be\d3\c2\c8\be\"M\ca\be\e2\d6\cb\be\13`\cd\be\b5\e8\ce\be\c5p\d0\beB\f8\d1\be-\7f\d3\be\83\05\d5\beC\8b\d6\bem\10\d8\be\ff\94\d9\be\f9\18\db\beY\9c\dc\be\1d\1f\de\beF\a1\df\be\d3\"\e1\be\c1\a3\e2\be\10$\e4\be\be\a3\e5\be\cc\"\e7\be8\a1\e8\be\00\1f\ea\be$\9c\eb\be\a2\18\ed\bez\94\ee\be\ab\0f\f0\be3\8a\f1\be\12\04\f3\beF}\f4\be\cf\f5\f5\be\aam\f7\be\d9\e4\f8\beX[\fa\be(\d1\fb\beGF\fd\be\b5\ba\fe\be8\17\00\bf\bb\d0\00\bf\e4\89\01\bf\b2B\02\bf%\fb\02\bf;\b3\03\bf\f6j\04\bfS\"\05\bfS\d9\05\bf\f5\8f\06\bf8F\07\bf\1d\fc\07\bf\a2\b1\08\bf\c7f\t\bf\8c\1b\n\bf\f0\cf\n\bf\f3\83\0b\bf\937\0c\bf\d1\ea\0c\bf\ac\9d\0d\bf$P\0e\bf8\02\0f\bf\e8\b3\0f\bf2e\10\bf\18\16\11\bf\97\c6\11\bf\b0v\12\bfc&\13\bf\ae\d5\13\bf\91\84\14\bf\0d3\15\bf\1f\e1\15\bf\c8\8e\16\bf\08<\17\bf\dd\e8\17\bfH\95\18\bfHA\19\bf\dc\ec\19\bf\04\98\1a\bf\c0B\1b\bf\0f\ed\1b\bf\f0\96\1c\bfc@\1d\bfh\e9\1d\bf\fe\91\1e\bf%:\1f\bf\dc\e1\1f\bf#\89 \bf\fa/!\bf_\d6!\bfR|\"\bf\d4!#\bf\e3\c6#\bf\7fk$\bf\a7\0f%\bf\\\b3%\bf\9dV&\bfh\f9&\bf\bf\9b\'\bf\a0=(\bf\0b\df(\bf\ff\7f)\bf} *\bf\83\c0*\bf\11`+\bf\'\ff+\bf\c4\9d,\bf\e8;-\bf\92\d9-\bf\c3v.\bfy\13/\bf\b4\af/\bfsK0\bf\b7\e60\bf\7f\811\bf\cb\1b2\bf\99\b52\bf\eaN3\bf\bd\e73\bf\12\804\bf\e8\175\bf?\af5\bf\16F6\bfn\dc6\bfEr7\bf\9c\078\bfq\9c8\bf\c509\bf\96\c49\bf\e6W:\bf\b2\ea:\bf\fc|;\bf\c2\0e<\bf\03\a0<\bf\c10=\bf\fa\c0=\bf\adP>\bf\db\df>\bf\83n?\bf\a5\fc?\bf@\8a@\bfS\17A\bf\e0\a3A\bf\e4/B\bf`\bbB\bfSFC\bf\be\d0C\bf\9eZD\bf\f6\e3D\bf\c2lE\bf\05\f5E\bf\bc|F\bf\e8\03G\bf\89\8aG\bf\9d\10H\bf%\96H\bf \1bI\bf\8e\9fI\bfo#J\bf\c1\a6J\bf\86)K\bf\bc\abK\bfc-L\bfz\aeL\bf\02/M\bf\fa\aeM\bfb.N\bf9\adN\bf~+O\bf3\a9O\bfU&P\bf\e6\a2P\bf\e4\1eQ\bfP\9aQ\bf(\15R\bfm\8fR\bf\1e\tS\bf;\82S\bf\c3\faS\bf\b7rT\bf\16\eaT\bf\df`U\bf\12\d7U\bf\b0LV\bf\b7\c1V\bf\'6W\bf\00\aaW\bfB\1dX\bf\ec\8fX\bf\fe\01Y\bfxsY\bfY\e4Y\bf\a2TZ\bfQ\c4Z\bff3[\bf\e2\a1[\bf\c3\0f\\\bf\n}\\\bf\b7\e9\\\bf\c8U]\bf>\c1]\bf\18,^\bfW\96^\bf\f9\ff^\bf\ffh_\bfh\d1_\bf39`\bfb\a0`\bf\f3\06a\bf\e5la\bf:\d2a\bf\f06b\bf\08\9bb\bf\80\feb\bfYac\bf\92\c3c\bf,%d\bf%\86d\bf~\e6d\bf7Fe\bfN\a5e\bf\c5\03f\bf\9aaf\bf\cd\bef\bf^\1bg\bfMwg\bf\9a\d2g\bfD-h\bfK\87h\bf\ae\e0h\bfo9i\bf\8b\91i\bf\04\e9i\bf\d9?j\bf\t\96j\bf\94\ebj\bf{@k\bf\bc\94k\bfY\e8k\bfO;l\bf\a0\8dl\bfK\dfl\bfO0m\bf\ad\80m\bfe\d0m\bfu\1fn\bf\dfmn\bf\a1\bbn\bf\bb\08o\bf.Uo\bf\f8\a0o\bf\1b\eco\bf\956p\bfg\80p\bf\90\c9p\bf\0f\12q\bf\e6Yq\bf\13\a1q\bf\97\e7q\bfq-r\bf\a0rr\bf&\b7r\bf\01\fbr\bf2>s\bf\b8\80s\bf\94\c2s\bf\c4\03t\bfIDt\bf\"\84t\bfP\c3t\bf\d2\01u\bf\a8?u\bf\d2|u\bfP\b9u\bf!\f5u\bfE0v\bf\bdjv\bf\88\a4v\bf\a6\ddv\bf\16\16w\bf\d9Mw\bf\ef\84w\bfW\bbw\bf\11\f1w\bf\1d&x\bfzZx\bf*\8ex\bf+\c1x\bf}\f3x\bf!%y\bf\16Vy\bf\\\86y\bf\f2\b5y\bf\da\e4y\bf\12\13z\bf\9a@z\bfsmz\bf\9d\99z\bf\16\c5z\bf\df\efz\bf\f8\19{\bfaC{\bf\1al{\bf\"\94{\bfz\bb{\bf \e2{\bf\17\08|\bf\\-|\bf\f0Q|\bf\d3u|\bf\05\99|\bf\86\bb|\bfU\dd|\bfs\fe|\bf\df\1e}\bf\9a>}\bf\a3]}\bf\fa{}\bf\9f\99}\bf\92\b6}\bf\d3\d2}\bfb\ee}\bf?\t~\bfi#~\bf\e1<~\bf\a7U~\bf\bam~\bf\1b\85~\bf\c9\9b~\bf\c4\b1~\bf\0d\c7~\bf\a2\db~\bf\85\ef~\bf\b5\02\7f\bf2\15\7f\bf\fc&\7f\bf\138\7f\bfvH\7f\bf\'X\7f\bf$g\7f\bfnu\7f\bf\05\83\7f\bf\e8\8f\7f\bf\19\9c\7f\bf\95\a7\7f\bf_\b2\7f\bft\bc\7f\bf\d7\c5\7f\bf\85\ce\7f\bf\81\d6\7f\bf\c8\dd\7f\bf]\e4\7f\bf=\ea\7f\bfj\ef\7f\bf\e3\f3\7f\bf\a9\f7\7f\bf\bb\fa\7f\bf\19\fd\7f\bf\c4\fe\7f\bf\bb\ff\7f\bf\fa\ff\7f?9\fe\7f?\a9\f9\7f?K\f2\7f?\1e\e8\7f?#\db\7f?Y\cb\7f?\c1\b8\7f?[\a3\7f?(\8b\7f?\'p\7f?ZR\7f?\bf1\7f?X\0e\7f?%\e8~?&\bf~?\\\93~?\c8d~?i3~?A\ff}?O\c8}?\96\8e}?\14R}?\cb\12}?\bc\d0|?\e7\8b|?MD|?\ef\f9{?\cd\ac{?\e9\\{?C\n{?\dd\b4z?\b6\\z?\d1\01z?.\a4y?\ceCy?\b2\e0x?\dczx?L\12x?\04\a7w?\049w?O\c8v?\e4Tv?\c6\deu?\f6eu?u\eat?Dlt?e\ebs?\dags?\a3\e1r?\c2Xr?9\cdq?\t?q?4\aep?\bb\1ap?\a0\84o?\e4\ebn?\8aPn?\93\b2m?\01\12m?\d5nl?\11\c9k?\b7 k?\c9uj?I\c8i?9\18i?\9beh?o\b0g?\ba\f8f?|>f?\b8\81e?o\c2d?\a4\00d?Z<c?\91ub?L\aca?\8e\e0`?Y\12`?\aeA_?\91n^?\03\99]?\08\c1\\?\a0\e6[?\cf\t[?\98*Z?\fbHY?\fddX?\9f~W?\e5\95V?\d0\aaU?c\bdT?\a1\cdS?\8c\dbR?\'\e7Q?u\f0P?y\f7O?4\fcN?\ab\feM?\df\feL?\d4\fcK?\8c\f8J?\n\f2I?R\e9H?e\deG?G\d1F?\fb\c1E?\84\b0D?\e5\9cC? \87B?:oA?4U@?\139??\d8\1a>?\88\fa<?&\d8;?\b4\b3:?6\8d9?\afd8?\":7?\93\0d6?\05\df4?|\ae3?\f9{2?\82G1?\19\110?\c2\d8.?\7f\9e-?Vb,?H$+?Z\e4)?\90\a2(?\eb^\'?q\19&?%\d2$?\t\89#?#>\"?u\f1 ?\04\a3\1f?\d2R\1e?\e4\00\1d?=\ad\1b?\e1W\1a?\d3\00\19?\19\a8\17?\b4M\16?\aa\f1\14?\fd\93\13?\b24\12?\cc\d3\10?Pq\0f?B\0d\0e?\a4\a7\0c?|@\0b?\cd\d7\t?\9am\08?\e9\01\07?\bd\94\05?\19&\04?\03\b6\02?~D\01?\1c\a3\ff>n\ba\fc>\fa\ce\f9>\ca\e0\f6>\e4\ef\f3>Q\fc\f0>\1a\06\ee>G\0d\eb>\e0\11\e8>\ed\13\e5>w\13\e2>\87\10\df>$\0b\dc>X\03\d9>*\f9\d5>\a4\ec\d2>\cd\dd\cf>\af\cc\cc>R\b9\c9>\bf\a3\c6>\fe\8b\c3>\18r\c0>\16V\bd>\008\ba>\e0\17\b7>\bd\f5\b3>\a1\d1\b0>\95\ab\ad>\a2\83\aa>\cfY\a7>\'.\a4>\b2\00\a1>y\d1\9d>\85\a0\9a>\dfm\97>\8f9\94>\a0\03\91>\1a\cc\8d>\05\93\8a>kX\87>V\1c\84>\cd\de\80>\b6?{>\10\bft>\bb;n>\c9\b5g>M-a>Y\a2Z>\ff\14T>Q\85M>c\f3F>F_@>\0d\c99>\ca03>\90\96,>r\fa%>\82\\\1f>\d2\bc\18>v\1b\12>\7fx\0b>\01\d4\04>\1d\\\fc=r\0d\ef=)\bc\e1=fh\d4=N\12\c7=\08\ba\b9=\b8_\ac=\84\03\9f=\92\a5\91=\07F\84=\12\cam=z\05S=\91>8=\a4u\1d=\fc\aa\02=\ca\bd\cf<V#\9a<a\0eI<\c5\a7\bb;=zV\ba\tF\f1\bb\12\ddc\bcP\8a\a7\bcA$\dd\bc\e3]\t\bd#($\bd\96\f0>\bd\f2\b6Y\bd\eazt\bd\1a\9e\87\bdB\fd\94\bd\c8Z\a2\bd\86\b6\af\bdW\10\bd\bd\16h\ca\bd\9b\bd\d7\bd\c3\10\e5\bdia\f2\bde\af\ff\bdJ}\06\beh!\0d\be\fa\c3\13\be\edd\1a\be.\04!\be\ac\a1\'\beS=.\be\10\d74\be\d2n;\be\86\04B\be\19\98H\bey)O\be\94\b8U\beVE\\\be\ae\cfb\be\89Wi\be\d6\dco\be\80_v\bex\df|\beT\ae\81\be\81\eb\84\be8\'\88\bera\8b\be$\9a\8e\beE\d1\91\be\cd\06\95\be\b3:\98\be\eel\9b\bet\9d\9e\be=\cc\a1\be@\f9\a4\bes$\a8\be\cfM\ab\beIu\ae\be\da\9a\b1\bex\be\b4\be\1b\e0\b7\be\ba\ff\ba\beK\1d\be\be\c78\c1\be%R\c4\be[i\c7\bea~\ca\be0\91\cd\be\bc\a1\d0\be\00\b0\d3\be\f1\bb\d6\be\87\c5\d9\be\ba\cc\dc\be\81\d1\df\be\d3\d3\e2\be\a9\d3\e5\be\fa\d0\e8\be\bd\cb\eb\be\ea\c3\ee\bex\b9\f1\be`\ac\f4\be\9a\9c\f7\be\1c\8a\fa\be\dft\fd\bem.\00\bf\03\a1\01\bf-\12\03\bf\e6\81\04\bf,\f0\05\bf\fa\\\07\bfL\c8\08\bf\1e2\n\bfl\9a\0b\bf2\01\0d\bflf\0e\bf\17\ca\0f\bf-,\11\bf\ac\8c\12\bf\90\eb\13\bf\d5H\15\bfv\a4\16\bfq\fe\17\bf\c0V\19\bfb\ad\1a\bfQ\02\1c\bf\8aU\1d\bf\t\a7\1e\bf\cb\f6\1f\bf\ccD!\bf\t\91\"\bf|\db#\bf$$%\bf\fdj&\bf\02\b0\'\bf0\f3(\bf\844*\bf\fas+\bf\8f\b1,\bf?\ed-\bf\07\'/\bf\e3^0\bf\d0\941\bf\ca\c82\bf\ce\fa3\bf\da*5\bf\e8X6\bf\f7\847\bf\02\af8\bf\07\d79\bf\03\fd:\bf\f1 <\bf\cfB=\bf\9ab>\bfO\80?\bf\e9\9b@\bfh\b5A\bf\c6\ccB\bf\01\e2C\bf\17\f5D\bf\03\06F\bf\c4\14G\bfV!H\bf\b6+I\bf\e13J\bf\d49K\bf\8d=L\bf\t?M\bfD>N\bf=;O\bf\f05P\bfZ.Q\bfy$R\bfJ\18S\bf\ca\tT\bf\f7\f8T\bf\ce\e5U\bfM\d0V\bfp\b8W\bf7\9eX\bf\9c\81Y\bf\a0bZ\bf>A[\bfu\1d\\\bfA\f7\\\bf\a2\ce]\bf\94\a3^\bf\14v_\bf\"F`\bf\ba\13a\bf\d9\dea\bf\7f\a7b\bf\a9mc\bfT1d\bf~\f2d\bf&\b1e\bfImf\bf\e5&g\bf\f8\ddg\bf\80\92h\bf{Di\bf\e8\f3i\bf\c3\a0j\bf\0cKk\bf\c0\f2k\bf\de\97l\bfd:m\bfP\dam\bf\a0wn\bfS\12o\bff\aao\bf\d9?p\bf\a9\d2p\bf\d5bq\bf[\f0q\bf:{r\bfq\03s\bf\fd\88s\bf\de\0bt\bf\11\8ct\bf\96\tu\bfk\84u\bf\8f\fcu\bf\00rv\bf\bd\e4v\bf\c6Tw\bf\18\c2w\bf\b2,x\bf\93\94x\bf\bb\f9x\bf(\\y\bf\d9\bby\bf\cd\18z\bf\02sz\bfy\caz\bf/\1f{\bf$q{\bfX\c0{\bf\c9\0c|\bfvV|\bf_\9d|\bf\82\e1|\bf\e0\"}\bfwa}\bfG\9d}\bfO\d6}\bf\8e\0c~\bf\04@~\bf\b0p~\bf\92\9e~\bf\a9\c9~\bf\f5\f1~\bfu\17\7f\bf):\7f\bf\10Z\7f\bf+w\7f\bfx\91\7f\bf\f8\a8\7f\bf\aa\bd\7f\bf\8f\cf\7f\bf\a5\de\7f\bf\ed\ea\7f\bff\f4\7f\bf\11\fb\7f\bf\ed\fe\7f\bf\ea\ff\7f?\e5\f8\7f?\a6\e6\7f?-\c9\7f?|\a0\7f?\95l\7f?y-\7f?,\e3~?\b1\8d~?\0b-~??\c1}?RJ}?H\c8|?(;|?\f7\a2{?\bd\ffz?\80Qz?H\98y?\1e\d4x?\t\05x?\13+w?FFv?\acVu?N\\t?8Ws?vGr?\13-q?\1c\08p?\9e\d8n?\a5\9em?@Zl?~\0bk?k\b2i?\19Oh?\96\e1f?\f2ie?>\e8c?\8b\\b?\ea\c6`?m\'_?&~]?(\cb[?\85\0eZ?SHX?\a3xV?\8b\9fT? \bdR?v\d1P?\a3\dcN?\bd\deL?\db\d7J?\13\c8H?|\afF?.\8eD?AdB?\ce1@?\ec\f6=?\b4\b3;?Bh9?\ad\147?\10\b94?\86U2?)\ea/?\15w-?e\fc*?5z(?\a1\f0%?\c6_#?\c0\c7 ?\ac(\1e?\a9\82\1b?\d4\d5\18?J\"\16?*h\13?\93\a7\10?\a4\e0\0d?{\13\0b?9@\08?\fdf\05?\e7\87\02?-F\ff>[q\f9>\97\91\f3>$\a7\ed>E\b2\e7><\b3\e1>L\aa\db>\ba\97\d5>\c9{\cf>\beV\c9>\df(\c3>p\f2\bc>\b7\b3\b6>\fbl\b0>\81\1e\aa>\92\c8\a3>sk\9d>l\07\97>\c5\9c\90>\c7+\8a>\b9\b4\83>\c7oz>!km>\11\\`>)CS>\fd F> \f68>&\c3+>\a4\88\1e>-G\11>W\ff\03>nc\ed=\c2\bd\d2=\da\0e\b8=\deW\9d=\fb\99\82=\bc\acO=e\1c\1a=\99\n\c9<*\a7;<\c1x\d6\ba-Dq\bcW\d7\e3\bcL\81\'\bd\94\0f]\bd\15J\89\bdZ\06\a4\bdm\bb\be\bd\"h\d9\bdN\0b\f4\bd\e3Q\07\be/\98\14\be\f7\d7!\be\a5\10/\be\a6A<\bedjI\beM\8aV\be\cd\a0c\beP\adp\beE\af}\be\0dS\85\be\9e\c8\8b\be\0d8\92\be\12\a1\98\bef\03\9f\be\bf^\a5\be\d8\b2\ab\bei\ff\b1\be+D\b8\be\d8\80\be\be*\b5\c4\be\db\e0\ca\be\a5\03\d1\beE\1d\d7\beu-\dd\be\f13\e3\bev0\e9\be\c0\"\ef\be\8d\n\f5\be\9b\e7\fa\be\d3\\\00\bf8@\03\bf\db\1d\06\bf\9b\f5\08\bfZ\c7\0b\bf\f7\92\0e\bfTX\11\bfP\17\14\bf\cd\cf\16\bf\ac\81\19\bf\d0,\1c\bf\1a\d1\1e\bfmn!\bf\ab\04$\bf\b7\93&\bft\1b)\bf\c7\9b+\bf\93\14.\bf\bb\850\bf&\ef2\bf\b7P5\bfU\aa7\bf\e3\fb9\bfJE<\bfn\86>\bf7\bf@\bf\8b\efB\bfS\17E\bfu6G\bf\daLI\bfkZK\bf\10_M\bf\b3ZO\bf>MQ\bf\9a6S\bf\b3\16U\bfr\edV\bf\c5\baX\bf\95~Z\bf\d08\\\bfb\e9]\bf8\90_\bf@-a\bfg\c0b\bf\9cId\bf\ce\c8e\bf\eb=g\bf\e3\a8h\bf\a7\tj\bf\'`k\bfT\acl\bf\1f\eem\bfz%o\bfXRp\bf\abtq\bfg\8cr\bf\7f\99s\bf\e7\9bt\bf\95\93u\bf~\80v\bf\96bw\bf\d49x\bf/\06y\bf\9e\c7y\bf\17~z\bf\94){\bf\0d\ca{\bfz_|\bf\d5\e9|\bf\18i}\bf>\dd}\bf@F~\bf\1c\a4~\bf\cc\f6~\bfM>\7f\bf\9cz\7f\bf\b6\ab\7f\bf\99\d1\7f\bfC\ec\7f\bf\b4\fb\7f\bf\a6\ff\7f?\94\e3\7f?\9c\9a\7f?\cc$\7f?8\82~?\fd\b2}??\b7|?*\8f{?\f3:z?\d4\bax?\11\0fw?\f67u?\d55s?\08\tq?\f1\b1n?\f90l?\90\86i?/\b3f?S\b7c?\84\93`?NH]?E\d6Y?\03>V?+\80R?e\9dN?^\96J?\cckF?j\1eB?\f9\ae=?@\1e9?\0dm4?2\9c/?\87\ac*?\eb\9e%??t ?m-\1b?a\cb\15?\0dO\10?h\b9\n?k\0b\05?.\8c\fe>\dd\d4\f2>\f1\f2\e6>\7f\e8\da>\a6\b7\ce>\88b\c2>N\eb\b5>*T\a9>Q\9f\9c>\fd\ce\8f>m\e5\82>\ce\c9k>b\9fQ>0P7>\d3\e0\1c>\f1U\02>bh\cf=|\00\9a=$\fbH=\1b\a4\bb<\f3wV\bbd=\f1\bc\bb\c0c\bdg]\a7\bd\14\bd\dc\bd\03\fb\08\bes\7f#\be4\e7=\be\a4-X\be&Nr\be\12\"\86\be\89\05\93\be4\cf\9f\be\d5|\ac\be3\0c\b9\be\1a{\c5\be[\c7\d1\be\cd\ee\dd\beP\ef\e9\be\c7\c6\f5\be\90\b9\00\bf&y\06\bf$!\0c\bf\8d\b0\11\bff&\17\bf\ba\81\1c\bf\98\c1!\bf\15\e5&\bfJ\eb+\bfV\d30\bf[\9c5\bf\83E:\bf\fd\cd>\bf\fc4C\bf\bcyG\bf}\9bK\bf\84\99O\bf\1fsS\bf\a1\'W\bfc\b6Z\bf\c6\1e^\bf0`a\bf\0fzd\bf\d8kg\bf\075j\bf\1f\d5l\bf\a9Ko\bf7\98q\bfb\bas\bf\c9\b1u\bf\16~w\bf\f6\1ey\bf!\94z\bfU\dd{\bfY\fa|\bf\fa\ea}\bf\0e\af~\bftF\7f\bf\0f\b1\7f\bf\ce\ee\7f\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00)\00)\00)\00R\00R\00{\00\a4\00\c8\00\de")
 (data (i32.const 14538) ")\00)\00)\00)\00{\00{\00{\00\a4\00\a4\00\f0\00\n\01\1b\01\'\01)\00)\00)\00)\00)\00)\00)\00)\00{\00{\00{\00{\00\f0\00\f0\00\f0\00\n\01\n\011\01>\01H\01P\01{\00{\00{\00{\00{\00{\00{\00{\00\f0\00\f0\00\f0\00\f0\001\011\011\01>\01>\01W\01_\01f\01l\01\f0\00\f0\00\f0\00\f0\00\f0\00\f0\00\f0\00\f0\001\011\011\011\01W\01W\01W\01_\01_\01r\01x\01~\01\83\01")
 (data (i32.const 14704) "(\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07(\0f\17\1c\1f\"$&\')*+,-.//123456779:;<=>??ABCDEFGG(\14!)059=@BEGIKLNPRUWY[\\^`begiklnpruwy{|~\80(\17\'3<CIOSW[^adfikosvy|~\81\83\87\8b\8e\91\94\96\99\9b\9f\a3\a6\a9\ac\ae\b1\b3#\1c1ANYckrx~\84\88\8d\91\95\99\9f\a5\ab\b0\b4\b9\bd\c0\c7\cd\d3\d8\dc\e1\e5\e8\ef\f5\fb\15!:Oap}\89\94\9d\a6\ae\b6\bd\c3\c9\cf\d9\e3\eb\f3\fb\11#?Vj{\8b\98\a5\b1\bb\c5\ce\d6\de\e6\ed\fa\19\1f7K[iu\80\8a\92\9a\a1\a8\ae\b4\b9\be\c8\d0\d7\de\e5\eb\f0\f5\ff\10$AYn\80\90\9f\ad\b9\c4\cf\d9\e2\ea\f2\fa\0b)Jg\80\97\ac\bf\d1\e1\f1\ff\t+On\8a\a3\ba\cf\e3\f6\0c\'Gc{\90\a4\b6\c6\d6\e4\f1\fd\t,Qq\8e\a8\c0\d6\eb\ff\071Z\7f\a0\bf\dc\f7\063_\86\aa\cb\ea\07/W{\9b\b8\d4\ed\064a\89\ae\d0\f0\059j\97\c0\e7\05;o\9e\ca\f3\057g\93\bb\e0\05<q\a1\ce\f8\04Az\af\e0\04C\7f\b6\ea\00\00\00\00\00\00\00\00\e0\e0\e0\e0\e0\e0\e0\e0\a0\a0\a0\a0\b9\b9\b9\b2\b2\a8\86=%\e0\e0\e0\e0\e0\e0\e0\e0\f0\f0\f0\f0\cf\cf\cf\c6\c6\b7\90B(\a0\a0\a0\a0\a0\a0\a0\a0\b9\b9\b9\b9\c1\c1\c1\b7\b7\ac\8a@&\f0\f0\f0\f0\f0\f0\f0\f0\cf\cf\cf\cf\cc\cc\cc\c1\c1\b4\8fB(\b9\b9\b9\b9\b9\b9\b9\b9\c1\c1\c1\c1\c1\c1\c1\b7\b7\ac\8aA\'\cf\cf\cf\cf\cf\cf\cf\cf\cc\cc\cc\cc\c9\c9\c9\bc\bc\b0\8dB(\c1\c1\c1\c1\c1\c1\c1\c1\c1\c1\c1\c1\c2\c2\c2\b8\b8\ad\8bA\'\cc\cc\cc\cc\cc\cc\cc\cc\c9\c9\c9\c9\c6\c6\c6\bb\bb\af\8cB(")
 (data (i32.const 15282) "\0c\00\18\00$\000\00\04\00\10\00\1c\00(\004\00\08\00\14\00 \00,\008\00\01\00\0d\00\19\00%\001\00\05\00\11\00\1d\00)\005\00\t\00\15\00!\00-\009\00\02\00\0e\00\1a\00&\002\00\06\00\12\00\1e\00*\006\00\n\00\16\00\"\00.\00:\00\03\00\0f\00\1b\00\'\003\00\07\00\13\00\1f\00+\007\00\0b\00\17\00#\00/\00;")
 (data (i32.const 15410) "\80?\00\00\00\80c\fa\7f?\bfuV\bc\8b\e9\7f?\nq\d6\bcy\cd\7f?\e7\ce \bd/\a6\7f?:^V\bd\afs\7f?\13\f2\85\bd\f95\7f?*\af\a0\bd\12\ed~?3e\bb\bd\fd\98~?\04\13\d6\bd\bc9~?s\b7\f0\bdU\cf}?\a8\a8\05\be\cbY}?\bb\ef\12\be%\d9|?\\0 \begM|?\f5i-\be\98\b6{?\f3\9b:\be\be\14{?\c2\c5G\be\e2gz?\cd\e6T\be\t\b0y?\82\fea\be<\edx?M\0co\be\84\1fx?\9c\0f|\be\eaFw?\ee\83\84\bewcv?>\fa\8a\be6uu?uj\91\be0|t?L\d4\97\beqxs?z7\9e\be\03jr?\b7\93\a4\be\f4Pq?\bc\e8\aa\beO-p?A6\b1\be!\ffn?\01|\b7\bev\c6m?\b4\b9\bd\be^\83l?\15\ef\c3\be\e75k?\de\1b\ca\be\1e\dei?\c9?\d0\be\12|h?\92Z\d6\be\d4\0fg?\f3k\dc\bet\99e?\aas\e2\be\01\19d?qq\e8\be\8d\8eb?\07e\ee\be(\fa`?\'N\f4\be\e6[_?\90,\fa\be\d7\b3]?\00\00\00\bf\0f\02\\?\1b\e4\02\bf\a0FZ?w\c2\05\bf\9e\81X?\f6\9a\08\bf\1d\b3V?wm\0b\bf1\dbT?\da9\0e\bf\ef\f9R?\00\00\11\bfl\0fQ?\ca\bf\13\bf\bd\1bO?\18y\16\bf\f8\1eM?\cd+\19\bf4\19K?\ca\d7\1b\bf\88\nI?\f1|\1e\bf\n\f3F?$\1b!\bf\d1\d2D?F\b2#\bf\f7\a9B?:B&\bf\93x@?\e3\ca(\bf\bd>>?%L+\bf\8f\fc;?\e3\c5-\bf\"\b29?\0180\bf\90_7?e\a22\bf\f3\045?\f3\045\bfe\a22?\90_7\bf\0180?\"\b29\bf\e3\c5-?\8f\fc;\bf%L+?\bd>>\bf\e3\ca(?\93x@\bf:B&?\f7\a9B\bfF\b2#?\d1\d2D\bf$\1b!?\n\f3F\bf\f1|\1e?\88\nI\bf\ca\d7\1b?4\19K\bf\cd+\19?\f8\1eM\bf\18y\16?\bd\1bO\bf\ca\bf\13?l\0fQ\bf\00\00\11?\ef\f9R\bf\da9\0e?1\dbT\bfwm\0b?\1d\b3V\bf\f6\9a\08?\9e\81X\bfw\c2\05?\a0FZ\bf\1b\e4\02?\0f\02\\\bf\00\00\00?\d7\b3]\bf\90,\fa>\e6[_\bf\'N\f4>(\fa`\bf\07e\ee>\8d\8eb\bfqq\e8>\01\19d\bf\aas\e2>t\99e\bf\f3k\dc>\d4\0fg\bf\92Z\d6>\12|h\bf\c9?\d0>\1e\dei\bf\de\1b\ca>\e75k\bf\15\ef\c3>^\83l\bf\b4\b9\bd>v\c6m\bf\01|\b7>!\ffn\bfA6\b1>O-p\bf\bc\e8\aa>\f4Pq\bf\b7\93\a4>\03jr\bfz7\9e>qxs\bfL\d4\97>0|t\bfuj\91>6uu\bf>\fa\8a>wcv\bf\ee\83\84>\eaFw\bf\9c\0f|>\84\1fx\bfM\0co><\edx\bf\82\fea>\t\b0y\bf\cd\e6T>\e2gz\bf\c2\c5G>\be\14{\bf\f3\9b:>\98\b6{\bf\f5i->gM|\bf\\0 >%\d9|\bf\bb\ef\12>\cbY}\bf\a8\a8\05>U\cf}\bfs\b7\f0=\bc9~\bf\04\13\d6=\fd\98~\bf3e\bb=\12\ed~\bf*\af\a0=\f95\7f\bf\13\f2\85=\afs\7f\bf:^V=/\a6\7f\bf\e7\ce =y\cd\7f\bf\nq\d6<\8b\e9\7f\bf\bfuV<c\fa\7f\bf\000\8d$\00\00\80\bf\bfuV\bcc\fa\7f\bf\nq\d6\bc\8b\e9\7f\bf\e7\ce \bdy\cd\7f\bf:^V\bd/\a6\7f\bf\13\f2\85\bd\afs\7f\bf*\af\a0\bd\f95\7f\bf3e\bb\bd\12\ed~\bf\04\13\d6\bd\fd\98~\bfs\b7\f0\bd\bc9~\bf\a8\a8\05\beU\cf}\bf\bb\ef\12\be\cbY}\bf\\0 \be%\d9|\bf\f5i-\begM|\bf\f3\9b:\be\98\b6{\bf\c2\c5G\be\be\14{\bf\cd\e6T\be\e2gz\bf\82\fea\be\t\b0y\bfM\0co\be<\edx\bf\9c\0f|\be\84\1fx\bf\ee\83\84\be\eaFw\bf>\fa\8a\bewcv\bfuj\91\be6uu\bfL\d4\97\be0|t\bfz7\9e\beqxs\bf\b7\93\a4\be\03jr\bf\bc\e8\aa\be\f4Pq\bfA6\b1\beO-p\bf\01|\b7\be!\ffn\bf\b4\b9\bd\bev\c6m\bf\15\ef\c3\be^\83l\bf\de\1b\ca\be\e75k\bf\c9?\d0\be\1e\dei\bf\92Z\d6\be\12|h\bf\f3k\dc\be\d4\0fg\bf\aas\e2\bet\99e\bfqq\e8\be\01\19d\bf\07e\ee\be\8d\8eb\bf\'N\f4\be(\fa`\bf\90,\fa\be\e6[_\bf\00\00\00\bf\d7\b3]\bf\1b\e4\02\bf\0f\02\\\bfw\c2\05\bf\a0FZ\bf\f6\9a\08\bf\9e\81X\bfwm\0b\bf\1d\b3V\bf\da9\0e\bf1\dbT\bf\00\00\11\bf\ef\f9R\bf\ca\bf\13\bfl\0fQ\bf\18y\16\bf\bd\1bO\bf\cd+\19\bf\f8\1eM\bf\ca\d7\1b\bf4\19K\bf\f1|\1e\bf\88\nI\bf$\1b!\bf\n\f3F\bfF\b2#\bf\d1\d2D\bf:B&\bf\f7\a9B\bf\e3\ca(\bf\93x@\bf%L+\bf\bd>>\bf\e3\c5-\bf\8f\fc;\bf\0180\bf\"\b29\bfe\a22\bf\90_7\bf\f3\045\bf\f3\045\bf\90_7\bfe\a22\bf\"\b29\bf\0180\bf\8f\fc;\bf\e3\c5-\bf\bd>>\bf%L+\bf\93x@\bf\e3\ca(\bf\f7\a9B\bf:B&\bf\d1\d2D\bfF\b2#\bf\n\f3F\bf$\1b!\bf\88\nI\bf\f1|\1e\bf4\19K\bf\ca\d7\1b\bf\f8\1eM\bf\cd+\19\bf\bd\1bO\bf\18y\16\bfl\0fQ\bf\ca\bf\13\bf\ef\f9R\bf\00\00\11\bf1\dbT\bf\da9\0e\bf\1d\b3V\bfwm\0b\bf\9e\81X\bf\f6\9a\08\bf\a0FZ\bfw\c2\05\bf\0f\02\\\bf\1b\e4\02\bf\d7\b3]\bf\00\00\00\bf\e6[_\bf\90,\fa\be(\fa`\bf\'N\f4\be\8d\8eb\bf\07e\ee\be\01\19d\bfqq\e8\bet\99e\bf\aas\e2\be\d4\0fg\bf\f3k\dc\be\12|h\bf\92Z\d6\be\1e\dei\bf\c9?\d0\be\e75k\bf\de\1b\ca\be^\83l\bf\15\ef\c3\bev\c6m\bf\b4\b9\bd\be!\ffn\bf\01|\b7\beO-p\bfA6\b1\be\f4Pq\bf\bc\e8\aa\be\03jr\bf\b7\93\a4\beqxs\bfz7\9e\be0|t\bfL\d4\97\be6uu\bfuj\91\bewcv\bf>\fa\8a\be\eaFw\bf\ee\83\84\be\84\1fx\bf\9c\0f|\be<\edx\bfM\0co\be\t\b0y\bf\82\fea\be\e2gz\bf\cd\e6T\be\be\14{\bf\c2\c5G\be\98\b6{\bf\f3\9b:\begM|\bf\f5i-\be%\d9|\bf\\0 \be\cbY}\bf\bb\ef\12\beU\cf}\bf\a8\a8\05\be\bc9~\bfs\b7\f0\bd\fd\98~\bf\04\13\d6\bd\12\ed~\bf3e\bb\bd\f95\7f\bf*\af\a0\bd\afs\7f\bf\13\f2\85\bd/\a6\7f\bf:^V\bdy\cd\7f\bf\e7\ce \bd\8b\e9\7f\bf\nq\d6\bcc\fa\7f\bf\bfuV\bc\00\00\80\bf\000\0d\a5c\fa\7f\bf\bfuV<\8b\e9\7f\bf\nq\d6<y\cd\7f\bf\e7\ce =/\a6\7f\bf:^V=\afs\7f\bf\13\f2\85=\f95\7f\bf*\af\a0=\12\ed~\bf3e\bb=\fd\98~\bf\04\13\d6=\bc9~\bfs\b7\f0=U\cf}\bf\a8\a8\05>\cbY}\bf\bb\ef\12>%\d9|\bf\\0 >gM|\bf\f5i->\98\b6{\bf\f3\9b:>\be\14{\bf\c2\c5G>\e2gz\bf\cd\e6T>\t\b0y\bf\82\fea><\edx\bfM\0co>\84\1fx\bf\9c\0f|>\eaFw\bf\ee\83\84>wcv\bf>\fa\8a>6uu\bfuj\91>0|t\bfL\d4\97>qxs\bfz7\9e>\03jr\bf\b7\93\a4>\f4Pq\bf\bc\e8\aa>O-p\bfA6\b1>!\ffn\bf\01|\b7>v\c6m\bf\b4\b9\bd>^\83l\bf\15\ef\c3>\e75k\bf\de\1b\ca>\1e\dei\bf\c9?\d0>\12|h\bf\92Z\d6>\d4\0fg\bf\f3k\dc>t\99e\bf\aas\e2>\01\19d\bfqq\e8>\8d\8eb\bf\07e\ee>(\fa`\bf\'N\f4>\e6[_\bf\90,\fa>\d7\b3]\bf\00\00\00?\0f\02\\\bf\1b\e4\02?\a0FZ\bfw\c2\05?\9e\81X\bf\f6\9a\08?\1d\b3V\bfwm\0b?1\dbT\bf\da9\0e?\ef\f9R\bf\00\00\11?l\0fQ\bf\ca\bf\13?\bd\1bO\bf\18y\16?\f8\1eM\bf\cd+\19?4\19K\bf\ca\d7\1b?\88\nI\bf\f1|\1e?\n\f3F\bf$\1b!?\d1\d2D\bfF\b2#?\f7\a9B\bf:B&?\93x@\bf\e3\ca(?\bd>>\bf%L+?\8f\fc;\bf\e3\c5-?\"\b29\bf\0180?\90_7\bfe\a22?\f3\045\bf\f3\045?e\a22\bf\90_7?\0180\bf\"\b29?\e3\c5-\bf\8f\fc;?%L+\bf\bd>>?\e3\ca(\bf\93x@?:B&\bf\f7\a9B?F\b2#\bf\d1\d2D?$\1b!\bf\n\f3F?\f1|\1e\bf\88\nI?\ca\d7\1b\bf4\19K?\cd+\19\bf\f8\1eM?\18y\16\bf\bd\1bO?\ca\bf\13\bfl\0fQ?\00\00\11\bf\ef\f9R?\da9\0e\bf1\dbT?wm\0b\bf\1d\b3V?\f6\9a\08\bf\9e\81X?w\c2\05\bf\a0FZ?\1b\e4\02\bf\0f\02\\?\00\00\00\bf\d7\b3]?\90,\fa\be\e6[_?\'N\f4\be(\fa`?\07e\ee\be\8d\8eb?qq\e8\be\01\19d?\aas\e2\bet\99e?\f3k\dc\be\d4\0fg?\92Z\d6\be\12|h?\c9?\d0\be\1e\dei?\de\1b\ca\be\e75k?\15\ef\c3\be^\83l?\b4\b9\bd\bev\c6m?\01|\b7\be!\ffn?A6\b1\beO-p?\bc\e8\aa\be\f4Pq?\b7\93\a4\be\03jr?z7\9e\beqxs?L\d4\97\be0|t?uj\91\be6uu?>\fa\8a\bewcv?\ee\83\84\be\eaFw?\9c\0f|\be\84\1fx?M\0co\be<\edx?\82\fea\be\t\b0y?\cd\e6T\be\e2gz?\c2\c5G\be\be\14{?\f3\9b:\be\98\b6{?\f5i-\begM|?\\0 \be%\d9|?\bb\ef\12\be\cbY}?\a8\a8\05\beU\cf}?s\b7\f0\bd\bc9~?\04\13\d6\bd\fd\98~?3e\bb\bd\12\ed~?*\af\a0\bd\f95\7f?\13\f2\85\bd\afs\7f?:^V\bd/\a6\7f?\e7\ce \bdy\cd\7f?\nq\d6\bc\8b\e9\7f?\bfuV\bcc\fa\7f?\00\c8S\a5\00\00\80?\bfuV<c\fa\7f?\nq\d6<\8b\e9\7f?\e7\ce =y\cd\7f?:^V=/\a6\7f?\13\f2\85=\afs\7f?*\af\a0=\f95\7f?3e\bb=\12\ed~?\04\13\d6=\fd\98~?s\b7\f0=\bc9~?\a8\a8\05>U\cf}?\bb\ef\12>\cbY}?\\0 >%\d9|?\f5i->gM|?\f3\9b:>\98\b6{?\c2\c5G>\be\14{?\cd\e6T>\e2gz?\82\fea>\t\b0y?M\0co><\edx?\9c\0f|>\84\1fx?\ee\83\84>\eaFw?>\fa\8a>wcv?uj\91>6uu?L\d4\97>0|t?z7\9e>qxs?\b7\93\a4>\03jr?\bc\e8\aa>\f4Pq?A6\b1>O-p?\01|\b7>!\ffn?\b4\b9\bd>v\c6m?\15\ef\c3>^\83l?\de\1b\ca>\e75k?\c9?\d0>\1e\dei?\92Z\d6>\12|h?\f3k\dc>\d4\0fg?\aas\e2>t\99e?qq\e8>\01\19d?\07e\ee>\8d\8eb?\'N\f4>(\fa`?\90,\fa>\e6[_?\00\00\00?\d7\b3]?\1b\e4\02?\0f\02\\?w\c2\05?\a0FZ?\f6\9a\08?\9e\81X?wm\0b?\1d\b3V?\da9\0e?1\dbT?\00\00\11?\ef\f9R?\ca\bf\13?l\0fQ?\18y\16?\bd\1bO?\cd+\19?\f8\1eM?\ca\d7\1b?4\19K?\f1|\1e?\88\nI?$\1b!?\n\f3F?F\b2#?\d1\d2D?:B&?\f7\a9B?\e3\ca(?\93x@?%L+?\bd>>?\e3\c5-?\8f\fc;?\0180?\"\b29?e\a22?\90_7?\f3\045?\f3\045?\90_7?e\a22?\"\b29?\0180?\8f\fc;?\e3\c5-?\bd>>?%L+?\93x@?\e3\ca(?\f7\a9B?:B&?\d1\d2D?F\b2#?\n\f3F?$\1b!?\88\nI?\f1|\1e?4\19K?\ca\d7\1b?\f8\1eM?\cd+\19?\bd\1bO?\18y\16?l\0fQ?\ca\bf\13?\ef\f9R?\00\00\11?1\dbT?\da9\0e?\1d\b3V?wm\0b?\9e\81X?\f6\9a\08?\a0FZ?w\c2\05?\0f\02\\?\1b\e4\02?\d7\b3]?\00\00\00?\e6[_?\90,\fa>(\fa`?\'N\f4>\8d\8eb?\07e\ee>\01\19d?qq\e8>t\99e?\aas\e2>\d4\0fg?\f3k\dc>\12|h?\92Z\d6>\1e\dei?\c9?\d0>\e75k?\de\1b\ca>^\83l?\15\ef\c3>v\c6m?\b4\b9\bd>!\ffn?\01|\b7>O-p?A6\b1>\f4Pq?\bc\e8\aa>\03jr?\b7\93\a4>qxs?z7\9e>0|t?L\d4\97>6uu?uj\91>wcv?>\fa\8a>\eaFw?\ee\83\84>\84\1fx?\9c\0f|><\edx?M\0co>\t\b0y?\82\fea>\e2gz?\cd\e6T>\be\14{?\c2\c5G>\98\b6{?\f3\9b:>gM|?\f5i->%\d9|?\\0 >\cbY}?\bb\ef\12>U\cf}?\a8\a8\05>\bc9~?s\b7\f0=\fd\98~?\04\13\d6=\12\ed~?3e\bb=\f95\7f?*\af\a0=\afs\7f?\13\f2\85=/\a6\7f?:^V=y\cd\7f?\e7\ce =\8b\e9\7f?\nq\d6<c\fa\7f?\bfuV<\00\00\18\000\00H\00`\00\08\00 \008\00P\00h\00\10\00(\00@\00X\00p\00\04\00\1c\004\00L\00d\00\0c\00$\00<\00T\00l\00\14\00,\00D\00\\\00t\00\01\00\19\001\00I\00a\00\t\00!\009\00Q\00i\00\11\00)\00A\00Y\00q\00\05\00\1d\005\00M\00e\00\0d\00%\00=\00U\00m\00\15\00-\00E\00]\00u\00\02\00\1a\002\00J\00b\00\n\00\"\00:\00R\00j\00\12\00*\00B\00Z\00r\00\06\00\1e\006\00N\00f\00\0e\00&\00>\00V\00n\00\16\00.\00F\00^\00v\00\03\00\1b\003\00K\00c\00\0b\00#\00;\00S\00k\00\13\00+\00C\00[\00s\00\07\00\1f\007\00O\00g\00\0f\00\'\00?\00W\00o\00\17\00/\00G\00_\00w\00\00\000\00`\00\90\00\c0\00\10\00@\00p\00\a0\00\d0\00 \00P\00\80\00\b0\00\e0\00\04\004\00d\00\94\00\c4\00\14\00D\00t\00\a4\00\d4\00$\00T\00\84\00\b4\00\e4\00\08\008\00h\00\98\00\c8\00\18\00H\00x\00\a8\00\d8\00(\00X\00\88\00\b8\00\e8\00\0c\00<\00l\00\9c\00\cc\00\1c\00L\00|\00\ac\00\dc\00,\00\\\00\8c\00\bc\00\ec\00\01\001\00a\00\91\00\c1\00\11\00A\00q\00\a1\00\d1\00!\00Q\00\81\00\b1\00\e1\00\05\005\00e\00\95\00\c5\00\15\00E\00u\00\a5\00\d5\00%\00U\00\85\00\b5\00\e5\00\t\009\00i\00\99\00\c9\00\19\00I\00y\00\a9\00\d9\00)\00Y\00\89\00\b9\00\e9\00\0d\00=\00m\00\9d\00\cd\00\1d\00M\00}\00\ad\00\dd\00-\00]\00\8d\00\bd\00\ed\00\02\002\00b\00\92\00\c2\00\12\00B\00r\00\a2\00\d2\00\"\00R\00\82\00\b2\00\e2\00\06\006\00f\00\96\00\c6\00\16\00F\00v\00\a6\00\d6\00&\00V\00\86\00\b6\00\e6\00\n\00:\00j\00\9a\00\ca\00\1a\00J\00z\00\aa\00\da\00*\00Z\00\8a\00\ba\00\ea\00\0e\00>\00n\00\9e\00\ce\00\1e\00N\00~\00\ae\00\de\00.\00^\00\8e\00\be\00\ee\00\03\003\00c\00\93\00\c3\00\13\00C\00s\00\a3\00\d3\00#\00S\00\83\00\b3\00\e3\00\07\007\00g\00\97\00\c7\00\17\00G\00w\00\a7\00\d7\00\'\00W\00\87\00\b7\00\e7\00\0b\00;\00k\00\9b\00\cb\00\1b\00K\00{\00\ab\00\db\00+\00[\00\8b\00\bb\00\eb\00\0f\00?\00o\00\9f\00\cf\00\1f\00O\00\7f\00\af\00\df\00/\00_\00\8f\00\bf\00\ef\00\00\00`\00\c0\00 \01\80\01 \00\80\00\e0\00@\01\a0\01@\00\a0\00\00\01`\01\c0\01\08\00h\00\c8\00(\01\88\01(\00\88\00\e8\00H\01\a8\01H\00\a8\00\08\01h\01\c8\01\10\00p\00\d0\000\01\90\010\00\90\00\f0\00P\01\b0\01P\00\b0\00\10\01p\01\d0\01\18\00x\00\d8\008\01\98\018\00\98\00\f8\00X\01\b8\01X\00\b8\00\18\01x\01\d8\01\04\00d\00\c4\00$\01\84\01$\00\84\00\e4\00D\01\a4\01D\00\a4\00\04\01d\01\c4\01\0c\00l\00\cc\00,\01\8c\01,\00\8c\00\ec\00L\01\ac\01L\00\ac\00\0c\01l\01\cc\01\14\00t\00\d4\004\01\94\014\00\94\00\f4\00T\01\b4\01T\00\b4\00\14\01t\01\d4\01\1c\00|\00\dc\00<\01\9c\01<\00\9c\00\fc\00\\\01\bc\01\\\00\bc\00\1c\01|\01\dc\01\01\00a\00\c1\00!\01\81\01!\00\81\00\e1\00A\01\a1\01A\00\a1\00\01\01a\01\c1\01\t\00i\00\c9\00)\01\89\01)\00\89\00\e9\00I\01\a9\01I\00\a9\00\t\01i\01\c9\01\11\00q\00\d1\001\01\91\011\00\91\00\f1\00Q\01\b1\01Q\00\b1\00\11\01q\01\d1\01\19\00y\00\d9\009\01\99\019\00\99\00\f9\00Y\01\b9\01Y\00\b9\00\19\01y\01\d9\01\05\00e\00\c5\00%\01\85\01%\00\85\00\e5\00E\01\a5\01E\00\a5\00\05\01e\01\c5\01\0d\00m\00\cd\00-\01\8d\01-\00\8d\00\ed\00M\01\ad\01M\00\ad\00\0d\01m\01\cd\01\15\00u\00\d5\005\01\95\015\00\95\00\f5\00U\01\b5\01U\00\b5\00\15\01u\01\d5\01\1d\00}\00\dd\00=\01\9d\01=\00\9d\00\fd\00]\01\bd\01]\00\bd\00\1d\01}\01\dd\01\02\00b\00\c2\00\"\01\82\01\"\00\82\00\e2\00B\01\a2\01B\00\a2\00\02\01b\01\c2\01\n\00j\00\ca\00*\01\8a\01*\00\8a\00\ea\00J\01\aa\01J\00\aa\00\n\01j\01\ca\01\12\00r\00\d2\002\01\92\012\00\92\00\f2\00R\01\b2\01R\00\b2\00\12\01r\01\d2\01\1a\00z\00\da\00:\01\9a\01:\00\9a\00\fa\00Z\01\ba\01Z\00\ba\00\1a\01z\01\da\01\06\00f\00\c6\00&\01\86\01&\00\86\00\e6\00F\01\a6\01F\00\a6\00\06\01f\01\c6\01\0e\00n\00\ce\00.\01\8e\01.\00\8e\00\ee\00N\01\ae\01N\00\ae\00\0e\01n\01\ce\01\16\00v\00\d6\006\01\96\016\00\96\00\f6\00V\01\b6\01V\00\b6\00\16\01v\01\d6\01\1e\00~\00\de\00>\01\9e\01>\00\9e\00\fe\00^\01\be\01^\00\be\00\1e\01~\01\de\01\03\00c\00\c3\00#\01\83\01#\00\83\00\e3\00C\01\a3\01C\00\a3\00\03\01c\01\c3\01\0b\00k\00\cb\00+\01\8b\01+\00\8b\00\eb\00K\01\ab\01K\00\ab\00\0b\01k\01\cb\01\13\00s\00\d3\003\01\93\013\00\93\00\f3\00S\01\b3\01S\00\b3\00\13\01s\01\d3\01\1b\00{\00\db\00;\01\9b\01;\00\9b\00\fb\00[\01\bb\01[\00\bb\00\1b\01{\01\db\01\07\00g\00\c7\00\'\01\87\01\'\00\87\00\e7\00G\01\a7\01G\00\a7\00\07\01g\01\c7\01\0f\00o\00\cf\00/\01\8f\01/\00\8f\00\ef\00O\01\af\01O\00\af\00\0f\01o\01\cf\01\17\00w\00\d7\007\01\97\017\00\97\00\f7\00W\01\b7\01W\00\b7\00\17\01w\01\d7\01\1f\00\7f\00\df\00?\01\9f\01?\00\9f\00\ff\00_\01\bf\01_\00\bf\00\1f\01\7f\01\df\01\00\00\ce@\00\00\c8@\00\00\b8@\00\00\aa@\00\00\a2@\00\00\9a@\00\00\90@\00\00\8c@\00\00\9c@\00\00\96@\00\00\92@\00\00\8e@\00\00\9c@\00\00\94@\00\00\8a@\00\00\90@\00\00\8c@\00\00\94@\00\00\98@\00\00\8e@\00\00p@\00\00p@\00\00p@\00\00p@\00\00p@")
 (data (i32.const 21040) "H\7fA\81B\80A\80@\80>\80@\80@\80\\N\\O\\NZOt)s(r(\84\1a\84\1a\91\11\a1\0c\b0\n\b1\0b\18\b30\8a6\876\845\868\857\847\84=rF`JXKXWJYB[Cd;l2x(z%a+N2SNTQXKVJWGZI]J]Jm(r$u\"u\"\8f\11\91\12\92\13\a2\0c\a5\n\b2\07\bd\06\be\08\b1\t\17\b26s?fBbEcJYG[I[NYVP\\B]@f;g<h<u4{,\8a#\85\1fa&M-=Z]<i*k)n-t&q&p&|\1a\84\1b\88\13\8c\14\9b\0e\9f\10\9e\12\aa\0d\b1\n\bb\08\c0\06\af\t\9f\n\15\b2;nGVKUTS[BXIWH\\KbHi:k6s4r7p8\813\84(\96!\8c\1db#M**y`Bl+o(u,{ x$w!\7f!\86\"\8b\15\93\17\98\14\9e\19\9a\1a\a6\15\ad\10\b8\0d\b8\n\96\0d\8b\0f\16\b2?rJRTS\\Rg>`H`CeIkHq7v4}4v4u7\871\89\'\9d \91\1da!M(\00\00f?\00\00L?\00\00&?\00\00\00?\00\86k?\00\14.?\00p\bd>\00\d0L>\00\08\0d\10\13\15\17\18\1a\1b\1c\1d\1e\1f  !\"\"#$$%%\00\00\00\00\00\00\00\00\e0p,\0f\03\02\01\00\fe\ed\c0\84F\17\04\00\ff\fc\e2\9b=\0b\02")
 (data (i32.const 21472) "\fa\f5\ea\cbG2*&#!\1f\1d\1c\1b\1a\19\18\17\16\15\14\13\12\11\10\0f\0e\0d\0c\0b\n\t\08\07\06\05\04\03\02\01\00\00\00\00\00\00\00\00\c7\a5\90|m`TG=3* \17\0f\08\00\f1\e1\d3\c7\bb\af\a4\99\8e\84{ri`XPH@92,&!\1d\18\14\10\0c\t\05\02\00\04\06\18\07\05\00\00\02\00\00\0c\1c)\0d\fc\f7\0f*\19\0e\01\fe>)\f7\f6%A\fc\03\fa\04B\07\f8\10\0e&\fd!\00\00\00\00\00\00\00\00\0d\16\'\17\0c\ff$@\1b\fa\f9\n7+\11\01\01\08\01\01\06\f5J5\f7\f47L\f4\08\fd\03]\1b\fc\1a\';\03\f8\02\00M\0b\t\f8\16,\fa\07(\t\1a\03\t\f9\14e\f9\04\03\f8*\1a\00\f1!D\02\17\fe7.\fe\0f\03\ff\15\10)\fa\1b=\'\05\f5*X\04\01\fe<A\06\fc\ff\fbI8\01\f7\13^\1d\f7\00\0cc\06\04\08\edf.\f3\03\02\0d\03\02\t\ebTH\ee\f5.h\ea\08\12&0\17\00\f0FS\eb\0b\05\f5u\16\f8\fa\17u\f4\03\03\f8_\1c\04\f6\0fM<\f1\ff\04|\02\fc\03&T\18\e7\02\0d*\0d\1f\15\fc8.\ff\ff#O\f3\13\f9AX\f7\f2\14\04Q1\e3\14\00K\03\ef\05\f7,\\\f8\01\fd\16E\1f\fa_)\f4\05\'C\10\fc\01\00\fax7\dc\f3,z\04\e8Q\05\0b\03\07\02\00\t\nX\0c#<Sl\84\9d\b4\ce\e4\0f 7Me}\97\af\c9\e1\13*BYr\89\a2\b8\d1\e6\0c\192Hax\93\ac\c8\df\1a,EZr\87\9f\b4\cd\e1\0d\165Pj\82\9c\b4\cd\e4\0f\19,@Zs\8e\a8\c4\de\13\18>Rdx\91\a8\be\d6\16\1f2Ogx\97\aa\cb\e3\15\1d-Aj|\96\ab\c4\e0\1e1Kay\8e\a5\ba\d1\e5\13\194F]t\8f\a6\c0\db\1a\">Kav\91\a7\c2\d9\19!8F[q\8f\a5\c4\df\15\"3Hau\91\ab\c4\de\14\1d2CZu\90\a8\c5\dd\16\1f0B_u\92\a8\c4\de\18!3Mt\86\9e\b4\c8\e0\15\1cFWj|\95\aa\c2\d9\1a!5@Su\98\ad\cc\e1\1b\"A_l\81\9b\ae\d2\e1\14\1aHcq\83\9a\b0\c8\db\"+=N]r\9b\b1\cd\e5\17\1d6a|\8a\a3\b3\d1\e5\1e&8Yv\81\9e\b2\c8\e7\15\1d1?Uo\8e\a3\c1\de\1b0Mg\85\9e\b3\c4\d7\e8\1d/Jc|\97\b0\c6\dc\ed!*=L]y\9b\ae\cf\e1\1d5Wp\88\9a\aa\bc\d0\e3\18\1e4T\83\96\a6\ba\cb\e5%0@Thv\9c\b1\c9\e6Q\0b\n\t\n\t\n\t\ef\08\ef\08\n\t\fc\08\17\t\ef\08H\0b\14\nZ\t?\t\n\t\e2\08\e2\08\e2\08\e2\08\92\08\b7\t$\t$\t\n\t\n\t\n\t$\t$\t?\t2\t\90\0c\ce\n$\t$\t\n\t\e2\08\ad\08\9f\08\d5\08\92\08\9c\t\aa\t?\tZ\tZ\tZ\tZ\t?\tg\t\n\t\97\0d\f0\0bO\08\9f\08\e2\08\e2\08\e2\08\ef\08\n\t\d5\08\d2\0cE\0c\14\nZ\t\c7\08\ad\08\9f\08\92\08\92\08B\08\00\10\05\0f\ad\08<\n<\ng\t\n\tZ\t?\t\1a\08j\0c\ac\0c?\t\ad\08\f9\t\82\t$\t\n\tw\08\ad\08\n\0d\a0\0d\a6\n\92\08\d5\08\9c\t2\t?\t\9f\085\082\tt\t\17\t?\tZ\tt\tt\tt\t\9c\t?\t\c3\0e-\0e\82\t\df\t?\t\e2\08\e2\08\fc\08\9f\08\00\08\b6\0c\99\0c\99\n\1e\0b\8f\t\17\t\fc\08\fc\08\e2\08O\08\bf\0c\e4\0c\c1\n\f6\n\8f\t\d5\08\d5\08\c7\08O\085\089\0b\a5\0bI\n?\tg\t2\t\92\08\c7\08\c7\08B\08\99\0c}\0cI\n\14\n\e2\08\85\08\c7\08\ad\08\ad\08]\08j\0c\ee\0c\b4\ng\t\e2\08\e2\08\e2\08\ef\08\92\08B\08E\0c\c8\0c\9c\t\0d\08\ef\08\c4\t?\t\b7\t\82\t\85\08\b3\0d\d2\0c\n\t\8c\nW\n\aa\t?\tZ\t$\tO\08_\0d\cf\0d\de\0b\f0\0b\fc\08\9e\07\ad\08\e2\08\e2\08\e2\08L\0d&\0d\'\08\7f\n9\0b2\tt\t\e2\08\aa\t\ec\t\b0\0e\a0\0d\9e\07d\nQ\0b\df\tZ\t?\t\9c\t\d5\08\d4\0b\c8\0c\b4\nH\0b\b4\nj\08O\08\ef\08\ba\08\c7\08o\0eI\0e\e9\07\b1\07d\n\8c\n\14\n\c4\t\17\t?\t\87\0cU\0d2\t\1a\08H\0bH\0b$\t\b7\t\c7\08w\08\n\0d&\0d\1e\0b\dc\n\17\tj\08\e2\08\ef\08B\08\0d\08\17\t\fc\08\85\08w\08\85\08?\tI\n\8c\n\8c\n\f9\tg\t\82\t\ad\08\d5\08\ad\08\ad\08$\tt\t/\n\8c\n\de\0b\ac\0c\f6\nH\0b\aa\t\1a\08\fc\08\n\t2\tL\t\ad\08j\08O\08\ef\08\c4\t\e9\n\e9\n<\n\14\n?\t\\\0e\81\0e\ba\08.\07\85\08\c1\n\a6\nq\n\d1\t\9f\08\e9\nX\0c\a6\n\f9\t\1e\0b\d1\t\85\08Z\t\ad\08\85\08\d4\b2\94\81l`UROM=;98310-*)(&$\"\1f\1e\15\0c\n\03\01\00\ff\f5\f4\ec\e9\e1\d9\cb\be\b0\af\a1\95\88}rf[QG<4+#\1c\14\13\12\0c\0b\05\00\b3\8a\8c\94\97\95\99\97\a3tCR;\\HdY\\")
 (data (i32.const 22912) "\10\00\00\00\00cB$$\"$\"\"\"\"SE$4\"tfFDD\b0fDD\"AUDT$t\8d\98\8b\aa\84\bb\b8\d8\89\84\f9\a8\b9\8bhfdDD\b2\da\b9\b9\aa\f4\d8\bb\bb\aa\f4\bb\bb\db\8ag\9b\b8\b9\89t\b7\9b\98\88\84\d9\b8\b8\aa\a4\d9\ab\9b\8b\f4\a9\b8\b9\aa\a4\d8\df\da\8a\d6\8f\bc\da\a8\f4\8d\88\9b\aa\a8\8a\dc\db\8b\a4\db\ca\d8\89\a8\ba\f6\b9\8bt\b9\db\b9\8add\86df\"DDdD\a8\cb\dd\da\a8\a7\9a\88hF\a4\f6\ab\89\8b\89\9b\da\db\8b\ff\fe\fd\ee\0e\03\02\01\00\ff\fe\fc\da#\03\02\01\00\ff\fe\fa\d0;\04\02\01\00\ff\fe\f6\c2G\n\02\01\00\ff\fc\ec\b7R\08\02\01\00\ff\fc\eb\b4Z\11\02\01\00\ff\f8\e0\aba\1e\04\01\00\ff\fe\ec\ad_%\07\01")
 (data (i32.const 23152) "\ff\ff\ff\83\06\91\ff\ff\ff\ff\ff\ec]\0f`\ff\ff\ff\ff\ff\c2S\19G\dd\ff\ff\ff\ff\a2I\"B\a2\ff\ff\ff\d2~I+9\ad\ff\ff\ff\c9}G0:\82\ff\ff\ff\a6nI9>h\d2\ff\ff\fb{A7Dd\ab\ff\00\00\00\00\00\00\00\00\fa\00\03\00\06\00\03\00\03\00\03\00\04\00\03\00\03\00\03\00\cd\01")
 (data (i32.const 23264) "\07\17&6EUdt\83\93\a2\b2\c1\d0\df\ef\0d\19)7ESbp\7f\8e\9d\ab\bb\cb\dc\ec\0f\15\"3=N\\j~\88\98\a7\b9\cd\e1\f0\n\15$2?O_n~\8d\9d\ad\bd\cd\dd\ed\11\14%3;NYk{\86\96\a4\b8\cd\e0\f0\n\0f 3CQ`p\81\8e\9e\ad\bd\cc\dc\ec\08\15%3AObq~\8a\9b\a8\b3\c0\d1\da\0c\0f\"7?NWlv\83\94\a7\b9\cb\db\ec\10\13 $8O[lv\88\9a\ab\ba\cc\dc\ed\0b\1c+:JYix\87\96\a5\b4\c4\d3\e2\f1\06\10!.<K\\k{\89\9c\a9\b9\c7\d6\e1\0b\13\1e,9JYiy\87\98\a9\ba\ca\da\ea\0c\13\1d.9GXdx\84\94\a5\b6\c7\d8\e9\11\17#.8M\\j{\86\98\a7\b9\cc\de\ed\0e\11-5?KYks\84\97\ab\bc\ce\dd\f0\t\10\1d(8GXgw\89\9a\ab\bd\cd\de\ed\10\13$09LWiv\84\96\a7\b9\ca\da\ec\0c\11\1d6GQ^h~\88\95\a4\b6\c9\dd\ed\0f\1c/>Oas\81\8e\9b\a8\b4\c2\d0\df\ee\08\0e\1e->N^o\7f\8f\9f\af\c0\cf\df\ef\11\1e1>O\\kw\84\91\a0\ae\be\cc\dc\eb\0e\13$-=L[ly\8a\9a\ac\bd\cd\de\ee\0c\12\1f-<L[k{\8a\9a\ab\bb\cc\dd\ec\0d\11\1f+5FSgr\83\95\a7\b9\cb\dc\ed\11\16#*:N]n}\8b\9b\aa\bc\ce\e0\f0\08\0f\"2CScs\83\92\a2\b2\c1\d1\e0\ef\0d\10)BIV_o\80\89\96\a3\b7\ce\e1\f1\11\19%4?K\\fw\84\90\a0\af\bf\d4\e7\13\1f1ASdu\85\93\a1\ae\bb\c8\d5\e3\f2\12\1f4DXgu~\8a\95\a3\b1\c0\cf\df\ef\10\1d/=LZjw\85\93\a1\b0\c1\d1\e0\f0\0f\15#2=IVanw\81\8d\af\c6\da\edI\0em\0bm\0bm\0bm\0bm\0bm\0bm\0bm\0bm\0bm\0bm\0b\93\0b\93\0bm\0b\1e\0b\90\0c\0d\0c\9c\0b\f0\0b\f0\0b\c2\0b\c2\0b\c2\0b\93\0b\93\0b\c2\0b\9c\0bH\0b\1e\0b\1e\0b\a6\nP\0f\ae\0f\a5\0b\87\0c\87\0cv\0b\f0\0b\1e\0b2\0c\ac\0cm\0b\1e\0b<\n\f9\t\dc\nm\0b\bc\0d}\0c\c2\0b\1f\0c\cb\0bH\0bm\0bm\0bm\0bm\0bH\0bH\0bH\0bH\0bH\0b\c1\n\be\13\be\13v\0b\f5\0d9\0d\f0\0b\0d\0c\e9\nX\0cX\0c\9c\0b\1e\0b\d1\t\ec\t\c1\nH\0bL\115\10\8c\n\c1\n\9c\0b\c2\0bm\0b\1e\0b\a5\0b\cb\0bm\0bm\0bm\0bm\0bH\0b\a6\n$\0e\cb\0b\9c\0b\f0\0b\f0\0b9\0b\f6\n\f0\0b\90\0c\e7\0b\a5\0b\db\0c\db\0c\a5\0b\ee\0c\af\0bk\14\96\13\ec\t\n\0d\c6\0d9\0d}\0c\16\0c0\0d\a5\0b\8c\nW\n\7f\n\e9\n\1e\0bq\n\d9\136\14\07\12L\11\9c\tQ\0b\e7\0b\87\0ca\0c\7f\n\b4\nH\0b\1e\0b\e9\n\1e\0b\8c\n2\0cH\0b\93\0bm\0bm\0bm\0bm\0b\93\0b\93\0b\93\0b\93\0bm\0bm\0b\93\0b\93\0b\93\0bj\10\87\0c\a5\0b\1f\0c\c2\0bH\0bH\0bm\0b\9c\0b9\0bd\0b\cb\0b\9c\0b\c2\0b}\0c9\0b\b0\0e\b0\0e\ac\0c\1f\0c\a5\0bH\0bm\0bH\0b\9c\0bv\0b\e9\n\e9\n\1e\0bH\0bH\0bd\n\0e\0f\ae\0f\87\0c2\0c\ac\0cv\0b\e7\0b\93\0b\93\0b\0d\0c\1e\0b\e9\n\e9\n\e9\n\e9\n\14\n\05\0f\f0\0f\1d\0d\bc\0d\16\0c\b4\n\c2\0bv\0b2\0c\0d\0c\1e\0b\1e\0bW\nW\n\1e\0b\f6\n\1b\14\1e\13\99\0c\05\0fq\0da\0cQ\0bU\0d{\0d\8c\n\14\nq\n\b4\n\1e\0b\f6\n\c1\n\0d\10\cd\0e\db\0cX\0cm\0bH\0bH\0bm\0b\e9\n\b4\n\e9\n\b4\n\e9\n\1e\0bH\0b\f6\n\d9\13\be\13\e7\0b\d9\0d\ac\0c\f0\0b\0d\0c\80\0b\1f\0cQ\0b\b4\n\b4\n\b4\n\1e\0b\e9\n<\n\d5\10\d5\10,\0b\df\t\87\0c0\0d0\0d\03\0c\03\0c0\0d\f0\0b\1e\0bW\n\14\n\a6\n\c1\n\f0\0bd\0b\f6\nH\0b\b4\n\7f\nQ\0b\1f\0cN\0cN\0c\90\0ca\0c\f0\0b\c2\0b\93\0b\1e\0b\17\11*\0fm\0bH\0b\1e\0bH\0b\1e\0b\1e\0bH\0bH\0bH\0b\1e\0bH\0bm\0bH\0b\1e\0b\a5\0bd\0bd\0b\a5\0b\a5\0b\f0\0b2\0c\90\0cN\0c\f0\0b\c2\0b\9c\0b\9c\0b\9c\0bm\0b\b4\n\85\105\10\ee\0c\13\0dm\0b\93\0bH\0b\a5\0b\a5\0b\1e\0b\e9\n\b4\n\1e\0b\1e\0b\1e\0b\e9\n\f0\0f\ae\0f\1f\0c\c2\0bm\0bm\0bm\0bH\0bm\0bm\0b\1e\0b\1e\0b\1e\0b\e9\nH\0b\dc\n\07\12\df\11a\0cq\0d\87\0c\a5\0bQ\0b\de\0b2\0c\b4\n\7f\n\7f\n\7f\n\b4\n\e9\n\8c\n5\10\ad\10\cd\0eI\0e\a6\n\dc\nH\0bH\0b\c2\0b\9c\0bm\0b\1e\0b\7f\n\7f\n\e9\nH\0bw\10\e2\0d\c1\n\1e\0b\1e\0bH\0bH\0bH\0bm\0bm\0bH\0bm\0bm\0bm\0b\93\0bH\0b6\149\13\d5\08h\0d\cd\0e\97\0d\13\0d\1e\0b\ee\0c\97\0dN\0cQ\0b\9c\t\b7\t\c1\nm\0b{\0de\0e2\0c}\0c\1d\0d\e7\0b\87\0c\87\0c\a5\0b\90\0c\0d\0cm\0bm\0b\7f\n\ec\t\82\t\a5\0b\c2\0b\e9\n\e9\n\b4\n\e9\n\1e\0b\9c\0b\f0\0b\1f\0cN\0cN\0cN\0c\1f\0c\c2\0b\c2\0b\80\0b9\0b\7f\n\a6\n\dc\n\c2\0bh\0d\d9\0d\1d\0d\ac\0c\f0\0b\c2\0b\93\0bm\0bH\0b\1e\0b\cb\0b\80\0bQ\0b\c2\0b\c2\0b\9c\0b\cb\0b\1f\0c\f0\0b\f0\0b\c2\0bH\0b\1e\0bm\0bm\0bH\0bP\0f\7f\0f\c2\0b}\0c\1d\0d\90\0c\db\0c\db\0c\97\0dx\0eq\0d\a6\n\85\08\9c\t\14\n/\n\e1\cc\c9\b8\b7\af\9e\9a\99\87wsqnmcb_OD420-+ \1f\1b\12\n\03\00\ff\fb\eb\e6\d4\c9\c4\b6\a7\a6\a3\97\8a|nhZNLFE9-\"\18\15\0b\06\05\04\03\00\af\94\a0\b0\b2\ad\ae\a4\b1\ae\c4\b6\c6\c0\b6D>B<HuUZv\88\97\8e\a0\8e\9b")
 (data (i32.const 24903) "\01dffDD$\"`\a4k\9e\b9\b4\b9\8bf@B$\"\"\00\01 \d0\8b\8d\bf\98\b9\9bh`\abh\a6fff\84\01\00\00\00\00\10\10\00PmNk\b9\8bge\d0\d4\8d\8b\ad\99{g$\00\00\00\00\00\00\010\00\00\00\00\00\00 D\87{wwgEbDgxvvfGb\86\88\9d\b8\b6\99\8b\86\d0\a8\f8K\bd\8fyk 1\"\"\"\00\11\02\d2\eb\8b{\b9\89i\86b\87h\b6d\b7\ab\86dFDFBB\"\83@\a6fD$\02\01\00\86\a6fD\"\"B\84\d4\f6\9e\8bkkWfd\db}z\89vg\84r\87\89i\abj2\"\a4\d6\8d\8f\b9\97yg\c0\"\00\00\00\00\00\01\d0mJ\bb\86\f9\9f\89fn\9avWewe\00\02\00$$BD#`\a4fd$\00\02!\a7\8a\aefdT\02\02dkxw$\c5\18\00\ff\fe\fd\f4\0c\03\02\01\00\ff\fe\fc\e0&\03\02\01\00\ff\fe\fb\d19\04\02\01\00\ff\fe\f4\c3E\04\02\01\00\ff\fb\e8\b8T\07\02\01\00\ff\fe\f0\baV\0e\02\01\00\ff\fe\ef\b2[\1e\05\01\00\ff\f8\e3\b1d\13\02\01")
 (data (i32.const 25232) "\ff\ff\ff\9c\04\9a\ff\ff\ff\ff\ff\e3f\0f\\\ff\ff\ff\ff\ff\d5S\18H\ec\ff\ff\ff\ff\96L!?\d6\ff\ff\ff\beyM+7\b9\ff\ff\ff\f5\89G+;\8b\ff\ff\ff\ff\83B2Bk\c2\ff\ff\a6tL75}\ff\ff\00\00\00\00\00\00\00\00d\00\03\00(\00\03\00\03\00\03\00\05\00\0e\00\0e\00\n\00\0b\00\03\00\08\00\t\00\07\00\03\00[\01")
 (data (i32.const 25360) "\\\ca\be\d8\b6\df\9a\e2\9c\e6x\ecz\f4\cc\fc4\03\86\0b\88\13d\19f\1dJ B\'\a45\f9\f7\f6\f5\f4\ea\d2\ca\c9\c8\c5\aeR;876.\16\0c\0b\n\t\07\00\00\00\00\00\00\00\00\fd\fa\f4\e9\d4\b6\96\83xnbUH<1( \19\13\0f\0d\0b\t\08\07\06\05\04\03\02\01\00\d2\d0\ce\cb\c7\c1\b7\a8\8ehJ4%\1b\14\0e\n\06\04\02")
 (data (i32.const 25488) "\df\c9\b7\a7\98\8a|obXOF>82,\'#\1f\1b\18\15\12\10\0e\0c\n\08\06\04\03\02\01")
 (data (i32.const 25536) "}3\1a\12\0f\0c\0b\n\t\08\07\06\05\04\03\02\01\00\c6i-\16\0f\0c\0b\n\t\08\07\06\05\04\03\02\01\00\d5\a2tS;+ \18\12\0f\0c\t\07\06\05\03\02\00\ef\bbt;\1c\10\0b\n\t\08\07\06\05\04\03\02\01\00\fa\e5\bc\87V3\1e\13\0d\n\08\06\05\04\03\02\01\00\f9\eb\d5\b9\9c\80gSB5*!\1a\15\11\0d\n\00\fe\f9\eb\ce\a4vM.\1b\10\n\07\05\04\03\02\01\00\ff\fd\f9\ef\dc\bf\9cwU9%\17\0f\n\06\04\02\00\ff\fd\fb\f6\ed\df\cb\b3\98|bK7(\1d\15\0f\00\ff\fe\fd\f7\dc\a2jC*\1c\12\0c\t\06\04\03\02")
 (data (i32.const 25728) "\f1\be\b2\84WJ)\0e\00\df\c1\9d\8cj9\'\12")
 (data (i32.const 25760) "\80\00\d6*\00\eb\80\15\00\f4\b8H\0b\00\f8\d6\80*\07\00\f8\e1\aaP\19\05\00\fb\ec\c6~6\12\03\00\fa\ee\d3\9fR#\0f\05\00\fa\e7\cb\a8\80X5\19\06\00\fc\ee\d8\b9\94lG(\12\04\00\fd\f3\e1\c7\a6\80Z9\1f\0d\03\00\fe\f6\e9\d4\b7\93mI,\17\n\02\00\ff\fa\f0\df\c6\a6\80Z:!\10\06\01\00\ff\fb\f4\e7\d2\b5\92nK.\19\0c\05\01\00\ff\fd\f8\ee\dd\c4\a4\80\\<#\12\08\03\01\00\ff\fd\f9\f2\e5\d0\b4\92nL0\1b\0e\07\03\01")
 (data (i32.const 25920) "\81\00\cf2\00\ec\81\14\00\f5\b9H\n\00\f9\d5\81*\06\00\fa\e2\a9W\1b\04\00\fb\e9\c2\82>\14\04\00\fa\ec\cf\a0c/\11\03\00\ff\f0\d9\b6\83Q)\0b\01\00\ff\fe\e9\c9\9fk=\14\02\01\00\ff\f9\e9\ce\aa\80V2\17\07\01\00\ff\fa\ee\d9\ba\94lF\'\12\06\01\00\ff\fc\f3\e2\c8\a6\80Z8\1e\0d\04\01\00\ff\fc\f5\e7\d1\b4\92nL/\19\0b\04\01\00\ff\fd\f8\ed\db\c2\a3\80]>%\13\08\03\01\00\ff\fe\fa\f1\e2\cd\b1\91oO3\1e\0f\06\02\01")
 (data (i32.const 26080) "\81\00\cb6\00\ea\81\17\00\f5\b8I\n\00\fa\d7\81)\05\00\fc\e8\adV\18\03\00\fd\f0\c8\818\0f\02\00\fd\f4\d9\a4^&\n\01\00\fd\f5\e2\bd\84G\1b\07\01\00\fd\f6\e7\cb\9fi8\17\06\01\00\ff\f8\eb\d5\b3\85U/\13\05\01\00\ff\fe\f3\dd\c2\9fuF%\0c\02\01\00\ff\fe\f8\ea\d0\ab\80U0\16\08\02\01\00\ff\fe\fa\f0\dc\bd\95kC$\10\06\02\01\00\ff\fe\fb\f3\e3\c9\a6\80Z7\1d\0d\05\02\01\00\ff\fe\fc\f6\ea\d5\b7\93mI+\16\n\04\02\01")
 (data (i32.const 26240) "\82\00\c8:\00\e7\82\1a\00\f4\b8L\0c\00\f9\d6\82+\06\00\fc\e8\adW\18\03\00\fd\f1\cb\838\0e\02\00\fe\f6\dd\a7^#\08\01\00\fe\f9\e8\c1\82A\17\05\01\00\ff\fb\ef\d3\a2c-\0f\04\01\00\ff\fb\f3\df\ba\83J!\0b\03\01\00\ff\fc\f5\e6\ca\9ei9\18\08\02\01\00\ff\fd\f7\eb\d6\b3\84T,\13\07\02\01\00\ff\fe\fa\f0\df\c4\9fpE$\0f\06\02\01\00\ff\fe\fd\f5\e7\d1\b0\88]7\1b\0b\03\02\01\00\ff\fe\fd\fc\ef\dd\c2\9euL*\12\04\03\02\01")
 (data (i32.const 26402) "\02\05\t\0e\14\1b#,6AMZhw\87")
 (data (i32.const 26432) "\fe1CMR]c\c6\0b\12\18\1f$-\ff.BNW^h\d0\0e\15 *3B\ff^hmpsv\f85EPX_f\00\00\00\00\00\00\00 \fe\1f\f6\1f\ea\1f\d8\1f\c2\1f\a8\1f\88\1fb\1f:\1f\n\1f\d8\1e\a0\1eb\1e\"\1e\dc\1d\90\1dB\1d\ee\1c\96\1c:\1c\d8\1br\1b\n\1b\9c\1a*\1a\b4\19:\19\bc\18<\18\b6\17.\17\a0\16\10\16~\15\e8\14N\14\b0\13\10\13n\12\c8\11\1e\11t\10\c6\0f\16\0fd\0e\ae\0d\f8\0c@\0c\84\0b\c8\n\n\nJ\t\8a\08\c6\07\02\07>\06x\05\b2\04\ea\03\"\03Z\02\92\01\ca\00\00\006\ffn\fe\a6\fd\de\fc\16\fcN\fb\88\fa\c2\f9\fe\f8:\f8v\f7\b6\f6\f6\f58\f5|\f4\c0\f3\08\f3R\f2\9c\f1\ea\f0:\f0\8c\ef\e2\ee8\ee\92\ed\f0\ecP\ec\b2\eb\18\eb\82\ea\f0\e9`\e9\d2\e8J\e8\c4\e7D\e7\c6\e6L\e6\d6\e5d\e5\f6\e4\8e\e4(\e4\c6\e3j\e3\12\e3\be\e2p\e2$\e2\de\e1\9e\e1`\e1(\e1\f6\e0\c6\e0\9e\e0x\e0X\e0>\e0(\e0\16\e0\n\e0\02\e0\00\e0")
 (data (i32.const 26753) "\0f\08\07\04\0b\0c\03\02\0d\n\05\06\t\0e\01\00\00\01\ff\01\ff\02\fe\02\fe\03\fd\00\01\00\01\ff\02\ff\02\fe\03\fe\03")
 (data (i32.const 26801) "\02\ff\ff\ff\00\00\01\01\00\01\00\01\00\00\00\00\00\01\00\00\00\00\00\01\00\00\00\01\00\00\00\00\00\ff\02\01\00\01\01\00\00\ff\ff\00\00\00\00\00\00\01\ff\00\01\ff\00\ff\01\fe\02\fe\fe\02\fd\02\03\fd\fc\03\fc\04\04\fb\05\fa\fb\06\f9\06\05\08\f7\00\00\01\00\00\00\00\00\00\00\ff\01\00\00\01\ff\00\01\ff\ff\01\ff\02\01\ff\02\fe\fe\02\fe\02\02\03\fd\00\01\00\00\00\00\00\00\01\00\01\00\00\01\ff\01\00\00\02\01\ff\02\ff\ff\02\ff\02\02\ff\03\fe\fe\fe\03\00\01\00\00\01\00\01\ff\02\ff\02\ff\02\03\fe\03\fe\fe\04\04\fd\05\fd\fc\06\fc\06\05\fb\08\fa\fb\f9\t\00\00\00\00\00\00\00\00*\af\d5\c9\cf\ff@\00\11\00c\ffa\01\10\fe\a3\00\'+\bdV\d9\ff\06\00[\00V\ff\ba\00\17\00\80\fc\c0\18\d8M\ed\ff\dc\fff\00\a7\ff\e8\ffH\01I\fc\08\n%>\00\00\00\00\00\00\87\c7=\c9@\00\80\00\86\ff$\006\01\00\fdH\023$EE\0c\00\80\00\12\00r\ff \01\8b\ff\9f\fc\1b\10{8\00\00\00\00\00\00\00\00h\02\0d\c8\f6\ff\'\00:\00\d2\ff\ac\ffx\00\b8\00\c5\fe\e3\fd\04\05\04\15@#\00\00\00\00\e6>\c6\c4\f3\ff\00\00\14\00\1a\00\05\00\e1\ff\d5\ff\fc\ffA\00Z\00\07\00c\ff\08\ff\d4\ffQ\02/\064\n\c7\0c\00\00\00\00\00\00\00\00\e4W\05\c5\03\00\f2\ff\ec\ff\f1\ff\02\00\19\00%\00\19\00\f0\ff\b9\ff\95\ff\b1\ff2\00$\01o\02\d6\03\08\05\b8\05\00\00\00\00\00\00\00\00\94kg\c4\11\00\0c\00\08\00\01\00\f6\ff\ea\ff\e2\ff\e0\ff\ea\ff\03\00,\00d\00\a8\00\f3\00=\01}\01\ad\01\c7\01\00\00\00\00\00\00\00\00\bd\00\a8\fdi\02gwu\00a\ff\d2\fb\08t4\00\dd\00\a8\f6tn\fc\ff\11\02\ea\f2\e5f\d0\ff\f6\02\8c\f0\a5]\b0\ff\89\03u\ef\06S\9d\ff\cc\03\82\effG\95\ff\c7\03\8b\f0\';\99\ff\80\03a\f2\ae.\a5\ff\05\03\cf\f4^\"\b9\ffc\02\a1\f7\98\16\d2\ff\a9\01\a1\fa\b4\0b\08\00\00\00\04\00\00\00\e1zT?\f6(\\?\ac\90\00\00\10\00\00\00\04\00\00\00\9a\99Y?\aeGa?\ac\90\00\00 \00\00\00\04\00\00\00\c1\caa?\c3\f5h?\ac\90\00\000\00\00\00\08\00\00\00\b8\1ee?\83\c0j?\b4\90\00\00@\00\00\00\08\00\00\00\a8\c6k?\d7\a3p?\b4\90\00\00P\00\00\00\10\00\00\001\08l?\d7\a3p?\bc\90\00\00`\00\00\00\10\00\00\00\d7\a3p?\85\ebq?\bc\90\00\00\80\00\00\00\10\00\00\0033s?33s?\bc\90\00\00\a0\00\00\00\10\00\00\00\8f\c2u?\8f\c2u?\bc\90\00\00\c0\00\00\00 \00\00\00\d9\cew?\d9\cew?\c4\90\00\00\00\01\00\00 \00\00\00\9a\99y?\9a\99y?\c4\90\00\00\00\00\00\00\c8Q\0c\d2\84\f4\ef?\00\00\00\00\00\00\f0?\c8Q\0c\d2\84\f4\ef?\f6\95\07\e9)\d2\ef?\da\d3\c4\f12\99\ef?\d4\fd\10\d9\0fJ\ef?~\9f\bbn[\e5\ee?a\c1?\9d\d9k\ee?\1d\d7\f1%u\de\ed?j\7fo\ec<>\ed?\c9\ea5\c1`\8c\ec?w$E\01.\ca\eb?\1e\bc~\da\0b\f9\ea?:\d0\bf4w\1a\ea?\f5%#\80\fe/\e9?\f2@C\83=;\e8?\0e\07S\de\d8=\e7?\f7\f2\af\a3y9\e6?L\c8\c5 \c9/\e5?\ce\b8x\91l\"\e4?\ff\99Z\19\01\13\e3?/\9c1\ed\17\03\e2?c\d9\06\cd2\f4\e0?MZ\86r\81\cf\df?\cd\8fd\fb5\be\dd?\15\c67\90\05\b7\db?\e0\07\ad\a8=\bc\d9?`3\n\93\f3\cf\d7?\f3\1d\fc\c4\01\f4\d5?J\85g\f8\05*\d4?\e7\cd<\14`s\d2?\8d\ca472\d1\d0?\d8\d1z\f0\c1\88\ce?\af\'x\12*\9b\cb?\c8H\93\dey\da\c8?\b5\cf[#\1fG\c6?=WB\14\1f\e1\c3?\b5\cd\01@\1d\a8\c1?M\ba\90\bb\c66\bf?.\0c&8\d4s\bb?f\92\05\n\c4\04\b8?\80T\16\c7y\e6\b4?bHN&n\15\b2?\a4\15\84\97\85\1b\af?\ec\b2\eb \a7\96\aa?\97\a8AE\93\93\a6?>x/\efX\t\a3?\d5\e7\acG\c8\dd\9f?l\cfM\179v\9a?\f4\f1\d8\e8\ff\c9\95?\0f\0b\b5\a6y\c7\91?U\17l\fa\1e\bb\8c?\fe\a4\b1(\b2\f7\86?<\b7\96\ea~%\82?\a5\fb\b5\ccTN|?g\1fTw\9f\c2u?\05\c4\7f\15;up?t\7f\b3\9c\9doh?\d3\f0\f3\00\92\c0a?\f7R\db\fa\a7#Y??\c1\ac\edy@Q?\f1B\00\91\fa\c2F?{\b2\cdS>\80<?&Q\92\"\f0\8f0?\c7Tn`z\14!?}\89\7f7 \ab\0b?\f1h\e3\88\b5\f8\e4>\00\00\00\00\00\00\00\00\b9\a6\a3\90\"\da\ef?\00\00\00\00\00\00\f0?\b9\a6\a3\90\"\da\ef?\85\0b\16\da{i\ef?DF\cdx\d7\b0\ee?&S\c3\86\c0\b4\ed?3\da.]V{\ec?\a9\ce\179\13\0c\eb?\a9\eaq!\87o\e9?r\e6\91\1e\n\af\e7?\d6\d1i\c4i\d4\e5?\c0\a7\a4\14\95\e9\e3?9\a0\00\e5J\f8\e1?\ea\83\1b\df\cd\t\e0?Uj\d52BM\dc?C]\de\fb\9f\ac\d8?\0fZ\f6\c1\85>\d5?\1f\05\db\caC\0d\d2?\a0g7#\18A\ce?\8c\8bz\f3\e1\fa\c8?\f0\aeH\86\fbL\c4?t\e3\'\1f\cc7\c0?\eea\8a\cd\"o\b9?;NU\ca\00\8a\b3?\e8a.\ca\e8W\ad?$3\cd*\"y\a5?\bbim\f9\cc\82\9e?\",to\8f\ef\94?>\11\dd\16\d9\8c\8b?]\c2_\9b\a62\81?P\08\b2\d8\05\07t?\81\c8*\be\04\1be?\dc\ee\ab\93\af\dbR?\1b\ca\9a\a2mF7?")
 (data (i32.const 28432) "\c1SL\ce\1e\e2\ef?\00\00\00\00\00\00\f0?\c1SL\ce\1e\e2\ef?\cfB\c8\9a\0d\89\ef?\0cm\e7\98\7f\f6\ee?\88\12-y<-\ee?\9aM\f4\b7\0c1\ed?\b5\b0\c0\ba\9e\06\ec?\cc\99\0e\19f\b3\ea?\dcy,\c7u=\e9?Q\ab\"\bbV\ab\e7?\956\c9M\dc\03\e6?u\ab\e7\a4\f7M\e4?w\00\9b\de\8b\90\e2?\13\81\ea\1fD\d2\e0?\c6\00\c3\d1\d92\de?S>\04U\a3\d7\da?\d9\08a\c1?\9d\d7?\a8j\06\e1\9f\8c\d4?n$}\18)\ad\d1?Z\efy\f6C\t\ce?\1b\00`+W.\c9?Q\96k\1b\90\ce\c4?\8b\ecZ\ad\d9\eb\c0?\e9\d6)^~\n\bb?\df\17\fa\d4o.\b5?\06\0d\81L\008\b0?\ca\bdD\e5\f4/\a8?\a6\15\f8\ed\98x\a1?K\f5S\d2yC\98?\94\cf\9f\f4\8d\01\90?\00n7=\ff\a8\83?\dei\19F\cd\99u?\e0\85\8c\cb\e1(c?\fc\a9\f1\d2Mb@?\00\00\00\00\00\00\00\00%\91\e0\ba \ea\ef?\00\00\00\00\00\00\f0?%\91\e0\ba \ea\ef?\deK+\cf\cd\a8\ef?Z\1f\ff\9a\e6<\ef?U\cf\17\b5\da\a7\ee?\be\a0d\f6\a2\eb\ed?\d7\90n:\b8\n\ed?\8b\e8\cfe\07\08\ec?\b5\deo\b4\e3\e6\ea?X\00t\14\f7\aa\e9?\"rU41X\e8?P\c5\aei\b5\f2\e6?X\e4\b6\01\c8~\e5?\94E\'l\bb\00\e4?G+JK\dd|\e2?\a9\a3\e3jd\f7\e0?\aa\a9\97\a5\be\e8\de?\16\c4z\82H\ef\db?Kf\cc\8f\85\t\d9??\e9\e1W\ee=\d6?\c2jn}?\92\d3?\a0\be\a7ji\0b\d1?+r_9\08[\cd?\'\99b/\90\f7\c8?\a1\07\ca\af\17\f1\c4?\cab\ac\80\8cJ\c1?\"\c5\belT\n\bc?a\85\00\85\1fA\b6?\8f\dep\1f\b95\b1?C\84\c9\9eN\c3\a9?!{{\df\11x\a2?\f3G(\e8\bc\e7\98?Y\ed\0e\e7\e9u\8e?!\02\0e\a1J\cd~?\00\00\00\00\00\00\00\00\de\12\04\95\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 29040) "\02\00\00\c0\03\00\00\c0\04\00\00\c0\05\00\00\c0\06\00\00\c0\07\00\00\c0\08\00\00\c0\t\00\00\c0\n\00\00\c0\0b\00\00\c0\0c\00\00\c0\0d\00\00\c0\0e\00\00\c0\0f\00\00\c0\10\00\00\c0\11\00\00\c0\12\00\00\c0\13\00\00\c0\14\00\00\c0\15\00\00\c0\16\00\00\c0\17\00\00\c0\18\00\00\c0\19\00\00\c0\1a\00\00\c0\1b\00\00\c0\1c\00\00\c0\1d\00\00\c0\1e\00\00\c0\1f\00\00\c0\00\00\00\b3\01\00\00\c3\02\00\00\c3\03\00\00\c3\04\00\00\c3\05\00\00\c3\06\00\00\c3\07\00\00\c3\08\00\00\c3\t\00\00\c3\n\00\00\c3\0b\00\00\c3\0c\00\00\c3\0d\00\00\d3\0e\00\00\c3\0f\00\00\c3\00\00\0c\bb\01\00\0c\c3\02\00\0c\c3\03\00\0c\c3\04\00\0c\d3")
 (data (i32.const 29764) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00\0b\00\00\00\0c\00\00\00\0d\00\00\00\0e\00\00\00\0f\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00\17\00\00\00\18\00\00\00\19\00\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00\1d\00\00\00\1e\00\00\00\1f\00\00\00 \00\00\00!\00\00\00\"\00\00\00#\00\00\00$\00\00\00%\00\00\00&\00\00\00\'\00\00\00(\00\00\00)\00\00\00*\00\00\00+\00\00\00,\00\00\00-\00\00\00.\00\00\00/\00\00\000\00\00\001\00\00\002\00\00\003\00\00\004\00\00\005\00\00\006\00\00\007\00\00\008\00\00\009\00\00\00:\00\00\00;\00\00\00<\00\00\00=\00\00\00>\00\00\00?\00\00\00@\00\00\00a\00\00\00b\00\00\00c\00\00\00d\00\00\00e\00\00\00f\00\00\00g\00\00\00h\00\00\00i\00\00\00j\00\00\00k\00\00\00l\00\00\00m\00\00\00n\00\00\00o\00\00\00p\00\00\00q\00\00\00r\00\00\00s\00\00\00t\00\00\00u\00\00\00v\00\00\00w\00\00\00x\00\00\00y\00\00\00z\00\00\00[\00\00\00\\\00\00\00]\00\00\00^\00\00\00_\00\00\00`\00\00\00a\00\00\00b\00\00\00c\00\00\00d\00\00\00e\00\00\00f\00\00\00g\00\00\00h\00\00\00i\00\00\00j\00\00\00k\00\00\00l\00\00\00m\00\00\00n\00\00\00o\00\00\00p\00\00\00q\00\00\00r\00\00\00s\00\00\00t\00\00\00u\00\00\00v\00\00\00w\00\00\00x\00\00\00y\00\00\00z\00\00\00{\00\00\00|\00\00\00}\00\00\00~\00\00\00\7f")
 (data (i32.const 31040) "\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\03 \02 \02 \02 \02 \02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\01`\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\08\d8\08\d8\08\d8\08\d8\08\d8\08\d8\08\d8\08\d8\08\d8\08\d8\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\08\d5\08\d5\08\d5\08\d5\08\d5\08\d5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\08\d6\08\d6\08\d6\08\d6\08\d6\08\d6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\04\c0\04\c0\04\c0\04\c0\02")
 (data (i32.const 32068) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00\0b\00\00\00\0c\00\00\00\0d\00\00\00\0e\00\00\00\0f\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00\17\00\00\00\18\00\00\00\19\00\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00\1d\00\00\00\1e\00\00\00\1f`\00\00\00A\00\00\00B\00\00\00C\00\00\00D\00\00\00E\00\00\00F\00\00\00G\00\00\00H\00\00\00I\00\00\00J\00\00\00K\00\00\00L\00\00\00M\00\00\00N\00\00\00O\00\00\00P\00\00\00Q\00\00\00R\00\00\00S\00\00\00T\00\00\00U\00\00\00V\00\00\00W\00\00\00X\00\00\00Y\00\00\00Z\00\00\00{\00\00\00|\00\00\00}\00\00\00~\00\00\00\7f")
 (data (i32.const 33088) "\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 33392) "\11\00\n\00\11\11\11\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\11\00\0f\n\11\11\11\03\n\07\00\01\00\t\0b\0b\00\00\t\06\0b\00\00\0b\00\06\11\00\00\00\11\11\11")
 (data (i32.const 33473) "\0b\00\00\00\00\00\00\00\00\11\00\n\n\11\11\11\00\n\00\00\02\00\t\0b\00\00\00\t\00\0b\00\00\0b")
 (data (i32.const 33531) "\0c")
 (data (i32.const 33543) "\0c\00\00\00\00\0c\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c")
 (data (i32.const 33589) "\0e")
 (data (i32.const 33601) "\0d\00\00\00\04\0d\00\00\00\00\t\0e\00\00\00\00\00\0e\00\00\0e")
 (data (i32.const 33647) "\10")
 (data (i32.const 33659) "\0f\00\00\00\00\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\12\00\00\00\12\12\12")
 (data (i32.const 33714) "\12\00\00\00\12\12\12\00\00\00\00\00\00\t")
 (data (i32.const 33763) "\0b")
 (data (i32.const 33775) "\n\00\00\00\00\n\00\00\00\00\t\0b\00\00\00\00\00\0b\00\00\0b")
 (data (i32.const 33821) "\0c")
 (data (i32.const 33833) "\0c\00\00\00\00\0c\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\000123456789ABCDEFLC_CTYPE\00\00\00\00LC_NUMERIC\00\00LC_TIME\00\00\00\00\00LC_COLLATE\00\00LC_MONETARY\00LC_MESSAGES")
 (data (i32.const 33952) "\03\00\00\00\04\00\00\00\04\00\00\00\06\00\00\00\83\f9\a2\00DNn\00\fc)\15\00\d1W\'\00\dd4\f5\00b\db\c0\00<\99\95\00A\90C\00cQ\fe\00\bb\de\ab\00\b7a\c5\00:n$\00\d2MB\00I\06\e0\00\t\ea.\00\1c\92\d1\00\eb\1d\fe\00)\b1\1c\00\e8>\a7\00\f55\82\00D\bb.\00\9c\e9\84\00\b4&p\00A~_\00\d6\919\00S\839\00\9c\f49\00\8b_\84\00(\f9\bd\00\f8\1f;\00\de\ff\97\00\0f\98\05\00\11/\ef\00\nZ\8b\00m\1fm\00\cf~6\00\t\cb\'\00FO\b7\00\9ef?\00-\ea_\00\ba\'u\00\e5\eb\c7\00={\f1\00\f79\07\00\92R\8a\00\fbk\ea\00\1f\b1_\00\08]\8d\000\03V\00{\fcF\00\f0\abk\00 \bc\cf\006\f4\9a\00\e3\a9\1d\00^a\91\00\08\1b\e6\00\85\99e\00\a0\14_\00\8d@h\00\80\d8\ff\00\'sM\00\06\061\00\caV\15\00\c9\a8s\00{\e2`\00k\8c\c0")
 (data (i32.const 34243) "@\fb!\f9?\00\00\00\00-Dt>\00\00\00\80\98F\f8<\00\00\00`Q\ccx;\00\00\00\80\83\1b\f09\00\00\00@ %z8\00\00\00\80\"\82\e36\00\00\00\00\1d\f3i5\00\00\00\00\00\00\e0?\00\00\00\00\00\00\e0\bf0123456789abcdefABCDEFxX+-pPiInN")
 (data (i32.const 34368) "%\00\00\00m\00\00\00/\00\00\00%\00\00\00d\00\00\00/\00\00\00%\00\00\00y\00\00\00%\00\00\00Y\00\00\00-\00\00\00%\00\00\00m\00\00\00-\00\00\00%\00\00\00d\00\00\00%\00\00\00I\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00 \00\00\00%\00\00\00p\00\00\00\00\00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M")
 (data (i32.const 34512) "%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00\05")
 (data (i32.const 34588) "\01")
 (data (i32.const 34612) "\01\00\00\00\01\00\00\00$\d8")
 (data (i32.const 34636) "\02")
 (data (i32.const 34651) "\ff\ff\ff\ff\ff")
 (data (i32.const 34720) "\t")
 (data (i32.const 34732) "\01")
 (data (i32.const 34752) "\02\00\00\00\00\00\00\00\01\00\00\00X\c1\00\00\00\04")
 (data (i32.const 34796) "\ff\ff\ff\ff")
 (data (i32.const 34864) "\05")
 (data (i32.const 34876) "\02")
 (data (i32.const 34900) "\01\00\00\00\02\00\00\00h\c5\00\00\00\04")
 (data (i32.const 34924) "\01")
 (data (i32.const 34939) "\n\ff\ff\ff\ff")
 (data (i32.const 35044) "\03")
 (data (i32.const 35083) "\ff\ff\ff\ff\ff")
 (data (i32.const 35152) "\14\92\00\00\t\b6\00\00`\89\00\00\00\00\00\00\14\92\00\00\db\b5\00\00p\89\00\00\00\00\00\00<\92\00\00\fc\b5\00\00\14\92\00\00+\b6\00\00P\89\00\00\00\00\00\00\14\92\00\00P\b6\00\00P\89\00\00\00\00\00\00\14\92\00\00\be\b6\00\00\a8\89\00\00\00\00\00\00<\92\00\00\ac\b6\00\00\14\92\00\00\e8\b6\00\00\a8\89\00\00\00\00\00\00<\92\00\00\12\b7\00\00<\92\00\00C\b7\00\00d\92\00\00t\b7\00\00\00\00\00\00\01\00\00\00\98\89\00\00\03\f4\ff\ffd\92\00\00\a3\b7\00\00\00\00\00\00\01\00\00\00\b0\89\00\00\03\f4\ff\ffd\92\00\00\d2\b7\00\00\00\00\00\00\01\00\00\00\98\89\00\00\03\f4\ff\ffd\92\00\00\01\b8\00\00\00\00\00\00\01\00\00\00\b0\89\00\00\03\f4\ff\ff\14\92\00\000\b8\00\00\c8\89\00\00\00\00\00\00\14\92\00\00I\b8\00\00\c0\89\00\00\00\00\00\00\14\92\00\00\88\b8\00\00\c8\89\00\00\00\00\00\00\14\92\00\00\a0\b8\00\00\c0\89\00\00\00\00\00\00\14\92\00\00\b8\b8\00\00\80\8a\00\00\00\00\00\00\14\92\00\00\cc\b8\00\00\d0\8e\00\00\00\00\00\00\14\92\00\00\e2\b8\00\00\80\8a\00\00\00\00\00\00d\92\00\00\fb\b8\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\c0\8a\00\00\00\00\00\00d\92\00\00?\b9\00\00\00\00\00\00\01\00\00\00\d8\8a\00\00\00\00\00\00<\92\00\00U\b9\00\00d\92\00\00n\b9\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\00\8b\00\00\00\00\00\00d\92\00\00\b2\b9\00\00\00\00\00\00\01\00\00\00\d8\8a\00\00\00\00\00\00d\92\00\00\db\b9\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\008\8b\00\00\00\00\00\00d\92\00\00\1f\ba\00\00\00\00\00\00\01\00\00\00P\8b\00\00\00\00\00\00<\92\00\005\ba\00\00d\92\00\00N\ba\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00x\8b\00\00\00\00\00\00d\92\00\00\92\ba\00\00\00\00\00\00\01\00\00\00P\8b\00\00\00\00\00\00d\92\00\00\e8\bb\00\00\00\00\00\00\03\00\00\00\80\8a\00\00\02\00\00\00\b8\8b\00\00\02\00\00\00\c0\8b\00\00\00\08\00\00<\92\00\00O\bc\00\00<\92\00\00-\bc\00\00d\92\00\00b\bc\00\00\00\00\00\00\03\00\00\00\80\8a\00\00\02\00\00\00\b8\8b\00\00\02\00\00\00\f0\8b\00\00\00\08\00\00<\92\00\00\a7\bc\00\00d\92\00\00\c9\bc\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\18\8c\00\00\00\08\00\00<\92\00\00\0e\bd\00\00d\92\00\00#\bd\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\18\8c\00\00\00\08\00\00d\92\00\00h\bd\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00`\8c\00\00\02\00\00\00<\92\00\00\84\bd\00\00d\92\00\00\99\bd\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00`\8c\00\00\02\00\00\00d\92\00\00\b5\bd\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00`\8c\00\00\02\00\00\00d\92\00\00\d1\bd\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00`\8c\00\00\02\00\00\00d\92\00\00\fc\bd\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\e8\8c\00\00\00\00\00\00<\92\00\00B\be\00\00d\92\00\00f\be\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\10\8d\00\00\00\00\00\00<\92\00\00\ac\be\00\00d\92\00\00\cb\be\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\008\8d\00\00\00\00\00\00<\92\00\00\11\bf\00\00d\92\00\00*\bf\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00`\8d\00\00\00\00\00\00<\92\00\00p\bf\00\00d\92\00\00\89\bf\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\88\8d\00\00\02\00\00\00<\92\00\00\9e\bf\00\00d\92\00\005\c0\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\88\8d\00\00\02\00\00\00\14\92\00\00\b6\bf\00\00\c0\8d\00\00\00\00\00\00d\92\00\00\d9\bf\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\e0\8d\00\00\02\00\00\00<\92\00\00\fc\bf\00\00\14\92\00\00\13\c0\00\00\c0\8d\00\00\00\00\00\00d\92\00\00J\c0\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\e0\8d\00\00\02\00\00\00d\92\00\00l\c0\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\e0\8d\00\00\02\00\00\00d\92\00\00\8e\c0\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\e0\8d\00\00\02\00\00\00\14\92\00\00\b1\c0\00\00\80\8a\00\00\00\00\00\00d\92\00\00\c7\c0\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\88\8e\00\00\02\00\00\00<\92\00\00\d9\c0\00\00d\92\00\00\ee\c0\00\00\00\00\00\00\02\00\00\00\80\8a\00\00\02\00\00\00\88\8e\00\00\02\00\00\00\14\92\00\00\0b\c1\00\00\80\8a\00\00\00\00\00\00\14\92\00\00 \c1\00\00\80\8a\00\00\00\00\00\00<\92\00\005\c1\00\00\80\bb\00\00x\00\00\00\15\00\00\00\15\00\00\00\00\9aY?\00\00\00\00\00\00\80?\00\00\80?@\19\00\00\03\00\00\00\08\00\00\00x\00\00\00\0b\00\00\00p\19\00\00`\1a\00\00\90\1a\00\00\80\07\00\00\03\00\00\00D\8f\00\00|\8f\00\00\b4\8f\00\00\ec\8f\00\00p\1c\00\00\88\01\00\00\908\00\00p9\00\00\00;\00\00\e0\01\00\00\87\88\08;\ff\ff\ff\ff\05\00`\00\03\00 \00\04\00\08\00\02\00\04\00\04\00\01")
 (data (i32.const 36721) "N\00\000<\00\00\00\00\00\00\f0\00\00\00\89\88\88;\01\00\00\00\05\000\00\03\00\10\00\04\00\04\00\04\00\01")
 (data (i32.const 36776) " L\00\000<\00\00\00\00\00\00x\00\00\00\88\88\08<\02\00\00\00\05\00\18\00\03\00\08\00\02\00\04\00\04\00\01")
 (data (i32.const 36832) "0K\00\000<\00\00\00\00\00\00<\00\00\00\89\88\88<\03\00\00\00\05\00\0c\00\03\00\04\00\04\00\01")
 (data (i32.const 36888) "\b0;\00\000<\00\00\00\00\00\00\0f\00\00\00\n\00\00\00\05\00\00\00\06\00\00\00\04\00\00\00\03\00\00\00:\ab\00\00\10T\00\00 T\00\00@T\00\00pT\00\00\c0T\00\00 \00\n\00\14.d\01`U\00\00\a0V\00\00 Y\00\00`Y\00\00\80Y\00\00 Z\00\00pZ\00\00\c0Z\00\00 \00\10\00f&\ab\01\e0Z\00\00\e0\\\00\00\e0`\00\00 a\00\00@a\00\00@b\00\00\90b\00\00\e0b\00\00D\ab\00\00G\ab\00\000p\00\00 \00\00\00\10o\00\00 \00\00\00\f0m\00\00 \00\00\00\d0k\00\00@\00\00\00Pq\00\00\14\00\00\00C.UTF-8")
 (data (i32.const 37096) "\cc\90")
 (data (i32.const 37120) "\10\87\00\00\a0\87\00\000\88\00\000\88\00\00@t")
 (data (i32.const 37316) "(\d0")
 (data (i32.const 37372) "@y\00\00@}\00\00_p\89\00\ff\t/\0f\00\00\00\00x\89\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00P\89\00\00\01\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\88\89\00\00\01\00\00\00\06\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\00\00\00\00\a8\89\00\00\07\00\00\00\08\00\00\00\00\00\00\00\c0\89\00\00\t\00\00\00\n\00\00\00\01\00\00\00\05\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\06\00\00\00\05\00\00\00\06\00\00\00\01\00\00\00\07\00\00\00\02\00\00\00\00\00\00\00\c8\89\00\00\0b\00\00\00\0c\00\00\00\02\00\00\00\08\00\00\00\02\00\00\00\05\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\t\00\00\00\n\00\00\00\03\00\00\00\n\00\00\00\04\00\00\00\08\00\00\00\00\00\00\00\d0\89\00\00\0d\00\00\00\0e\00\00\00\f8\ff\ff\ff\f8\ff\ff\ff\d0\89\00\00\0f\00\00\00\10\00\00\00 \93\00\004\93\00\00\08\00\00\00\00\00\00\00\e8\89\00\00\11\00\00\00\12\00\00\00\f8\ff\ff\ff\f8\ff\ff\ff\e8\89\00\00\13\00\00\00\14\00\00\00P\93\00\00d\93\00\00\04\00\00\00\00\00\00\00\00\8a\00\00\15\00\00\00\16\00\00\00\fc\ff\ff\ff\fc\ff\ff\ff\00\8a\00\00\17\00\00\00\18\00\00\00\80\93\00\00\94\93\00\00\04\00\00\00\00\00\00\00\18\8a\00\00\19\00\00\00\1a\00\00\00\fc\ff\ff\ff\fc\ff\ff\ff\18\8a\00\00\1b\00\00\00\1c\00\00\00\b0\93\00\00\c4\93\00\00\00\00\00\000\8a\00\00\0b\00\00\00\1d\00\00\00\03\00\00\00\08\00\00\00\02\00\00\00\05\00\00\00\0b\00\00\00\08\00\00\00\t\00\00\00\t\00\00\00\n\00\00\00\03\00\00\00\0b\00\00\00\05\00\00\00\00\00\00\00@\8a\00\00\t\00\00\00\1e\00\00\00\04\00\00\00\05\00\00\00\01\00\00\00\04\00\00\00\0c\00\00\00\04\00\00\00\06\00\00\00\05\00\00\00\06\00\00\00\01\00\00\00\0c\00\00\00\06\00\00\00\00\00\00\00P\8a\00\00\0b\00\00\00\1f\00\00\00\05\00\00\00\08\00\00\00\02\00\00\00\05\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\0d\00\00\00\0e\00\00\00\07\00\00\00\n\00\00\00\04\00\00\00\00\00\00\00`\8a\00\00\t\00\00\00 \00\00\00\06\00\00\00\05\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\06\00\00\00\0f\00\00\00\10\00\00\00\08\00\00\00\07\00\00\00\02\00\00\00\00\00\00\00p\8a\00\00!\00\00\00\"\00\00\00#\00\00\00\01\00\00\00\06\00\00\00\0d\00\00\00\00\00\00\00\90\8a\00\00$\00\00\00%\00\00\00#\00\00\00\02\00\00\00\07\00\00\00\0e\00\00\00\00\00\00\00\a0\8a\00\00&\00\00\00\'\00\00\00#\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00\0b\00\00\00\00\00\00\00\e0\8a\00\00(\00\00\00)\00\00\00#\00\00\00\0c\00\00\00\0d\00\00\00\0e\00\00\00\0f\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00\00\00\00\00\18\8b\00\00*\00\00\00+\00\00\00#\00\00\00\03\00\00\00\04\00\00\00\01\00\00\00\05\00\00\00\02\00\00\00\01\00\00\00\02\00\00\00\06\00\00\00\00\00\00\00X\8b\00\00,\00\00\00-\00\00\00#\00\00\00\07\00\00\00\08\00\00\00\03\00\00\00\t\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\n\00\00\00\00\00\00\00\90\8b\00\00.\00\00\00/\00\00\00#\00\00\00\11\00\00\00\17\00\00\00\18\00\00\00\19\00\00\00\1a\00\00\00\1b\00\00\00\01\00\00\00\f8\ff\ff\ff\90\8b\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00\17\00\00\00\18\00\00\00\00\00\00\00\c8\8b\00\000\00\00\001\00\00\00#\00\00\00\19\00\00\00\1c\00\00\00\1d\00\00\00\1e\00\00\00\1f\00\00\00 \00\00\00\02\00\00\00\f8\ff\ff\ff\c8\8b\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00\1d\00\00\00\1e\00\00\00\1f\00\00\00 \00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00\00\00\00\00%\00\00\00m\00\00\00/\00\00\00%\00\00\00d\00\00\00/\00\00\00%\00\00\00y\00\00\00\00\00\00\00%\00\00\00I\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00 \00\00\00%\00\00\00p\00\00\00\00\00\00\00%\00\00\00a\00\00\00 \00\00\00%\00\00\00b\00\00\00 \00\00\00%\00\00\00d\00\00\00 \00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00 \00\00\00%\00\00\00Y\00\00\00\00\00\00\00A\00\00\00M\00\00\00\00\00\00\00P\00\00\00M\00\00\00\00\00\00\00J\00\00\00a\00\00\00n\00\00\00u\00\00\00a\00\00\00r\00\00\00y\00\00\00\00\00\00\00F\00\00\00e\00\00\00b\00\00\00r\00\00\00u\00\00\00a\00\00\00r\00\00\00y\00\00\00\00\00\00\00M\00\00\00a\00\00\00r\00\00\00c\00\00\00h\00\00\00\00\00\00\00A\00\00\00p\00\00\00r\00\00\00i\00\00\00l\00\00\00\00\00\00\00M\00\00\00a\00\00\00y\00\00\00\00\00\00\00J\00\00\00u\00\00\00n\00\00\00e\00\00\00\00\00\00\00J\00\00\00u\00\00\00l\00\00\00y\00\00\00\00\00\00\00A\00\00\00u\00\00\00g\00\00\00u\00\00\00s\00\00\00t\00\00\00\00\00\00\00S\00\00\00e\00\00\00p\00\00\00t\00\00\00e\00\00\00m\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00O\00\00\00c\00\00\00t\00\00\00o\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00N\00\00\00o\00\00\00v\00\00\00e\00\00\00m\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00D\00\00\00e\00\00\00c\00\00\00e\00\00\00m\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00J\00\00\00a\00\00\00n\00\00\00\00\00\00\00F\00\00\00e\00\00\00b\00\00\00\00\00\00\00M\00\00\00a\00\00\00r\00\00\00\00\00\00\00A\00\00\00p\00\00\00r\00\00\00\00\00\00\00J\00\00\00u\00\00\00n\00\00\00\00\00\00\00J\00\00\00u\00\00\00l\00\00\00\00\00\00\00A\00\00\00u\00\00\00g\00\00\00\00\00\00\00S\00\00\00e\00\00\00p\00\00\00\00\00\00\00O\00\00\00c\00\00\00t\00\00\00\00\00\00\00N\00\00\00o\00\00\00v\00\00\00\00\00\00\00D\00\00\00e\00\00\00c\00\00\00\00\00\00\00S\00\00\00u\00\00\00n\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00M\00\00\00o\00\00\00n\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00T\00\00\00u\00\00\00e\00\00\00s\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00W\00\00\00e\00\00\00d\00\00\00n\00\00\00e\00\00\00s\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00T\00\00\00h\00\00\00u\00\00\00r\00\00\00s\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00F\00\00\00r\00\00\00i\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00S\00\00\00a\00\00\00t\00\00\00u\00\00\00r\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00S\00\00\00u\00\00\00n\00\00\00\00\00\00\00M\00\00\00o\00\00\00n\00\00\00\00\00\00\00T\00\00\00u\00\00\00e\00\00\00\00\00\00\00W\00\00\00e\00\00\00d\00\00\00\00\00\00\00T\00\00\00h\00\00\00u\00\00\00\00\00\00\00F\00\00\00r\00\00\00i\00\00\00\00\00\00\00S\00\00\00a\00\00\00t")
 (data (i32.const 39656) "\f8\8b\00\002\00\00\003\00\00\00#\00\00\00\01\00\00\00\00\00\00\00 \8c\00\004\00\00\005\00\00\00#\00\00\00\02\00\00\00\00\00\00\00@\8c\00\006\00\00\007\00\00\00#\00\00\00!\00\00\00\"\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00#\00\00\00\0b\00\00\00\0c\00\00\00\00\00\00\00h\8c\00\008\00\00\009\00\00\00#\00\00\00$\00\00\00%\00\00\00\0d\00\00\00\0e\00\00\00\0f\00\00\00\10\00\00\00&\00\00\00\11\00\00\00\12\00\00\00\00\00\00\00\88\8c\00\00:\00\00\00;\00\00\00#\00\00\00\'\00\00\00(\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00)\00\00\00\17\00\00\00\18\00\00\00\00\00\00\00\a8\8c\00\00<\00\00\00=\00\00\00#\00\00\00*\00\00\00+\00\00\00\19\00\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00,\00\00\00\1d\00\00\00\1e\00\00\00\00\00\00\00\c8\8c\00\00>\00\00\00?\00\00\00#\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00\f0\8c\00\00@\00\00\00A\00\00\00#\00\00\00\05\00\00\00\06\00\00\00\00\00\00\00\18\8d\00\00B\00\00\00C\00\00\00#\00\00\00\01\00\00\00!\00\00\00\00\00\00\00@\8d\00\00D\00\00\00E\00\00\00#\00\00\00\02\00\00\00\"\00\00\00\00\00\00\00h\8d\00\00F\00\00\00G\00\00\00#\00\00\00\0f\00\00\00\04\00\00\00\1f\00\00\00\00\00\00\00\90\8d\00\00H\00\00\00I\00\00\00#\00\00\00\10\00\00\00\05\00\00\00 \00\00\00\00\00\00\00\e8\8d\00\00J\00\00\00K\00\00\00#\00\00\00\03\00\00\00\04\00\00\00\0b\00\00\00-\00\00\00.\00\00\00\0c\00\00\00/\00\00\00\00\00\00\00\b0\8d\00\00J\00\00\00L\00\00\00#\00\00\00\03\00\00\00\04\00\00\00\0b\00\00\00-\00\00\00.\00\00\00\0c\00\00\00/\00\00\00\00\00\00\00\18\8e\00\00M\00\00\00N\00\00\00#\00\00\00\05\00\00\00\06\00\00\00\0d\00\00\000\00\00\001\00\00\00\0e\00\00\002\00\00\00\00\00\00\00X\8e\00\00O\00\00\00P\00\00\00#\00\00\00\00\00\00\00h\8e\00\00Q\00\00\00R\00\00\00#\00\00\00\t\00\00\00\11\00\00\00\n\00\00\00\12\00\00\00\0b\00\00\00\01\00\00\00\13\00\00\00\0f\00\00\00\00\00\00\00\b0\8e\00\00S\00\00\00T\00\00\00#\00\00\003\00\00\004\00\00\00!\00\00\00\"\00\00\00#\00\00\00\00\00\00\00\c0\8e\00\00U\00\00\00V\00\00\00#\00\00\005\00\00\006\00\00\00$\00\00\00%\00\00\00&\00\00\00f\00\00\00a\00\00\00l\00\00\00s\00\00\00e\00\00\00\00\00\00\00t\00\00\00r\00\00\00u\00\00\00e")
 (data (i32.const 40444) "\80\8a\00\00J\00\00\00W\00\00\00#\00\00\00\00\00\00\00\90\8e\00\00J\00\00\00X\00\00\00#\00\00\00\14\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\0c\00\00\00\15\00\00\00\0d\00\00\00\16\00\00\00\0e\00\00\00\05\00\00\00\17\00\00\00\10\00\00\00\00\00\00\00\f8\8d\00\00J\00\00\00Y\00\00\00#\00\00\00\07\00\00\00\08\00\00\00\11\00\00\007\00\00\008\00\00\00\12\00\00\009\00\00\00\00\00\00\008\8e\00\00J\00\00\00Z\00\00\00#\00\00\00\t\00\00\00\n\00\00\00\13\00\00\00:\00\00\00;\00\00\00\14\00\00\00<\00\00\00\00\00\00\00\c0\8d\00\00J\00\00\00[\00\00\00#\00\00\00\03\00\00\00\04\00\00\00\0b\00\00\00-\00\00\00.\00\00\00\0c\00\00\00/\00\00\00\00\00\00\00\c0\8b\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00\17\00\00\00\18\00\00\00\00\00\00\00\f0\8b\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00\1d\00\00\00\1e\00\00\00\1f\00\00\00 \00\00\00\b8~\9ay\9ayff\b8~3sd\00\f0\00 \00d\00\cd<\000\00 assertion failed: start <= end\00celt/bands.c\00assertion failed: N > 0\00assertion failed: stride>0\00assertion failed: itheta>=0\00assertion failed: qn <= 256\00Fatal (internal) error in %s, line %d: %s\n\00celt/celt.c\00assertion failed: st->mode == opus_custom_mode_create(48000, 960, NULL)\00celt/celt_decoder.c\00assertion failed: st->overlap == 120\00assertion failed: st->downsample > 0\00assertion failed: st->start == 0 || st->start == 17\00assertion failed: st->start < st->end\00assertion failed: st->end <= 21\00assertion failed: st->last_pitch_index <= PLC_PITCH_LAG_MAX\00assertion failed: st->last_pitch_index >= PLC_PITCH_LAG_MIN || st->last_pitch_index == 0\00assertion failed: st->postfilter_period < MAX_PERIOD\00assertion failed: st->postfilter_period >= COMBFILTER_MINPERIOD || st->postfilter_period == 0\00assertion failed: st->postfilter_period_old < MAX_PERIOD\00assertion failed: st->postfilter_period_old >= COMBFILTER_MINPERIOD || st->postfilter_period_old == 0\00assertion failed: st->postfilter_tapset <= 2\00assertion failed: st->postfilter_tapset >= 0\00assertion failed: st->postfilter_tapset_old <= 2\00assertion failed: st->postfilter_tapset_old >= 0\00\02\01\00\19\17\02\00~|wmW)\13\t\04\02\00assertion failed: accum==0\00assertion failed: _k>0\00celt/cwrs.c\00assertion failed: _n>=2\00assertion failed: _n>1\00celt/entdec.c\00assertion failed: _ft>1\00celt/entenc.c\00assertion failed: _bits>0\00assertion failed: m==4\00celt/kiss_fft.c\00celt/laplace.c\00assertion failed: fl<32768\00assertion failed: fl<=fm\00assertion failed: fm<IMIN(fl+fs,32768)\00assertion failed: max_pitch>0\00celt/pitch.c\00assertion failed: len>0\00assertion failed: x != y\00celt/celt_lpc.c\00assertion failed: len>=3\00./celt/pitch.h\00assertion failed: (ord&3)==0\00assertion failed: n>0\00assertion failed: overlap>=0\00\02\01\00assertion failed: codedBands > start\00celt/rate.c\00assertion failed: bits[j] >= 0\00assertion failed: ebits[j] >= 0\00assertion failed: C*ebits[j]<<BITRES == bits[j]\00assertion failed: K>0\nalg_quant() needs at least one pulse\00celt/vq.c\00assertion failed: N>1\nalg_quant() needs at least two dimensions\00assertion failed: K>0\nalg_unquant() needs at least one pulse\00assertion failed: N>1\nalg_unquant() needs at least two dimensions\00silk/CNG.c\00assertion failed: start_idx > 0\00silk/decode_core.c\00assertion failed: psDec->LPC_order == 10 || psDec->LPC_order == 16\00assertion failed: L > 0 && L <= MAX_FRAME_LENGTH\00silk/decode_frame.c\00assertion failed: psDec->prevSignalType >= 0 && psDec->prevSignalType <= 2\00assertion failed: psDec->ltp_mem_length >= psDec->frame_length\00assertion failed: psDec->psNLSF_CB->order == psDec->LPC_order\00silk/decode_indices.c\00assertion failed: frame_length == 12 * 10\00silk/decode_pulses.c\00assertion failed: fs_kHz == 8 || fs_kHz == 12 || fs_kHz == 16\00silk/decoder_set_fs.c\00assertion failed: psDec->nb_subfr == MAX_NB_SUBFR || psDec->nb_subfr == MAX_NB_SUBFR/2\00assertion failed: psDec->frame_length > 0 && psDec->frame_length <= MAX_FRAME_LENGTH\00assertion failed: decControl->nChannelsInternal == 1 || decControl->nChannelsInternal == 2\00silk/dec_API.c\00assertion failed: idx > 0\00silk/PLC.c\00assertion failed: psDec->LPC_order >= 10\00\b3c\00G8+\1e\15\0c\06\00@\00\cb\96\00\d7\c3\a6}nR\00x\00\80@\00\e8\9e\n\00\e6\00\f3\dd\c0\b5\00\abU\00\c0\80@\00\cd\9af3\00\d5\ab\80U+\00\e0\c0\a0\80`@ \00d(\10\07\03\01\00\bc\b0\9b\8awaC+\1a\n\00\a5wP=/#\1b\14\0e\t\04\00q?\00assertion failed: nb_subfr == PE_MAX_NB_SUBFR >> 1\00silk/decode_pitch.c\00assertion failed: d >= 6\00silk/LPC_analysis_filter.c\00assertion failed: (d & 1) == 0\00assertion failed: d <= len\00assertion failed: d==10 || d==16\00silk/NLSF2A.c\00\00\t\06\03\04\05\08\01\02\07\00\01\00\00\00\01silk/resampler.c\00\06\00\03\00\07\03\00\01\n\00\02\06\12\n\0c\04\00\02\00\00\00\t\04\07\04\00\03\0c\07\07assertion failed: inLen >= S->Fs_in_kHz\00assertion failed: S->inputDelay <= S->Fs_in_kHz\00silk/resampler_private_down_FIR.c\00silk/sort.c\00assertion failed: L > 0\00assertion failed: st->channels == 1 || st->channels == 2\00src/opus_decoder.c\00assertion failed: st->Fs == 48000 || st->Fs == 24000 || st->Fs == 16000 || st->Fs == 12000 || st->Fs == 8000\00assertion failed: st->DecControl.API_sampleRate == st->Fs\00assertion failed: st->DecControl.internalSampleRate == 0 || st->DecControl.internalSampleRate == 16000 || st->DecControl.internalSampleRate == 12000 || st->DecControl.internalSampleRate == 8000\00assertion failed: st->DecControl.nChannelsAPI == st->channels\00assertion failed: st->DecControl.nChannelsInternal == 0 || st->DecControl.nChannelsInternal == 1 || st->DecControl.nChannelsInternal == 2\00assertion failed: st->DecControl.payloadSize_ms == 0 || st->DecControl.payloadSize_ms == 10 || st->DecControl.payloadSize_ms == 20 || st->DecControl.payloadSize_ms == 40 || st->DecControl.payloadSize_ms == 60\00assertion failed: st->arch >= 0\00assertion failed: st->arch <= OPUS_ARCHMASK\00assertion failed: st->stream_channels == 1 || st->stream_channels == 2\00assertion failed: pcm_count == frame_size\00assertion failed: ret==frame_size-packet_frame_size\00assertion failed: ret==packet_frame_size\00assertion failed: 0\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10012, (((void)((endband) == (opus_int32)0)), (opus_int32)(endband)))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10008, (((void)((st->stream_channels) == (opus_int32)0)), (opus_int32)(st->stream_channels)))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10010, (((void)((0) == (opus_int32)0)), (opus_int32)(0)))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 4031, ((&redundant_rng) + ((&redundant_rng) - (opus_uint32*)(&redundant_rng))))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10010, (((void)((start_band) == (opus_int32)0)), (opus_int32)(start_band)))) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 4028)) == OPUS_OK\00assertion failed: (opus_custom_decoder_ctl(celt_dec, 10015, ((&celt_mode) + ((&celt_mode) - (const OpusCustomMode**)(&celt_mode))))) == OPUS_OK\00infinity\00\00\01\02\04\07\03\06\05\00-+   0X0x\00(null)\00-0X+0X 0X-0x+0x 0x\00inf\00INF\00nan\00NAN\00.\00LC_ALL\00LANG\00C.UTF-8\00POSIX\00MUSL_LOCPATH\00N10__cxxabiv116__shim_type_infoE\00St9type_info\00N10__cxxabiv117__class_type_infoE\00N10__cxxabiv120__si_class_type_infoE\00N10__cxxabiv121__vmi_class_type_infoE\00__cxa_guard_acquire detected recursive initialization\00NSt3__28ios_baseE\00NSt3__29basic_iosIcNS_11char_traitsIcEEEE\00NSt3__29basic_iosIwNS_11char_traitsIwEEEE\00NSt3__215basic_streambufIcNS_11char_traitsIcEEEE\00NSt3__215basic_streambufIwNS_11char_traitsIwEEEE\00NSt3__213basic_istreamIcNS_11char_traitsIcEEEE\00NSt3__213basic_istreamIwNS_11char_traitsIwEEEE\00NSt3__213basic_ostreamIcNS_11char_traitsIcEEEE\00NSt3__213basic_ostreamIwNS_11char_traitsIwEEEE\00NSt3__211__stdoutbufIwEE\00NSt3__211__stdoutbufIcEE\00unsupported locale for standard input\00NSt3__210__stdinbufIwEE\00NSt3__210__stdinbufIcEE\00NSt3__27collateIcEE\00NSt3__26locale5facetE\00NSt3__27collateIwEE\00%p\00C\00NSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE\00NSt3__29__num_getIcEE\00NSt3__214__num_get_baseE\00NSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE\00NSt3__29__num_getIwEE\00%p\00\00\00\00L\00ll\00%\00\00\00\00\00l\00NSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE\00NSt3__29__num_putIcEE\00NSt3__214__num_put_baseE\00NSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE\00NSt3__29__num_putIwEE\00%H:%M:%S\00%m/%d/%y\00%I:%M:%S %p\00%a %b %d %H:%M:%S %Y\00AM\00PM\00January\00February\00March\00April\00May\00June\00July\00August\00September\00October\00November\00December\00Jan\00Feb\00Mar\00Apr\00Jun\00Jul\00Aug\00Sep\00Oct\00Nov\00Dec\00Sunday\00Monday\00Tuesday\00Wednesday\00Thursday\00Friday\00Saturday\00Sun\00Mon\00Tue\00Wed\00Thu\00Fri\00Sat\00%m/%d/%y%Y-%m-%d%I:%M:%S %p%H:%M%H:%M:%S%H:%M:%SNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE\00NSt3__220__time_get_c_storageIcEE\00NSt3__29time_baseE\00NSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE\00NSt3__220__time_get_c_storageIwEE\00NSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE\00NSt3__210__time_putE\00NSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE\00NSt3__210moneypunctIcLb0EEE\00NSt3__210money_baseE\00NSt3__210moneypunctIcLb1EEE\00NSt3__210moneypunctIwLb0EEE\00NSt3__210moneypunctIwLb1EEE\000123456789\00%Lf\00NSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE\00NSt3__211__money_getIcEE\000123456789\00NSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE\00NSt3__211__money_getIwEE\00%.0Lf\00NSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE\00NSt3__211__money_putIcEE\00NSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE\00NSt3__211__money_putIwEE\00NSt3__28messagesIcEE\00NSt3__213messages_baseE\00NSt3__217__widen_from_utf8ILm32EEE\00NSt3__27codecvtIDic11__mbstate_tEE\00NSt3__212codecvt_baseE\00NSt3__216__narrow_to_utf8ILm32EEE\00NSt3__28messagesIwEE\00NSt3__27codecvtIcc11__mbstate_tEE\00NSt3__27codecvtIwc11__mbstate_tEE\00NSt3__27codecvtIDsc11__mbstate_tEE\00NSt3__26locale5__impE\00NSt3__25ctypeIcEE\00NSt3__210ctype_baseE\00NSt3__25ctypeIwEE\00false\00true\00NSt3__28numpunctIcEE\00NSt3__28numpunctIwEE\00NSt3__214__shared_countE")
 (import "env" "table" (table $table 484 484 funcref))
 (elem (global.get $__table_base) $b0 $___stdio_close $___emscripten_stdout_close $___emscripten_stdout_close $___emscripten_stdout_close $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv $___emscripten_stdout_close $___emscripten_stdout_close $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv $__ZNSt3__211__stdoutbufIwE4syncEv $__ZNSt3__211__stdoutbufIwE4syncEv $__ZNSt3__210__stdinbufIwE9underflowEv $__ZNSt3__210__stdinbufIwE5uflowEv $__ZNSt3__210__stdinbufIcE9underflowEv $__ZNSt3__210__stdinbufIcE5uflowEv $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv $__ZNKSt3__220__time_get_c_storageIcE7__weeksEv $__ZNKSt3__220__time_get_c_storageIcE8__monthsEv $__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv $__ZNKSt3__220__time_get_c_storageIcE3__cEv $__ZNKSt3__220__time_get_c_storageIcE3__rEv $__ZNKSt3__220__time_get_c_storageIcE3__xEv $__ZNKSt3__220__time_get_c_storageIcE3__XEv $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv $__ZNKSt3__220__time_get_c_storageIwE7__weeksEv $__ZNKSt3__220__time_get_c_storageIwE8__monthsEv $__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv $__ZNKSt3__220__time_get_c_storageIwE3__cEv $__ZNKSt3__220__time_get_c_storageIwE3__rEv $__ZNKSt3__220__time_get_c_storageIwE3__xEv $__ZNKSt3__220__time_get_c_storageIwE3__XEv $__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv $__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv $___emscripten_stdout_close $__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv $__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv $___emscripten_stdout_close $__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv $__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv $___emscripten_stdout_close $__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv $__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv $___emscripten_stdout_close $___emscripten_stdout_close $___emscripten_stdout_close $__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv $__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv $___emscripten_stdout_close $__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv $__ZNKSt3__28numpunctIcE16do_decimal_pointEv $__ZNKSt3__28numpunctIcE16do_thousands_sepEv $__ZNKSt3__28numpunctIwE16do_decimal_pointEv $__ZNKSt3__28numpunctIwE16do_thousands_sepEv $__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv $__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv $__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv $___emscripten_stdout_close $___emscripten_stdout_close $__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv $b0 $b0 $b0 $b1 $_fmt_fp $b2 $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi $__ZNSt3__211__stdoutbufIwE8overflowEj $__ZNSt3__211__stdoutbufIcE8overflowEi $__ZNSt3__210__stdinbufIwE9pbackfailEj $__ZNSt3__210__stdinbufIcE9pbackfailEi $__ZNKSt3__25ctypeIcE10do_toupperEc $__ZNKSt3__25ctypeIcE10do_tolowerEc $__ZNKSt3__25ctypeIcE8do_widenEc $__ZNKSt3__25ctypeIwE10do_toupperEw $__ZNKSt3__25ctypeIwE10do_tolowerEw $__ZNKSt3__25ctypeIwE8do_widenEc $b2 $b3 $___stdio_write $___stdio_read $_sn_write $__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl $__ZNSt3__211__stdoutbufIwE6xsputnEPKwl $__ZNSt3__211__stdoutbufIcE6xsputnEPKcl $__ZNKSt3__27collateIcE7do_hashEPKcS3_ $__ZNKSt3__27collateIwE7do_hashEPKwS3_ $__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE $__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE $__ZNKSt3__25ctypeIcE10do_toupperEPcPKc $__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc $__ZNKSt3__25ctypeIcE9do_narrowEcc $__ZNKSt3__25ctypeIwE5do_isEtw $__ZNKSt3__25ctypeIwE10do_toupperEPwPKw $__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw $__ZNKSt3__25ctypeIwE9do_narrowEwc $_do_read $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b4 $__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc $__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt $__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_ $__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_ $__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw $b4 $b4 $b5 $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe $b5 $b5 $b5 $b6 $__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_ $__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_ $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv $__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ $__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m $__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ $__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m $__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc $__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc $__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ $__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m $__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ $__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b7 $__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce $__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe $b7 $b8 $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE $__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE $_resampler_basic_direct_double $_resampler_basic_direct_single $_resampler_basic_interpolate_double $_resampler_basic_interpolate_single $_resampler_basic_zero $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b8 $b9 $__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc $__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc $__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe $__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE $__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe $__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE $b9 $b10 $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc $__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_ $__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_ $__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_ $b10 $b10 $b10 $b10 $b10 $b11 $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy $b11 $b11 $b11 $b12 $___stdio_seek $___emscripten_stdout_seek $b12 $b13 $b14 $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $_opus_decoder_destroy $__ZNSt3__28ios_baseD2Ev $__ZNSt3__28ios_baseD0Ev $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev $__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev $__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev $__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev $__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev $__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev $__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev $__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev $__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev $__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev $__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev $__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev $__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZNSt3__26locale5facet16__on_zero_sharedEv $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev $__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev $__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev $__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $__ZN10__cxxabiv116__shim_type_infoD2Ev $_opus_decoder_destroy $_opus_decoder_destroy $__ZNSt3__27codecvtIwc11__mbstate_tED2Ev $__ZNSt3__27codecvtIwc11__mbstate_tED0Ev $__ZNSt3__26locale5__impD2Ev $__ZNSt3__26locale5__impD0Ev $__ZNSt3__25ctypeIcED2Ev $__ZNSt3__25ctypeIcED0Ev $__ZNSt3__28numpunctIcED2Ev $__ZNSt3__28numpunctIcED0Ev $__ZNSt3__28numpunctIwED2Ev $__ZNSt3__28numpunctIwED0Ev $_opus_decoder_destroy $_opus_decoder_destroy $_opus_decoder_destroy $_opus_decoder_destroy $_opus_decoder_destroy $__ZNSt3__26locale2id6__initEv $__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv $__ZN10__cxxabiv116__shim_type_infoD2Ev $_free $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b15 $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE $__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE $__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE $__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE $__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv $__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv $__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv $__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv $__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv $__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv $__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv $__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv $__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv $__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE $__ZNKSt3__28numpunctIcE11do_groupingEv $__ZNKSt3__28numpunctIcE11do_truenameEv $__ZNKSt3__28numpunctIcE12do_falsenameEv $__ZNKSt3__28numpunctIwE11do_groupingEv $__ZNKSt3__28numpunctIwE11do_truenameEv $__ZNKSt3__28numpunctIwE12do_falsenameEv $_pop_arg_long_double $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b15 $b16 $b17 $__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi $__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi $__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj $__ZNKSt3__27collateIcE12do_transformEPKcS3_ $__ZNKSt3__27collateIwE12do_transformEPKwS3_ $b18 $__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib $__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib $__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib $b19 $__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib $__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib $__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib $__ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE $__ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE $b19 $b19 $b20 $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj $b20)
 (import "env" "__table_base" (global $__table_base i32))
 (import "global" "NaN" (global $nan$asm2wasm$import f64))
 (import "global" "Infinity" (global $inf$asm2wasm$import f64))
 (import "env" "abort" (func $abort (param i32)))
 (import "env" "___buildEnvironment" (func $___buildEnvironment (param i32)))
 (import "env" "___map_file" (func $___map_file (param i32 i32) (result i32)))
 (import "env" "___syscall91" (func $___syscall91 (param i32 i32) (result i32)))
 (import "env" "___wasi_fd_close" (func $___wasi_fd_close (param i32) (result i32)))
 (import "env" "___wasi_fd_read" (func $___wasi_fd_read (param i32 i32 i32 i32) (result i32)))
 (import "env" "___wasi_fd_write" (func $___wasi_fd_write (param i32 i32 i32 i32) (result i32)))
 (import "env" "_abort" (func $_abort))
 (import "env" "_emscripten_get_heap_size" (func $_emscripten_get_heap_size (result i32)))
 (import "env" "_emscripten_memcpy_big" (func $_emscripten_memcpy_big (param i32 i32 i32) (result i32)))
 (import "env" "_emscripten_resize_heap" (func $_emscripten_resize_heap (param i32) (result i32)))
 (import "env" "_getenv" (func $_getenv (param i32) (result i32)))
 (import "env" "_llvm_stackrestore" (func $_llvm_stackrestore (param i32)))
 (import "env" "_llvm_stacksave" (func $_llvm_stacksave (result i32)))
 (import "env" "_llvm_trap" (func $_llvm_trap))
 (import "env" "_strftime_l" (func $_strftime_l (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "setTempRet0" (func $setTempRet0 (param i32)))
 (import "env" "___wasi_fd_seek" (func $legalimport$___wasi_fd_seek (param i32 i32 i32 i32 i32) (result i32)))
 (global $STACKTOP (mut i32) (i32.const 56576))
 (export "___errno_location" (func $___errno_location))
 (export "_emscripten_get_sbrk_ptr" (func $_emscripten_get_sbrk_ptr))
 (export "_free" (func $_free))
 (export "_malloc" (func $_malloc))
 (export "_memcpy" (func $_memcpy))
 (export "_memmove" (func $_memmove))
 (export "_memset" (func $_memset))
 (export "_opus_decode_float" (func $_opus_decode_float))
 (export "_opus_decoder_create" (func $_opus_decoder_create))
 (export "_opus_decoder_destroy" (func $_opus_decoder_destroy))
 (export "_speex_resampler_destroy" (func $_speex_resampler_destroy))
 (export "_speex_resampler_init" (func $_speex_resampler_init))
 (export "_speex_resampler_process_interleaved_float" (func $_speex_resampler_process_interleaved_float))
 (export "dynCall_ii" (func $dynCall_ii))
 (export "dynCall_iidiiii" (func $dynCall_iidiiii))
 (export "dynCall_iii" (func $dynCall_iii))
 (export "dynCall_iiii" (func $dynCall_iiii))
 (export "dynCall_iiiii" (func $dynCall_iiiii))
 (export "dynCall_iiiiid" (func $dynCall_iiiiid))
 (export "dynCall_iiiiii" (func $dynCall_iiiiii))
 (export "dynCall_iiiiiid" (func $dynCall_iiiiiid))
 (export "dynCall_iiiiiii" (func $dynCall_iiiiiii))
 (export "dynCall_iiiiiiii" (func $dynCall_iiiiiiii))
 (export "dynCall_iiiiiiiii" (func $dynCall_iiiiiiiii))
 (export "dynCall_iiiiij" (func $legalstub$dynCall_iiiiij))
 (export "dynCall_jiji" (func $legalstub$dynCall_jiji))
 (export "dynCall_v" (func $dynCall_v))
 (export "dynCall_vi" (func $dynCall_vi))
 (export "dynCall_vii" (func $dynCall_vii))
 (export "dynCall_viii" (func $dynCall_viii))
 (export "dynCall_viiii" (func $dynCall_viiii))
 (export "dynCall_viiiii" (func $dynCall_viiiii))
 (export "dynCall_viiiiii" (func $dynCall_viiiiii))
 (export "dynCall_viijii" (func $legalstub$dynCall_viijii))
 (export "globalCtors" (func $globalCtors))
 (export "stackAlloc" (func $stackAlloc))
 (export "stackRestore" (func $stackRestore))
 (export "stackSave" (func $stackSave))
 (func $globalCtors (; has Stack IR ;)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52560)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52560)
    )
    (block
     (call $__ZNSt3__29DoIOSInitC2Ev)
     (call $___cxa_guard_release
      (i32.const 52560)
     )
    )
   )
  )
  (call $___buildEnvironment
   (i32.const 53348)
  )
 )
 (func $_denormalise_bands (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f64)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  ;;@ celt/bands.c:204:0
  (local.set $14
   (i32.load offset=32
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:205:0
  (local.set $0
   (i32.load offset=44
    (local.get $0)
   )
  )
  (local.set $16
   (i32.mul
    (local.get $0)
    (local.get $6)
   )
  )
  ;;@ celt/bands.c:206:0
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $5)
     (i32.const 1)
    )
    (local.get $14)
   )
  )
  (local.set $0
   (i32.load16_s
    (local.get $0)
   )
  )
  (local.set $0
   (i32.mul
    (local.get $0)
    (local.get $6)
   )
  )
  (if
   ;;@ celt/bands.c:207:0
   (i32.ne
    (local.get $7)
    (i32.const 1)
   )
   (block
    ;;@ celt/bands.c:208:0
    (local.set $7
     (i32.div_s
      (local.get $16)
      (local.get $7)
     )
    )
    (local.set $12
     (i32.lt_s
      (local.get $0)
      (local.get $7)
     )
    )
    (local.set $0
     (select
      (local.get $0)
      (local.get $7)
      (local.get $12)
     )
    )
   )
  )
  ;;@ celt/bands.c:209:0
  (local.set $7
   (i32.eqz
    (local.get $8)
   )
  )
  (local.set $17
   (select
    (local.get $0)
    (i32.const 0)
    (local.get $7)
   )
  )
  (local.set $15
   (select
    (local.get $5)
    (i32.const 0)
    (local.get $7)
   )
  )
  (local.set $13
   (select
    (local.get $4)
    (i32.const 0)
    (local.get $7)
   )
  )
  ;;@ celt/bands.c:215:0
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $13)
     (i32.const 1)
    )
    (local.get $14)
   )
  )
  (local.set $5
   (i32.load16_s
    (local.get $0)
   )
  )
  (local.set $4
   (i32.mul
    (local.get $5)
    (local.get $6)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $4)
     (i32.const 2)
    )
    (local.get $1)
   )
  )
  (local.set $1
   (if (result i32)
    ;;@ celt/bands.c:216:0
    (i32.gt_s
     (local.get $4)
     (i32.const 0)
    )
    (block (result i32)
     (local.set $1
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
     )
     ;;@ celt/bands.c:217:0
     (drop
      (call $_memset
       (local.get $2)
       (i32.const 0)
       (local.get $1)
      )
     )
     ;;@ celt/bands.c:216:0
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (local.get $2)
     )
    )
    (local.get $2)
   )
  )
  (if
   ;;@ celt/bands.c:218:0
   (i32.lt_s
    (local.get $13)
    (local.get $15)
   )
   (block
    (local.set $4
     (local.get $13)
    )
    (loop $while-in
     ;;@ celt/bands.c:226:0
     (local.set $5
      (i32.shr_s
       (i32.shl
        (local.get $5)
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (local.set $7
      (i32.mul
       (local.get $5)
       (local.get $6)
      )
     )
     ;;@ celt/bands.c:227:0
     (local.set $8
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.add
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
       (local.get $14)
      )
     )
     (local.set $12
      (i32.load16_s
       (local.get $5)
      )
     )
     (local.set $18
      (i32.mul
       (local.get $6)
       (local.get $12)
      )
     )
     ;;@ celt/bands.c:228:0
     (local.set $5
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (local.get $3)
      )
     )
     (local.set $9
      (f32.load
       (local.get $5)
      )
     )
     (local.set $4
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (i32.const 20928)
      )
     )
     (local.set $10
      (f32.load
       (local.get $4)
      )
     )
     (local.set $9
      (f32.add
       (local.get $9)
       (local.get $10)
      )
     )
     ;;@ celt/bands.c:230:0
     (local.set $4
      (f32.gt
       (local.get $9)
       (f32.const 32)
      )
     )
     (local.set $9
      (select
       (f32.const 32)
       (local.get $9)
       (local.get $4)
      )
     )
     (local.set $11
      (f64.promote_f32
       (local.get $9)
      )
     )
     (local.set $11
      (f64.mul
       (local.get $11)
       (f64.const 0.6931471805599453)
      )
     )
     (local.set $11
      (call $_exp
       (local.get $11)
      )
     )
     (local.set $9
      (f32.demote_f64
       (local.get $11)
      )
     )
     (local.set $4
      (local.get $0)
     )
     (local.set $5
      (local.get $1)
     )
     (loop $while-in1
      ;;@ celt/bands.c:260:0
      (local.set $0
       (i32.add
        (local.get $4)
        (i32.const 4)
       )
      )
      (local.set $10
       (f32.load
        (local.get $4)
       )
      )
      (local.set $10
       (f32.mul
        (local.get $10)
        (local.get $9)
       )
      )
      (local.set $1
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
      (f32.store
       (local.get $5)
       (local.get $10)
      )
      ;;@ celt/bands.c:261:0
      (local.set $7
       (i32.add
        (local.get $7)
        (i32.const 1)
       )
      )
      (if
       (i32.lt_s
        (local.get $7)
        (local.get $18)
       )
       (block
        (local.set $4
         (local.get $0)
        )
        (local.set $5
         (local.get $1)
        )
        (br $while-in1)
       )
      )
     )
     (if
      ;;@ celt/bands.c:218:0
      (i32.ne
       (local.get $8)
       (local.get $15)
      )
      (block
       (local.set $4
        (local.get $8)
       )
       (local.set $5
        (local.get $12)
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (if
   ;;@ celt/bands.c:263:0
   (i32.gt_s
    (local.get $13)
    (local.get $15)
   )
   (call $_celt_fatal
    (i32.const 40770)
    (i32.const 40801)
    (i32.const 263)
   )
   ;;@ celt/bands.c:265:0
   (block
    ;;@ celt/bands.c:264:0
    (local.set $0
     (i32.add
      (i32.shl
       (local.get $17)
       (i32.const 2)
      )
      (local.get $2)
     )
    )
    (local.set $1
     (i32.sub
      (local.get $16)
      (local.get $17)
     )
    )
    (local.set $1
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
    (drop
     (call $_memset
      (local.get $0)
      (i32.const 0)
      (local.get $1)
     )
    )
   )
  )
 )
 (func $_anti_collapse (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f64)
  (local $18 i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 f32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 f32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 f32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (if
   ;;@ celt/bands.c:273:0
   (i32.ge_s
    (local.get $6)
    (local.get $7)
   )
   ;;@ celt/bands.c:362:0
   (return)
  )
  (local.set $29
   (i32.eq
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $30
   (i32.eq
    (local.get $3)
    (i32.const 3)
   )
  )
  (local.set $26
   (i32.shl
    (i32.const 1)
    (local.get $3)
   )
  )
  (local.set $31
   (i32.eq
    (local.get $3)
    (i32.const 31)
   )
  )
  (local.set $22
   (local.get $6)
  )
  (loop $while-in
   ;;@ celt/bands.c:283:0
   (local.set $6
    (i32.load offset=32
     (local.get $0)
    )
   )
   (local.set $25
    (i32.add
     (local.get $22)
     (i32.const 1)
    )
   )
   (local.set $18
    (i32.add
     (i32.shl
      (local.get $25)
      (i32.const 1)
     )
     (local.get $6)
    )
   )
   (local.set $18
    (i32.load16_s
     (local.get $18)
    )
   )
   (local.set $6
    (i32.add
     (i32.shl
      (local.get $22)
      (i32.const 1)
     )
     (local.get $6)
    )
   )
   (local.set $6
    (i32.load16_s
     (local.get $6)
    )
   )
   (local.set $23
    (i32.sub
     (local.get $18)
     (local.get $6)
    )
   )
   ;;@ celt/bands.c:286:0
   (local.set $6
    (i32.add
     (i32.shl
      (local.get $22)
      (i32.const 2)
     )
     (local.get $11)
    )
   )
   (local.set $6
    (i32.load
     (local.get $6)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (i32.const 1)
    )
   )
   ;;@ ./celt/entcode.h:136:0
   (local.set $6
    (i32.div_u
     (local.get $6)
     (local.get $23)
    )
   )
   ;;@ celt/bands.c:286:0
   (local.set $6
    (i32.shr_u
     (local.get $6)
     (local.get $3)
    )
   )
   ;;@ celt/bands.c:299:0
   (local.set $14
    (f32.convert_i32_s
     (local.get $6)
    )
   )
   (local.set $14
    (f32.mul
     (local.get $14)
     (f32.const -0.125)
    )
   )
   (local.set $17
    (f64.promote_f32
     (local.get $14)
    )
   )
   (local.set $17
    (f64.mul
     (local.get $17)
     (f64.const 0.6931471805599453)
    )
   )
   (local.set $17
    (call $_exp
     (local.get $17)
    )
   )
   (local.set $14
    (f32.demote_f64
     (local.get $17)
    )
   )
   (local.set $27
    (f32.mul
     (local.get $14)
     (f32.const 0.5)
    )
   )
   ;;@ celt/bands.c:300:0
   (local.set $28
    (i32.shl
     (local.get $23)
     (local.get $3)
    )
   )
   (local.set $17
    (f64.convert_i32_s
     (local.get $28)
    )
   )
   (local.set $17
    (f64.sqrt
     (local.get $17)
    )
   )
   (local.set $14
    (f32.demote_f64
     (local.get $17)
    )
   )
   (local.set $32
    (f32.div
     (f32.const 1)
     (local.get $14)
    )
   )
   (local.set $33
    (i32.mul
     (local.get $4)
     (local.get $22)
    )
   )
   (local.set $34
    (i32.gt_s
     (local.get $23)
     (i32.const 0)
    )
   )
   (local.set $18
    (i32.const 0)
   )
   (local.set $6
    (local.get $12)
   )
   (loop $while-in1
    ;;@ celt/bands.c:311:0
    (local.set $15
     (i32.load offset=8
      (local.get $0)
     )
    )
    (local.set $12
     (i32.mul
      (local.get $15)
      (local.get $18)
     )
    )
    (local.set $12
     (i32.add
      (local.get $12)
      (local.get $22)
     )
    )
    (local.set $19
     (i32.add
      (i32.shl
       (local.get $12)
       (i32.const 2)
      )
      (local.get $9)
     )
    )
    (local.set $14
     (f32.load
      (local.get $19)
     )
    )
    ;;@ celt/bands.c:312:0
    (local.set $19
     (i32.add
      (i32.shl
       (local.get $12)
       (i32.const 2)
      )
      (local.get $10)
     )
    )
    (local.set $20
     (f32.load
      (local.get $19)
     )
    )
    (if
     (local.get $29)
     (block
      ;;@ celt/bands.c:315:0
      (local.set $15
       (i32.add
        (local.get $15)
        (local.get $22)
       )
      )
      (local.set $19
       (i32.add
        (i32.shl
         (local.get $15)
         (i32.const 2)
        )
        (local.get $9)
       )
      )
      (local.set $21
       (f32.load
        (local.get $19)
       )
      )
      (local.set $19
       (f32.gt
        (local.get $14)
        (local.get $21)
       )
      )
      (local.set $14
       (select
        (local.get $14)
        (local.get $21)
        (local.get $19)
       )
      )
      ;;@ celt/bands.c:316:0
      (local.set $15
       (i32.add
        (i32.shl
         (local.get $15)
         (i32.const 2)
        )
        (local.get $10)
       )
      )
      (local.set $21
       (f32.load
        (local.get $15)
       )
      )
      (local.set $15
       (f32.gt
        (local.get $20)
        (local.get $21)
       )
      )
      (local.set $20
       (select
        (local.get $20)
        (local.get $21)
        (local.get $15)
       )
      )
     )
    )
    ;;@ celt/bands.c:318:0
    (local.set $12
     (i32.add
      (i32.shl
       (local.get $12)
       (i32.const 2)
      )
      (local.get $8)
     )
    )
    (local.set $21
     (f32.load
      (local.get $12)
     )
    )
    (local.set $12
     (f32.lt
      (local.get $14)
      (local.get $20)
     )
    )
    (local.set $14
     (select
      (local.get $14)
      (local.get $20)
      (local.get $12)
     )
    )
    (local.set $14
     (f32.sub
      (local.get $21)
      (local.get $14)
     )
    )
    ;;@ celt/bands.c:319:0
    (local.set $12
     (f32.lt
      (local.get $14)
      (f32.const 0)
     )
    )
    (local.set $14
     (select
      (f32.const 0)
      (local.get $14)
      (local.get $12)
     )
    )
    ;;@ celt/bands.c:336:0
    (local.set $14
     (f32.neg
      (local.get $14)
     )
    )
    (local.set $17
     (f64.promote_f32
      (local.get $14)
     )
    )
    (local.set $17
     (f64.mul
      (local.get $17)
      (f64.const 0.6931471805599453)
     )
    )
    (local.set $17
     (call $_exp
      (local.get $17)
     )
    )
    (local.set $14
     (f32.demote_f64
      (local.get $17)
     )
    )
    (local.set $14
     (f32.mul
      (local.get $14)
      (f32.const 2)
     )
    )
    ;;@ celt/bands.c:338:0
    (local.set $20
     (f32.mul
      (local.get $14)
      (f32.const 1.4142135381698608)
     )
    )
    ;;@ celt/bands.c:337:0
    (local.set $14
     (select
      (local.get $20)
      (local.get $14)
      (local.get $30)
     )
    )
    ;;@ celt/bands.c:339:0
    (local.set $12
     (f32.lt
      (local.get $27)
      (local.get $14)
     )
    )
    (local.set $14
     (select
      (local.get $27)
      (local.get $14)
      (local.get $12)
     )
    )
    ;;@ celt/bands.c:340:0
    (local.set $14
     (f32.mul
      (local.get $32)
      (local.get $14)
     )
    )
    ;;@ celt/bands.c:342:0
    (local.set $12
     (i32.mul
      (local.get $5)
      (local.get $18)
     )
    )
    (local.set $12
     (i32.add
      (i32.shl
       (local.get $12)
       (i32.const 2)
      )
      (local.get $1)
     )
    )
    (local.set $15
     (i32.load offset=32
      (local.get $0)
     )
    )
    (local.set $15
     (i32.add
      (i32.shl
       (local.get $22)
       (i32.const 1)
      )
      (local.get $15)
     )
    )
    (local.set $15
     (i32.load16_s
      (local.get $15)
     )
    )
    (local.set $15
     (i32.shl
      (local.get $15)
      (local.get $3)
     )
    )
    (local.set $19
     (i32.add
      (i32.shl
       (local.get $15)
       (i32.const 2)
      )
      (local.get $12)
     )
    )
    (if
     (i32.eqz
      (local.get $31)
     )
     (block
      (local.set $24
       (i32.add
        (local.get $2)
        (i32.add
         (local.get $18)
         (local.get $33)
        )
       )
      )
      (local.set $20
       (f32.neg
        (local.get $14)
       )
      )
      (if
       (local.get $34)
       (block
        (local.set $15
         (i32.const 0)
        )
        (local.set $12
         (i32.const 0)
        )
        (loop $while-in3
         ;;@ celt/bands.c:346:0
         (local.set $16
          (i32.load8_u
           (local.get $24)
          )
         )
         (local.set $16
          (i32.and
           (local.get $16)
           (i32.const 255)
          )
         )
         (local.set $35
          (i32.shl
           (i32.const 1)
           (local.get $15)
          )
         )
         (local.set $16
          (i32.and
           (local.get $16)
           (local.get $35)
          )
         )
         (if
          (i32.eqz
           (local.get $16)
          )
          (block
           (local.set $12
            (i32.const 0)
           )
           (local.set $12
            (loop $while-in5 (result i32)
             ;;@ celt/bands.c:63:0
             (local.set $6
              (i32.mul
               (local.get $6)
               (i32.const 1664525)
              )
             )
             (local.set $6
              (i32.add
               (local.get $6)
               (i32.const 1013904223)
              )
             )
             ;;@ celt/bands.c:352:0
             (local.set $16
              (i32.and
               (local.get $6)
               (i32.const 32768)
              )
             )
             (local.set $16
              (i32.eqz
               (local.get $16)
              )
             )
             (local.set $21
              (select
               (local.get $20)
               (local.get $14)
               (local.get $16)
              )
             )
             (local.set $16
              (i32.shl
               (local.get $12)
               (local.get $3)
              )
             )
             (local.set $16
              (i32.add
               (local.get $15)
               (local.get $16)
              )
             )
             (local.set $16
              (i32.add
               (i32.shl
                (local.get $16)
                (i32.const 2)
               )
               (local.get $19)
              )
             )
             (f32.store
              (local.get $16)
              (local.get $21)
             )
             ;;@ celt/bands.c:349:0
             (local.set $12
              (i32.add
               (local.get $12)
               (i32.const 1)
              )
             )
             (br_if $while-in5
              (i32.ne
               (local.get $12)
               (local.get $23)
              )
             )
             (i32.const 1)
            )
           )
          )
         )
         ;;@ celt/bands.c:343:0
         (local.set $15
          (i32.add
           (local.get $15)
           (i32.const 1)
          )
         )
         (br_if $while-in3
          (i32.lt_s
           (local.get $15)
           (local.get $26)
          )
         )
        )
       )
       (block
        ;;@ celt/bands.c:346:0
        (local.set $24
         (i32.load8_u
          (local.get $24)
         )
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $12
         (i32.const 0)
        )
        (loop $while-in7
         (local.set $16
          (i32.shl
           (i32.const 1)
           (local.get $15)
          )
         )
         (local.set $16
          (i32.and
           (local.get $16)
           (local.get $24)
          )
         )
         (local.set $16
          (i32.eqz
           (local.get $16)
          )
         )
         (local.set $12
          (select
           (i32.const 1)
           (local.get $12)
           (local.get $16)
          )
         )
         ;;@ celt/bands.c:343:0
         (local.set $15
          (i32.add
           (local.get $15)
           (i32.const 1)
          )
         )
         (br_if $while-in7
          (i32.lt_s
           (local.get $15)
           (local.get $26)
          )
         )
        )
       )
      )
      (if
       ;;@ celt/bands.c:358:0
       (local.get $12)
       ;;@ celt/bands.c:359:0
       (call $_renormalise_vector
        (local.get $19)
        (local.get $28)
        (f32.const 1)
       )
      )
     )
    )
    ;;@ celt/bands.c:360:0
    (local.set $18
     (i32.add
      (local.get $18)
      (i32.const 1)
     )
    )
    (br_if $while-in1
     (i32.lt_s
      (local.get $18)
      (local.get $4)
     )
    )
   )
   (if
    ;;@ celt/bands.c:273:0
    (i32.ne
     (local.get $7)
     (local.get $25)
    )
    (block
     (local.set $12
      (local.get $6)
     )
     (local.set $22
      (local.get $25)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_quant_all_bands (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32) (param $15 i32) (param $16 i32) (param $17 i32) (param $18 i32) (param $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 f32)
  (local $34 f32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 f32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 f32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 f32)
  (local $69 i32)
  (local $70 i32)
  (local.set $30
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1552)
   )
  )
  (local.set $20
   (i32.add
    (local.get $30)
    (i32.const 1488)
   )
  )
  (local.set $45
   (i32.add
    (local.get $30)
    (i32.const 1304)
   )
  )
  (local.set $40
   (i32.add
    (local.get $30)
    (i32.const 1280)
   )
  )
  (local.set $29
   (i32.add
    (local.get $30)
    (i32.const 1440)
   )
  )
  (local.set $23
   (i32.add
    (local.get $30)
    (i32.const 1380)
   )
  )
  (local.set $24
   (i32.add
    (local.get $30)
    (i32.const 1320)
   )
  )
  ;;@ celt/bands.c:1433:0
  (local.set $35
   (select
    (i32.shl
     (i32.const 1)
     (local.get $15)
    )
    (i32.const 1)
    (local.get $7)
   )
  )
  ;;@ celt/bands.c:1434:0
  (local.set $41
   (i32.shl
    (i32.load16_s
     (local.tee $62
      (i32.add
       ;;@ celt/bands.c:1406:0
       (local.tee $38
        (i32.load offset=32
         (local.get $0)
        )
       )
       (i32.shl
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (local.get $15)
   )
  )
  ;;@ celt/bands.c:1437:0
  (local.set $7
   (i32.mul
    ;;@ celt/bands.c:1421:0
    (local.tee $50
     (select
      (i32.const 2)
      (i32.const 1)
      (local.tee $52
       (i32.ne
        (local.get $4)
        (i32.const 0)
       )
      )
     )
    )
    (i32.sub
     (i32.shl
      (i32.load16_s
       (i32.add
        (i32.shl
         (i32.add
          (i32.load offset=8
           (local.get $0)
          )
          (i32.const -1)
         )
         (i32.const 1)
        )
        (local.get $38)
       )
      )
      (local.get $15)
     )
     (local.get $41)
    )
   )
  )
  ;;@ celt/bands.c:1437:0
  (local.set $53
   (call $_llvm_stacksave)
  )
  (local.set $22
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $7)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $21
   (i32.add
    (i32.shl
     ;;@ celt/bands.c:1439:0
     (local.tee $31
      (i32.shl
       (i32.load16_s
        (i32.add
         (i32.shl
          (i32.add
           (i32.load offset=8
            (local.get $0)
           )
           (i32.const -1)
          )
          (i32.const 1)
         )
         (local.get $38)
        )
       )
       (local.get $15)
      )
     )
     (i32.const 2)
    )
    (local.get $3)
   )
  )
  (local.set $46
   (global.get $STACKTOP)
  )
  ;;@ celt/bands.c:1453:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       ;;@ celt/bands.c:1452:0
       (local.tee $7
        (i32.const 1)
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $47
   (global.get $STACKTOP)
  )
  ;;@ celt/bands.c:1454:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  ;;@ celt/bands.c:1460:0
  (i32.store offset=36
   (local.get $20)
   (i32.const 0)
  )
  ;;@ celt/bands.c:1461:0
  (i32.store offset=28
   (local.get $20)
   (local.get $14)
  )
  ;;@ celt/bands.c:1462:0
  (i32.store
   (local.get $20)
   (i32.const 0)
  )
  ;;@ celt/bands.c:1463:0
  (i32.store offset=16
   (local.get $20)
   (local.get $10)
  )
  ;;@ celt/bands.c:1464:0
  (i32.store offset=8
   (local.get $20)
   (local.get $0)
  )
  ;;@ celt/bands.c:1465:0
  (i32.store offset=40
   (local.get $20)
   (local.tee $48
    (i32.load
     (local.get $17)
    )
   )
  )
  ;;@ celt/bands.c:1466:0
  (i32.store offset=20
   (local.get $20)
   (local.get $8)
  )
  ;;@ celt/bands.c:1467:0
  (i32.store offset=44
   (local.get $20)
   (local.get $18)
  )
  ;;@ celt/bands.c:1468:0
  (i32.store offset=52
   (local.get $20)
   (local.get $19)
  )
  ;;@ celt/bands.c:1469:0
  (i32.store offset=4
   (local.get $20)
   (i32.const 1)
  )
  ;;@ celt/bands.c:1470:0
  (i32.store offset=48
   (local.get $20)
   (i32.const 0)
  )
  ;;@ celt/bands.c:1472:0
  (i32.store offset=56
   (local.get $20)
   (local.tee $18
    (i32.gt_s
     (local.get $35)
     (i32.const 1)
    )
   )
  )
  (if
   ;;@ celt/bands.c:1473:0
   (i32.ge_s
    (local.get $1)
    (local.get $2)
   )
   (block
    ;;@ celt/bands.c:1668:0
    (i32.store
     (local.get $17)
     (local.get $48)
    )
    ;;@ celt/bands.c:1671:0
    (call $_llvm_stackrestore
     (local.get $53)
    )
    (global.set $STACKTOP
     (local.get $30)
    )
    (return)
   )
  )
  (local.set $42
   (i32.add
    (i32.add
     (i32.shl
      (local.get $31)
      (i32.const 2)
     )
     (local.get $22)
    )
    (i32.shl
     ;;@ celt/bands.c:1439:0
     (local.tee $36
      (i32.sub
       (i32.const 0)
       (local.get $41)
      )
     )
     (i32.const 2)
    )
   )
  )
  (local.set $54
   (global.get $STACKTOP)
  )
  ;;@ celt/bands.c:1457:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $55
   (global.get $STACKTOP)
  )
  ;;@ celt/bands.c:1456:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $56
   (global.get $STACKTOP)
  )
  ;;@ celt/bands.c:1455:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $63
   (i32.add
    (local.get $2)
    (i32.const -1)
   )
  )
  (local.set $49
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (local.set $57
   (i32.add
    (local.get $1)
    (i32.const 2)
   )
  )
  (local.set $64
   (select
    (local.get $22)
    (i32.const 0)
    (local.get $52)
   )
  )
  (local.set $65
   (i32.add
    (i32.shl
     (i32.const 1)
     (local.get $35)
    )
    (i32.const -1)
   )
  )
  (local.set $66
   (i32.or
    (i32.ne
     (local.get $8)
     (i32.const 3)
    )
    (local.get $18)
   )
  )
  (local.set $58
   (i32.add
    (local.get $50)
    (i32.const -1)
   )
  )
  (local.set $18
   (local.get $1)
  )
  (local.set $7
   (i32.const 0)
  )
  (local.set $8
   (i32.const 1)
  )
  (local.set $19
   (local.get $21)
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in
     ;;@ celt/bands.c:1486:0
     (i32.store offset=12
      (local.get $20)
      (local.get $18)
     )
     ;;@ celt/bands.c:1495:0
     (br_if $__rjti$1
      (i32.le_s
       ;;@ celt/bands.c:1494:0
       (local.tee $25
        (i32.sub
         (i32.shl
          (i32.load16_s
           (i32.add
            (i32.shl
             (local.tee $48
              (i32.add
               (local.get $18)
               (i32.const 1)
              )
             )
             (i32.const 1)
            )
            (local.get $38)
           )
          )
          (local.get $15)
         )
         ;;@ celt/bands.c:1489:0
         (local.tee $21
          (i32.shl
           (i32.load16_s
            (local.tee $32
             (i32.add
              (i32.shl
               (local.get $18)
               (i32.const 1)
              )
              (local.get $38)
             )
            )
           )
           (local.get $15)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
     ;;@ celt/bands.c:1487:0
     (local.set $37
      (i32.eq
       (local.get $18)
       (local.get $63)
      )
     )
     ;;@ celt/bands.c:1489:0
     (local.set $39
      (i32.add
       (i32.shl
        (local.get $21)
        (i32.const 2)
       )
       (local.get $3)
      )
     )
     ;;@ celt/bands.c:1490:0
     (local.set $51
      (select
       (i32.add
        (i32.shl
         (local.get $21)
         (i32.const 2)
        )
        (local.get $4)
       )
       (i32.const 0)
       (local.get $52)
      )
     )
     ;;@ celt/bands.c:1499:0
     (local.set $60
      (i32.sub
       (local.get $13)
       (select
        (i32.const 0)
        ;;@ celt/bands.c:1496:0
        (local.tee $59
         (call $_ec_tell_frac
          (local.get $14)
         )
        )
        (i32.eq
         (local.get $1)
         (local.get $18)
        )
       )
      )
     )
     ;;@ celt/bands.c:1502:0
     (i32.store offset=32
      (local.get $20)
      (i32.add
       ;;@ celt/bands.c:1501:0
       (local.tee $13
        (i32.sub
         (local.get $12)
         (local.get $59)
        )
       )
       (i32.const -1)
      )
     )
     (local.set $43
      (if (result i32)
       ;;@ celt/bands.c:1503:0
       (i32.lt_s
        (local.get $18)
        (local.get $16)
       )
       (if (result i32)
        ;;@ celt/bands.c:1506:0
        (i32.gt_s
         (local.tee $13
          (select
           (local.get $13)
           (local.tee $21
            (i32.add
             (i32.load
              (i32.add
               (i32.shl
                (local.get $18)
                (i32.const 2)
               )
               (local.get $6)
              )
             )
             (i32.div_s
              (local.get $60)
              (select
               ;;@ celt/bands.c:1505:0
               (local.tee $21
                (i32.sub
                 (local.get $16)
                 (local.get $18)
                )
               )
               (i32.const 3)
               (i32.lt_s
                (local.get $21)
                (i32.const 3)
               )
              )
             )
            )
           )
           (i32.lt_s
            (local.get $13)
            (local.get $21)
           )
          )
         )
         (i32.const 16383)
        )
        (i32.const 16383)
        ;;@ celt/bands.c:1506:0
        (select
         (local.get $13)
         (i32.const 0)
         (i32.gt_s
          (local.get $13)
          (i32.const 0)
         )
        )
       )
       (i32.const 0)
      )
     )
     ;;@ celt/bands.c:1512:0
     (local.set $7
      (select
       (local.get $18)
       (local.get $7)
       (i32.and
        (i32.or
         (i32.eq
          (local.get $18)
          (local.get $49)
         )
         (i32.ge_s
          (i32.sub
           (i32.shl
            (i32.load16_s
             (local.get $32)
            )
            (local.get $15)
           )
           (local.get $25)
          )
          (i32.shl
           (i32.load16_s
            (local.get $62)
           )
           (local.get $15)
          )
         )
        )
        (i32.or
         (i32.eqz
          (local.get $7)
         )
         (i32.ne
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (if
      ;;@ celt/bands.c:1514:0
      (local.tee $67
       (i32.eq
        (local.get $18)
        (local.get $49)
       )
      )
      (block
       ;;@ celt/bands.c:1392:0
       (local.set $13
        (i32.sub
         (i32.shl
          ;;@ celt/bands.c:1388:0
          (local.tee $8
           (i32.shl
            (i32.sub
             (local.tee $21
              (i32.load16_s
               (i32.add
                (local.tee $13
                 (i32.load offset=32
                  (local.get $0)
                 )
                )
                (i32.shl
                 (local.get $49)
                 (i32.const 1)
                )
               )
              )
             )
             (i32.load16_s
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 1)
               )
               (local.get $13)
              )
             )
            )
            (local.get $15)
           )
          )
          (i32.const 1)
         )
         ;;@ celt/bands.c:1389:0
         (local.tee $21
          (i32.shl
           (i32.sub
            (i32.load16_s
             (i32.add
              (i32.shl
               (local.get $57)
               (i32.const 1)
              )
              (local.get $13)
             )
            )
            (local.get $21)
           )
           (local.get $15)
          )
         )
        )
       )
       ;;@ celt/bands.c:1392:0
       (drop
        (call $_memcpy
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 2)
          )
          (local.get $22)
         )
         (i32.add
          (i32.shl
           (local.get $13)
           (i32.const 2)
          )
          (local.get $22)
         )
         (local.tee $21
          (i32.shl
           (i32.sub
            (local.get $21)
            (local.get $8)
           )
           (i32.const 2)
          )
         )
        )
       )
       (if
        ;;@ celt/bands.c:1393:0
        (local.get $9)
        ;;@ celt/bands.c:1394:0
        (drop
         (call $_memcpy
          (i32.add
           (i32.shl
            (local.get $8)
            (i32.const 2)
           )
           (local.get $42)
          )
          (i32.add
           (i32.shl
            (local.get $13)
            (i32.const 2)
           )
           (local.get $42)
          )
          (local.get $21)
         )
        )
       )
      )
     )
     ;;@ celt/bands.c:1522:0
     (i32.store offset=24
      (local.get $20)
      ;;@ celt/bands.c:1521:0
      (local.tee $8
       (i32.load
        (i32.add
         (i32.shl
          (local.get $18)
          (i32.const 2)
         )
         (local.get $11)
        )
       )
      )
     )
     ;;@ celt/bands.c:1530:0
     (local.set $31
      (select
       (local.get $19)
       (i32.const 0)
       (i32.and
        ;;@ celt/bands.c:1523:0
        (local.tee $26
         (i32.lt_s
          (local.get $18)
          (i32.load offset=12
           (local.get $0)
          )
         )
        )
        (i32.xor
         (local.get $37)
         (i32.const 1)
        )
       )
      )
     )
     (if
      ;;@ celt/bands.c:1535:0
      (i32.and
       (i32.or
        (i32.lt_s
         (local.get $8)
         (i32.const 0)
        )
        (local.get $66)
       )
       (i32.ne
        (local.get $7)
        (i32.const 0)
       )
      )
      (block
       ;;@ celt/bands.c:1541:0
       (local.set $8
        (i32.add
         (local.get $41)
         (local.tee $28
          (select
           (local.tee $8
            (i32.sub
             (i32.sub
              (i32.shl
               (local.tee $13
                (i32.load16_s
                 (i32.add
                  (i32.shl
                   (local.get $7)
                   (i32.const 1)
                  )
                  (local.get $38)
                 )
                )
               )
               (local.get $15)
              )
              (local.get $41)
             )
             (local.get $25)
            )
           )
           (i32.const 0)
           (i32.gt_s
            (local.get $8)
            (i32.const 0)
           )
          )
         )
        )
       )
       (local.set $19
        (local.get $7)
       )
       (loop $while-in1
        (if
         ;;@ celt/bands.c:1543:0
         (i32.gt_s
          (i32.shl
           (i32.load16_s
            (i32.add
             (i32.shl
              (local.tee $21
               (i32.add
                (local.get $19)
                (i32.const -1)
               )
              )
              (i32.const 1)
             )
             (local.get $38)
            )
           )
           (local.get $15)
          )
          (local.get $8)
         )
         (block
          (local.set $19
           (local.get $21)
          )
          (br $while-in1)
         )
        )
       )
       ;;@ celt/bands.c:1544:0
       (local.set $19
        (i32.add
         (local.get $7)
         (i32.const -1)
        )
       )
       (if
        ;;@ celt/bands.c:1546:0
        (i32.lt_s
         (local.get $7)
         (local.get $18)
        )
        (if
         (i32.lt_s
          (i32.shl
           (local.get $13)
           (local.get $15)
          )
          (local.tee $13
           (i32.add
            (local.get $8)
            (local.get $25)
           )
          )
         )
         (block $label$break$L27
          (local.set $19
           (local.get $7)
          )
          (loop $while-in3
           (br_if $label$break$L27
            (i32.ge_s
             (local.tee $8
              (i32.add
               (local.get $19)
               (i32.const 1)
              )
             )
             (local.get $18)
            )
           )
           (if
            (i32.lt_s
             (i32.shl
              (i32.load16_s
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 1)
                )
                (local.get $38)
               )
              )
              (local.get $15)
             )
             (local.get $13)
            )
            (block
             (local.set $19
              (local.get $8)
             )
             (br $while-in3)
            )
           )
          )
         )
        )
       )
       (local.set $8
        (i32.const 0)
       )
       (local.set $13
        (i32.const 0)
       )
       (local.set $19
        (loop $while-in5 (result i32)
         ;;@ celt/bands.c:1552:0
         (local.set $13
          (i32.or
           (i32.load8_u
            (i32.add
             (local.tee $27
              (i32.mul
               (local.get $21)
               (local.get $50)
              )
             )
             (local.get $5)
            )
           )
           (local.get $13)
          )
         )
         ;;@ celt/bands.c:1553:0
         (local.set $8
          (i32.or
           (i32.load8_u
            (i32.add
             (i32.add
              (local.get $27)
              (local.get $58)
             )
             (local.get $5)
            )
           )
           (local.get $8)
          )
         )
         ;;@ celt/bands.c:1554:0
         (local.set $27
          (i32.add
           (local.get $21)
           (i32.const 1)
          )
         )
         (if (result i32)
          (i32.lt_s
           (local.get $21)
           (local.get $19)
          )
          (block
           (local.set $21
            (local.get $27)
           )
           (br $while-in5)
          )
          (local.get $8)
         )
        )
       )
      )
      (block
       (local.set $28
        (i32.const -1)
       )
       (local.set $13
        (local.tee $19
         (local.get $65)
        )
       )
      )
     )
     ;;@ celt/bands.c:1523:0
     (local.set $27
      (select
       (local.get $51)
       (local.get $64)
       (local.get $26)
      )
     )
     (local.set $21
      (select
       (local.get $39)
       (local.get $22)
       (local.get $26)
      )
     )
     (block $do-once
      (block $__rjti$0
       (local.set $19
        (if (result i32)
         ;;@ celt/bands.c:1561:0
         (i32.or
          (local.tee $8
           (i32.eqz
            (local.get $9)
           )
          )
          (local.tee $26
           (i32.ne
            (local.get $10)
            (local.get $18)
           )
          )
         )
         (block (result i32)
          ;;@ celt/bands.c:1571:0
          (br_if $__rjti$0
           (i32.or
            (i32.xor
             (local.get $26)
             (i32.const 1)
            )
            (local.get $8)
           )
          )
          ;;@ celt/bands.c:1573:0
          (local.set $26
           (i32.shr_u
            (local.get $43)
            (i32.const 1)
           )
          )
          ;;@ celt/bands.c:1574:0
          (local.set $8
           (select
            (i32.add
             (i32.shl
              (local.get $28)
              (i32.const 2)
             )
             (local.get $22)
            )
            (i32.const 0)
            (local.tee $39
             (i32.ne
              (local.get $28)
              (i32.const -1)
             )
            )
           )
          )
          (local.set $21
           (if (result i32)
            (local.get $37)
            (block (result i32)
             ;;@ celt/bands.c:1573:0
             (local.set $8
              (call $_quant_band
               (local.get $20)
               (local.get $21)
               (local.get $25)
               (local.get $26)
               (local.get $35)
               (local.get $8)
               (local.get $15)
               (i32.const 0)
               (f32.const 1)
               (local.get $31)
               (local.get $13)
              )
             )
             ;;@ celt/bands.c:1577:0
             (local.set $13
              (select
               (i32.add
                (i32.shl
                 (local.get $28)
                 (i32.const 2)
                )
                (local.get $42)
               )
               (i32.const 0)
               (local.get $39)
              )
             )
             (i32.const 0)
            )
            (block (result i32)
             ;;@ celt/bands.c:1573:0
             (local.set $8
              (call $_quant_band
               (local.get $20)
               (local.get $21)
               (local.get $25)
               (local.get $26)
               (local.get $35)
               (local.get $8)
               (local.get $15)
               (i32.add
                (i32.add
                 (i32.shl
                  (i32.shl
                   (i32.load16_s
                    (local.get $32)
                   )
                   (local.get $15)
                  )
                  (i32.const 2)
                 )
                 (local.get $22)
                )
                (i32.shl
                 (local.get $36)
                 (i32.const 2)
                )
               )
               (f32.const 1)
               (local.get $31)
               (local.get $13)
              )
             )
             ;;@ celt/bands.c:1577:0
             (local.set $13
              (select
               (i32.add
                (i32.shl
                 (local.get $28)
                 (i32.const 2)
                )
                (local.get $42)
               )
               (i32.const 0)
               (local.get $39)
              )
             )
             ;;@ celt/bands.c:1578:0
             (i32.add
              (i32.add
               (i32.shl
                (i32.shl
                 (i32.load16_s
                  (local.get $32)
                 )
                 (local.get $15)
                )
                (i32.const 2)
               )
               (local.get $42)
              )
              (i32.shl
               (local.get $36)
               (i32.const 2)
              )
             )
            )
           )
          )
          ;;@ celt/bands.c:1576:0
          (call $_quant_band
           (local.get $20)
           (local.get $27)
           (local.get $25)
           (local.get $26)
           (local.get $35)
           (local.get $13)
           (local.get $15)
           (local.get $21)
           (f32.const 1)
           (local.get $31)
           (local.get $19)
          )
         )
         (block
          ;;@ celt/bands.c:1568:0
          (br_if $__rjti$0
           (i32.le_s
            (local.tee $8
             (i32.shl
              (i32.load16_s
               (local.get $32)
              )
              (local.get $15)
             )
            )
            (local.get $41)
           )
          )
          (local.set $9
           (i32.sub
            (local.get $8)
            (local.get $41)
           )
          )
          (local.set $8
           (i32.const 0)
          )
          (loop $while-in7
           ;;@ celt/bands.c:1569:0
           (f32.store
            (local.tee $26
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $22)
             )
            )
            (f32.mul
             (f32.add
              (f32.load
               (local.get $26)
              )
              (f32.load
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
                (local.get $42)
               )
              )
             )
             (f32.const 0.5)
            )
           )
           ;;@ celt/bands.c:1568:0
           (br_if $while-in7
            (i32.lt_s
             (local.tee $8
              (i32.add
               (local.get $8)
               (i32.const 1)
              )
             )
             (local.get $9)
            )
           )
          )
          (br $__rjti$0)
         )
        )
       )
       (br $do-once)
      )
      (if
       ;;@ celt/bands.c:1580:0
       (i32.eqz
        (local.get $27)
       )
       (block
        ;;@ celt/bands.c:1652:0
        (local.set $19
         (call $_quant_band
          (local.get $20)
          (local.get $21)
          (local.get $25)
          (local.get $43)
          (local.get $35)
          (select
           (i32.const 0)
           (i32.add
            (i32.shl
             (local.get $28)
             (i32.const 2)
            )
            (local.get $22)
           )
           (i32.eq
            (local.get $28)
            (i32.const -1)
           )
          )
          (local.get $15)
          (if (result i32)
           ;;@ celt/bands.c:1653:0
           (local.get $37)
           (i32.const 0)
           ;;@ celt/bands.c:1654:0
           (i32.add
            (i32.add
             (i32.shl
              (i32.shl
               (i32.load16_s
                (local.get $32)
               )
               (local.get $15)
              )
              (i32.const 2)
             )
             (local.get $22)
            )
            (i32.shl
             (local.get $36)
             (i32.const 2)
            )
           )
          )
          (f32.const 1)
          (local.get $31)
          (i32.or
           (local.get $13)
           (local.get $19)
          )
         )
        )
        (local.set $9
         (i32.const 0)
        )
        (local.set $8
         (local.get $19)
        )
        (br $do-once)
       )
      )
      (if
       ;;@ celt/bands.c:1582:0
       (i32.eqz
        (i32.const 0)
       )
       (block
        ;;@ celt/bands.c:1646:0
        (i32.store offset=48
         (local.get $20)
         (i32.const 0)
        )
        ;;@ celt/bands.c:1647:0
        (local.set $19
         (call $_quant_band_stereo
          (local.get $20)
          (local.get $21)
          (local.get $27)
          (local.get $25)
          (local.get $43)
          (local.get $35)
          (select
           (i32.const 0)
           (i32.add
            (i32.shl
             (local.get $28)
             (i32.const 2)
            )
            (local.get $22)
           )
           (i32.eq
            (local.get $28)
            (i32.const -1)
           )
          )
          (local.get $15)
          (if (result i32)
           ;;@ celt/bands.c:1648:0
           (local.get $37)
           (i32.const 0)
           ;;@ celt/bands.c:1649:0
           (i32.add
            (i32.add
             (i32.shl
              (i32.shl
               (i32.load16_s
                (local.get $32)
               )
               (local.get $15)
              )
              (i32.const 2)
             )
             (local.get $22)
            )
            (i32.shl
             (local.get $36)
             (i32.const 2)
            )
           )
          )
          (local.get $31)
          (i32.or
           (local.get $13)
           (local.get $19)
          )
         )
        )
        (local.set $9
         (i32.const 0)
        )
        (local.set $8
         (local.get $19)
        )
        (br $do-once)
       )
      )
      ;;@ celt/bands.c:379:0
      (local.set $44
       (f32.div
        (select
         ;;@ celt/bands.c:1592:0
         (local.tee $33
          (f32.load
           (i32.shl
            (local.get $18)
            (i32.const 2)
           )
          )
         )
         (local.tee $34
          (f32.load
           (i32.shl
            (i32.add
             (i32.load offset=8
              (local.get $0)
             )
             (local.get $18)
            )
            (i32.const 2)
           )
          )
         )
         (f32.lt
          (local.get $33)
          (local.get $34)
         )
        )
        (f32.const 3)
       )
      )
      ;;@ celt/bands.c:379:0
      (local.set $61
       (f32.add
        (local.get $33)
        (local.get $44)
       )
      )
      ;;@ celt/bands.c:380:0
      (local.set $44
       (f32.add
        (local.get $34)
        (local.get $44)
       )
      )
      ;;@ celt/bands.c:1594:0
      (local.set $13
       (i32.or
        (local.get $13)
        (local.get $19)
       )
      )
      ;;@ celt/bands.c:1595:0
      (local.set $26
       (i32.load
        (local.get $14)
       )
      )
      (local.set $39
       (i32.load offset=4
        (local.get $14)
       )
      )
      (i64.store align=4
       (local.get $45)
       (i64.load offset=8 align=4
        (local.get $14)
       )
      )
      (i64.store offset=8 align=4
       (local.get $45)
       (i64.load offset=16 align=4
        (local.get $14)
       )
      )
      (local.set $8
       (i32.load offset=24
        (local.get $14)
       )
      )
      (i64.store align=4
       (local.get $40)
       (i64.load offset=28 align=4
        (local.get $14)
       )
      )
      (i64.store offset=8 align=4
       (local.get $40)
       (i64.load offset=36 align=4
        (local.get $14)
       )
      )
      (i32.store offset=16
       (local.get $40)
       (i32.load offset=44
        (local.get $14)
       )
      )
      (i64.store align=4
       (local.get $23)
       (i64.load align=4
        (local.get $20)
       )
      )
      (i64.store offset=8 align=4
       (local.get $23)
       (i64.load offset=8 align=4
        (local.get $20)
       )
      )
      (i64.store offset=16 align=4
       (local.get $23)
       (i64.load offset=16 align=4
        (local.get $20)
       )
      )
      (i64.store offset=24 align=4
       (local.get $23)
       (i64.load offset=24 align=4
        (local.get $20)
       )
      )
      (i64.store offset=32 align=4
       (local.get $23)
       (i64.load offset=32 align=4
        (local.get $20)
       )
      )
      (i64.store offset=40 align=4
       (local.get $23)
       (i64.load offset=40 align=4
        (local.get $20)
       )
      )
      (i64.store offset=48 align=4
       (local.get $23)
       (i64.load offset=48 align=4
        (local.get $20)
       )
      )
      ;;@ celt/bands.c:1596:0
      (i32.store offset=56
       (local.get $23)
       (i32.load offset=56
        (local.get $20)
       )
      )
      ;;@ celt/bands.c:1597:0
      (drop
       (call $_memcpy
        (local.get $46)
        (local.get $21)
        (local.tee $9
         (i32.shl
          (local.get $25)
          (i32.const 2)
         )
        )
       )
      )
      ;;@ celt/bands.c:1598:0
      (drop
       (call $_memcpy
        (local.get $47)
        (local.get $27)
        (local.get $9)
       )
      )
      ;;@ celt/bands.c:1600:0
      (i32.store offset=48
       (local.get $20)
       (i32.const -1)
      )
      ;;@ celt/bands.c:1601:0
      (local.set $51
       (call $_quant_band_stereo
        (local.get $20)
        (local.get $21)
        (local.get $27)
        (local.get $25)
        (local.get $43)
        (local.get $35)
        (local.tee $28
         (select
          (i32.const 0)
          (i32.add
           (i32.shl
            (local.get $28)
            (i32.const 2)
           )
           (local.get $22)
          )
          (i32.eq
           (local.get $28)
           (i32.const -1)
          )
         )
        )
        (local.get $15)
        (if (result i32)
         ;;@ celt/bands.c:1602:0
         (local.get $37)
         (i32.const 0)
         ;;@ celt/bands.c:1603:0
         (i32.add
          (i32.add
           (i32.shl
            (i32.shl
             (i32.load16_s
              (local.get $32)
             )
             (local.get $15)
            )
            (i32.const 2)
           )
           (local.get $22)
          )
          (i32.shl
           (local.get $36)
           (i32.const 2)
          )
         )
        )
        (local.get $31)
        (local.get $13)
       )
      )
      (local.set $19
       (i32.const 0)
      )
      (local.set $33
       (f32.const 0)
      )
      (loop $while-in10
       ;;@ ./celt/pitch.h:165:0
       (local.set $33
        (f32.add
         (local.get $33)
         (f32.mul
          (f32.load
           (i32.add
            (i32.shl
             (local.get $19)
             (i32.const 2)
            )
            (local.get $46)
           )
          )
          (f32.load
           (i32.add
            (i32.shl
             (local.get $19)
             (i32.const 2)
            )
            (local.get $21)
           )
          )
         )
        )
       )
       ;;@ ./celt/pitch.h:164:0
       (br_if $while-in10
        (i32.ne
         (local.tee $19
          (i32.add
           (local.get $19)
           (i32.const 1)
          )
         )
         (local.get $25)
        )
       )
      )
      (local.set $19
       (i32.const 0)
      )
      (local.set $34
       (f32.const 0)
      )
      (loop $while-in12
       ;;@ ./celt/pitch.h:165:0
       (local.set $34
        (f32.add
         (local.get $34)
         (f32.mul
          (f32.load
           (i32.add
            (i32.shl
             (local.get $19)
             (i32.const 2)
            )
            (local.get $47)
           )
          )
          (f32.load
           (i32.add
            (i32.shl
             (local.get $19)
             (i32.const 2)
            )
            (local.get $27)
           )
          )
         )
        )
       )
       ;;@ ./celt/pitch.h:164:0
       (br_if $while-in12
        (i32.ne
         (local.tee $19
          (i32.add
           (local.get $19)
           (i32.const 1)
          )
         )
         (local.get $25)
        )
       )
      )
      ;;@ celt/bands.c:1604:0
      (local.set $68
       (f32.add
        (f32.mul
         (local.get $61)
         (local.get $33)
        )
        (f32.mul
         (local.get $44)
         (local.get $34)
        )
       )
      )
      (i64.store align=4
       (local.get $29)
       (i64.load align=4
        (local.get $14)
       )
      )
      (i64.store offset=8 align=4
       (local.get $29)
       (i64.load offset=8 align=4
        (local.get $14)
       )
      )
      (i64.store offset=16 align=4
       (local.get $29)
       (i64.load offset=16 align=4
        (local.get $14)
       )
      )
      (i64.store offset=24 align=4
       (local.get $29)
       (i64.load offset=24 align=4
        (local.get $14)
       )
      )
      (i64.store offset=32 align=4
       (local.get $29)
       (i64.load offset=32 align=4
        (local.get $14)
       )
      )
      ;;@ celt/bands.c:1608:0
      (i64.store offset=40 align=4
       (local.get $29)
       (i64.load offset=40 align=4
        (local.get $14)
       )
      )
      (i64.store align=4
       (local.get $24)
       (i64.load align=4
        (local.get $20)
       )
      )
      (i64.store offset=8 align=4
       (local.get $24)
       (i64.load offset=8 align=4
        (local.get $20)
       )
      )
      (i64.store offset=16 align=4
       (local.get $24)
       (i64.load offset=16 align=4
        (local.get $20)
       )
      )
      (i64.store offset=24 align=4
       (local.get $24)
       (i64.load offset=24 align=4
        (local.get $20)
       )
      )
      (i64.store offset=32 align=4
       (local.get $24)
       (i64.load offset=32 align=4
        (local.get $20)
       )
      )
      (i64.store offset=40 align=4
       (local.get $24)
       (i64.load offset=40 align=4
        (local.get $20)
       )
      )
      (i64.store offset=48 align=4
       (local.get $24)
       (i64.load offset=48 align=4
        (local.get $20)
       )
      )
      ;;@ celt/bands.c:1609:0
      (i32.store offset=56
       (local.get $24)
       (i32.load offset=56
        (local.get $20)
       )
      )
      ;;@ celt/bands.c:1610:0
      (drop
       (call $_memcpy
        (local.get $56)
        (local.get $21)
        (local.get $9)
       )
      )
      ;;@ celt/bands.c:1611:0
      (drop
       (call $_memcpy
        (local.get $55)
        (local.get $27)
        (local.get $9)
       )
      )
      (if
       (i32.eqz
        (local.get $37)
       )
       ;;@ celt/bands.c:1613:0
       (drop
        (call $_memcpy
         (local.get $54)
         (i32.add
          (i32.add
           (i32.shl
            (i32.shl
             (i32.load16_s
              (local.get $32)
             )
             (local.get $15)
            )
            (i32.const 2)
           )
           (local.get $22)
          )
          (i32.shl
           (local.get $36)
           (i32.const 2)
          )
         )
         (local.get $9)
        )
       )
      )
      ;;@ celt/bands.c:1618:0
      (drop
       (call $_memcpy
        (local.get $30)
        ;;@ celt/bands.c:1616:0
        (local.tee $69
         (i32.add
          (local.get $8)
          (local.get $26)
         )
        )
        ;;@ celt/bands.c:1617:0
        (local.tee $70
         (i32.sub
          (local.get $39)
          (local.get $8)
         )
        )
       )
      )
      ;;@ celt/bands.c:1621:0
      (i32.store
       (local.get $14)
       (local.get $26)
      )
      (i32.store offset=4
       (local.get $14)
       (local.get $39)
      )
      (i64.store offset=8 align=4
       (local.get $14)
       (i64.load align=4
        (local.get $45)
       )
      )
      (i64.store offset=16 align=4
       (local.get $14)
       (i64.load offset=8 align=4
        (local.get $45)
       )
      )
      (i32.store offset=24
       (local.get $14)
       (local.get $8)
      )
      (i64.store offset=28 align=4
       (local.get $14)
       (i64.load align=4
        (local.get $40)
       )
      )
      (i64.store offset=36 align=4
       (local.get $14)
       (i64.load offset=8 align=4
        (local.get $40)
       )
      )
      (i32.store offset=44
       (local.get $14)
       (i32.load offset=16
        (local.get $40)
       )
      )
      (i64.store align=4
       (local.get $20)
       (i64.load align=4
        (local.get $23)
       )
      )
      (i64.store offset=8 align=4
       (local.get $20)
       (i64.load offset=8 align=4
        (local.get $23)
       )
      )
      (i64.store offset=16 align=4
       (local.get $20)
       (i64.load offset=16 align=4
        (local.get $23)
       )
      )
      (i64.store offset=24 align=4
       (local.get $20)
       (i64.load offset=24 align=4
        (local.get $23)
       )
      )
      (i64.store offset=32 align=4
       (local.get $20)
       (i64.load offset=32 align=4
        (local.get $23)
       )
      )
      (i64.store offset=40 align=4
       (local.get $20)
       (i64.load offset=40 align=4
        (local.get $23)
       )
      )
      (i64.store offset=48 align=4
       (local.get $20)
       (i64.load offset=48 align=4
        (local.get $23)
       )
      )
      ;;@ celt/bands.c:1622:0
      (i32.store offset=56
       (local.get $20)
       (i32.load offset=56
        (local.get $23)
       )
      )
      ;;@ celt/bands.c:1623:0
      (drop
       (call $_memcpy
        (local.get $21)
        (local.get $46)
        (local.get $9)
       )
      )
      ;;@ celt/bands.c:1624:0
      (drop
       (call $_memcpy
        (local.get $27)
        (local.get $47)
        (local.get $9)
       )
      )
      (if
       (local.get $67)
       ;;@ celt/bands.c:1392:0
       (drop
        (call $_memcpy
         (i32.add
          (i32.shl
           ;;@ celt/bands.c:1388:0
           (local.tee $19
            (i32.shl
             (i32.sub
              (local.tee $26
               (i32.load16_s
                (i32.add
                 (local.tee $8
                  (i32.load offset=32
                   (local.get $0)
                  )
                 )
                 (i32.shl
                  (local.get $49)
                  (i32.const 1)
                 )
                )
               )
              )
              (i32.load16_s
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 1)
                )
                (local.get $8)
               )
              )
             )
             (local.get $15)
            )
           )
           (i32.const 2)
          )
          (local.get $22)
         )
         (i32.add
          (i32.shl
           (i32.sub
            (i32.shl
             (local.get $19)
             (i32.const 1)
            )
            ;;@ celt/bands.c:1389:0
            (local.tee $8
             (i32.shl
              (i32.sub
               (i32.load16_s
                (i32.add
                 (i32.shl
                  (local.get $57)
                  (i32.const 1)
                 )
                 (local.get $8)
                )
               )
               (local.get $26)
              )
              (local.get $15)
             )
            )
           )
           (i32.const 2)
          )
          (local.get $22)
         )
         (i32.shl
          (i32.sub
           (local.get $8)
           (local.get $19)
          )
          (i32.const 2)
         )
        )
       )
      )
      ;;@ celt/bands.c:1630:0
      (i32.store offset=48
       (local.get $20)
       (i32.const 1)
      )
      ;;@ celt/bands.c:1631:0
      (local.set $8
       (call $_quant_band_stereo
        (local.get $20)
        (local.get $21)
        (local.get $27)
        (local.get $25)
        (local.get $43)
        (local.get $35)
        (local.get $28)
        (local.get $15)
        (if (result i32)
         (local.get $37)
         (i32.const 0)
         ;;@ celt/bands.c:1633:0
         (i32.add
          (i32.add
           (i32.shl
            (i32.shl
             (i32.load16_s
              (local.get $32)
             )
             (local.get $15)
            )
            (i32.const 2)
           )
           (local.get $22)
          )
          (i32.shl
           (local.get $36)
           (i32.const 2)
          )
         )
        )
        (local.get $31)
        (local.get $13)
       )
      )
      (local.set $19
       (i32.const 0)
      )
      (local.set $33
       (f32.const 0)
      )
      (loop $while-in14
       ;;@ ./celt/pitch.h:165:0
       (local.set $33
        (f32.add
         (local.get $33)
         (f32.mul
          (f32.load
           (i32.add
            (i32.shl
             (local.get $19)
             (i32.const 2)
            )
            (local.get $46)
           )
          )
          (f32.load
           (i32.add
            (i32.shl
             (local.get $19)
             (i32.const 2)
            )
            (local.get $21)
           )
          )
         )
        )
       )
       ;;@ ./celt/pitch.h:164:0
       (br_if $while-in14
        (i32.ne
         (local.tee $19
          (i32.add
           (local.get $19)
           (i32.const 1)
          )
         )
         (local.get $25)
        )
       )
      )
      (local.set $19
       (i32.const 0)
      )
      (local.set $34
       (f32.const 0)
      )
      (loop $while-in16
       ;;@ ./celt/pitch.h:165:0
       (local.set $34
        (f32.add
         (local.get $34)
         (f32.mul
          (f32.load
           (i32.add
            (i32.shl
             (local.get $19)
             (i32.const 2)
            )
            (local.get $47)
           )
          )
          (f32.load
           (i32.add
            (i32.shl
             (local.get $19)
             (i32.const 2)
            )
            (local.get $27)
           )
          )
         )
        )
       )
       ;;@ ./celt/pitch.h:164:0
       (br_if $while-in16
        (i32.ne
         (local.tee $19
          (i32.add
           (local.get $19)
           (i32.const 1)
          )
         )
         (local.get $25)
        )
       )
      )
      (local.set $19
       (if (result i32)
        ;;@ celt/bands.c:1635:0
        (f32.ge
         (local.get $68)
         (f32.add
          (f32.mul
           (local.get $61)
           (local.get $33)
          )
          (f32.mul
           (local.get $44)
           (local.get $34)
          )
         )
        )
        (block (result i32)
         (i64.store align=4
          (local.get $14)
          (i64.load align=4
           (local.get $29)
          )
         )
         (i64.store offset=8 align=4
          (local.get $14)
          (i64.load offset=8 align=4
           (local.get $29)
          )
         )
         (i64.store offset=16 align=4
          (local.get $14)
          (i64.load offset=16 align=4
           (local.get $29)
          )
         )
         (i64.store offset=24 align=4
          (local.get $14)
          (i64.load offset=24 align=4
           (local.get $29)
          )
         )
         (i64.store offset=32 align=4
          (local.get $14)
          (i64.load offset=32 align=4
           (local.get $29)
          )
         )
         ;;@ celt/bands.c:1637:0
         (i64.store offset=40 align=4
          (local.get $14)
          (i64.load offset=40 align=4
           (local.get $29)
          )
         )
         (i64.store align=4
          (local.get $20)
          (i64.load align=4
           (local.get $24)
          )
         )
         (i64.store offset=8 align=4
          (local.get $20)
          (i64.load offset=8 align=4
           (local.get $24)
          )
         )
         (i64.store offset=16 align=4
          (local.get $20)
          (i64.load offset=16 align=4
           (local.get $24)
          )
         )
         (i64.store offset=24 align=4
          (local.get $20)
          (i64.load offset=24 align=4
           (local.get $24)
          )
         )
         (i64.store offset=32 align=4
          (local.get $20)
          (i64.load offset=32 align=4
           (local.get $24)
          )
         )
         (i64.store offset=40 align=4
          (local.get $20)
          (i64.load offset=40 align=4
           (local.get $24)
          )
         )
         (i64.store offset=48 align=4
          (local.get $20)
          (i64.load offset=48 align=4
           (local.get $24)
          )
         )
         ;;@ celt/bands.c:1638:0
         (i32.store offset=56
          (local.get $20)
          (i32.load offset=56
           (local.get $24)
          )
         )
         ;;@ celt/bands.c:1639:0
         (drop
          (call $_memcpy
           (local.get $21)
           (local.get $56)
           (local.get $9)
          )
         )
         ;;@ celt/bands.c:1640:0
         (drop
          (call $_memcpy
           (local.get $27)
           (local.get $55)
           (local.get $9)
          )
         )
         (if
          (i32.eqz
           (local.get $37)
          )
          ;;@ celt/bands.c:1642:0
          (drop
           (call $_memcpy
            (i32.add
             (i32.add
              (i32.shl
               (i32.shl
                (i32.load16_s
                 (local.get $32)
                )
                (local.get $15)
               )
               (i32.const 2)
              )
              (local.get $22)
             )
             (i32.shl
              (local.get $36)
              (i32.const 2)
             )
            )
            (local.get $54)
            (local.get $9)
           )
          )
         )
         ;;@ celt/bands.c:1643:0
         (drop
          (call $_memcpy
           (local.get $69)
           (local.get $30)
           (local.get $70)
          )
         )
         (local.get $51)
        )
        (local.get $8)
       )
      )
      (local.set $9
       (i32.const 0)
      )
      (local.set $8
       (local.get $19)
      )
     )
     ;;@ celt/bands.c:1658:0
     (i32.store8
      (i32.add
       (local.tee $13
        (i32.mul
         (local.get $18)
         (local.get $50)
        )
       )
       (local.get $5)
      )
      (local.get $8)
     )
     ;;@ celt/bands.c:1659:0
     (i32.store8
      (i32.add
       (i32.add
        (local.get $13)
        (local.get $58)
       )
       (local.get $5)
      )
      (local.get $19)
     )
     ;;@ celt/bands.c:1660:0
     (local.set $13
      (i32.add
       (i32.load
        (i32.add
         (i32.shl
          (local.get $18)
          (i32.const 2)
         )
         (local.get $6)
        )
       )
       (i32.add
        (local.get $59)
        (local.get $60)
       )
      )
     )
     ;;@ celt/bands.c:1663:0
     (local.set $8
      (i32.gt_s
       (local.get $43)
       (i32.shl
        (local.get $25)
        (i32.const 3)
       )
      )
     )
     (i32.store offset=56
      (local.get $20)
      (i32.const 0)
     )
     (if
      ;;@ celt/bands.c:1473:0
      (i32.lt_s
       (local.get $48)
       (local.get $2)
      )
      (block
       (local.set $18
        (local.get $48)
       )
       (local.set $19
        (local.get $31)
       )
       (br $while-in)
      )
     )
    )
    (br $__rjto$1)
   )
   ;;@ celt/bands.c:1495:0
   (call $_celt_fatal
    (i32.const 40814)
    (i32.const 40801)
    (i32.const 1495)
   )
  )
  ;;@ celt/bands.c:1668:0
  (i32.store
   (local.get $17)
   (i32.load offset=40
    (local.get $20)
   )
  )
  ;;@ celt/bands.c:1671:0
  (call $_llvm_stackrestore
   (local.get $53)
  )
  (global.set $STACKTOP
   (local.get $30)
  )
 )
 (func $_quant_band (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 f32) (param $9 i32) (param $10 i32) (result i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 f32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 f64)
  (local $29 i32)
  (local $30 i32)
  ;;@ celt/bands.c:1127:0
  (local.set $25
   (i32.load
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:1128:0
  (local.set $16
   (i32.load offset=24
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:1130:0
  (local.set $26
   (i32.eq
    (local.get $4)
    (i32.const 1)
   )
  )
  ;;@ ./celt/entcode.h:136:0
  (local.set $22
   (i32.div_u
    (local.get $2)
    (local.get $4)
   )
  )
  (if
   ;;@ celt/bands.c:1135:0
   (i32.eq
    (local.get $2)
    (i32.const 1)
   )
   (block
    ;;@ celt/bands.c:914:0
    (local.set $2
     (i32.load offset=28
      (local.get $0)
     )
    )
    (local.set $4
     (i32.eqz
      (local.get $25)
     )
    )
    ;;@ celt/bands.c:919:0
    (local.set $3
     (i32.load offset=32
      (local.get $0)
     )
    )
    (local.set $3
     (i32.gt_s
      (local.get $3)
      (i32.const 7)
     )
    )
    (block $do-once
     (if
      (local.get $4)
      (local.set $8
       (if (result f32)
        (local.get $3)
        (block (result f32)
         ;;@ celt/bands.c:926:0
         (local.set $2
          (call $_ec_dec_bits
           (local.get $2)
           (i32.const 1)
          )
         )
         ;;@ celt/bands.c:928:0
         (local.set $3
          (i32.load offset=32
           (local.get $0)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const -8)
          )
         )
         (i32.store offset=32
          (local.get $0)
          (local.get $3)
         )
         ;;@ celt/bands.c:931:0
         (local.set $0
          (i32.load offset=4
           (local.get $0)
          )
         )
         (local.set $0
          (i32.eqz
           (local.get $0)
          )
         )
         ;;@ celt/bands.c:932:0
         (local.set $2
          (i32.eqz
           (local.get $2)
          )
         )
         ;;@ celt/bands.c:931:0
         (br_if $do-once
          (local.get $0)
         )
         (select
          (f32.const 1)
          (f32.const -1)
          (local.get $2)
         )
        )
        (block (result f32)
         (local.set $0
          (i32.load offset=4
           (local.get $0)
          )
         )
         (br_if $do-once
          (i32.eqz
           (local.get $0)
          )
         )
         (f32.const 1)
        )
       )
      )
      (local.set $8
       (if (result f32)
        (local.get $3)
        (block (result f32)
         ;;@ celt/bands.c:923:0
         (local.set $8
          (f32.load
           (local.get $1)
          )
         )
         (local.set $3
          (f32.lt
           (local.get $8)
           (f32.const 0)
          )
         )
         ;;@ celt/bands.c:924:0
         (call $_ec_enc_bits
          (local.get $2)
          (local.get $3)
         )
         ;;@ celt/bands.c:928:0
         (local.set $2
          (i32.load offset=32
           (local.get $0)
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const -8)
          )
         )
         (i32.store offset=32
          (local.get $0)
          (local.get $2)
         )
         ;;@ celt/bands.c:931:0
         (local.set $0
          (i32.load offset=4
           (local.get $0)
          )
         )
         (local.set $0
          (i32.eqz
           (local.get $0)
          )
         )
         (br_if $do-once
          (local.get $0)
         )
         (select
          (f32.const -1)
          (f32.const 1)
          (local.get $3)
         )
        )
        (block (result f32)
         (local.set $0
          (i32.load offset=4
           (local.get $0)
          )
         )
         (br_if $do-once
          (i32.eqz
           (local.get $0)
          )
         )
         (f32.const 1)
        )
       )
      )
     )
     ;;@ celt/bands.c:932:0
     (f32.store
      (local.get $1)
      (local.get $8)
     )
    )
    (if
     ;;@ celt/bands.c:935:0
     (i32.eqz
      (local.get $7)
     )
     ;;@ celt/bands.c:1232:0
     (return
      (i32.const 1)
     )
    )
    ;;@ celt/bands.c:936:0
    (local.set $0
     (i32.load
      (local.get $1)
     )
    )
    (i32.store
     (local.get $7)
     (local.get $0)
    )
    ;;@ celt/bands.c:1232:0
    (return
     (i32.const 1)
    )
   )
  )
  ;;@ celt/bands.c:1140:0
  (local.set $27
   (i32.gt_s
    (local.get $16)
    (i32.const 0)
   )
  )
  (local.set $23
   (select
    (local.get $16)
    (i32.const 0)
    (local.get $27)
   )
  )
  ;;@ celt/bands.c:1144:0
  (local.set $11
   (i32.ne
    (local.get $9)
    (i32.const 0)
   )
  )
  (local.set $12
   (i32.ne
    (local.get $5)
    (i32.const 0)
   )
  )
  (if
   (i32.and
    (local.get $11)
    (local.get $12)
   )
   (block $do-once0
    (if
     (i32.lt_s
      (local.get $16)
      (i32.const 1)
     )
     (block
      (local.set $11
       (i32.and
        (local.get $22)
        (i32.const 1)
       )
      )
      (local.set $11
       (i32.eqz
        (local.get $11)
       )
      )
      (local.set $12
       (i32.ne
        (local.get $16)
        (i32.const 0)
       )
      )
      (local.set $11
       (i32.and
        (local.get $11)
        (local.get $12)
       )
      )
      (local.set $12
       (i32.gt_s
        (local.get $4)
        (i32.const 1)
       )
      )
      (if
       (i32.eqz
        (i32.or
         (local.get $11)
         (local.get $12)
        )
       )
       (block
        (local.set $9
         (local.get $5)
        )
        (br $do-once0)
       )
      )
     )
    )
    ;;@ celt/bands.c:1146:0
    (local.set $11
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
    )
    (drop
     (call $_memcpy
      (local.get $9)
      (local.get $5)
      (local.get $11)
     )
    )
   )
   (local.set $9
    (local.get $5)
   )
  )
  (if
   (local.get $27)
   (block $label$break$L26
    (local.set $18
     (i32.eqz
      (local.get $9)
     )
    )
    (if
     (i32.eqz
      (local.get $25)
     )
     (block
      (local.set $5
       (i32.const 0)
      )
      (loop $while-in
       (if
        (i32.eqz
         (local.get $18)
        )
        (block
         ;;@ celt/bands.c:1158:0
         (local.set $11
          (i32.shr_s
           (local.get $2)
           (local.get $5)
          )
         )
         (local.set $14
          (i32.shl
           (i32.const 1)
           (local.get $5)
          )
         )
         ;;@ celt/bands.c:635:0
         (local.set $19
          (i32.shr_s
           (local.get $11)
           (i32.const 1)
          )
         )
         (if
          ;;@ celt/bands.c:636:0
          (i32.ne
           (local.get $5)
           (i32.const 31)
          )
          (block
           (local.set $21
            (i32.shl
             (local.get $14)
             (i32.const 1)
            )
           )
           (if
            (i32.gt_s
             (local.get $11)
             (i32.const 1)
            )
            (block
             (local.set $11
              (i32.const 0)
             )
             (loop $while-in4
              (local.set $12
               (i32.const 0)
              )
              (loop $while-in6
               ;;@ celt/bands.c:640:0
               (local.set $20
                (i32.mul
                 (local.get $12)
                 (local.get $21)
                )
               )
               (local.set $20
                (i32.add
                 (local.get $11)
                 (local.get $20)
                )
               )
               (local.set $20
                (i32.add
                 (i32.shl
                  (local.get $20)
                  (i32.const 2)
                 )
                 (local.get $9)
                )
               )
               (local.set $13
                (f32.load
                 (local.get $20)
                )
               )
               (local.set $13
                (f32.mul
                 (local.get $13)
                 (f32.const 0.7071067690849304)
                )
               )
               ;;@ celt/bands.c:641:0
               (local.set $15
                (i32.shl
                 (local.get $12)
                 (i32.const 1)
                )
               )
               (local.set $15
                (i32.or
                 (local.get $15)
                 (i32.const 1)
                )
               )
               (local.set $15
                (i32.shl
                 (local.get $15)
                 (local.get $5)
                )
               )
               (local.set $15
                (i32.add
                 (local.get $11)
                 (local.get $15)
                )
               )
               (local.set $15
                (i32.add
                 (i32.shl
                  (local.get $15)
                  (i32.const 2)
                 )
                 (local.get $9)
                )
               )
               (local.set $17
                (f32.load
                 (local.get $15)
                )
               )
               (local.set $17
                (f32.mul
                 (local.get $17)
                 (f32.const 0.7071067690849304)
                )
               )
               ;;@ celt/bands.c:642:0
               (local.set $24
                (f32.add
                 (local.get $13)
                 (local.get $17)
                )
               )
               (f32.store
                (local.get $20)
                (local.get $24)
               )
               ;;@ celt/bands.c:643:0
               (local.set $13
                (f32.sub
                 (local.get $13)
                 (local.get $17)
                )
               )
               (f32.store
                (local.get $15)
                (local.get $13)
               )
               ;;@ celt/bands.c:637:0
               (local.set $12
                (i32.add
                 (local.get $12)
                 (i32.const 1)
                )
               )
               (br_if $while-in6
                (i32.lt_s
                 (local.get $12)
                 (local.get $19)
                )
               )
              )
              ;;@ celt/bands.c:636:0
              (local.set $11
               (i32.add
                (local.get $11)
                (i32.const 1)
               )
              )
              (br_if $while-in4
               (i32.ne
                (local.get $11)
                (local.get $14)
               )
              )
             )
            )
           )
          )
         )
        )
       )
       ;;@ celt/bands.c:1159:0
       (local.set $11
        (i32.and
         (local.get $10)
         (i32.const 15)
        )
       )
       (local.set $11
        (i32.add
         (local.get $11)
         (i32.const 1024)
        )
       )
       (local.set $11
        (i32.load8_u
         (local.get $11)
        )
       )
       (local.set $11
        (i32.and
         (local.get $11)
         (i32.const 255)
        )
       )
       (local.set $10
        (i32.shr_s
         (local.get $10)
         (i32.const 4)
        )
       )
       (local.set $10
        (i32.add
         (local.get $10)
         (i32.const 1024)
        )
       )
       (local.set $10
        (i32.load8_u
         (local.get $10)
        )
       )
       (local.set $10
        (i32.and
         (local.get $10)
         (i32.const 255)
        )
       )
       (local.set $10
        (i32.shl
         (local.get $10)
         (i32.const 2)
        )
       )
       (local.set $10
        (i32.or
         (local.get $10)
         (local.get $11)
        )
       )
       ;;@ celt/bands.c:1150:0
       (local.set $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (i32.lt_u
         (local.get $5)
         (local.get $23)
        )
       )
      )
      (br $label$break$L26)
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (loop $while-in8
     ;;@ celt/bands.c:1156:0
     (local.set $20
      (i32.shr_s
       (local.get $2)
       (local.get $5)
      )
     )
     (local.set $14
      (i32.shl
       (i32.const 1)
       (local.get $5)
      )
     )
     ;;@ celt/bands.c:635:0
     (local.set $15
      (i32.shr_s
       (local.get $20)
       (i32.const 1)
      )
     )
     (if
      ;;@ celt/bands.c:636:0
      (i32.eqz
       (local.tee $29
        (i32.eq
         (local.get $5)
         (i32.const 31)
        )
       )
      )
      (block
       (local.set $30
        (i32.shl
         (local.get $14)
         (i32.const 1)
        )
       )
       (if
        (i32.gt_s
         (local.get $20)
         (i32.const 1)
        )
        (block
         (local.set $11
          (i32.const 0)
         )
         (loop $while-in10
          (local.set $12
           (i32.const 0)
          )
          (loop $while-in12
           ;;@ celt/bands.c:640:0
           (local.set $19
            (i32.mul
             (local.get $12)
             (local.get $30)
            )
           )
           (local.set $19
            (i32.add
             (local.get $11)
             (local.get $19)
            )
           )
           (local.set $19
            (i32.add
             (i32.shl
              (local.get $19)
              (i32.const 2)
             )
             (local.get $1)
            )
           )
           (local.set $13
            (f32.load
             (local.get $19)
            )
           )
           (local.set $13
            (f32.mul
             (local.get $13)
             (f32.const 0.7071067690849304)
            )
           )
           ;;@ celt/bands.c:641:0
           (local.set $21
            (i32.shl
             (local.get $12)
             (i32.const 1)
            )
           )
           (local.set $21
            (i32.or
             (local.get $21)
             (i32.const 1)
            )
           )
           (local.set $21
            (i32.shl
             (local.get $21)
             (local.get $5)
            )
           )
           (local.set $21
            (i32.add
             (local.get $11)
             (local.get $21)
            )
           )
           (local.set $21
            (i32.add
             (i32.shl
              (local.get $21)
              (i32.const 2)
             )
             (local.get $1)
            )
           )
           (local.set $17
            (f32.load
             (local.get $21)
            )
           )
           (local.set $17
            (f32.mul
             (local.get $17)
             (f32.const 0.7071067690849304)
            )
           )
           ;;@ celt/bands.c:642:0
           (local.set $24
            (f32.add
             (local.get $13)
             (local.get $17)
            )
           )
           (f32.store
            (local.get $19)
            (local.get $24)
           )
           ;;@ celt/bands.c:643:0
           (local.set $13
            (f32.sub
             (local.get $13)
             (local.get $17)
            )
           )
           (f32.store
            (local.get $21)
            (local.get $13)
           )
           ;;@ celt/bands.c:637:0
           (local.set $12
            (i32.add
             (local.get $12)
             (i32.const 1)
            )
           )
           (br_if $while-in12
            (i32.lt_s
             (local.get $12)
             (local.get $15)
            )
           )
          )
          ;;@ celt/bands.c:636:0
          (local.set $11
           (i32.add
            (local.get $11)
            (i32.const 1)
           )
          )
          (br_if $while-in10
           (i32.ne
            (local.get $11)
            (local.get $14)
           )
          )
         )
        )
       )
      )
     )
     (if
      ;;@ celt/bands.c:1157:0
      (i32.eqz
       (i32.or
        (local.get $18)
        (local.get $29)
       )
      )
      (block
       (local.set $21
        (i32.shl
         (local.get $14)
         (i32.const 1)
        )
       )
       (if
        (i32.gt_s
         (local.get $20)
         (i32.const 1)
        )
        (block
         (local.set $11
          (i32.const 0)
         )
         (loop $while-in14
          (local.set $12
           (i32.const 0)
          )
          (loop $while-in16
           ;;@ celt/bands.c:640:0
           (local.set $20
            (i32.mul
             (local.get $12)
             (local.get $21)
            )
           )
           (local.set $20
            (i32.add
             (local.get $11)
             (local.get $20)
            )
           )
           (local.set $20
            (i32.add
             (i32.shl
              (local.get $20)
              (i32.const 2)
             )
             (local.get $9)
            )
           )
           (local.set $13
            (f32.load
             (local.get $20)
            )
           )
           (local.set $13
            (f32.mul
             (local.get $13)
             (f32.const 0.7071067690849304)
            )
           )
           ;;@ celt/bands.c:641:0
           (local.set $19
            (i32.shl
             (local.get $12)
             (i32.const 1)
            )
           )
           (local.set $19
            (i32.or
             (local.get $19)
             (i32.const 1)
            )
           )
           (local.set $19
            (i32.shl
             (local.get $19)
             (local.get $5)
            )
           )
           (local.set $19
            (i32.add
             (local.get $11)
             (local.get $19)
            )
           )
           (local.set $19
            (i32.add
             (i32.shl
              (local.get $19)
              (i32.const 2)
             )
             (local.get $9)
            )
           )
           (local.set $17
            (f32.load
             (local.get $19)
            )
           )
           (local.set $17
            (f32.mul
             (local.get $17)
             (f32.const 0.7071067690849304)
            )
           )
           ;;@ celt/bands.c:642:0
           (local.set $24
            (f32.add
             (local.get $13)
             (local.get $17)
            )
           )
           (f32.store
            (local.get $20)
            (local.get $24)
           )
           ;;@ celt/bands.c:643:0
           (local.set $13
            (f32.sub
             (local.get $13)
             (local.get $17)
            )
           )
           (f32.store
            (local.get $19)
            (local.get $13)
           )
           ;;@ celt/bands.c:637:0
           (local.set $12
            (i32.add
             (local.get $12)
             (i32.const 1)
            )
           )
           (br_if $while-in16
            (i32.lt_s
             (local.get $12)
             (local.get $15)
            )
           )
          )
          ;;@ celt/bands.c:636:0
          (local.set $11
           (i32.add
            (local.get $11)
            (i32.const 1)
           )
          )
          (br_if $while-in14
           (i32.ne
            (local.get $11)
            (local.get $14)
           )
          )
         )
        )
       )
      )
     )
     ;;@ celt/bands.c:1159:0
     (local.set $11
      (i32.and
       (local.get $10)
       (i32.const 15)
      )
     )
     (local.set $11
      (i32.add
       (local.get $11)
       (i32.const 1024)
      )
     )
     (local.set $11
      (i32.load8_u
       (local.get $11)
      )
     )
     (local.set $11
      (i32.and
       (local.get $11)
       (i32.const 255)
      )
     )
     (local.set $10
      (i32.shr_s
       (local.get $10)
       (i32.const 4)
      )
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1024)
      )
     )
     (local.set $10
      (i32.load8_u
       (local.get $10)
      )
     )
     (local.set $10
      (i32.and
       (local.get $10)
       (i32.const 255)
      )
     )
     (local.set $10
      (i32.shl
       (local.get $10)
       (i32.const 2)
      )
     )
     (local.set $10
      (i32.or
       (local.get $10)
       (local.get $11)
      )
     )
     ;;@ celt/bands.c:1150:0
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br_if $while-in8
      (i32.lt_u
       (local.get $5)
       (local.get $23)
      )
     )
    )
   )
  )
  ;;@ celt/bands.c:1161:0
  (local.set $4
   (i32.shr_s
    (local.get $4)
    (local.get $23)
   )
  )
  ;;@ celt/bands.c:1162:0
  (local.set $5
   (i32.shl
    (local.get $22)
    (local.get $23)
   )
  )
  ;;@ celt/bands.c:1165:0
  (local.set $11
   (i32.and
    (local.get $5)
    (i32.const 1)
   )
  )
  (local.set $11
   (i32.eqz
    (local.get $11)
   )
  )
  (local.set $12
   (i32.lt_s
    (local.get $16)
    (i32.const 0)
   )
  )
  (if
   (i32.and
    (local.get $11)
    (local.get $12)
   )
   (block $label$break$L64
    (local.set $22
     (i32.eqz
      (local.get $9)
     )
    )
    (if
     (i32.eqz
      (local.get $25)
     )
     (block
      (local.set $15
       (i32.xor
        (local.get $22)
        (i32.const 1)
       )
      )
      (local.set $20
       (i32.const 0)
      )
      (loop $while-in19
       (local.set $11
        (i32.shr_s
         (local.get $5)
         (i32.const 1)
        )
       )
       ;;@ celt/bands.c:636:0
       (local.set $12
        (i32.gt_s
         (local.get $4)
         (i32.const 0)
        )
       )
       (if
        ;;@ celt/bands.c:1169:0
        (i32.and
         (local.get $12)
         (local.get $15)
        )
        (block
         (local.set $19
          (i32.shl
           (local.get $4)
           (i32.const 1)
          )
         )
         (if
          (i32.gt_s
           (local.get $5)
           (i32.const 1)
          )
          (block
           (local.set $12
            (i32.const 0)
           )
           (loop $while-in21
            (local.set $14
             (i32.const 0)
            )
            (loop $while-in23
             ;;@ celt/bands.c:640:0
             (local.set $22
              (i32.mul
               (local.get $14)
               (local.get $19)
              )
             )
             (local.set $22
              (i32.add
               (local.get $12)
               (local.get $22)
              )
             )
             (local.set $22
              (i32.add
               (i32.shl
                (local.get $22)
                (i32.const 2)
               )
               (local.get $9)
              )
             )
             (local.set $13
              (f32.load
               (local.get $22)
              )
             )
             (local.set $13
              (f32.mul
               (local.get $13)
               (f32.const 0.7071067690849304)
              )
             )
             ;;@ celt/bands.c:641:0
             (local.set $18
              (i32.shl
               (local.get $14)
               (i32.const 1)
              )
             )
             (local.set $18
              (i32.or
               (local.get $18)
               (i32.const 1)
              )
             )
             (local.set $18
              (i32.mul
               (local.get $4)
               (local.get $18)
              )
             )
             (local.set $18
              (i32.add
               (local.get $12)
               (local.get $18)
              )
             )
             (local.set $18
              (i32.add
               (i32.shl
                (local.get $18)
                (i32.const 2)
               )
               (local.get $9)
              )
             )
             (local.set $17
              (f32.load
               (local.get $18)
              )
             )
             (local.set $17
              (f32.mul
               (local.get $17)
               (f32.const 0.7071067690849304)
              )
             )
             ;;@ celt/bands.c:642:0
             (local.set $24
              (f32.add
               (local.get $13)
               (local.get $17)
              )
             )
             (f32.store
              (local.get $22)
              (local.get $24)
             )
             ;;@ celt/bands.c:643:0
             (local.set $13
              (f32.sub
               (local.get $13)
               (local.get $17)
              )
             )
             (f32.store
              (local.get $18)
              (local.get $13)
             )
             ;;@ celt/bands.c:637:0
             (local.set $14
              (i32.add
               (local.get $14)
               (i32.const 1)
              )
             )
             (br_if $while-in23
              (i32.lt_s
               (local.get $14)
               (local.get $11)
              )
             )
            )
            ;;@ celt/bands.c:636:0
            (local.set $12
             (i32.add
              (local.get $12)
              (i32.const 1)
             )
            )
            (br_if $while-in21
             (i32.ne
              (local.get $4)
              (local.get $12)
             )
            )
           )
          )
         )
        )
       )
       ;;@ celt/bands.c:1171:0
       (local.set $12
        (i32.shl
         (local.get $10)
         (local.get $4)
        )
       )
       (local.set $10
        (i32.or
         (local.get $10)
         (local.get $12)
        )
       )
       ;;@ celt/bands.c:1172:0
       (local.set $4
        (i32.shl
         (local.get $4)
         (i32.const 1)
        )
       )
       ;;@ celt/bands.c:1174:0
       (local.set $12
        (i32.add
         (local.get $20)
         (i32.const 1)
        )
       )
       ;;@ celt/bands.c:1175:0
       (local.set $14
        (i32.add
         (local.get $16)
         (i32.const 1)
        )
       )
       ;;@ celt/bands.c:1165:0
       (local.set $5
        (i32.and
         (local.get $5)
         (i32.const 2)
        )
       )
       (local.set $5
        (i32.eqz
         (local.get $5)
        )
       )
       (local.set $16
        (i32.lt_s
         (local.get $16)
         (i32.const -1)
        )
       )
       (if
        (i32.and
         (local.get $5)
         (local.get $16)
        )
        (block
         (local.set $16
          (local.get $14)
         )
         (local.set $20
          (local.get $12)
         )
         (local.set $5
          (local.get $11)
         )
         (br $while-in19)
        )
        (block
         (local.set $5
          (local.get $11)
         )
         (br $label$break$L64)
        )
       )
      )
     )
    )
    (local.set $20
     (i32.const 0)
    )
    (local.set $11
     (local.get $10)
    )
    (local.set $10
     (loop $while-in25 (result i32)
      ;;@ celt/bands.c:635:0
      (local.set $10
       (i32.shr_s
        (local.get $5)
        (i32.const 1)
       )
      )
      (if
       ;;@ celt/bands.c:636:0
       (local.tee $19
        (i32.gt_s
         (local.get $4)
         (i32.const 0)
        )
       )
       (block
        (local.set $21
         (i32.shl
          (local.get $4)
          (i32.const 1)
         )
        )
        (if
         (i32.gt_s
          (local.get $5)
          (i32.const 1)
         )
         (block
          (local.set $12
           (i32.const 0)
          )
          (loop $while-in27
           (local.set $14
            (i32.const 0)
           )
           (loop $while-in29
            ;;@ celt/bands.c:640:0
            (local.set $18
             (i32.mul
              (local.get $14)
              (local.get $21)
             )
            )
            (local.set $18
             (i32.add
              (local.get $12)
              (local.get $18)
             )
            )
            (local.set $18
             (i32.add
              (i32.shl
               (local.get $18)
               (i32.const 2)
              )
              (local.get $1)
             )
            )
            (local.set $13
             (f32.load
              (local.get $18)
             )
            )
            (local.set $13
             (f32.mul
              (local.get $13)
              (f32.const 0.7071067690849304)
             )
            )
            ;;@ celt/bands.c:641:0
            (local.set $15
             (i32.shl
              (local.get $14)
              (i32.const 1)
             )
            )
            (local.set $15
             (i32.or
              (local.get $15)
              (i32.const 1)
             )
            )
            (local.set $15
             (i32.mul
              (local.get $4)
              (local.get $15)
             )
            )
            (local.set $15
             (i32.add
              (local.get $12)
              (local.get $15)
             )
            )
            (local.set $15
             (i32.add
              (i32.shl
               (local.get $15)
               (i32.const 2)
              )
              (local.get $1)
             )
            )
            (local.set $17
             (f32.load
              (local.get $15)
             )
            )
            (local.set $17
             (f32.mul
              (local.get $17)
              (f32.const 0.7071067690849304)
             )
            )
            ;;@ celt/bands.c:642:0
            (local.set $24
             (f32.add
              (local.get $13)
              (local.get $17)
             )
            )
            (f32.store
             (local.get $18)
             (local.get $24)
            )
            ;;@ celt/bands.c:643:0
            (local.set $13
             (f32.sub
              (local.get $13)
              (local.get $17)
             )
            )
            (f32.store
             (local.get $15)
             (local.get $13)
            )
            ;;@ celt/bands.c:637:0
            (local.set $14
             (i32.add
              (local.get $14)
              (i32.const 1)
             )
            )
            (br_if $while-in29
             (i32.lt_s
              (local.get $14)
              (local.get $10)
             )
            )
           )
           ;;@ celt/bands.c:636:0
           (local.set $12
            (i32.add
             (local.get $12)
             (i32.const 1)
            )
           )
           (br_if $while-in27
            (i32.ne
             (local.get $4)
             (local.get $12)
            )
           )
          )
         )
        )
       )
      )
      ;;@ celt/bands.c:1169:0
      (local.set $12
       (i32.xor
        (local.get $19)
        (i32.const 1)
       )
      )
      (if
       (i32.eqz
        (i32.or
         (local.get $12)
         (local.get $22)
        )
       )
       (block
        (local.set $19
         (i32.shl
          (local.get $4)
          (i32.const 1)
         )
        )
        (if
         (i32.gt_s
          (local.get $5)
          (i32.const 1)
         )
         (block
          (local.set $12
           (i32.const 0)
          )
          (loop $while-in31
           (local.set $14
            (i32.const 0)
           )
           (loop $while-in33
            ;;@ celt/bands.c:640:0
            (local.set $18
             (i32.mul
              (local.get $14)
              (local.get $19)
             )
            )
            (local.set $18
             (i32.add
              (local.get $12)
              (local.get $18)
             )
            )
            (local.set $18
             (i32.add
              (i32.shl
               (local.get $18)
               (i32.const 2)
              )
              (local.get $9)
             )
            )
            (local.set $13
             (f32.load
              (local.get $18)
             )
            )
            (local.set $13
             (f32.mul
              (local.get $13)
              (f32.const 0.7071067690849304)
             )
            )
            ;;@ celt/bands.c:641:0
            (local.set $15
             (i32.shl
              (local.get $14)
              (i32.const 1)
             )
            )
            (local.set $15
             (i32.or
              (local.get $15)
              (i32.const 1)
             )
            )
            (local.set $15
             (i32.mul
              (local.get $4)
              (local.get $15)
             )
            )
            (local.set $15
             (i32.add
              (local.get $12)
              (local.get $15)
             )
            )
            (local.set $15
             (i32.add
              (i32.shl
               (local.get $15)
               (i32.const 2)
              )
              (local.get $9)
             )
            )
            (local.set $17
             (f32.load
              (local.get $15)
             )
            )
            (local.set $17
             (f32.mul
              (local.get $17)
              (f32.const 0.7071067690849304)
             )
            )
            ;;@ celt/bands.c:642:0
            (local.set $24
             (f32.add
              (local.get $13)
              (local.get $17)
             )
            )
            (f32.store
             (local.get $18)
             (local.get $24)
            )
            ;;@ celt/bands.c:643:0
            (local.set $13
             (f32.sub
              (local.get $13)
              (local.get $17)
             )
            )
            (f32.store
             (local.get $15)
             (local.get $13)
            )
            ;;@ celt/bands.c:637:0
            (local.set $14
             (i32.add
              (local.get $14)
              (i32.const 1)
             )
            )
            (br_if $while-in33
             (i32.lt_s
              (local.get $14)
              (local.get $10)
             )
            )
           )
           ;;@ celt/bands.c:636:0
           (local.set $12
            (i32.add
             (local.get $12)
             (i32.const 1)
            )
           )
           (br_if $while-in31
            (i32.ne
             (local.get $4)
             (local.get $12)
            )
           )
          )
         )
        )
       )
      )
      ;;@ celt/bands.c:1171:0
      (local.set $12
       (i32.shl
        (local.get $11)
        (local.get $4)
       )
      )
      (local.set $11
       (i32.or
        (local.get $11)
        (local.get $12)
       )
      )
      ;;@ celt/bands.c:1172:0
      (local.set $4
       (i32.shl
        (local.get $4)
        (i32.const 1)
       )
      )
      ;;@ celt/bands.c:1174:0
      (local.set $12
       (i32.add
        (local.get $20)
        (i32.const 1)
       )
      )
      ;;@ celt/bands.c:1175:0
      (local.set $14
       (i32.add
        (local.get $16)
        (i32.const 1)
       )
      )
      ;;@ celt/bands.c:1165:0
      (local.set $5
       (i32.and
        (local.get $5)
        (i32.const 2)
       )
      )
      (local.set $5
       (i32.eqz
        (local.get $5)
       )
      )
      (local.set $16
       (i32.lt_s
        (local.get $16)
        (i32.const -1)
       )
      )
      (if (result i32)
       (i32.and
        (local.get $5)
        (local.get $16)
       )
       (block
        (local.set $16
         (local.get $14)
        )
        (local.set $20
         (local.get $12)
        )
        (local.set $5
         (local.get $10)
        )
        (br $while-in25)
       )
       (block (result i32)
        (local.set $5
         (local.get $10)
        )
        (local.get $11)
       )
      )
     )
    )
   )
   (local.set $12
    (i32.const 0)
   )
  )
  (if
   ;;@ celt/bands.c:1181:0
   (local.tee $16
    (i32.gt_s
     (local.get $4)
     (i32.const 1)
    )
   )
   (block
    (if
     ;;@ celt/bands.c:1183:0
     (local.get $25)
     (block
      ;;@ celt/bands.c:1184:0
      (local.set $11
       (i32.shl
        (local.get $4)
        (local.get $23)
       )
      )
      (local.set $14
       (i32.shr_s
        (local.get $5)
        (local.get $23)
       )
      )
      (call $_deinterleave_hadamard
       (local.get $1)
       (local.get $14)
       (local.get $11)
       (local.get $26)
      )
     )
    )
    (if
     ;;@ celt/bands.c:1185:0
     (local.get $9)
     (block
      ;;@ celt/bands.c:1186:0
      (local.set $11
       (i32.shl
        (local.get $4)
        (local.get $23)
       )
      )
      (local.set $14
       (i32.shr_s
        (local.get $5)
        (local.get $23)
       )
      )
      (call $_deinterleave_hadamard
       (local.get $9)
       (local.get $14)
       (local.get $11)
       (local.get $26)
      )
     )
    )
   )
  )
  ;;@ celt/bands.c:1189:0
  (local.set $3
   (call $_quant_partition
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $9)
    (local.get $6)
    (local.get $8)
    (local.get $10)
   )
  )
  ;;@ celt/bands.c:1192:0
  (local.set $0
   (i32.load offset=4
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (local.get $0)
   )
   ;;@ celt/bands.c:1232:0
   (return
    (local.get $3)
   )
  )
  (if
   (local.get $16)
   (block
    ;;@ celt/bands.c:1196:0
    (local.set $0
     (i32.shl
      (local.get $4)
      (local.get $23)
     )
    )
    (local.set $6
     (i32.shr_s
      (local.get $5)
      (local.get $23)
     )
    )
    (call $_interleave_hadamard
     (local.get $1)
     (local.get $6)
     (local.get $0)
     (local.get $26)
    )
   )
  )
  (if
   ;;@ celt/bands.c:1201:0
   (local.get $12)
   (block
    (local.set $0
     (local.get $3)
    )
    (local.set $9
     (i32.const 0)
    )
    (loop $while-in35
     ;;@ celt/bands.c:1203:0
     (local.set $3
      (i32.shr_s
       (local.get $4)
       (i32.const 1)
      )
     )
     ;;@ celt/bands.c:1204:0
     (local.set $6
      (i32.shl
       (local.get $5)
       (i32.const 1)
      )
     )
     ;;@ celt/bands.c:1205:0
     (local.set $5
      (i32.shr_u
       (local.get $0)
       (local.get $3)
      )
     )
     (local.set $0
      (i32.or
       (local.get $0)
       (local.get $5)
      )
     )
     ;;@ celt/bands.c:635:0
     (local.set $11
      (i32.shr_s
       (local.get $6)
       (i32.const 1)
      )
     )
     (if
      ;;@ celt/bands.c:636:0
      (i32.gt_s
       (local.get $4)
       (i32.const 1)
      )
      (block
       (local.set $14
        (i32.and
         (local.get $4)
         (i32.const -2)
        )
       )
       (if
        (i32.gt_s
         (local.get $6)
         (i32.const 1)
        )
        (block
         (local.set $4
          (i32.const 0)
         )
         (loop $while-in37
          (local.set $5
           (i32.const 0)
          )
          (loop $while-in39
           ;;@ celt/bands.c:640:0
           (local.set $10
            (i32.mul
             (local.get $5)
             (local.get $14)
            )
           )
           (local.set $10
            (i32.add
             (local.get $4)
             (local.get $10)
            )
           )
           (local.set $10
            (i32.add
             (i32.shl
              (local.get $10)
              (i32.const 2)
             )
             (local.get $1)
            )
           )
           (local.set $8
            (f32.load
             (local.get $10)
            )
           )
           (local.set $8
            (f32.mul
             (local.get $8)
             (f32.const 0.7071067690849304)
            )
           )
           ;;@ celt/bands.c:641:0
           (local.set $16
            (i32.shl
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.set $16
            (i32.or
             (local.get $16)
             (i32.const 1)
            )
           )
           (local.set $16
            (i32.mul
             (local.get $3)
             (local.get $16)
            )
           )
           (local.set $16
            (i32.add
             (local.get $4)
             (local.get $16)
            )
           )
           (local.set $16
            (i32.add
             (i32.shl
              (local.get $16)
              (i32.const 2)
             )
             (local.get $1)
            )
           )
           (local.set $13
            (f32.load
             (local.get $16)
            )
           )
           (local.set $13
            (f32.mul
             (local.get $13)
             (f32.const 0.7071067690849304)
            )
           )
           ;;@ celt/bands.c:642:0
           (local.set $17
            (f32.add
             (local.get $8)
             (local.get $13)
            )
           )
           (f32.store
            (local.get $10)
            (local.get $17)
           )
           ;;@ celt/bands.c:643:0
           (local.set $8
            (f32.sub
             (local.get $8)
             (local.get $13)
            )
           )
           (f32.store
            (local.get $16)
            (local.get $8)
           )
           ;;@ celt/bands.c:637:0
           (local.set $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (br_if $while-in39
            (i32.lt_s
             (local.get $5)
             (local.get $11)
            )
           )
          )
          ;;@ celt/bands.c:636:0
          (local.set $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (br_if $while-in37
           (i32.ne
            (local.get $3)
            (local.get $4)
           )
          )
         )
        )
       )
      )
     )
     ;;@ celt/bands.c:1201:0
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (if
      (i32.ne
       (local.get $9)
       (local.get $12)
      )
      (block
       (local.set $5
        (local.get $6)
       )
       (local.set $4
        (local.get $3)
       )
       (br $while-in35)
      )
     )
    )
   )
   (block
    (local.set $0
     (local.get $3)
    )
    (local.set $3
     (local.get $4)
    )
   )
  )
  (local.set $4
   (if (result i32)
    (local.get $27)
    (block (result i32)
     (local.set $4
      (i32.const 0)
     )
     (loop $while-in41
      ;;@ celt/bands.c:1215:0
      (local.set $0
       (i32.add
        (local.get $0)
        (i32.const 1040)
       )
      )
      (local.set $9
       (i32.load8_u
        (local.get $0)
       )
      )
      (local.set $6
       (i32.and
        (local.get $9)
        (i32.const 255)
       )
      )
      ;;@ celt/bands.c:1216:0
      (local.set $0
       (i32.shr_s
        (local.get $2)
        (local.get $4)
       )
      )
      (local.set $10
       (i32.shl
        (i32.const 1)
        (local.get $4)
       )
      )
      ;;@ celt/bands.c:635:0
      (local.set $12
       (i32.shr_s
        (local.get $0)
        (i32.const 1)
       )
      )
      (if
       ;;@ celt/bands.c:636:0
       (i32.ne
        (local.get $4)
        (i32.const 31)
       )
       (block
        (local.set $14
         (i32.shl
          (local.get $10)
          (i32.const 1)
         )
        )
        (if
         (i32.gt_s
          (local.get $0)
          (i32.const 1)
         )
         (block
          (local.set $0
           (i32.const 0)
          )
          (loop $while-in43
           (local.set $5
            (i32.const 0)
           )
           (loop $while-in45
            ;;@ celt/bands.c:640:0
            (local.set $16
             (i32.mul
              (local.get $5)
              (local.get $14)
             )
            )
            (local.set $16
             (i32.add
              (local.get $0)
              (local.get $16)
             )
            )
            (local.set $16
             (i32.add
              (i32.shl
               (local.get $16)
               (i32.const 2)
              )
              (local.get $1)
             )
            )
            (local.set $8
             (f32.load
              (local.get $16)
             )
            )
            (local.set $8
             (f32.mul
              (local.get $8)
              (f32.const 0.7071067690849304)
             )
            )
            ;;@ celt/bands.c:641:0
            (local.set $11
             (i32.shl
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.set $11
             (i32.or
              (local.get $11)
              (i32.const 1)
             )
            )
            (local.set $11
             (i32.shl
              (local.get $11)
              (local.get $4)
             )
            )
            (local.set $11
             (i32.add
              (local.get $0)
              (local.get $11)
             )
            )
            (local.set $11
             (i32.add
              (i32.shl
               (local.get $11)
               (i32.const 2)
              )
              (local.get $1)
             )
            )
            (local.set $13
             (f32.load
              (local.get $11)
             )
            )
            (local.set $13
             (f32.mul
              (local.get $13)
              (f32.const 0.7071067690849304)
             )
            )
            ;;@ celt/bands.c:642:0
            (local.set $17
             (f32.add
              (local.get $8)
              (local.get $13)
             )
            )
            (f32.store
             (local.get $16)
             (local.get $17)
            )
            ;;@ celt/bands.c:643:0
            (local.set $8
             (f32.sub
              (local.get $8)
              (local.get $13)
             )
            )
            (f32.store
             (local.get $11)
             (local.get $8)
            )
            ;;@ celt/bands.c:637:0
            (local.set $5
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (br_if $while-in45
             (i32.lt_s
              (local.get $5)
              (local.get $12)
             )
            )
           )
           ;;@ celt/bands.c:636:0
           (local.set $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (br_if $while-in43
            (i32.ne
             (local.get $0)
             (local.get $10)
            )
           )
          )
         )
        )
       )
      )
      ;;@ celt/bands.c:1209:0
      (local.set $4
       (i32.add
        (local.get $4)
        (i32.const 1)
       )
      )
      (if
       (i32.lt_u
        (local.get $4)
        (local.get $23)
       )
       (block
        (local.set $0
         (local.get $6)
        )
        (br $while-in41)
       )
      )
     )
     ;;@ celt/bands.c:1215:0
     (i32.and
      (local.get $9)
      (i32.const 255)
     )
    )
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:1218:0
  (local.set $3
   (i32.shl
    (local.get $3)
    (local.get $23)
   )
  )
  (if
   ;;@ celt/bands.c:1221:0
   (local.get $7)
   (block
    ;;@ celt/bands.c:1225:0
    (local.set $28
     (f64.convert_i32_s
      (local.get $2)
     )
    )
    (local.set $28
     (f64.sqrt
      (local.get $28)
     )
    )
    (local.set $8
     (f32.demote_f64
      (local.get $28)
     )
    )
    (if
     ;;@ celt/bands.c:1226:0
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
     (block
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in47
       ;;@ celt/bands.c:1227:0
       (local.set $5
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
         (local.get $1)
        )
       )
       (local.set $13
        (f32.load
         (local.get $5)
        )
       )
       (local.set $13
        (f32.mul
         (local.get $13)
         (local.get $8)
        )
       )
       (local.set $5
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
         (local.get $7)
        )
       )
       (f32.store
        (local.get $5)
        (local.get $13)
       )
       ;;@ celt/bands.c:1226:0
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br_if $while-in47
        (i32.ne
         (local.get $0)
         (local.get $2)
        )
       )
      )
     )
    )
   )
  )
  ;;@ celt/bands.c:1229:0
  (local.set $0
   (i32.shl
    (i32.const 1)
    (local.get $3)
   )
  )
  (local.set $0
   (i32.add
    (local.get $0)
    (i32.const -1)
   )
  )
  (local.set $0
   (i32.and
    (local.get $0)
    (local.get $4)
   )
  )
  ;;@ celt/bands.c:1232:0
  (local.get $0)
 )
 (func $_quant_band_stereo (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (result i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 i32)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f32)
  (local $20 f32)
  (local $21 i32)
  (local $22 i32)
  (local $23 f32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local.set $17
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $13
   (i32.add
    (local.get $17)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $18
    (i32.add
     (local.get $17)
     (i32.const 4)
    )
   )
   (local.get $4)
  )
  (i32.store
   (local.get $17)
   (local.get $10)
  )
  ;;@ celt/bands.c:1253:0
  (local.set $21
   (i32.load
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:1254:0
  (local.set $15
   (i32.load offset=28
    (local.get $0)
   )
  )
  (block $folding-inner0
   (return
    (if (result i32)
     ;;@ celt/bands.c:1257:0
     (i32.eq
      (local.get $3)
      (i32.const 1)
     )
     (block (result i32)
      ;;@ celt/bands.c:916:0
      (local.set $7
       (i32.eqz
        (local.get $21)
       )
      )
      (local.set $6
       (select
        (i32.const 1)
        (i32.const 2)
        (local.tee $5
         (i32.eqz
          (local.get $2)
         )
        )
       )
      )
      ;;@ celt/bands.c:919:0
      (local.set $3
       (i32.load offset=32
        (local.get $0)
       )
      )
      (local.set $4
       (i32.gt_s
        (local.get $3)
        (i32.const 7)
       )
      )
      (if
       (local.get $7)
       (block
        (block $__rjto$1
         (block $__rjti$1
          (local.set $4
           (if (result i32)
            (local.get $4)
            (block (result i32)
             ;;@ celt/bands.c:926:0
             (local.set $7
              (call $_ec_dec_bits
               (local.get $15)
               (i32.const 1)
              )
             )
             ;;@ celt/bands.c:928:0
             (local.set $3
              (i32.load offset=32
               (local.get $0)
              )
             )
             (local.set $3
              (i32.add
               (local.get $3)
               (i32.const -8)
              )
             )
             (i32.store offset=32
              (local.get $0)
              (local.get $3)
             )
             ;;@ celt/bands.c:931:0
             (local.set $4
              (i32.load offset=4
               (local.get $0)
              )
             )
             (local.set $9
              (i32.eqz
               (local.get $4)
              )
             )
             ;;@ celt/bands.c:932:0
             (local.set $7
              (i32.eqz
               (local.get $7)
              )
             )
             ;;@ celt/bands.c:931:0
             (local.set $11
              (select
               (f32.const 1)
               (f32.const -1)
               (local.get $7)
              )
             )
             (br_if $__rjti$1
              (i32.eqz
               (local.get $9)
              )
             )
             (i32.const 0)
            )
            (block (result i32)
             (local.set $4
              (i32.load offset=4
               (local.get $0)
              )
             )
             (if (result i32)
              (local.get $4)
              (block
               (local.set $11
                (f32.const 1)
               )
               (br $__rjti$1)
              )
              (i32.const 0)
             )
            )
           )
          )
          (br $__rjto$1)
         )
         ;;@ celt/bands.c:932:0
         (f32.store
          (local.get $1)
          (local.get $11)
         )
        )
        (if
         (i32.eqz
          (local.get $5)
         )
         (block
          (local.set $5
           (i32.const 1)
          )
          (loop $while-in
           (block $__rjto$0
            (block $__rjti$0
             (local.set $4
              (if (result i32)
               ;;@ celt/bands.c:919:0
               (i32.gt_s
                (local.get $3)
                (i32.const 7)
               )
               (block (result i32)
                ;;@ celt/bands.c:926:0
                (local.set $7
                 (call $_ec_dec_bits
                  (local.get $15)
                  (i32.const 1)
                 )
                )
                ;;@ celt/bands.c:928:0
                (local.set $3
                 (i32.load offset=32
                  (local.get $0)
                 )
                )
                (local.set $3
                 (i32.add
                  (local.get $3)
                  (i32.const -8)
                 )
                )
                (i32.store offset=32
                 (local.get $0)
                 (local.get $3)
                )
                ;;@ celt/bands.c:931:0
                (local.set $4
                 (i32.load offset=4
                  (local.get $0)
                 )
                )
                (local.set $9
                 (i32.eqz
                  (local.get $4)
                 )
                )
                ;;@ celt/bands.c:932:0
                (local.set $7
                 (i32.eqz
                  (local.get $7)
                 )
                )
                ;;@ celt/bands.c:931:0
                (local.set $11
                 (select
                  (f32.const 1)
                  (f32.const -1)
                  (local.get $7)
                 )
                )
                (br_if $__rjti$0
                 (i32.eqz
                  (local.get $9)
                 )
                )
                (i32.const 0)
               )
               (if (result i32)
                (local.get $4)
                (block
                 (local.set $11
                  (f32.const 1)
                 )
                 (br $__rjti$0)
                )
                (i32.const 0)
               )
              )
             )
             (br $__rjto$0)
            )
            ;;@ celt/bands.c:932:0
            (f32.store
             (local.get $2)
             (local.get $11)
            )
           )
           ;;@ celt/bands.c:934:0
           (local.set $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (br_if $while-in
            (i32.lt_u
             (local.get $5)
             (local.get $6)
            )
           )
          )
         )
        )
       )
       (block
        (block $__rjto$3
         (block $__rjti$3
          (local.set $4
           (if (result i32)
            (local.get $4)
            (block (result i32)
             ;;@ celt/bands.c:923:0
             (local.set $11
              (f32.load
               (local.get $1)
              )
             )
             (local.set $7
              (f32.lt
               (local.get $11)
               (f32.const 0)
              )
             )
             ;;@ celt/bands.c:924:0
             (call $_ec_enc_bits
              (local.get $15)
              (local.get $7)
             )
             ;;@ celt/bands.c:928:0
             (local.set $3
              (i32.load offset=32
               (local.get $0)
              )
             )
             (local.set $3
              (i32.add
               (local.get $3)
               (i32.const -8)
              )
             )
             (i32.store offset=32
              (local.get $0)
              (local.get $3)
             )
             ;;@ celt/bands.c:931:0
             (local.set $4
              (i32.load offset=4
               (local.get $0)
              )
             )
             (local.set $9
              (i32.eqz
               (local.get $4)
              )
             )
             (local.set $11
              (select
               (f32.const -1)
               (f32.const 1)
               (local.get $7)
              )
             )
             (br_if $__rjti$3
              (i32.eqz
               (local.get $9)
              )
             )
             (i32.const 0)
            )
            (block (result i32)
             (local.set $4
              (i32.load offset=4
               (local.get $0)
              )
             )
             (if (result i32)
              (local.get $4)
              (block
               (local.set $11
                (f32.const 1)
               )
               (br $__rjti$3)
              )
              (i32.const 0)
             )
            )
           )
          )
          (br $__rjto$3)
         )
         ;;@ celt/bands.c:932:0
         (f32.store
          (local.get $1)
          (local.get $11)
         )
        )
        (if
         (i32.eqz
          (local.get $5)
         )
         (block
          (local.set $5
           (i32.const 1)
          )
          (loop $while-in1
           (block $__rjto$2
            (block $__rjti$2
             (local.set $4
              (if (result i32)
               ;;@ celt/bands.c:919:0
               (i32.gt_s
                (local.get $3)
                (i32.const 7)
               )
               (block (result i32)
                ;;@ celt/bands.c:923:0
                (local.set $11
                 (f32.load
                  (local.get $2)
                 )
                )
                (local.set $7
                 (f32.lt
                  (local.get $11)
                  (f32.const 0)
                 )
                )
                ;;@ celt/bands.c:924:0
                (call $_ec_enc_bits
                 (local.get $15)
                 (local.get $7)
                )
                ;;@ celt/bands.c:928:0
                (local.set $3
                 (i32.load offset=32
                  (local.get $0)
                 )
                )
                (local.set $3
                 (i32.add
                  (local.get $3)
                  (i32.const -8)
                 )
                )
                (i32.store offset=32
                 (local.get $0)
                 (local.get $3)
                )
                ;;@ celt/bands.c:931:0
                (local.set $4
                 (i32.load offset=4
                  (local.get $0)
                 )
                )
                (local.set $9
                 (i32.eqz
                  (local.get $4)
                 )
                )
                (local.set $11
                 (select
                  (f32.const -1)
                  (f32.const 1)
                  (local.get $7)
                 )
                )
                (br_if $__rjti$2
                 (i32.eqz
                  (local.get $9)
                 )
                )
                (i32.const 0)
               )
               (if (result i32)
                (local.get $4)
                (block
                 (local.set $11
                  (f32.const 1)
                 )
                 (br $__rjti$2)
                )
                (i32.const 0)
               )
              )
             )
             (br $__rjto$2)
            )
            ;;@ celt/bands.c:932:0
            (f32.store
             (local.get $2)
             (local.get $11)
            )
           )
           ;;@ celt/bands.c:934:0
           (local.set $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (br_if $while-in1
            (i32.lt_u
             (local.get $5)
             (local.get $6)
            )
           )
          )
         )
        )
       )
      )
      (if
       ;;@ celt/bands.c:935:0
       (i32.eqz
        (local.get $8)
       )
       (block
        (global.set $STACKTOP
         (local.get $17)
        )
        ;;@ celt/bands.c:1382:0
        (return
         (i32.const 1)
        )
       )
      )
      ;;@ celt/bands.c:936:0
      (local.set $0
       (i32.load
        (local.get $1)
       )
      )
      (i32.store
       (local.get $8)
       (local.get $0)
      )
      (global.set $STACKTOP
       (local.get $17)
      )
      ;;@ celt/bands.c:1382:0
      (i32.const 1)
     )
     (block (result i32)
      ;;@ celt/bands.c:1264:0
      (call $_compute_theta
       (local.get $0)
       (local.get $13)
       (local.get $1)
       (local.get $2)
       (local.get $3)
       (local.get $18)
       (local.get $5)
       (local.get $5)
       (local.get $7)
       (i32.const 1)
       (local.get $17)
      )
      ;;@ celt/bands.c:1265:0
      (local.set $25
       (i32.load
        (local.get $13)
       )
      )
      ;;@ celt/bands.c:1266:0
      (local.set $4
       (i32.load offset=4
        (local.get $13)
       )
      )
      ;;@ celt/bands.c:1267:0
      (local.set $22
       (i32.load offset=8
        (local.get $13)
       )
      )
      ;;@ celt/bands.c:1269:0
      (local.set $16
       (i32.load offset=16
        (local.get $13)
       )
      )
      ;;@ celt/bands.c:1270:0
      (local.set $24
       (i32.load offset=20
        (local.get $13)
       )
      )
      ;;@ celt/bands.c:1275:0
      (local.set $11
       (f32.convert_i32_s
        (local.get $4)
       )
      )
      (local.set $20
       (f32.mul
        (local.get $11)
        (f32.const 0.000030517578125)
       )
      )
      ;;@ celt/bands.c:1276:0
      (local.set $11
       (f32.convert_i32_s
        (local.get $22)
       )
      )
      (local.set $11
       (f32.mul
        (local.get $11)
        (f32.const 0.000030517578125)
       )
      )
      ;;@ celt/bands.c:1282:0
      (local.set $4
       (i32.load
        (local.get $18)
       )
      )
      (if
       (local.tee $22
        (i32.eq
         (local.get $3)
         (i32.const 2)
        )
       )
       (block
        ;;@ celt/bands.c:1290:0
        (local.set $13
         (i32.or
          (local.get $16)
          (i32.const 16384)
         )
        )
        (local.set $18
         (i32.ne
          (local.get $13)
          (i32.const 16384)
         )
        )
        (local.set $13
         (select
          (i32.const 8)
          (i32.const 0)
          (local.get $18)
         )
        )
        ;;@ celt/bands.c:1292:0
        (local.set $26
         (i32.sub
          (local.get $4)
          (local.get $13)
         )
        )
        ;;@ celt/bands.c:1293:0
        (local.set $4
         (i32.gt_s
          (local.get $16)
          (i32.const 8192)
         )
        )
        ;;@ celt/bands.c:1294:0
        (local.set $16
         (i32.load offset=32
          (local.get $0)
         )
        )
        (local.set $13
         (i32.add
          (local.get $13)
          (local.get $24)
         )
        )
        (local.set $13
         (i32.sub
          (local.get $16)
          (local.get $13)
         )
        )
        (i32.store offset=32
         (local.get $0)
         (local.get $13)
        )
        ;;@ celt/bands.c:1296:0
        (local.set $13
         (select
          (local.get $2)
          (local.get $1)
          (local.get $4)
         )
        )
        ;;@ celt/bands.c:1297:0
        (local.set $16
         (select
          (local.get $1)
          (local.get $2)
          (local.get $4)
         )
        )
        (if
         (local.get $18)
         (if
          ;;@ celt/bands.c:1300:0
          (local.get $21)
          (block
           ;;@ celt/bands.c:1303:0
           (local.set $12
            (f32.load
             (local.get $13)
            )
           )
           (local.set $14
            (f32.load offset=4
             (local.get $16)
            )
           )
           (local.set $12
            (f32.mul
             (local.get $12)
             (local.get $14)
            )
           )
           (local.set $14
            (f32.load offset=4
             (local.get $13)
            )
           )
           (local.set $19
            (f32.load
             (local.get $16)
            )
           )
           (local.set $14
            (f32.mul
             (local.get $14)
             (local.get $19)
            )
           )
           (local.set $12
            (f32.sub
             (local.get $12)
             (local.get $14)
            )
           )
           (local.set $4
            (f32.lt
             (local.get $12)
             (f32.const 0)
            )
           )
           ;;@ celt/bands.c:1304:0
           (call $_ec_enc_bits
            (local.get $15)
            (local.get $4)
           )
          )
          ;;@ celt/bands.c:1306:0
          (local.set $4
           (call $_ec_dec_bits
            (local.get $15)
            (i32.const 1)
           )
          )
         )
         (local.set $4
          (i32.const 0)
         )
        )
        ;;@ celt/bands.c:1309:0
        (local.set $4
         (i32.shl
          (local.get $4)
          (i32.const 1)
         )
        )
        (local.set $15
         (i32.sub
          (i32.const 1)
          (local.get $4)
         )
        )
        ;;@ celt/bands.c:1312:0
        (local.set $4
         (call $_quant_band
          (local.get $0)
          (local.get $13)
          (i32.const 2)
          (local.get $26)
          (local.get $5)
          (local.get $6)
          (local.get $7)
          (local.get $8)
          (f32.const 1)
          (local.get $9)
          (local.get $10)
         )
        )
        ;;@ celt/bands.c:1316:0
        (local.set $5
         (i32.sub
          (i32.const 0)
          (local.get $15)
         )
        )
        (local.set $12
         (f32.convert_i32_s
          (local.get $5)
         )
        )
        (local.set $14
         (f32.load offset=4
          (local.get $13)
         )
        )
        (local.set $12
         (f32.mul
          (local.get $14)
          (local.get $12)
         )
        )
        (f32.store
         (local.get $16)
         (local.get $12)
        )
        ;;@ celt/bands.c:1317:0
        (local.set $12
         (f32.convert_i32_s
          (local.get $15)
         )
        )
        (local.set $14
         (f32.load
          (local.get $13)
         )
        )
        (local.set $12
         (f32.mul
          (local.get $14)
          (local.get $12)
         )
        )
        (f32.store offset=4
         (local.get $16)
         (local.get $12)
        )
        ;;@ celt/bands.c:1318:0
        (local.set $5
         (i32.load offset=4
          (local.get $0)
         )
        )
        (if
         (local.get $5)
         (block
          ;;@ celt/bands.c:1321:0
          (local.set $12
           (f32.load
            (local.get $1)
           )
          )
          (local.set $12
           (f32.mul
            (local.get $20)
            (local.get $12)
           )
          )
          (f32.store
           (local.get $1)
           (local.get $12)
          )
          ;;@ celt/bands.c:1322:0
          (local.set $12
           (f32.load offset=4
            (local.get $1)
           )
          )
          (local.set $12
           (f32.mul
            (local.get $20)
            (local.get $12)
           )
          )
          (f32.store offset=4
           (local.get $1)
           (local.get $12)
          )
          ;;@ celt/bands.c:1323:0
          (local.set $12
           (f32.load
            (local.get $2)
           )
          )
          (local.set $12
           (f32.mul
            (local.get $11)
            (local.get $12)
           )
          )
          (f32.store
           (local.get $2)
           (local.get $12)
          )
          ;;@ celt/bands.c:1324:0
          (local.set $14
           (f32.load offset=4
            (local.get $2)
           )
          )
          (local.set $11
           (f32.mul
            (local.get $11)
            (local.get $14)
           )
          )
          (f32.store offset=4
           (local.get $2)
           (local.get $11)
          )
          ;;@ celt/bands.c:1325:0
          (local.set $11
           (f32.load
            (local.get $1)
           )
          )
          ;;@ celt/bands.c:1326:0
          (local.set $12
           (f32.sub
            (local.get $11)
            (local.get $12)
           )
          )
          (f32.store
           (local.get $1)
           (local.get $12)
          )
          ;;@ celt/bands.c:1327:0
          (local.set $12
           (f32.load
            (local.get $2)
           )
          )
          (local.set $11
           (f32.add
            (local.get $11)
            (local.get $12)
           )
          )
          (f32.store
           (local.get $2)
           (local.get $11)
          )
          ;;@ celt/bands.c:1328:0
          (local.set $11
           (f32.load offset=4
            (local.get $1)
           )
          )
          ;;@ celt/bands.c:1329:0
          (local.set $12
           (f32.load offset=4
            (local.get $2)
           )
          )
          (local.set $12
           (f32.sub
            (local.get $11)
            (local.get $12)
           )
          )
          (f32.store offset=4
           (local.get $1)
           (local.get $12)
          )
          ;;@ celt/bands.c:1330:0
          (local.set $12
           (f32.load offset=4
            (local.get $2)
           )
          )
          (local.set $11
           (f32.add
            (local.get $11)
            (local.get $12)
           )
          )
          (f32.store offset=4
           (local.get $2)
           (local.get $11)
          )
         )
        )
       )
       (block
        ;;@ celt/bands.c:1268:0
        (local.set $10
         (i32.load offset=12
          (local.get $13)
         )
        )
        ;;@ celt/bands.c:1336:0
        (local.set $10
         (i32.sub
          (local.get $4)
          (local.get $10)
         )
        )
        (local.set $10
         (i32.div_s
          (local.get $10)
          (i32.const 2)
         )
        )
        (local.set $13
         (i32.lt_s
          (local.get $4)
          (local.get $10)
         )
        )
        (local.set $10
         (select
          (local.get $4)
          (local.get $10)
          (local.get $13)
         )
        )
        (local.set $13
         (i32.gt_s
          (local.get $10)
          (i32.const 0)
         )
        )
        (local.set $10
         (select
          (local.get $10)
          (i32.const 0)
          (local.get $13)
         )
        )
        ;;@ celt/bands.c:1337:0
        (local.set $4
         (i32.sub
          (local.get $4)
          (local.get $10)
         )
        )
        ;;@ celt/bands.c:1338:0
        (local.set $13
         (i32.load offset=32
          (local.get $0)
         )
        )
        (local.set $15
         (i32.sub
          (local.get $13)
          (local.get $24)
         )
        )
        (i32.store offset=32
         (local.get $0)
         (local.get $15)
        )
        ;;@ celt/bands.c:1341:0
        (local.set $13
         (i32.load
          (local.get $17)
         )
        )
        (local.set $4
         (if (result i32)
          (i32.lt_s
           (local.get $10)
           (local.get $4)
          )
          (block (result i32)
           ;;@ celt/bands.c:1357:0
           (local.set $18
            (i32.shr_s
             (local.get $13)
             (local.get $5)
            )
           )
           (local.set $18
            (call $_quant_band
             (local.get $0)
             (local.get $2)
             (local.get $3)
             (local.get $4)
             (local.get $5)
             (i32.const 0)
             (local.get $7)
             (i32.const 0)
             (local.get $11)
             (i32.const 0)
             (local.get $18)
            )
           )
           ;;@ celt/bands.c:1358:0
           (local.set $21
            (i32.load offset=32
             (local.get $0)
            )
           )
           (local.set $15
            (i32.sub
             (local.get $21)
             (local.get $15)
            )
           )
           (local.set $4
            (i32.add
             (local.get $4)
             (local.get $15)
            )
           )
           ;;@ celt/bands.c:1359:0
           (local.set $15
            (i32.gt_s
             (local.get $4)
             (i32.const 24)
            )
           )
           (local.set $16
            (i32.ne
             (local.get $16)
             (i32.const 16384)
            )
           )
           (local.set $15
            (i32.and
             (local.get $15)
             (local.get $16)
            )
           )
           ;;@ celt/bands.c:1360:0
           (local.set $4
            (i32.add
             (local.get $4)
             (i32.const -24)
            )
           )
           ;;@ celt/bands.c:1359:0
           (local.set $4
            (select
             (local.get $4)
             (i32.const 0)
             (local.get $15)
            )
           )
           (local.set $4
            (i32.add
             (local.get $4)
             (local.get $10)
            )
           )
           ;;@ celt/bands.c:1363:0
           (local.set $4
            (call $_quant_band
             (local.get $0)
             (local.get $1)
             (local.get $3)
             (local.get $4)
             (local.get $5)
             (local.get $6)
             (local.get $7)
             (local.get $8)
             (f32.const 1)
             (local.get $9)
             (local.get $13)
            )
           )
           (i32.or
            (local.get $4)
            (local.get $18)
           )
          )
          (block (result i32)
           ;;@ celt/bands.c:1345:0
           (local.set $8
            (call $_quant_band
             (local.get $0)
             (local.get $1)
             (local.get $3)
             (local.get $10)
             (local.get $5)
             (local.get $6)
             (local.get $7)
             (local.get $8)
             (f32.const 1)
             (local.get $9)
             (local.get $13)
            )
           )
           ;;@ celt/bands.c:1347:0
           (local.set $6
            (i32.load offset=32
             (local.get $0)
            )
           )
           (local.set $6
            (i32.sub
             (local.get $6)
             (local.get $15)
            )
           )
           (local.set $6
            (i32.add
             (local.get $6)
             (local.get $10)
            )
           )
           ;;@ celt/bands.c:1348:0
           (local.set $9
            (i32.gt_s
             (local.get $6)
             (i32.const 24)
            )
           )
           (local.set $10
            (i32.ne
             (local.get $16)
             (i32.const 0)
            )
           )
           (local.set $9
            (i32.and
             (local.get $9)
             (local.get $10)
            )
           )
           ;;@ celt/bands.c:1349:0
           (local.set $6
            (i32.add
             (local.get $6)
             (i32.const -24)
            )
           )
           ;;@ celt/bands.c:1348:0
           (local.set $6
            (select
             (local.get $6)
             (i32.const 0)
             (local.get $9)
            )
           )
           (local.set $4
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           ;;@ celt/bands.c:1353:0
           (local.set $6
            (i32.shr_s
             (local.get $13)
             (local.get $5)
            )
           )
           (local.set $4
            (call $_quant_band
             (local.get $0)
             (local.get $2)
             (local.get $3)
             (local.get $4)
             (local.get $5)
             (i32.const 0)
             (local.get $7)
             (i32.const 0)
             (local.get $11)
             (i32.const 0)
             (local.get $6)
            )
           )
           (i32.or
            (local.get $4)
            (local.get $8)
           )
          )
         )
        )
       )
      )
      ;;@ celt/bands.c:1370:0
      (local.set $0
       (i32.load offset=4
        (local.get $0)
       )
      )
      (br_if $folding-inner0
       (i32.eqz
        (local.get $0)
       )
      )
      (if
       (i32.eqz
        (local.get $22)
       )
       (block $do-once4
        (if
         ;;@ ./celt/pitch.h:143:0
         (local.tee $5
          (i32.gt_s
           (local.get $3)
           (i32.const 0)
          )
         )
         (block
          (local.set $11
           (f32.const 0)
          )
          (local.set $0
           (i32.const 0)
          )
          (local.set $12
           (f32.const 0)
          )
          (loop $while-in7
           ;;@ ./celt/pitch.h:145:0
           (local.set $6
            (i32.add
             (i32.shl
              (local.get $0)
              (i32.const 2)
             )
             (local.get $2)
            )
           )
           (local.set $14
            (f32.load
             (local.get $6)
            )
           )
           (local.set $6
            (i32.add
             (i32.shl
              (local.get $0)
              (i32.const 2)
             )
             (local.get $1)
            )
           )
           (local.set $19
            (f32.load
             (local.get $6)
            )
           )
           (local.set $19
            (f32.mul
             (local.get $14)
             (local.get $19)
            )
           )
           (local.set $11
            (f32.add
             (local.get $11)
             (local.get $19)
            )
           )
           ;;@ ./celt/pitch.h:146:0
           (local.set $14
            (f32.mul
             (local.get $14)
             (local.get $14)
            )
           )
           (local.set $12
            (f32.add
             (local.get $12)
             (local.get $14)
            )
           )
           ;;@ ./celt/pitch.h:143:0
           (local.set $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (br_if $while-in7
            (i32.ne
             (local.get $0)
             (local.get $3)
            )
           )
          )
         )
         (block
          (local.set $12
           (f32.const 0)
          )
          (local.set $11
           (f32.const 0)
          )
         )
        )
        ;;@ celt/bands.c:440:0
        (local.set $14
         (f32.mul
          (local.get $20)
          (local.get $11)
         )
        )
        ;;@ celt/bands.c:443:0
        (local.set $11
         (f32.mul
          (local.get $20)
          (local.get $20)
         )
        )
        (local.set $11
         (f32.add
          (local.get $11)
          (local.get $12)
         )
        )
        (local.set $12
         (f32.mul
          (local.get $14)
          (f32.const 2)
         )
        )
        (local.set $14
         (f32.sub
          (local.get $11)
          (local.get $12)
         )
        )
        ;;@ celt/bands.c:444:0
        (local.set $11
         (f32.add
          (local.get $11)
          (local.get $12)
         )
        )
        ;;@ celt/bands.c:445:0
        (local.set $0
         (f32.lt
          (local.get $11)
          (f32.const 6.000000284984708e-04)
         )
        )
        (local.set $6
         (f32.lt
          (local.get $14)
          (f32.const 6.000000284984708e-04)
         )
        )
        (if
         (i32.or
          (local.get $0)
          (local.get $6)
         )
         (block
          ;;@ celt/bands.c:447:0
          (local.set $0
           (i32.shl
            (local.get $3)
            (i32.const 2)
           )
          )
          (drop
           (call $_memcpy
            (local.get $2)
            (local.get $1)
            (local.get $0)
           )
          )
          (br $do-once4)
         )
        )
        ;;@ celt/bands.c:456:0
        (local.set $12
         (f32.sqrt
          (local.get $14)
         )
        )
        (local.set $14
         (f32.div
          (f32.const 1)
          (local.get $12)
         )
        )
        ;;@ celt/bands.c:458:0
        (local.set $11
         (f32.sqrt
          (local.get $11)
         )
        )
        (br_if $folding-inner0
         (i32.eqz
          (local.get $5)
         )
        )
        (local.set $19
         (f32.div
          (f32.const 1)
          (local.get $11)
         )
        )
        (local.set $0
         (i32.const 0)
        )
        (loop $while-in9
         ;;@ celt/bands.c:471:0
         (local.set $5
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $1)
          )
         )
         (local.set $11
          (f32.load
           (local.get $5)
          )
         )
         (local.set $11
          (f32.mul
           (local.get $20)
           (local.get $11)
          )
         )
         ;;@ celt/bands.c:472:0
         (local.set $6
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $2)
          )
         )
         (local.set $12
          (f32.load
           (local.get $6)
          )
         )
         ;;@ celt/bands.c:473:0
         (local.set $23
          (f32.sub
           (local.get $11)
           (local.get $12)
          )
         )
         (local.set $23
          (f32.mul
           (local.get $14)
           (local.get $23)
          )
         )
         (f32.store
          (local.get $5)
          (local.get $23)
         )
         ;;@ celt/bands.c:474:0
         (local.set $11
          (f32.add
           (local.get $11)
           (local.get $12)
          )
         )
         (local.set $11
          (f32.mul
           (local.get $19)
           (local.get $11)
          )
         )
         (f32.store
          (local.get $6)
          (local.get $11)
         )
         ;;@ celt/bands.c:467:0
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (br_if $while-in9
          (i32.ne
           (local.get $0)
           (local.get $3)
          )
         )
        )
       )
      )
      ;;@ celt/bands.c:1374:0
      (local.set $0
       (i32.ne
        (local.get $25)
        (i32.const 0)
       )
      )
      ;;@ celt/bands.c:1377:0
      (local.set $1
       (i32.gt_s
        (local.get $3)
        (i32.const 0)
       )
      )
      ;;@ celt/bands.c:1374:0
      (br_if $folding-inner0
       (i32.eqz
        (i32.and
         (local.get $0)
         (local.get $1)
        )
       )
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in11
       ;;@ celt/bands.c:1378:0
       (local.set $1
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
         (local.get $2)
        )
       )
       (local.set $11
        (f32.load
         (local.get $1)
        )
       )
       (local.set $11
        (f32.neg
         (local.get $11)
        )
       )
       (f32.store
        (local.get $1)
        (local.get $11)
       )
       ;;@ celt/bands.c:1377:0
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br_if $while-in11
        (i32.ne
         (local.get $0)
         (local.get $3)
        )
       )
      )
      (global.set $STACKTOP
       (local.get $17)
      )
      ;;@ celt/bands.c:1382:0
      (local.get $4)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $17)
  )
  (local.get $4)
 )
 (func $_deinterleave_hadamard (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  ;;@ celt/bands.c:589:0
  (local.set $10
   (i32.mul
    (local.get $1)
    (local.get $2)
   )
  )
  ;;@ celt/bands.c:590:0
  (local.set $4
   (i32.shl
    (local.get $10)
    (i32.const 2)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $4)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (if
   ;;@ celt/bands.c:591:0
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 40838)
    (i32.const 40801)
    (i32.const 591)
   )
  )
  (if
   ;;@ celt/bands.c:592:0
   (local.get $3)
   (block
    ;;@ celt/bands.c:594:0
    (local.set $3
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
      (i32.const 1056)
     )
    )
    (local.set $8
     (i32.add
      (local.get $3)
      (i32.const -8)
     )
    )
    (if
     (i32.gt_s
      (local.get $1)
      (i32.const 0)
     )
     (block
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in3
       (local.set $6
        (i32.mul
         (local.get $1)
         (i32.load
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 2)
           )
           (local.get $8)
          )
         )
        )
       )
       (local.set $4
        (i32.const 0)
       )
       (loop $while-in5
        ;;@ celt/bands.c:598:0
        (local.set $5
         (i32.mul
          (local.get $2)
          (local.get $4)
         )
        )
        (local.set $5
         (i32.add
          (local.get $3)
          (local.get $5)
         )
        )
        (local.set $5
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $0)
         )
        )
        (local.set $5
         (i32.load
          (local.get $5)
         )
        )
        (local.set $9
         (i32.add
          (local.get $4)
          (local.get $6)
         )
        )
        (local.set $9
         (i32.add
          (i32.shl
           (local.get $9)
           (i32.const 2)
          )
          (local.get $7)
         )
        )
        (i32.store
         (local.get $9)
         (local.get $5)
        )
        ;;@ celt/bands.c:597:0
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (br_if $while-in5
         (i32.ne
          (local.get $1)
          (local.get $4)
         )
        )
       )
       ;;@ celt/bands.c:595:0
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (br_if $while-in3
        (i32.ne
         (local.get $2)
         (local.get $3)
        )
       )
      )
     )
    )
   )
   (if
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
    (block
     (local.set $3
      (i32.const 0)
     )
     (loop $while-in
      (local.set $8
       (i32.mul
        (local.get $1)
        (local.get $3)
       )
      )
      (local.set $4
       (i32.const 0)
      )
      (loop $while-in1
       ;;@ celt/bands.c:603:0
       (local.set $6
        (i32.mul
         (local.get $2)
         (local.get $4)
        )
       )
       (local.set $6
        (i32.add
         (local.get $3)
         (local.get $6)
        )
       )
       (local.set $6
        (i32.add
         (i32.shl
          (local.get $6)
          (i32.const 2)
         )
         (local.get $0)
        )
       )
       (local.set $6
        (i32.load
         (local.get $6)
        )
       )
       (local.set $5
        (i32.add
         (local.get $4)
         (local.get $8)
        )
       )
       (local.set $5
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (local.get $7)
        )
       )
       (i32.store
        (local.get $5)
        (local.get $6)
       )
       ;;@ celt/bands.c:602:0
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (br_if $while-in1
        (i32.ne
         (local.get $1)
         (local.get $4)
        )
       )
      )
      ;;@ celt/bands.c:601:0
      (local.set $3
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (br_if $while-in
       (i32.ne
        (local.get $2)
        (local.get $3)
       )
      )
     )
    )
   )
  )
  ;;@ celt/bands.c:605:0
  (local.set $1
   (i32.shl
    (local.get $10)
    (i32.const 2)
   )
  )
  (drop
   (call $_memcpy
    (local.get $0)
    (local.get $7)
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $_quant_partition (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 f32) (param $8 i32) (result i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f32)
  (local $20 i32)
  (local $21 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $11
   (i32.add
    (local.get $9)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $10
    (i32.add
     (local.get $9)
     (i32.const 4)
    )
   )
   (local.get $3)
  )
  (i32.store
   (local.tee $15
    (local.get $9)
   )
   (local.get $8)
  )
  ;;@ celt/bands.c:963:0
  (local.set $18
   (i32.load
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:964:0
  (local.set $9
   (i32.load offset=8
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:965:0
  (local.set $12
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:966:0
  (local.set $17
   (i32.load offset=20
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:967:0
  (local.set $13
   (i32.load offset=28
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:970:0
  (local.set $16
   (i32.load offset=100
    (local.get $9)
   )
  )
  (local.set $20
   (i32.load offset=96
    (local.get $9)
   )
  )
  (local.set $21
   (i32.add
    (local.get $6)
    (i32.const 1)
   )
  )
  (local.set $9
   (i32.load offset=8
    (local.get $9)
   )
  )
  (local.set $9
   (i32.mul
    (local.get $9)
    (local.get $21)
   )
  )
  (local.set $9
   (i32.add
    (local.get $9)
    (local.get $12)
   )
  )
  (local.set $9
   (i32.add
    (i32.shl
     (local.get $9)
     (i32.const 1)
    )
    (local.get $20)
   )
  )
  (local.set $9
   (i32.load16_s
    (local.get $9)
   )
  )
  (local.set $12
   (i32.add
    (local.get $9)
    (local.get $16)
   )
  )
  ;;@ celt/bands.c:971:0
  (local.set $9
   (i32.load8_u
    (local.get $12)
   )
  )
  (block $folding-inner1
   (if
    (i32.ne
     (local.get $6)
     (i32.const -1)
    )
    (block
     (local.set $16
      (i32.add
       (local.get $9)
       (local.get $12)
      )
     )
     (local.set $16
      (i32.load8_u
       (local.get $16)
      )
     )
     (local.set $16
      (i32.and
       (local.get $16)
       (i32.const 255)
      )
     )
     (local.set $16
      (i32.add
       (local.get $16)
       (i32.const 12)
      )
     )
     (local.set $16
      (i32.lt_s
       (local.get $16)
       (local.get $3)
      )
     )
     (local.set $20
      (i32.gt_s
       (local.get $2)
       (i32.const 2)
      )
     )
     (if
      (i32.and
       (local.get $16)
       (local.get $20)
      )
      (block
       (local.set $3
        (i32.shr_u
         (local.get $2)
         (i32.const 1)
        )
       )
       ;;@ celt/bands.c:981:0
       (local.set $17
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (local.get $1)
        )
       )
       ;;@ celt/bands.c:982:0
       (local.set $9
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (if
        ;;@ celt/bands.c:983:0
        (i32.eq
         (local.get $4)
         (i32.const 1)
        )
        (block
         ;;@ celt/bands.c:984:0
         (local.set $2
          (i32.and
           (local.get $8)
           (i32.const 1)
          )
         )
         (local.set $8
          (i32.shl
           (local.get $8)
           (i32.const 1)
          )
         )
         (local.set $2
          (i32.or
           (local.get $2)
           (local.get $8)
          )
         )
         (i32.store
          (local.get $15)
          (local.get $2)
         )
        )
       )
       ;;@ celt/bands.c:985:0
       (local.set $2
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (local.set $8
        (i32.shr_s
         (local.get $2)
         (i32.const 1)
        )
       )
       ;;@ celt/bands.c:987:0
       (call $_compute_theta
        (local.get $0)
        (local.get $11)
        (local.get $1)
        (local.get $17)
        (local.get $3)
        (local.get $10)
        (local.get $8)
        (local.get $4)
        (local.get $9)
        (i32.const 0)
        (local.get $15)
       )
       ;;@ celt/bands.c:988:0
       (local.set $13
        (i32.load offset=4
         (local.get $11)
        )
       )
       ;;@ celt/bands.c:989:0
       (local.set $18
        (i32.load offset=8
         (local.get $11)
        )
       )
       ;;@ celt/bands.c:990:0
       (local.set $2
        (i32.load offset=12
         (local.get $11)
        )
       )
       ;;@ celt/bands.c:991:0
       (local.set $12
        (i32.load offset=16
         (local.get $11)
        )
       )
       ;;@ celt/bands.c:992:0
       (local.set $11
        (i32.load offset=20
         (local.get $11)
        )
       )
       ;;@ celt/bands.c:997:0
       (local.set $14
        (f32.convert_i32_s
         (local.get $13)
        )
       )
       (local.set $14
        (f32.mul
         (local.get $14)
         (f32.const 0.000030517578125)
        )
       )
       ;;@ celt/bands.c:998:0
       (local.set $19
        (f32.convert_i32_s
         (local.get $18)
        )
       )
       (local.set $19
        (f32.mul
         (local.get $19)
         (f32.const 0.000030517578125)
        )
       )
       ;;@ celt/bands.c:1002:0
       (local.set $13
        (i32.lt_s
         (local.get $4)
         (i32.const 2)
        )
       )
       (local.set $18
        (i32.and
         (local.get $12)
         (i32.const 16383)
        )
       )
       (local.set $18
        (i32.eqz
         (local.get $18)
        )
       )
       (if
        (i32.eqz
         (i32.or
          (local.get $13)
          (local.get $18)
         )
        )
        (local.set $2
         (if (result i32)
          ;;@ celt/bands.c:1004:0
          (i32.gt_s
           (local.get $12)
           (i32.const 8192)
          )
          (block (result i32)
           ;;@ celt/bands.c:1006:0
           (local.set $6
            (i32.sub
             (i32.const 5)
             (local.get $6)
            )
           )
           (local.set $6
            (i32.shr_s
             (local.get $2)
             (local.get $6)
            )
           )
           (i32.sub
            (local.get $2)
            (local.get $6)
           )
          )
          (block (result i32)
           ;;@ celt/bands.c:1009:0
           (local.set $13
            (i32.shl
             (local.get $3)
             (i32.const 3)
            )
           )
           (local.set $6
            (i32.sub
             (i32.const 6)
             (local.get $6)
            )
           )
           (local.set $6
            (i32.shr_s
             (local.get $13)
             (local.get $6)
            )
           )
           (local.set $2
            (i32.add
             (local.get $2)
             (local.get $6)
            )
           )
           (local.set $6
            (i32.lt_s
             (local.get $2)
             (i32.const 0)
            )
           )
           (select
            (local.get $2)
            (i32.const 0)
            (local.get $6)
           )
          )
         )
        )
       )
       ;;@ celt/bands.c:1011:0
       (local.set $6
        (i32.load
         (local.get $10)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $6)
         (local.get $2)
        )
       )
       (local.set $2
        (i32.div_s
         (local.get $2)
         (i32.const 2)
        )
       )
       (local.set $10
        (i32.lt_s
         (local.get $6)
         (local.get $2)
        )
       )
       (local.set $2
        (select
         (local.get $6)
         (local.get $2)
         (local.get $10)
        )
       )
       (local.set $10
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
       )
       (local.set $2
        (select
         (local.get $2)
         (i32.const 0)
         (local.get $10)
        )
       )
       ;;@ celt/bands.c:1012:0
       (local.set $6
        (i32.sub
         (local.get $6)
         (local.get $2)
        )
       )
       ;;@ celt/bands.c:1013:0
       (local.set $10
        (i32.load offset=32
         (local.get $0)
        )
       )
       (local.set $11
        (i32.sub
         (local.get $10)
         (local.get $11)
        )
       )
       (i32.store offset=32
        (local.get $0)
        (local.get $11)
       )
       ;;@ celt/bands.c:1015:0
       (local.set $10
        (i32.eqz
         (local.get $5)
        )
       )
       ;;@ celt/bands.c:1016:0
       (local.set $13
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
       ;;@ celt/bands.c:1015:0
       (local.set $10
        (select
         (i32.const 0)
         (local.get $13)
         (local.get $10)
        )
       )
       (local.set $0
        (if (result i32)
         ;;@ celt/bands.c:1019:0
         (i32.lt_s
          (local.get $2)
          (local.get $6)
         )
         (block (result i32)
          ;;@ celt/bands.c:1030:0
          (local.set $19
           (f32.mul
            (local.get $19)
            (local.get $7)
           )
          )
          (local.set $13
           (i32.load
            (local.get $15)
           )
          )
          (local.set $18
           (i32.shr_s
            (local.get $13)
            (local.get $8)
           )
          )
          ;;@ celt/bands.c:1029:0
          (local.set $17
           (call $_quant_partition
            (local.get $0)
            (local.get $17)
            (local.get $3)
            (local.get $6)
            (local.get $8)
            (local.get $10)
            (local.get $9)
            (local.get $19)
            (local.get $18)
           )
          )
          ;;@ celt/bands.c:1030:0
          (local.set $4
           (i32.shr_s
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.set $17
           (i32.shl
            (local.get $17)
            (local.get $4)
           )
          )
          ;;@ celt/bands.c:1031:0
          (local.set $4
           (i32.load offset=32
            (local.get $0)
           )
          )
          (local.set $4
           (i32.sub
            (local.get $4)
            (local.get $11)
           )
          )
          (local.set $4
           (i32.add
            (local.get $4)
            (local.get $6)
           )
          )
          ;;@ celt/bands.c:1032:0
          (local.set $6
           (i32.gt_s
            (local.get $4)
            (i32.const 24)
           )
          )
          (local.set $11
           (i32.ne
            (local.get $12)
            (i32.const 16384)
           )
          )
          (local.set $6
           (i32.and
            (local.get $6)
            (local.get $11)
           )
          )
          ;;@ celt/bands.c:1033:0
          (local.set $4
           (i32.add
            (local.get $4)
            (i32.const -24)
           )
          )
          ;;@ celt/bands.c:1032:0
          (local.set $4
           (select
            (local.get $4)
            (i32.const 0)
            (local.get $6)
           )
          )
          (local.set $2
           (i32.add
            (local.get $2)
            (local.get $4)
           )
          )
          ;;@ celt/bands.c:1035:0
          (local.set $7
           (f32.mul
            (local.get $14)
            (local.get $7)
           )
          )
          ;;@ celt/bands.c:1034:0
          (local.set $0
           (call $_quant_partition
            (local.get $0)
            (local.get $1)
            (local.get $3)
            (local.get $2)
            (local.get $8)
            (local.get $5)
            (local.get $9)
            (local.get $7)
            (local.get $13)
           )
          )
          (i32.or
           (local.get $0)
           (local.get $17)
          )
         )
         (block (result i32)
          ;;@ celt/bands.c:1022:0
          (local.set $14
           (f32.mul
            (local.get $14)
            (local.get $7)
           )
          )
          (local.set $13
           (i32.load
            (local.get $15)
           )
          )
          ;;@ celt/bands.c:1021:0
          (local.set $5
           (call $_quant_partition
            (local.get $0)
            (local.get $1)
            (local.get $3)
            (local.get $2)
            (local.get $8)
            (local.get $5)
            (local.get $9)
            (local.get $14)
            (local.get $13)
           )
          )
          ;;@ celt/bands.c:1023:0
          (local.set $1
           (i32.load offset=32
            (local.get $0)
           )
          )
          (local.set $1
           (i32.sub
            (local.get $1)
            (local.get $11)
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (local.get $2)
           )
          )
          ;;@ celt/bands.c:1024:0
          (local.set $2
           (i32.gt_s
            (local.get $1)
            (i32.const 24)
           )
          )
          (local.set $11
           (i32.ne
            (local.get $12)
            (i32.const 0)
           )
          )
          (local.set $2
           (i32.and
            (local.get $2)
            (local.get $11)
           )
          )
          ;;@ celt/bands.c:1025:0
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const -24)
           )
          )
          ;;@ celt/bands.c:1024:0
          (local.set $1
           (select
            (local.get $1)
            (i32.const 0)
            (local.get $2)
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (local.get $6)
           )
          )
          ;;@ celt/bands.c:1027:0
          (local.set $7
           (f32.mul
            (local.get $19)
            (local.get $7)
           )
          )
          (local.set $2
           (i32.shr_s
            (local.get $13)
            (local.get $8)
           )
          )
          ;;@ celt/bands.c:1026:0
          (local.set $0
           (call $_quant_partition
            (local.get $0)
            (local.get $17)
            (local.get $3)
            (local.get $1)
            (local.get $8)
            (local.get $10)
            (local.get $9)
            (local.get $7)
            (local.get $2)
           )
          )
          ;;@ celt/bands.c:1027:0
          (local.set $1
           (i32.shr_s
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.set $0
           (i32.shl
            (local.get $0)
            (local.get $1)
           )
          )
          ;;@ celt/bands.c:1026:0
          (i32.or
           (local.get $0)
           (local.get $5)
          )
         )
        )
       )
       (br $folding-inner1)
      )
     )
    )
   )
   ;;@ ./celt/rate.h:64:0
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const -1)
    )
   )
   ;;@ ./celt/rate.h:67:0
   (local.set $6
    (i32.add
     (local.get $9)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.shr_u
     (local.get $6)
     (i32.const 1)
    )
   )
   ;;@ ./celt/rate.h:69:0
   (local.set $11
    (i32.add
     (local.get $6)
     (local.get $12)
    )
   )
   (local.set $11
    (i32.load8_u
     (local.get $11)
    )
   )
   (local.set $11
    (i32.and
     (local.get $11)
     (i32.const 255)
    )
   )
   (local.set $11
    (select
     (local.get $6)
     (i32.const 0)
     (local.tee $10
      (i32.gt_s
       (local.get $3)
       (local.get $11)
      )
     )
    )
   )
   (local.set $9
    (select
     (local.get $9)
     (local.get $6)
     (local.get $10)
    )
   )
   ;;@ ./celt/rate.h:67:0
   (local.set $6
    (i32.add
     (local.get $11)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (local.get $9)
    )
   )
   (local.set $6
    (i32.shr_u
     (local.get $6)
     (i32.const 1)
    )
   )
   ;;@ ./celt/rate.h:69:0
   (local.set $10
    (i32.add
     (local.get $6)
     (local.get $12)
    )
   )
   (local.set $10
    (i32.load8_u
     (local.get $10)
    )
   )
   (local.set $10
    (i32.and
     (local.get $10)
     (i32.const 255)
    )
   )
   (local.set $11
    (select
     (local.get $6)
     (local.get $11)
     (local.tee $10
      (i32.gt_s
       (local.get $3)
       (local.get $10)
      )
     )
    )
   )
   (local.set $9
    (select
     (local.get $9)
     (local.get $6)
     (local.get $10)
    )
   )
   ;;@ ./celt/rate.h:67:0
   (local.set $6
    (i32.add
     (local.get $11)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (local.get $9)
    )
   )
   (local.set $6
    (i32.shr_s
     (local.get $6)
     (i32.const 1)
    )
   )
   ;;@ ./celt/rate.h:69:0
   (local.set $10
    (i32.add
     (local.get $6)
     (local.get $12)
    )
   )
   (local.set $10
    (i32.load8_u
     (local.get $10)
    )
   )
   (local.set $10
    (i32.and
     (local.get $10)
     (i32.const 255)
    )
   )
   (local.set $11
    (select
     (local.get $6)
     (local.get $11)
     (local.tee $10
      (i32.gt_s
       (local.get $3)
       (local.get $10)
      )
     )
    )
   )
   (local.set $9
    (select
     (local.get $9)
     (local.get $6)
     (local.get $10)
    )
   )
   ;;@ ./celt/rate.h:67:0
   (local.set $6
    (i32.add
     (local.get $11)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (local.get $9)
    )
   )
   (local.set $6
    (i32.shr_s
     (local.get $6)
     (i32.const 1)
    )
   )
   ;;@ ./celt/rate.h:69:0
   (local.set $10
    (i32.add
     (local.get $6)
     (local.get $12)
    )
   )
   (local.set $10
    (i32.load8_u
     (local.get $10)
    )
   )
   (local.set $10
    (i32.and
     (local.get $10)
     (i32.const 255)
    )
   )
   (local.set $11
    (select
     (local.get $6)
     (local.get $11)
     (local.tee $10
      (i32.gt_s
       (local.get $3)
       (local.get $10)
      )
     )
    )
   )
   (local.set $9
    (select
     (local.get $9)
     (local.get $6)
     (local.get $10)
    )
   )
   ;;@ ./celt/rate.h:67:0
   (local.set $6
    (i32.add
     (local.get $11)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (local.get $9)
    )
   )
   (local.set $6
    (i32.shr_s
     (local.get $6)
     (i32.const 1)
    )
   )
   ;;@ ./celt/rate.h:69:0
   (local.set $10
    (i32.add
     (local.get $6)
     (local.get $12)
    )
   )
   (local.set $10
    (i32.load8_u
     (local.get $10)
    )
   )
   (local.set $10
    (i32.and
     (local.get $10)
     (i32.const 255)
    )
   )
   (local.set $11
    (select
     (local.get $6)
     (local.get $11)
     (local.tee $10
      (i32.gt_s
       (local.get $3)
       (local.get $10)
      )
     )
    )
   )
   (local.set $10
    (select
     (local.get $9)
     (local.get $6)
     (local.get $10)
    )
   )
   ;;@ ./celt/rate.h:67:0
   (local.set $6
    (i32.add
     (local.get $11)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (local.get $10)
    )
   )
   (local.set $6
    (i32.shr_s
     (local.get $6)
     (i32.const 1)
    )
   )
   ;;@ ./celt/rate.h:69:0
   (local.set $9
    (i32.add
     (local.get $6)
     (local.get $12)
    )
   )
   (local.set $9
    (i32.load8_u
     (local.get $9)
    )
   )
   (local.set $9
    (i32.and
     (local.get $9)
     (i32.const 255)
    )
   )
   (local.set $9
    (select
     (local.get $6)
     (local.get $11)
     (local.tee $11
      (i32.gt_s
       (local.get $3)
       (local.get $9)
      )
     )
    )
   )
   (local.set $6
    (select
     (local.get $10)
     (local.get $6)
     (local.get $11)
    )
   )
   (local.set $11
    (if (result i32)
     ;;@ ./celt/rate.h:74:0
     (local.get $9)
     (block (result i32)
      (local.set $11
       (i32.add
        (local.get $9)
        (local.get $12)
       )
      )
      (local.set $11
       (i32.load8_u
        (local.get $11)
       )
      )
      (i32.and
       (local.get $11)
       (i32.const 255)
      )
     )
     (i32.const -1)
    )
   )
   (local.set $11
    (i32.sub
     (local.get $3)
     (local.get $11)
    )
   )
   (local.set $10
    (i32.add
     (local.get $6)
     (local.get $12)
    )
   )
   (local.set $10
    (i32.load8_u
     (local.get $10)
    )
   )
   (local.set $10
    (i32.and
     (local.get $10)
     (i32.const 255)
    )
   )
   (local.set $3
    (i32.sub
     (local.get $10)
     (local.get $3)
    )
   )
   (local.set $3
    (i32.gt_s
     (local.get $11)
     (local.get $3)
    )
   )
   ;;@ ./celt/rate.h:77:0
   (local.set $6
    (select
     (local.get $6)
     (local.get $9)
     (local.get $3)
    )
   )
   (local.set $3
    (if (result i32)
     ;;@ ./celt/rate.h:86:0
     (local.get $6)
     (block (result i32)
      (local.set $3
       (i32.add
        (local.get $6)
        (local.get $12)
       )
      )
      (local.set $3
       (i32.load8_u
        (local.get $3)
       )
      )
      (local.set $3
       (i32.and
        (local.get $3)
        (i32.const 255)
       )
      )
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.const 0)
    )
   )
   ;;@ celt/bands.c:1041:0
   (local.set $9
    (i32.load offset=32
     (local.get $0)
    )
   )
   (i32.store offset=32
    (local.get $0)
    (local.tee $9
     (i32.sub
      (local.get $9)
      (local.get $3)
     )
    )
   )
   ;;@ celt/bands.c:1044:0
   (local.set $11
    (i32.lt_s
     (local.get $9)
     (i32.const 0)
    )
   )
   (local.set $10
    (i32.gt_s
     (local.get $6)
     (i32.const 0)
    )
   )
   (block $__rjto$0
    (block $__rjti$0
     (if
      (i32.and
       (local.get $10)
       (local.get $11)
      )
      (block
       (loop $while-in
        (block $while-out
         ;;@ celt/bands.c:1046:0
         (local.set $11
          (i32.add
           (local.get $3)
           (local.get $9)
          )
         )
         (i32.store offset=32
          (local.get $0)
          (local.get $11)
         )
         ;;@ celt/bands.c:1047:0
         (local.set $3
          (i32.add
           (local.get $6)
           (i32.const -1)
          )
         )
         ;;@ ./celt/rate.h:86:0
         (br_if $while-out
          (i32.eqz
           (local.get $3)
          )
         )
         (local.set $9
          (i32.add
           (local.get $3)
           (local.get $12)
          )
         )
         (local.set $9
          (i32.load8_u
           (local.get $9)
          )
         )
         (local.set $9
          (i32.and
           (local.get $9)
           (i32.const 255)
          )
         )
         (local.set $9
          (i32.add
           (local.get $9)
           (i32.const 1)
          )
         )
         ;;@ celt/bands.c:1049:0
         (i32.store offset=32
          (local.get $0)
          (local.tee $11
           (i32.sub
            (local.get $11)
            (local.get $9)
           )
          )
         )
         ;;@ celt/bands.c:1044:0
         (local.set $10
          (i32.lt_s
           (local.get $11)
           (i32.const 0)
          )
         )
         (local.set $6
          (i32.gt_s
           (local.get $6)
           (i32.const 1)
          )
         )
         (br_if $__rjti$0
          (i32.eqz
           (i32.and
            (local.get $6)
            (local.get $10)
           )
          )
         )
         (local.set $6
          (local.get $3)
         )
         (local.set $3
          (local.get $9)
         )
         (local.set $9
          (local.get $11)
         )
         (br $while-in)
        )
       )
       (i32.store offset=32
        (local.get $0)
        (local.get $11)
       )
      )
      (if
       ;;@ celt/bands.c:1052:0
       (local.get $6)
       (block
        (local.set $3
         (local.get $6)
        )
        (br $__rjti$0)
       )
      )
     )
     (br $__rjto$0)
    )
    ;;@ ./celt/rate.h:50:0
    (local.set $5
     (i32.lt_s
      (local.get $3)
      (i32.const 8)
     )
    )
    (local.set $6
     (i32.and
      (local.get $3)
      (i32.const 7)
     )
    )
    (local.set $6
     (i32.or
      (local.get $6)
      (i32.const 8)
     )
    )
    (local.set $8
     (i32.shr_s
      (local.get $3)
      (i32.const 3)
     )
    )
    (local.set $8
     (i32.add
      (local.get $8)
      (i32.const -1)
     )
    )
    (local.set $6
     (i32.shl
      (local.get $6)
      (local.get $8)
     )
    )
    (local.set $3
     (select
      (local.get $3)
      (local.get $6)
      (local.get $5)
     )
    )
    (if
     ;;@ celt/bands.c:1057:0
     (local.get $18)
     (block
      ;;@ celt/bands.c:1059:0
      (local.set $5
       (i32.load offset=4
        (local.get $0)
       )
      )
      (local.set $0
       (i32.load offset=44
        (local.get $0)
       )
      )
      (local.set $0
       (call $_alg_quant
        (local.get $1)
        (local.get $2)
        (local.get $3)
        (local.get $17)
        (local.get $4)
        (local.get $13)
        (local.get $7)
        (local.get $5)
       )
      )
     )
     ;;@ celt/bands.c:1061:0
     (local.set $0
      (call $_alg_unquant
       (local.get $1)
       (local.get $2)
       (local.get $3)
       (local.get $17)
       (local.get $4)
       (local.get $13)
       (local.get $7)
      )
     )
    )
    (br $folding-inner1)
   )
   ;;@ celt/bands.c:1066:0
   (local.set $3
    (i32.load offset=4
     (local.get $0)
    )
   )
   (block $folding-inner0
    (br_if $folding-inner0
     (i32.eqz
      (local.get $3)
     )
    )
    ;;@ celt/bands.c:1071:0
    (local.set $3
     (i32.shl
      (i32.const 1)
      (local.get $4)
     )
    )
    (local.set $4
     (i32.add
      (local.get $3)
      (i32.const -1)
     )
    )
    ;;@ celt/bands.c:1072:0
    (local.set $3
     (i32.and
      (local.get $4)
      (local.get $8)
     )
    )
    (i32.store
     (local.get $15)
     (local.get $3)
    )
    (if
     ;;@ celt/bands.c:1073:0
     (i32.eqz
      (local.get $3)
     )
     (block
      ;;@ celt/bands.c:1075:0
      (local.set $0
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
      )
      (drop
       (call $_memset
        (local.get $1)
        (i32.const 0)
        (local.get $0)
       )
      )
      (br $folding-inner0)
     )
    )
    ;;@ celt/bands.c:1077:0
    (local.set $6
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
    )
    (if
     (local.get $5)
     (if
      (local.get $6)
      (block
       ;;@ celt/bands.c:1091:0
       (local.set $4
        (i32.const 0)
       )
       (local.set $6
        (i32.load offset=40
         (local.get $0)
        )
       )
       (loop $while-in4
        ;;@ celt/bands.c:63:0
        (local.set $6
         (i32.mul
          (local.get $6)
          (i32.const 1664525)
         )
        )
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.const 1013904223)
         )
        )
        ;;@ celt/bands.c:1094:0
        (local.set $8
         (i32.and
          (local.get $6)
          (i32.const 32768)
         )
        )
        (local.set $8
         (i32.eqz
          (local.get $8)
         )
        )
        (local.set $14
         (select
          (f32.const -0.00390625)
          (f32.const 0.00390625)
          (local.get $8)
         )
        )
        ;;@ celt/bands.c:1095:0
        (local.set $8
         (i32.add
          (i32.shl
           (local.get $4)
           (i32.const 2)
          )
          (local.get $5)
         )
        )
        (local.set $19
         (f32.load
          (local.get $8)
         )
        )
        (local.set $14
         (f32.add
          (local.get $19)
          (local.get $14)
         )
        )
        (local.set $8
         (i32.add
          (i32.shl
           (local.get $4)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
        (f32.store
         (local.get $8)
         (local.get $14)
        )
        ;;@ celt/bands.c:1088:0
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (br_if $while-in4
         (i32.ne
          (local.get $2)
          (local.get $4)
         )
        )
       )
       ;;@ celt/bands.c:1091:0
       (i32.store offset=40
        (local.get $0)
        (local.get $6)
       )
      )
     )
     (block
      (if
       (local.get $6)
       (block
        ;;@ celt/bands.c:1082:0
        (local.set $3
         (i32.const 0)
        )
        (local.set $5
         (i32.load offset=40
          (local.get $0)
         )
        )
        (loop $while-in2
         ;;@ celt/bands.c:63:0
         (local.set $5
          (i32.mul
           (local.get $5)
           (i32.const 1664525)
          )
         )
         (local.set $5
          (i32.add
           (local.get $5)
           (i32.const 1013904223)
          )
         )
         ;;@ celt/bands.c:1083:0
         (local.set $6
          (i32.shr_s
           (local.get $5)
           (i32.const 20)
          )
         )
         (local.set $14
          (f32.convert_i32_s
           (local.get $6)
          )
         )
         (local.set $6
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 2)
           )
           (local.get $1)
          )
         )
         (f32.store
          (local.get $6)
          (local.get $14)
         )
         ;;@ celt/bands.c:1080:0
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (br_if $while-in2
          (i32.ne
           (local.get $2)
           (local.get $3)
          )
         )
        )
        ;;@ celt/bands.c:1082:0
        (i32.store offset=40
         (local.get $0)
         (local.get $5)
        )
       )
      )
      (local.set $3
       (local.get $4)
      )
     )
    )
    ;;@ celt/bands.c:1099:0
    (local.set $0
     (i32.load offset=44
      (local.get $0)
     )
    )
    (call $_renormalise_vector
     (local.get $1)
     (local.get $2)
     (local.get $7)
    )
    (global.set $STACKTOP
     (local.get $15)
    )
    ;;@ celt/bands.c:1105:0
    (return
     (local.get $3)
    )
   )
   (global.set $STACKTOP
    (local.get $15)
   )
   (return
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $15)
  )
  (local.get $0)
 )
 (func $_interleave_hadamard (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  ;;@ celt/bands.c:615:0
  (local.set $10
   (i32.mul
    (local.get $1)
    (local.get $2)
   )
  )
  ;;@ celt/bands.c:616:0
  (local.set $4
   (i32.shl
    (local.get $10)
    (i32.const 2)
   )
  )
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $4)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (if
   ;;@ celt/bands.c:617:0
   (local.get $3)
   (block
    ;;@ celt/bands.c:619:0
    (local.set $3
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
      (i32.const 1056)
     )
    )
    (local.set $9
     (i32.add
      (local.get $3)
      (i32.const -8)
     )
    )
    ;;@ celt/bands.c:620:0
    (local.set $3
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
    )
    (local.set $4
     (i32.gt_s
      (local.get $1)
      (i32.const 0)
     )
    )
    (if
     (i32.and
      (local.get $3)
      (local.get $4)
     )
     (block
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in3
       (local.set $6
        (i32.mul
         (local.get $1)
         (i32.load
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 2)
           )
           (local.get $9)
          )
         )
        )
       )
       (local.set $4
        (i32.const 0)
       )
       (loop $while-in5
        ;;@ celt/bands.c:622:0
        (local.set $5
         (i32.add
          (local.get $4)
          (local.get $6)
         )
        )
        (local.set $5
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $0)
         )
        )
        (local.set $5
         (i32.load
          (local.get $5)
         )
        )
        (local.set $7
         (i32.mul
          (local.get $2)
          (local.get $4)
         )
        )
        (local.set $7
         (i32.add
          (local.get $3)
          (local.get $7)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $7)
           (i32.const 2)
          )
          (local.get $8)
         )
        )
        (i32.store
         (local.get $7)
         (local.get $5)
        )
        ;;@ celt/bands.c:621:0
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (br_if $while-in5
         (i32.ne
          (local.get $1)
          (local.get $4)
         )
        )
       )
       ;;@ celt/bands.c:620:0
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (br_if $while-in3
        (i32.ne
         (local.get $2)
         (local.get $3)
        )
       )
      )
     )
    )
   )
   (block
    ;;@ celt/bands.c:624:0
    (local.set $3
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
    )
    (local.set $4
     (i32.gt_s
      (local.get $1)
      (i32.const 0)
     )
    )
    (if
     (i32.and
      (local.get $3)
      (local.get $4)
     )
     (block
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in
       (local.set $9
        (i32.mul
         (local.get $1)
         (local.get $3)
        )
       )
       (local.set $4
        (i32.const 0)
       )
       (loop $while-in1
        ;;@ celt/bands.c:626:0
        (local.set $6
         (i32.add
          (local.get $4)
          (local.get $9)
         )
        )
        (local.set $6
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 2)
          )
          (local.get $0)
         )
        )
        (local.set $6
         (i32.load
          (local.get $6)
         )
        )
        (local.set $5
         (i32.mul
          (local.get $2)
          (local.get $4)
         )
        )
        (local.set $5
         (i32.add
          (local.get $3)
          (local.get $5)
         )
        )
        (local.set $5
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $8)
         )
        )
        (i32.store
         (local.get $5)
         (local.get $6)
        )
        ;;@ celt/bands.c:625:0
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (br_if $while-in1
         (i32.ne
          (local.get $1)
          (local.get $4)
         )
        )
       )
       ;;@ celt/bands.c:624:0
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (i32.ne
         (local.get $2)
         (local.get $3)
        )
       )
      )
     )
    )
   )
  )
  ;;@ celt/bands.c:628:0
  (local.set $1
   (i32.shl
    (local.get $10)
    (i32.const 2)
   )
  )
  (drop
   (call $_memcpy
    (local.get $0)
    (local.get $8)
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $_compute_theta (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (local $17 f32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 f32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  ;;@ celt/bands.c:721:0
  (local.set $24
   (i32.load
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:722:0
  (local.set $26
   (i32.load offset=8
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:723:0
  (local.set $22
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:724:0
  (local.set $14
   (i32.load offset=16
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:725:0
  (local.set $19
   (i32.load offset=28
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:726:0
  (local.set $25
   (i32.load offset=36
    (local.get $0)
   )
  )
  ;;@ celt/bands.c:729:0
  (local.set $20
   (i32.load offset=56
    (local.get $26)
   )
  )
  (local.set $20
   (i32.add
    (i32.shl
     (local.get $22)
     (i32.const 1)
    )
    (local.get $20)
   )
  )
  (local.set $20
   (i32.load16_s
    (local.get $20)
   )
  )
  (local.set $8
   (i32.shl
    (local.get $8)
    (i32.const 3)
   )
  )
  (local.set $8
   (i32.add
    (local.get $8)
    (local.get $20)
   )
  )
  ;;@ celt/bands.c:730:0
  (local.set $11
   (i32.shr_s
    (local.get $8)
    (i32.const 1)
   )
  )
  (local.set $20
   (i32.ne
    (local.get $9)
    (i32.const 0)
   )
  )
  (local.set $13
   (i32.eq
    (local.get $4)
    (i32.const 2)
   )
  )
  (local.set $13
   (i32.and
    (local.get $13)
    (local.get $20)
   )
  )
  (local.set $18
   (select
    (i32.const 16)
    (i32.const 4)
    (local.get $13)
   )
  )
  (local.set $18
   (i32.sub
    (local.get $11)
    (local.get $18)
   )
  )
  ;;@ celt/bands.c:731:0
  (local.set $11
   (i32.load
    (local.get $5)
   )
  )
  ;;@ celt/bands.c:652:0
  (local.set $23
   (i32.shl
    (local.get $4)
    (i32.const 1)
   )
  )
  ;;@ celt/bands.c:653:0
  (local.set $13
   (select
    (i32.const -2)
    (i32.const -1)
    (local.get $13)
   )
  )
  (local.set $13
   (i32.add
    (local.get $13)
    (local.get $23)
   )
  )
  ;;@ celt/bands.c:658:0
  (local.set $18
   (i32.mul
    (local.get $13)
    (local.get $18)
   )
  )
  (local.set $18
   (i32.add
    (local.get $11)
    (local.get $18)
   )
  )
  ;;@ ./celt/entcode.h:148:0
  (local.set $13
   (i32.div_s
    (local.get $18)
    (local.get $13)
   )
  )
  ;;@ celt/bands.c:659:0
  (local.set $8
   (i32.sub
    (local.get $11)
    (local.get $8)
   )
  )
  (local.set $8
   (i32.add
    (local.get $8)
    (i32.const -32)
   )
  )
  (local.set $11
   (i32.lt_s
    (local.get $8)
    (local.get $13)
   )
  )
  (local.set $8
   (select
    (local.get $8)
    (local.get $13)
    (local.get $11)
   )
  )
  ;;@ celt/bands.c:661:0
  (local.set $13
   (i32.lt_s
    (local.get $8)
    (i32.const 64)
   )
  )
  (local.set $8
   (select
    (local.get $8)
    (i32.const 64)
    (local.get $13)
   )
  )
  (if
   ;;@ celt/bands.c:663:0
   (i32.lt_s
    (local.get $8)
    (i32.const 4)
   )
   (local.set $15
    (i32.const 1)
   )
   (block
    ;;@ celt/bands.c:666:0
    (local.set $13
     (i32.and
      (local.get $8)
      (i32.const 7)
     )
    )
    (local.set $13
     (i32.add
      (i32.shl
       (local.get $13)
       (i32.const 1)
      )
      (i32.const 1184)
     )
    )
    (local.set $13
     (i32.load16_s
      (local.get $13)
     )
    )
    (local.set $8
     (i32.shr_u
      (local.get $8)
      (i32.const 3)
     )
    )
    (local.set $8
     (i32.sub
      (i32.const 14)
      (local.get $8)
     )
    )
    (local.set $8
     (i32.shr_s
      (local.get $13)
      (local.get $8)
     )
    )
    ;;@ celt/bands.c:667:0
    (local.set $8
     (i32.add
      (local.get $8)
      (i32.const 1)
     )
    )
    (local.set $8
     (i32.and
      (local.get $8)
      (i32.const -2)
     )
    )
    (if
     ;;@ celt/bands.c:669:0
     (i32.lt_s
      (local.get $8)
      (i32.const 257)
     )
     (local.set $15
      (local.get $8)
     )
     (call $_celt_fatal
      (i32.const 40893)
      (i32.const 40801)
      (i32.const 669)
     )
    )
   )
  )
  ;;@ celt/bands.c:732:0
  (local.set $8
   (i32.xor
    (local.get $20)
    (i32.const 1)
   )
  )
  (local.set $13
   (i32.lt_s
    (local.get $22)
    (local.get $14)
   )
  )
  (local.set $8
   (i32.or
    (local.get $8)
    (local.get $13)
   )
  )
  (local.set $15
   (select
    (local.get $15)
    (i32.const 1)
    (local.get $8)
   )
  )
  (local.set $8
   (if (result i32)
    ;;@ celt/bands.c:734:0
    (local.tee $13
     (i32.ne
      (local.get $24)
      (i32.const 0)
     )
    )
    (block (result i32)
     ;;@ celt/bands.c:740:0
     (local.set $8
      (i32.load offset=44
       (local.get $0)
      )
     )
     (call $_stereo_itheta
      (local.get $2)
      (local.get $3)
      (local.get $9)
      (local.get $4)
     )
    )
    (i32.const 0)
   )
  )
  ;;@ celt/bands.c:742:0
  (local.set $24
   (call $_ec_tell_frac
    (local.get $19)
   )
  )
  (block $folding-inner0
   (block $label$break$L88
    (block $__rjti$3
     (if
      ;;@ celt/bands.c:743:0
      (i32.eq
       (local.get $15)
       (i32.const 1)
      )
      (local.set $0
       (if (result i32)
        (local.get $20)
        (block (result i32)
         (if
          (local.get $13)
          (block
           (if
            ;;@ celt/bands.c:852:0
            (i32.gt_s
             (local.get $8)
             (i32.const 8192)
            )
            (block
             (local.set $7
              (i32.load offset=52
               (local.get $0)
              )
             )
             (local.set $7
              (i32.eqz
               (local.get $7)
              )
             )
             (if
              (local.get $7)
              (if
               ;;@ celt/bands.c:856:0
               (i32.gt_s
                (local.get $4)
                (i32.const 0)
               )
               (block
                (local.set $8
                 (i32.const 0)
                )
                (loop $while-in
                 ;;@ celt/bands.c:857:0
                 (local.set $9
                  (i32.add
                   (i32.shl
                    (local.get $8)
                    (i32.const 2)
                   )
                   (local.get $3)
                  )
                 )
                 (local.set $16
                  (f32.load
                   (local.get $9)
                  )
                 )
                 (local.set $16
                  (f32.neg
                   (local.get $16)
                  )
                 )
                 (f32.store
                  (local.get $9)
                  (local.get $16)
                 )
                 ;;@ celt/bands.c:856:0
                 (local.set $8
                  (i32.add
                   (local.get $8)
                   (i32.const 1)
                  )
                 )
                 (br_if $while-in
                  (i32.ne
                   (local.get $4)
                   (local.get $8)
                  )
                 )
                )
               )
               (local.set $7
                (i32.const 1)
               )
              )
              (local.set $7
               (i32.const 0)
              )
             )
            )
            (local.set $7
             (i32.const 0)
            )
           )
           (local.set $8
            (i32.load offset=8
             (local.get $26)
            )
           )
           ;;@ celt/bands.c:398:0
           (local.set $9
            (i32.add
             (i32.shl
              (local.get $22)
              (i32.const 2)
             )
             (local.get $25)
            )
           )
           (local.set $16
            (f32.load
             (local.get $9)
            )
           )
           ;;@ celt/bands.c:399:0
           (local.set $8
            (i32.add
             (local.get $8)
             (local.get $22)
            )
           )
           (local.set $8
            (i32.add
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
             (local.get $25)
            )
           )
           (local.set $17
            (f32.load
             (local.get $8)
            )
           )
           ;;@ celt/bands.c:400:0
           (local.set $12
            (f32.mul
             (local.get $16)
             (local.get $16)
            )
           )
           (local.set $12
            (f32.add
             (local.get $12)
             (f32.const 1.0000000036274937e-15)
            )
           )
           (local.set $21
            (f32.mul
             (local.get $17)
             (local.get $17)
            )
           )
           (local.set $12
            (f32.add
             (local.get $12)
             (local.get $21)
            )
           )
           (local.set $12
            (f32.sqrt
             (local.get $12)
            )
           )
           (local.set $12
            (f32.add
             (local.get $12)
             (f32.const 1.0000000036274937e-15)
            )
           )
           ;;@ celt/bands.c:401:0
           (local.set $16
            (f32.div
             (local.get $16)
             (local.get $12)
            )
           )
           ;;@ celt/bands.c:402:0
           (local.set $17
            (f32.div
             (local.get $17)
             (local.get $12)
            )
           )
           (if
            ;;@ celt/bands.c:403:0
            (i32.gt_s
             (local.get $4)
             (i32.const 0)
            )
            (block
             (local.set $8
              (i32.const 0)
             )
             (loop $while-in1
              ;;@ celt/bands.c:406:0
              (local.set $9
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
                (local.get $2)
               )
              )
              (local.set $12
               (f32.load
                (local.get $9)
               )
              )
              ;;@ celt/bands.c:407:0
              (local.set $15
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
                (local.get $3)
               )
              )
              (local.set $21
               (f32.load
                (local.get $15)
               )
              )
              ;;@ celt/bands.c:408:0
              (local.set $12
               (f32.mul
                (local.get $16)
                (local.get $12)
               )
              )
              (local.set $21
               (f32.mul
                (local.get $17)
                (local.get $21)
               )
              )
              (local.set $12
               (f32.add
                (local.get $12)
                (local.get $21)
               )
              )
              (f32.store
               (local.get $9)
               (local.get $12)
              )
              ;;@ celt/bands.c:403:0
              (local.set $8
               (i32.add
                (local.get $8)
                (i32.const 1)
               )
              )
              (br_if $while-in1
               (i32.ne
                (local.get $4)
                (local.get $8)
               )
              )
             )
            )
           )
          )
          (local.set $7
           (i32.const 0)
          )
         )
         ;;@ celt/bands.c:861:0
         (local.set $2
          (i32.load
           (local.get $5)
          )
         )
         (if
          (i32.gt_s
           (local.get $2)
           (i32.const 16)
          )
          (block
           (local.set $2
            (i32.load offset=32
             (local.get $0)
            )
           )
           (if
            (i32.gt_s
             (local.get $2)
             (i32.const 16)
            )
            (if
             (local.get $13)
             ;;@ celt/bands.c:864:0
             (call $_ec_enc_bit_logp
              (local.get $19)
              (local.get $7)
             )
             ;;@ celt/bands.c:866:0
             (local.set $7
              (call $_ec_dec_bit_logp
               (local.get $19)
               (i32.const 2)
              )
             )
            )
            (local.set $7
             (i32.const 0)
            )
           )
          )
          (local.set $7
           (i32.const 0)
          )
         )
         ;;@ celt/bands.c:870:0
         (local.set $0
          (i32.load offset=52
           (local.get $0)
          )
         )
         (local.set $0
          (i32.eqz
           (local.get $0)
          )
         )
         (select
          (local.get $7)
          (i32.const 0)
          (local.get $0)
         )
        )
        (block
         (local.set $0
          (local.get $8)
         )
         (br $__rjti$3)
        )
       )
      )
      (block $__rjti$2
       (block $do-once7
        (block $__rjti$1
         (local.set $0
          (if (result i32)
           (local.get $13)
           (block (result i32)
            (if
             (i32.eqz
              (local.get $20)
             )
             (block
              ;;@ celt/bands.c:749:0
              (local.set $9
               (i32.mul
                (local.get $8)
                (local.get $15)
               )
              )
              (local.set $11
               (i32.sub
                (local.get $9)
                (i32.const -8192)
               )
              )
              (local.set $8
               (i32.shr_s
                (local.get $11)
                (i32.const 14)
               )
              )
              ;;@ celt/bands.c:750:0
              (local.set $0
               (i32.load offset=56
                (local.get $0)
               )
              )
              (local.set $0
               (i32.ne
                (local.get $0)
                (i32.const 0)
               )
              )
              (local.set $9
               (i32.gt_s
                (local.get $9)
                (i32.const 8191)
               )
              )
              (local.set $0
               (i32.and
                (local.get $0)
                (local.get $9)
               )
              )
              (local.set $9
               (i32.lt_s
                (local.get $8)
                (local.get $15)
               )
              )
              (if
               (i32.eqz
                (i32.and
                 (local.get $0)
                 (local.get $9)
                )
               )
               (block
                (local.set $0
                 (local.get $8)
                )
                (br $__rjti$1)
               )
              )
              ;;@ celt/bands.c:755:0
              (local.set $0
               (i32.and
                (local.get $11)
                (i32.const -16384)
               )
              )
              ;;@ ./celt/entcode.h:136:0
              (local.set $0
               (i32.div_u
                (local.get $0)
                (local.get $15)
               )
              )
              ;;@ celt/bands.c:72:0
              (local.set $9
               (i32.shl
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $0
               (i32.shr_s
                (local.get $9)
                (i32.const 16)
               )
              )
              (local.set $11
               (i32.shr_s
                (local.get $9)
                (i32.const 13)
               )
              )
              ;;@ celt/bands.c:75:0
              (local.set $0
               (i32.mul
                (local.get $0)
                (local.get $11)
               )
              )
              (local.set $0
               (i32.add
                (local.get $0)
                (i32.const 32768)
               )
              )
              (local.set $0
               (i32.shr_s
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $11
               (i32.mul
                (local.get $0)
                (i32.const -626)
               )
              )
              (local.set $11
               (i32.add
                (local.get $11)
                (i32.const 16384)
               )
              )
              (local.set $11
               (i32.shr_s
                (local.get $11)
                (i32.const 15)
               )
              )
              (local.set $11
               (i32.add
                (local.get $11)
                (i32.const 8277)
               )
              )
              (local.set $11
               (i32.mul
                (local.get $0)
                (local.get $11)
               )
              )
              (local.set $11
               (i32.add
                (local.get $11)
                (i32.const 16384)
               )
              )
              (local.set $11
               (i32.shr_u
                (local.get $11)
                (i32.const 15)
               )
              )
              (local.set $11
               (i32.shl
                (local.get $11)
                (i32.const 16)
               )
              )
              (local.set $11
               (i32.add
                (local.get $11)
                (i32.const -501415936)
               )
              )
              (local.set $11
               (i32.shr_s
                (local.get $11)
                (i32.const 16)
               )
              )
              (local.set $11
               (i32.mul
                (local.get $0)
                (local.get $11)
               )
              )
              (local.set $11
               (i32.add
                (local.get $11)
                (i32.const 16384)
               )
              )
              (local.set $11
               (i32.shr_u
                (local.get $11)
                (i32.const 15)
               )
              )
              (local.set $0
               (i32.sub
                (i32.const 32768)
                (local.get $0)
               )
              )
              ;;@ celt/bands.c:77:0
              (local.set $0
               (i32.add
                (local.get $0)
                (local.get $11)
               )
              )
              ;;@ celt/bands.c:756:0
              (local.set $0
               (i32.shl
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $11
               (i32.shr_s
                (local.get $0)
                (i32.const 16)
               )
              )
              ;;@ celt/bands.c:72:0
              (local.set $0
               (i32.sub
                (i32.const 1073741824)
                (local.get $9)
               )
              )
              (local.set $9
               (i32.shr_s
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $0
               (i32.shr_s
                (local.get $0)
                (i32.const 13)
               )
              )
              ;;@ celt/bands.c:75:0
              (local.set $0
               (i32.mul
                (local.get $0)
                (local.get $9)
               )
              )
              (local.set $0
               (i32.add
                (local.get $0)
                (i32.const 32768)
               )
              )
              (local.set $0
               (i32.shr_s
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $9
               (i32.mul
                (local.get $0)
                (i32.const -626)
               )
              )
              (local.set $9
               (i32.add
                (local.get $9)
                (i32.const 16384)
               )
              )
              (local.set $9
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
              )
              (local.set $9
               (i32.add
                (local.get $9)
                (i32.const 8277)
               )
              )
              (local.set $9
               (i32.mul
                (local.get $0)
                (local.get $9)
               )
              )
              (local.set $9
               (i32.add
                (local.get $9)
                (i32.const 16384)
               )
              )
              (local.set $9
               (i32.shr_u
                (local.get $9)
                (i32.const 15)
               )
              )
              (local.set $9
               (i32.shl
                (local.get $9)
                (i32.const 16)
               )
              )
              (local.set $9
               (i32.add
                (local.get $9)
                (i32.const -501415936)
               )
              )
              (local.set $9
               (i32.shr_s
                (local.get $9)
                (i32.const 16)
               )
              )
              (local.set $9
               (i32.mul
                (local.get $0)
                (local.get $9)
               )
              )
              (local.set $9
               (i32.add
                (local.get $9)
                (i32.const 16384)
               )
              )
              (local.set $9
               (i32.shr_u
                (local.get $9)
                (i32.const 15)
               )
              )
              (local.set $0
               (i32.sub
                (i32.const 32768)
                (local.get $0)
               )
              )
              ;;@ celt/bands.c:77:0
              (local.set $0
               (i32.add
                (local.get $0)
                (local.get $9)
               )
              )
              ;;@ celt/bands.c:757:0
              (local.set $0
               (i32.shl
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $0
               (i32.shr_s
                (local.get $0)
                (i32.const 16)
               )
              )
              ;;@ celt/bands.c:758:0
              (local.set $9
               (i32.shl
                (local.get $4)
                (i32.const 23)
               )
              )
              (local.set $9
               (i32.add
                (local.get $9)
                (i32.const -8388608)
               )
              )
              (local.set $18
               (i32.shr_s
                (local.get $9)
                (i32.const 16)
               )
              )
              ;;@ celt/bands.c:84:0
              (local.set $9
               (i32.clz
                (local.get $11)
               )
              )
              (local.set $9
               (i32.sub
                (i32.const 32)
                (local.get $9)
               )
              )
              ;;@ celt/bands.c:85:0
              (local.set $14
               (i32.clz
                (local.get $0)
               )
              )
              (local.set $14
               (i32.sub
                (i32.const 32)
                (local.get $14)
               )
              )
              ;;@ celt/bands.c:86:0
              (local.set $23
               (i32.sub
                (i32.const 15)
                (local.get $9)
               )
              )
              (local.set $11
               (i32.shl
                (local.get $11)
                (local.get $23)
               )
              )
              ;;@ celt/bands.c:87:0
              (local.set $23
               (i32.sub
                (i32.const 15)
                (local.get $14)
               )
              )
              (local.set $0
               (i32.shl
                (local.get $0)
                (local.get $23)
               )
              )
              ;;@ celt/bands.c:88:0
              (local.set $9
               (i32.sub
                (local.get $14)
                (local.get $9)
               )
              )
              (local.set $9
               (i32.shl
                (local.get $9)
                (i32.const 11)
               )
              )
              ;;@ celt/bands.c:89:0
              (local.set $0
               (i32.shl
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $0
               (i32.shr_s
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $14
               (i32.mul
                (local.get $0)
                (i32.const -2597)
               )
              )
              (local.set $14
               (i32.add
                (local.get $14)
                (i32.const 16384)
               )
              )
              (local.set $14
               (i32.shr_s
                (local.get $14)
                (i32.const 15)
               )
              )
              (local.set $14
               (i32.add
                (local.get $14)
                (i32.const 7932)
               )
              )
              (local.set $0
               (i32.mul
                (local.get $0)
                (local.get $14)
               )
              )
              (local.set $0
               (i32.add
                (local.get $0)
                (i32.const 16384)
               )
              )
              (local.set $14
               (i32.shr_u
                (local.get $0)
                (i32.const 15)
               )
              )
              ;;@ celt/bands.c:90:0
              (local.set $0
               (i32.shl
                (local.get $11)
                (i32.const 16)
               )
              )
              (local.set $0
               (i32.shr_s
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $11
               (i32.mul
                (local.get $0)
                (i32.const -2597)
               )
              )
              (local.set $11
               (i32.add
                (local.get $11)
                (i32.const 16384)
               )
              )
              (local.set $11
               (i32.shr_s
                (local.get $11)
                (i32.const 15)
               )
              )
              (local.set $11
               (i32.add
                (local.get $11)
                (i32.const 7932)
               )
              )
              (local.set $0
               (i32.mul
                (local.get $0)
                (local.get $11)
               )
              )
              (local.set $0
               (i32.add
                (local.get $0)
                (i32.const 16384)
               )
              )
              (local.set $0
               (i32.shr_u
                (local.get $0)
                (i32.const 15)
               )
              )
              ;;@ celt/bands.c:89:0
              (local.set $0
               (i32.sub
                (local.get $9)
                (local.get $0)
               )
              )
              ;;@ celt/bands.c:90:0
              (local.set $0
               (i32.add
                (local.get $0)
                (local.get $14)
               )
              )
              ;;@ celt/bands.c:758:0
              (local.set $0
               (i32.shl
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $0
               (i32.shr_s
                (local.get $0)
                (i32.const 16)
               )
              )
              (local.set $0
               (i32.mul
                (local.get $0)
                (local.get $18)
               )
              )
              (local.set $0
               (i32.add
                (local.get $0)
                (i32.const 16384)
               )
              )
              (local.set $0
               (i32.shr_s
                (local.get $0)
                (i32.const 15)
               )
              )
              ;;@ celt/bands.c:759:0
              (local.set $9
               (i32.load
                (local.get $5)
               )
              )
              (local.set $11
               (i32.gt_s
                (local.get $0)
                (local.get $9)
               )
              )
              ;;@ celt/bands.c:761:0
              (local.set $9
               (i32.sub
                (i32.const 0)
                (local.get $9)
               )
              )
              (local.set $0
               (i32.lt_s
                (local.get $0)
                (local.get $9)
               )
              )
              (local.set $0
               (select
                (i32.const 0)
                (local.get $8)
                (local.get $0)
               )
              )
              ;;@ celt/bands.c:759:0
              (local.set $0
               (select
                (local.get $15)
                (local.get $0)
                (local.get $11)
               )
              )
              (br $__rjti$1)
             )
            )
            ;;@ celt/bands.c:747:0
            (local.set $0
             (i32.load offset=48
              (local.get $0)
             )
            )
            (if (result i32)
             (local.get $0)
             (block (result i32)
              ;;@ celt/bands.c:767:0
              (local.set $9
               (i32.gt_s
                (local.get $8)
                (i32.const 8192)
               )
              )
              (local.set $9
               (select
                (i32.const 32767)
                (i32.const -32767)
                (local.get $9)
               )
              )
              (local.set $9
               (i32.div_s
                (local.get $9)
                (local.get $15)
               )
              )
              ;;@ celt/bands.c:768:0
              (local.set $11
               (i32.add
                (local.get $15)
                (i32.const -1)
               )
              )
              (local.set $8
               (i32.mul
                (local.get $8)
                (local.get $15)
               )
              )
              (local.set $8
               (i32.add
                (local.get $8)
                (local.get $9)
               )
              )
              (local.set $9
               (i32.shr_s
                (local.get $8)
                (i32.const 14)
               )
              )
              (local.set $8
               (i32.lt_s
                (local.get $8)
                (i32.const 0)
               )
              )
              (local.set $8
               (select
                (i32.const 0)
                (local.get $9)
                (local.get $8)
               )
              )
              (local.set $9
               (i32.gt_s
                (local.get $15)
                (local.get $8)
               )
              )
              (local.set $8
               (select
                (local.get $8)
                (local.get $11)
                (local.get $9)
               )
              )
              ;;@ celt/bands.c:769:0
              (local.set $0
               (i32.shr_u
                (local.get $0)
                (i32.const 31)
               )
              )
              (local.set $0
               (i32.xor
                (local.get $0)
                (i32.const 1)
               )
              )
              (i32.add
               (local.get $0)
               (local.get $8)
              )
             )
             (block (result i32)
              ;;@ celt/bands.c:749:0
              (local.set $0
               (i32.mul
                (local.get $8)
                (local.get $15)
               )
              )
              (local.set $0
               (i32.sub
                (local.get $0)
                (i32.const -8192)
               )
              )
              (i32.shr_s
               (local.get $0)
               (i32.const 14)
              )
             )
            )
           )
           (local.get $8)
          )
         )
         ;;@ celt/bands.c:777:0
         (local.set $8
          (i32.gt_s
           (local.get $4)
           (i32.const 2)
          )
         )
         (br_if $__rjti$1
          (i32.eqz
           (i32.and
            (local.get $8)
            (local.get $20)
           )
          )
         )
         ;;@ celt/bands.c:781:0
         (local.set $8
          (i32.div_s
           (local.get $15)
           (i32.const 2)
          )
         )
         ;;@ celt/bands.c:782:0
         (local.set $7
          (i32.add
           (local.get $8)
           (i32.const 1)
          )
         )
         (local.set $9
          (i32.mul
           (local.get $7)
           (i32.const 3)
          )
         )
         (local.set $11
          (i32.add
           (local.get $8)
           (local.get $9)
          )
         )
         (if
          (local.get $13)
          (block
           (local.set $14
            (if (result i32)
             ;;@ celt/bands.c:786:0
             (local.tee $18
              (i32.le_s
               (local.get $0)
               (local.get $8)
              )
             )
             (local.tee $7
              (i32.mul
               (local.get $0)
               (i32.const 3)
              )
             )
             (block (result i32)
              (local.set $7
               (i32.xor
                (local.get $8)
                (i32.const -1)
               )
              )
              (local.set $7
               (i32.add
                (local.get $7)
                (local.get $9)
               )
              )
              (local.set $7
               (i32.add
                (local.get $0)
                (local.get $7)
               )
              )
              (i32.mul
               (local.get $0)
               (i32.const 3)
              )
             )
            )
           )
           (local.set $14
            (i32.add
             (local.get $14)
             (i32.const 3)
            )
           )
           (local.set $8
            (i32.sub
             (local.get $9)
             (local.get $8)
            )
           )
           (local.set $8
            (i32.add
             (local.get $0)
             (local.get $8)
            )
           )
           (local.set $8
            (select
             (local.get $14)
             (local.get $8)
             (local.get $18)
            )
           )
           (call $_ec_encode
            (local.get $19)
            (local.get $7)
            (local.get $8)
            (local.get $11)
           )
          )
          (block
           ;;@ celt/bands.c:789:0
           (local.set $0
            (call $_ec_decode
             (local.get $19)
             (local.get $11)
            )
           )
           ;;@ celt/bands.c:790:0
           (local.set $14
            (i32.lt_s
             (local.get $0)
             (local.get $9)
            )
           )
           ;;@ celt/bands.c:791:0
           (local.set $18
            (i32.div_s
             (local.get $0)
             (i32.const 3)
            )
           )
           ;;@ celt/bands.c:793:0
           (local.set $7
            (i32.mul
             (local.get $7)
             (i32.const -2)
            )
           )
           (local.set $0
            (i32.add
             (local.get $0)
             (local.get $7)
            )
           )
           ;;@ celt/bands.c:790:0
           (local.set $7
            (select
             (local.get $18)
             (local.get $0)
             (local.get $14)
            )
           )
           (local.set $14
            (if (result i32)
             ;;@ celt/bands.c:794:0
             (local.tee $18
              (i32.le_s
               (local.get $7)
               (local.get $8)
              )
             )
             (local.tee $0
              (i32.mul
               (local.get $7)
               (i32.const 3)
              )
             )
             (block (result i32)
              (local.set $0
               (i32.xor
                (local.get $8)
                (i32.const -1)
               )
              )
              (local.set $0
               (i32.add
                (local.get $0)
                (local.get $9)
               )
              )
              (local.set $0
               (i32.add
                (local.get $0)
                (local.get $7)
               )
              )
              (i32.mul
               (local.get $7)
               (i32.const 3)
              )
             )
            )
           )
           (local.set $14
            (i32.add
             (local.get $14)
             (i32.const 3)
            )
           )
           (local.set $8
            (i32.sub
             (local.get $9)
             (local.get $8)
            )
           )
           (local.set $8
            (i32.add
             (local.get $7)
             (local.get $8)
            )
           )
           (local.set $8
            (select
             (local.get $14)
             (local.get $8)
             (local.get $18)
            )
           )
           (call $_ec_dec_update
            (local.get $19)
            (local.get $0)
            (local.get $8)
            (local.get $11)
           )
           (local.set $0
            (local.get $7)
           )
          )
         )
         (br $do-once7)
        )
        ;;@ celt/bands.c:797:0
        (local.set $7
         (i32.gt_s
          (local.get $7)
          (i32.const 1)
         )
        )
        (if
         (i32.or
          (local.get $7)
          (local.get $20)
         )
         (block
          (local.set $7
           (i32.add
            (local.get $15)
            (i32.const 1)
           )
          )
          (if
           (local.get $13)
           ;;@ celt/bands.c:800:0
           (call $_ec_enc_uint
            (local.get $19)
            (local.get $0)
            (local.get $7)
           )
           ;;@ celt/bands.c:802:0
           (local.set $0
            (call $_ec_dec_uint
             (local.get $19)
             (local.get $7)
            )
           )
          )
          (br $do-once7)
         )
        )
        ;;@ celt/bands.c:805:0
        (local.set $8
         (i32.shr_s
          (local.get $15)
          (i32.const 1)
         )
        )
        (local.set $9
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
        )
        (local.set $7
         (i32.mul
          (local.get $9)
          (local.get $9)
         )
        )
        (if
         (local.get $13)
         (block
          ;;@ celt/bands.c:810:0
          (local.set $9
           (i32.le_s
            (local.get $0)
            (local.get $8)
           )
          )
          (local.set $11
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (local.set $8
           (i32.add
            (local.get $15)
            (i32.const 1)
           )
          )
          (local.set $14
           (i32.sub
            (local.get $8)
            (local.get $0)
           )
          )
          (local.set $8
           (if (result i32)
            (local.get $9)
            (block (result i32)
             ;;@ celt/bands.c:811:0
             (local.set $8
              (i32.mul
               (local.get $0)
               (local.get $11)
              )
             )
             (i32.shr_s
              (local.get $8)
              (i32.const 1)
             )
            )
            (block (result i32)
             ;;@ celt/bands.c:812:0
             (local.set $8
              (i32.add
               (local.get $15)
               (i32.const 2)
              )
             )
             (local.set $8
              (i32.sub
               (local.get $8)
               (local.get $0)
              )
             )
             (local.set $8
              (i32.mul
               (local.get $8)
               (local.get $14)
              )
             )
             (local.set $8
              (i32.shr_s
               (local.get $8)
               (i32.const 1)
              )
             )
             (i32.sub
              (local.get $7)
              (local.get $8)
             )
            )
           )
          )
          (local.set $9
           (select
            (local.get $11)
            (local.get $14)
            (local.get $9)
           )
          )
          ;;@ celt/bands.c:814:0
          (local.set $9
           (i32.add
            (local.get $8)
            (local.get $9)
           )
          )
          (call $_ec_encode
           (local.get $19)
           (local.get $8)
           (local.get $9)
           (local.get $7)
          )
         )
         (block
          ;;@ celt/bands.c:819:0
          (local.set $0
           (call $_ec_decode
            (local.get $19)
            (local.get $7)
           )
          )
          ;;@ celt/bands.c:821:0
          (local.set $2
           (i32.mul
            (local.get $8)
            (local.get $9)
           )
          )
          (local.set $2
           (i32.shr_s
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.set $3
           (if (result i32)
            (i32.lt_s
             (local.get $0)
             (local.get $2)
            )
            (block (result i32)
             ;;@ celt/bands.c:823:0
             (local.set $0
              (i32.shl
               (local.get $0)
               (i32.const 3)
              )
             )
             (local.set $0
              (i32.or
               (local.get $0)
               (i32.const 1)
              )
             )
             (local.set $0
              (call $_isqrt32
               (local.get $0)
              )
             )
             (local.set $0
              (i32.add
               (local.get $0)
               (i32.const -1)
              )
             )
             (local.set $2
              (i32.shr_u
               (local.get $0)
               (i32.const 1)
              )
             )
             ;;@ celt/bands.c:824:0
             (local.set $0
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             ;;@ celt/bands.c:825:0
             (local.set $3
              (i32.mul
               (local.get $0)
               (local.get $2)
              )
             )
             (i32.shr_u
              (local.get $3)
              (i32.const 1)
             )
            )
            (block (result i32)
             ;;@ celt/bands.c:829:0
             (local.set $3
              (i32.add
               (local.get $15)
               (i32.const 1)
              )
             )
             (local.set $2
              (i32.shl
               (local.get $3)
               (i32.const 1)
              )
             )
             ;;@ celt/bands.c:830:0
             (local.set $0
              (i32.sub
               (local.get $7)
               (local.get $0)
              )
             )
             (local.set $0
              (i32.shl
               (local.get $0)
               (i32.const 3)
              )
             )
             (local.set $0
              (i32.add
               (local.get $0)
               (i32.const -7)
              )
             )
             (local.set $0
              (call $_isqrt32
               (local.get $0)
              )
             )
             (local.set $0
              (i32.sub
               (local.get $2)
               (local.get $0)
              )
             )
             (local.set $2
              (i32.shr_u
               (local.get $0)
               (i32.const 1)
              )
             )
             ;;@ celt/bands.c:831:0
             (local.set $0
              (i32.sub
               (local.get $3)
               (local.get $2)
              )
             )
             ;;@ celt/bands.c:832:0
             (local.set $3
              (i32.add
               (local.get $15)
               (i32.const 2)
              )
             )
             (local.set $3
              (i32.sub
               (local.get $3)
               (local.get $2)
              )
             )
             (local.set $3
              (i32.mul
               (local.get $0)
               (local.get $3)
              )
             )
             (local.set $3
              (i32.shr_s
               (local.get $3)
               (i32.const 1)
              )
             )
             (i32.sub
              (local.get $7)
              (local.get $3)
             )
            )
           )
          )
          ;;@ celt/bands.c:835:0
          (local.set $0
           (i32.add
            (local.get $0)
            (local.get $3)
           )
          )
          (call $_ec_dec_update
           (local.get $19)
           (local.get $3)
           (local.get $0)
           (local.get $7)
          )
          ;;@ celt/bands.c:839:0
          (local.set $0
           (i32.shl
            (local.get $2)
            (i32.const 14)
           )
          )
          ;;@ ./celt/entcode.h:136:0
          (local.set $0
           (i32.div_u
            (local.get $0)
            (local.get $15)
           )
          )
          (br $__rjti$3)
         )
        )
       )
       (if
        ;;@ celt/bands.c:838:0
        (i32.le_s
         (local.get $0)
         (i32.const -1)
        )
        (call $_celt_fatal
         (i32.const 40865)
         (i32.const 40801)
         (i32.const 838)
        )
       )
       ;;@ celt/bands.c:839:0
       (local.set $7
        (i32.shl
         (local.get $0)
         (i32.const 14)
        )
       )
       ;;@ ./celt/entcode.h:136:0
       (local.set $0
        (i32.div_u
         (local.get $7)
         (local.get $15)
        )
       )
       ;;@ celt/bands.c:840:0
       (br_if $__rjti$3
        (i32.eqz
         (i32.and
          (local.get $13)
          (local.get $20)
         )
        )
       )
       (if
        ;;@ celt/bands.c:842:0
        (i32.gt_u
         (local.get $15)
         (local.get $7)
        )
        (block
         (local.set $7
          (i32.load offset=8
           (local.get $26)
          )
         )
         ;;@ celt/bands.c:398:0
         (local.set $8
          (i32.add
           (i32.shl
            (local.get $22)
            (i32.const 2)
           )
           (local.get $25)
          )
         )
         (local.set $16
          (f32.load
           (local.get $8)
          )
         )
         ;;@ celt/bands.c:399:0
         (local.set $7
          (i32.add
           (local.get $7)
           (local.get $22)
          )
         )
         (local.set $7
          (i32.add
           (i32.shl
            (local.get $7)
            (i32.const 2)
           )
           (local.get $25)
          )
         )
         (local.set $17
          (f32.load
           (local.get $7)
          )
         )
         ;;@ celt/bands.c:400:0
         (local.set $12
          (f32.mul
           (local.get $16)
           (local.get $16)
          )
         )
         (local.set $12
          (f32.add
           (local.get $12)
           (f32.const 1.0000000036274937e-15)
          )
         )
         (local.set $21
          (f32.mul
           (local.get $17)
           (local.get $17)
          )
         )
         (local.set $12
          (f32.add
           (local.get $12)
           (local.get $21)
          )
         )
         (local.set $12
          (f32.sqrt
           (local.get $12)
          )
         )
         (local.set $12
          (f32.add
           (local.get $12)
           (f32.const 1.0000000036274937e-15)
          )
         )
         ;;@ celt/bands.c:401:0
         (local.set $16
          (f32.div
           (local.get $16)
           (local.get $12)
          )
         )
         ;;@ celt/bands.c:402:0
         (local.set $17
          (f32.div
           (local.get $17)
           (local.get $12)
          )
         )
         (if
          ;;@ celt/bands.c:403:0
          (i32.le_s
           (local.get $4)
           (i32.const 0)
          )
          (block
           (local.set $0
            (i32.const 0)
           )
           (br $__rjti$2)
          )
         )
         (local.set $7
          (i32.const 0)
         )
         (loop $while-in10
          ;;@ celt/bands.c:406:0
          (local.set $8
           (i32.add
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
            (local.get $2)
           )
          )
          (local.set $12
           (f32.load
            (local.get $8)
           )
          )
          ;;@ celt/bands.c:407:0
          (local.set $9
           (i32.add
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
            (local.get $3)
           )
          )
          (local.set $21
           (f32.load
            (local.get $9)
           )
          )
          ;;@ celt/bands.c:408:0
          (local.set $12
           (f32.mul
            (local.get $16)
            (local.get $12)
           )
          )
          (local.set $21
           (f32.mul
            (local.get $17)
            (local.get $21)
           )
          )
          (local.set $12
           (f32.add
            (local.get $12)
            (local.get $21)
           )
          )
          (f32.store
           (local.get $8)
           (local.get $12)
          )
          ;;@ celt/bands.c:403:0
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (br_if $while-in10
           (i32.ne
            (local.get $4)
            (local.get $7)
           )
          )
         )
         (br $__rjti$3)
        )
        (block
         ;;@ celt/bands.c:416:0
         (br_if $__rjti$3
          (i32.le_s
           (local.get $4)
           (i32.const 0)
          )
         )
         (local.set $7
          (i32.const 0)
         )
         (loop $while-in12
          ;;@ celt/bands.c:419:0
          (local.set $8
           (i32.add
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
            (local.get $2)
           )
          )
          (local.set $16
           (f32.load
            (local.get $8)
           )
          )
          (local.set $16
           (f32.mul
            (local.get $16)
            (f32.const 0.7071067690849304)
           )
          )
          ;;@ celt/bands.c:420:0
          (local.set $9
           (i32.add
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
            (local.get $3)
           )
          )
          (local.set $17
           (f32.load
            (local.get $9)
           )
          )
          (local.set $17
           (f32.mul
            (local.get $17)
            (f32.const 0.7071067690849304)
           )
          )
          ;;@ celt/bands.c:421:0
          (local.set $12
           (f32.add
            (local.get $16)
            (local.get $17)
           )
          )
          (f32.store
           (local.get $8)
           (local.get $12)
          )
          ;;@ celt/bands.c:422:0
          (local.set $16
           (f32.sub
            (local.get $17)
            (local.get $16)
           )
          )
          (f32.store
           (local.get $9)
           (local.get $16)
          )
          ;;@ celt/bands.c:416:0
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (br_if $while-in12
           (i32.ne
            (local.get $4)
            (local.get $7)
           )
          )
         )
         (br $__rjti$3)
        )
       )
      )
     )
     ;;@ celt/bands.c:874:0
     (local.set $2
      (call $_ec_tell_frac
       (local.get $19)
      )
     )
     (local.set $2
      (i32.sub
       (local.get $2)
       (local.get $24)
      )
     )
     ;;@ celt/bands.c:875:0
     (local.set $3
      (i32.load
       (local.get $5)
      )
     )
     (local.set $3
      (i32.sub
       (local.get $3)
       (local.get $2)
      )
     )
     (i32.store
      (local.get $5)
      (local.get $3)
     )
     (br $label$break$L88)
    )
    ;;@ celt/bands.c:874:0
    (local.set $2
     (call $_ec_tell_frac
      (local.get $19)
     )
    )
    (local.set $2
     (i32.sub
      (local.get $2)
      (local.get $24)
     )
    )
    ;;@ celt/bands.c:875:0
    (local.set $3
     (i32.load
      (local.get $5)
     )
    )
    (local.set $3
     (i32.sub
      (local.get $3)
      (local.get $2)
     )
    )
    (i32.store
     (local.get $5)
     (local.get $3)
    )
    (if
     (i32.lt_s
      (local.get $0)
      (i32.const 16384)
     )
     (br_if $label$break$L88
      (i32.eqz
       (local.get $0)
      )
     )
     (if
      (i32.eqz
       (i32.sub
        (local.get $0)
        (i32.const 16384)
       )
      )
      (block
       ;;@ celt/bands.c:887:0
       (local.set $0
        (i32.shl
         (i32.const 1)
         (local.get $6)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const -1)
        )
       )
       (local.set $0
        (i32.shl
         (local.get $0)
         (local.get $6)
        )
       )
       (local.set $3
        (i32.load
         (local.get $10)
        )
       )
       (local.set $0
        (i32.and
         (local.get $0)
         (local.get $3)
        )
       )
       (i32.store
        (local.get $10)
        (local.get $0)
       )
       ;;@ celt/bands.c:897:0
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       ;;@ celt/bands.c:898:0
       (i32.store offset=4
        (local.get $1)
        (i32.const 0)
       )
       ;;@ celt/bands.c:899:0
       (i32.store offset=8
        (local.get $1)
        (i32.const 32767)
       )
       ;;@ celt/bands.c:900:0
       (i32.store offset=12
        (local.get $1)
        (i32.const 16384)
       )
       ;;@ celt/bands.c:901:0
       (i32.store offset=16
        (local.get $1)
        (i32.const 16384)
       )
       (br $folding-inner0)
      )
     )
    )
    ;;@ celt/bands.c:72:0
    (local.set $5
     (i32.shl
      (local.get $0)
      (i32.const 16)
     )
    )
    (local.set $3
     (i32.shr_s
      (local.get $5)
      (i32.const 16)
     )
    )
    (local.set $6
     (i32.shr_s
      (local.get $5)
      (i32.const 13)
     )
    )
    ;;@ celt/bands.c:75:0
    (local.set $3
     (i32.mul
      (local.get $3)
      (local.get $6)
     )
    )
    (local.set $3
     (i32.add
      (local.get $3)
      (i32.const 32768)
     )
    )
    (local.set $3
     (i32.shr_s
      (local.get $3)
      (i32.const 16)
     )
    )
    (local.set $6
     (i32.mul
      (local.get $3)
      (i32.const -626)
     )
    )
    (local.set $6
     (i32.add
      (local.get $6)
      (i32.const 16384)
     )
    )
    (local.set $6
     (i32.shr_s
      (local.get $6)
      (i32.const 15)
     )
    )
    (local.set $6
     (i32.add
      (local.get $6)
      (i32.const 8277)
     )
    )
    (local.set $6
     (i32.mul
      (local.get $3)
      (local.get $6)
     )
    )
    (local.set $6
     (i32.add
      (local.get $6)
      (i32.const 16384)
     )
    )
    (local.set $6
     (i32.shr_u
      (local.get $6)
      (i32.const 15)
     )
    )
    (local.set $6
     (i32.shl
      (local.get $6)
      (i32.const 16)
     )
    )
    (local.set $6
     (i32.add
      (local.get $6)
      (i32.const -501415936)
     )
    )
    (local.set $6
     (i32.shr_s
      (local.get $6)
      (i32.const 16)
     )
    )
    (local.set $6
     (i32.mul
      (local.get $3)
      (local.get $6)
     )
    )
    (local.set $6
     (i32.add
      (local.get $6)
      (i32.const 16384)
     )
    )
    (local.set $6
     (i32.shr_u
      (local.get $6)
      (i32.const 15)
     )
    )
    (local.set $3
     (i32.sub
      (i32.const 32768)
      (local.get $3)
     )
    )
    ;;@ celt/bands.c:77:0
    (local.set $3
     (i32.add
      (local.get $3)
      (local.get $6)
     )
    )
    ;;@ celt/bands.c:890:0
    (local.set $3
     (i32.shl
      (local.get $3)
      (i32.const 16)
     )
    )
    (local.set $6
     (i32.shr_s
      (local.get $3)
      (i32.const 16)
     )
    )
    ;;@ celt/bands.c:72:0
    (local.set $3
     (i32.sub
      (i32.const 1073741824)
      (local.get $5)
     )
    )
    (local.set $5
     (i32.shr_s
      (local.get $3)
      (i32.const 16)
     )
    )
    (local.set $3
     (i32.shr_s
      (local.get $3)
      (i32.const 13)
     )
    )
    ;;@ celt/bands.c:75:0
    (local.set $3
     (i32.mul
      (local.get $3)
      (local.get $5)
     )
    )
    (local.set $3
     (i32.add
      (local.get $3)
      (i32.const 32768)
     )
    )
    (local.set $3
     (i32.shr_s
      (local.get $3)
      (i32.const 16)
     )
    )
    (local.set $5
     (i32.mul
      (local.get $3)
      (i32.const -626)
     )
    )
    (local.set $5
     (i32.add
      (local.get $5)
      (i32.const 16384)
     )
    )
    (local.set $5
     (i32.shr_s
      (local.get $5)
      (i32.const 15)
     )
    )
    (local.set $5
     (i32.add
      (local.get $5)
      (i32.const 8277)
     )
    )
    (local.set $5
     (i32.mul
      (local.get $3)
      (local.get $5)
     )
    )
    (local.set $5
     (i32.add
      (local.get $5)
      (i32.const 16384)
     )
    )
    (local.set $5
     (i32.shr_u
      (local.get $5)
      (i32.const 15)
     )
    )
    (local.set $5
     (i32.shl
      (local.get $5)
      (i32.const 16)
     )
    )
    (local.set $5
     (i32.add
      (local.get $5)
      (i32.const -501415936)
     )
    )
    (local.set $5
     (i32.shr_s
      (local.get $5)
      (i32.const 16)
     )
    )
    (local.set $5
     (i32.mul
      (local.get $3)
      (local.get $5)
     )
    )
    (local.set $5
     (i32.add
      (local.get $5)
      (i32.const 16384)
     )
    )
    (local.set $5
     (i32.shr_u
      (local.get $5)
      (i32.const 15)
     )
    )
    (local.set $3
     (i32.sub
      (i32.const 32768)
      (local.get $3)
     )
    )
    ;;@ celt/bands.c:77:0
    (local.set $3
     (i32.add
      (local.get $3)
      (local.get $5)
     )
    )
    ;;@ celt/bands.c:891:0
    (local.set $3
     (i32.shl
      (local.get $3)
      (i32.const 16)
     )
    )
    (local.set $3
     (i32.shr_s
      (local.get $3)
      (i32.const 16)
     )
    )
    ;;@ celt/bands.c:894:0
    (local.set $4
     (i32.shl
      (local.get $4)
      (i32.const 23)
     )
    )
    (local.set $4
     (i32.add
      (local.get $4)
      (i32.const -8388608)
     )
    )
    (local.set $7
     (i32.shr_s
      (local.get $4)
      (i32.const 16)
     )
    )
    ;;@ celt/bands.c:84:0
    (local.set $4
     (i32.clz
      (local.get $6)
     )
    )
    (local.set $4
     (i32.sub
      (i32.const 32)
      (local.get $4)
     )
    )
    ;;@ celt/bands.c:85:0
    (local.set $5
     (i32.clz
      (local.get $3)
     )
    )
    (local.set $5
     (i32.sub
      (i32.const 32)
      (local.get $5)
     )
    )
    ;;@ celt/bands.c:86:0
    (local.set $8
     (i32.sub
      (i32.const 15)
      (local.get $4)
     )
    )
    (local.set $8
     (i32.shl
      (local.get $6)
      (local.get $8)
     )
    )
    ;;@ celt/bands.c:87:0
    (local.set $9
     (i32.sub
      (i32.const 15)
      (local.get $5)
     )
    )
    (local.set $9
     (i32.shl
      (local.get $3)
      (local.get $9)
     )
    )
    ;;@ celt/bands.c:88:0
    (local.set $4
     (i32.sub
      (local.get $5)
      (local.get $4)
     )
    )
    (local.set $5
     (i32.shl
      (local.get $4)
      (i32.const 11)
     )
    )
    ;;@ celt/bands.c:89:0
    (local.set $4
     (i32.shl
      (local.get $9)
      (i32.const 16)
     )
    )
    (local.set $4
     (i32.shr_s
      (local.get $4)
      (i32.const 16)
     )
    )
    (local.set $9
     (i32.mul
      (local.get $4)
      (i32.const -2597)
     )
    )
    (local.set $9
     (i32.add
      (local.get $9)
      (i32.const 16384)
     )
    )
    (local.set $9
     (i32.shr_s
      (local.get $9)
      (i32.const 15)
     )
    )
    (local.set $9
     (i32.add
      (local.get $9)
      (i32.const 7932)
     )
    )
    (local.set $4
     (i32.mul
      (local.get $4)
      (local.get $9)
     )
    )
    (local.set $4
     (i32.add
      (local.get $4)
      (i32.const 16384)
     )
    )
    (local.set $9
     (i32.shr_u
      (local.get $4)
      (i32.const 15)
     )
    )
    ;;@ celt/bands.c:90:0
    (local.set $4
     (i32.shl
      (local.get $8)
      (i32.const 16)
     )
    )
    (local.set $4
     (i32.shr_s
      (local.get $4)
      (i32.const 16)
     )
    )
    (local.set $8
     (i32.mul
      (local.get $4)
      (i32.const -2597)
     )
    )
    (local.set $8
     (i32.add
      (local.get $8)
      (i32.const 16384)
     )
    )
    (local.set $8
     (i32.shr_s
      (local.get $8)
      (i32.const 15)
     )
    )
    (local.set $8
     (i32.add
      (local.get $8)
      (i32.const 7932)
     )
    )
    (local.set $4
     (i32.mul
      (local.get $4)
      (local.get $8)
     )
    )
    (local.set $4
     (i32.add
      (local.get $4)
      (i32.const 16384)
     )
    )
    (local.set $4
     (i32.shr_u
      (local.get $4)
      (i32.const 15)
     )
    )
    ;;@ celt/bands.c:89:0
    (local.set $4
     (i32.sub
      (local.get $5)
      (local.get $4)
     )
    )
    ;;@ celt/bands.c:90:0
    (local.set $4
     (i32.add
      (local.get $4)
      (local.get $9)
     )
    )
    ;;@ celt/bands.c:894:0
    (local.set $4
     (i32.shl
      (local.get $4)
      (i32.const 16)
     )
    )
    (local.set $4
     (i32.shr_s
      (local.get $4)
      (i32.const 16)
     )
    )
    (local.set $4
     (i32.mul
      (local.get $4)
      (local.get $7)
     )
    )
    (local.set $4
     (i32.add
      (local.get $4)
      (i32.const 16384)
     )
    )
    (local.set $4
     (i32.shr_s
      (local.get $4)
      (i32.const 15)
     )
    )
    ;;@ celt/bands.c:897:0
    (i32.store
     (local.get $1)
     (i32.const 0)
    )
    ;;@ celt/bands.c:898:0
    (i32.store offset=4
     (local.get $1)
     (local.get $6)
    )
    ;;@ celt/bands.c:899:0
    (i32.store offset=8
     (local.get $1)
     (local.get $3)
    )
    ;;@ celt/bands.c:900:0
    (i32.store offset=12
     (local.get $1)
     (local.get $4)
    )
    ;;@ celt/bands.c:901:0
    (i32.store offset=16
     (local.get $1)
     (local.get $0)
    )
    (br $folding-inner0)
   )
   ;;@ celt/bands.c:881:0
   (local.set $3
    (i32.shl
     (i32.const 1)
     (local.get $6)
    )
   )
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const -1)
    )
   )
   (local.set $4
    (i32.load
     (local.get $10)
    )
   )
   (local.set $3
    (i32.and
     (local.get $3)
     (local.get $4)
    )
   )
   (i32.store
    (local.get $10)
    (local.get $3)
   )
   ;;@ celt/bands.c:897:0
   (i32.store
    (local.get $1)
    (local.get $0)
   )
   ;;@ celt/bands.c:898:0
   (i32.store offset=4
    (local.get $1)
    (i32.const 32767)
   )
   ;;@ celt/bands.c:899:0
   (i32.store offset=8
    (local.get $1)
    (i32.const 0)
   )
   ;;@ celt/bands.c:900:0
   (i32.store offset=12
    (local.get $1)
    (i32.const -16384)
   )
   ;;@ celt/bands.c:901:0
   (i32.store offset=16
    (local.get $1)
    (i32.const 0)
   )
   ;;@ celt/bands.c:902:0
   (i32.store offset=20
    (local.get $1)
    (local.get $2)
   )
   ;;@ celt/bands.c:903:0
   (return)
  )
  ;;@ celt/bands.c:902:0
  (i32.store offset=20
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_celt_fatal (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  ;;@ ./celt/arch.h:75:0
  (local.set $4
   (i32.load
    (i32.const 37120)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=4
   (local.get $3)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $3)
   (local.get $0)
  )
  (call $_fprintf
   (local.get $4)
   (local.get $3)
  )
  ;;@ ./celt/arch.h:76:0
  (call $_abort)
 )
 (func $_resampling_factor (; has Stack IR ;) (param $0 i32) (result i32)
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (if
      (i32.lt_s
       (local.get $0)
       (i32.const 16000)
      )
      (if
       (i32.lt_s
        (local.get $0)
        (i32.const 12000)
       )
       (block
        (br_if $__rjti$0
         (i32.sub
          (local.get $0)
          (i32.const 8000)
         )
        )
        (local.set $0
         (i32.const 6)
        )
        (br $__rjti$1)
       )
       (block
        (br_if $__rjti$0
         (i32.sub
          (local.get $0)
          (i32.const 12000)
         )
        )
        (local.set $0
         (i32.const 4)
        )
        (br $__rjti$1)
       )
      )
      (block
       (if
        (i32.lt_s
         (local.get $0)
         (i32.const 24000)
        )
        (block
         (br_if $__rjti$0
          (i32.sub
           (local.get $0)
           (i32.const 16000)
          )
         )
         (local.set $0
          (i32.const 3)
         )
         (br $__rjti$1)
        )
       )
       (if
        (i32.ge_s
         (local.get $0)
         (i32.const 48000)
        )
        (block
         (br_if $__rjti$0
          (i32.sub
           (local.get $0)
           (i32.const 48000)
          )
         )
         (local.set $0
          (i32.const 1)
         )
         (br $__rjti$1)
        )
       )
       (br_if $__rjti$0
        (i32.sub
         (local.get $0)
         (i32.const 24000)
        )
       )
       (local.set $0
        (i32.const 2)
       )
       (br $__rjti$1)
      )
     )
    )
    ;;@ celt/celt.c:84:0
    (call $_celt_fatal
     (i32.const 45506)
     (i32.const 40964)
     (i32.const 84)
    )
    (br $__rjto$1)
   )
   ;;@ celt/celt.c:89:0
   (return
    (local.get $0)
   )
  )
  (i32.const 0)
 )
 (func $_comb_filter (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f32) (param $6 f32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 i32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 f32)
  (local $25 f32)
  (local $26 i32)
  ;;@ celt/celt.c:256:0
  (block $folding-inner1
   (block $folding-inner0
    (if
     ;;@ celt/celt.c:203:0
     (i32.and
      (local.tee $23
       (f32.eq
        (local.get $6)
        (f32.const 0)
       )
      )
      (f32.eq
       (local.get $5)
       (f32.const 0)
      )
     )
     (block
      ;;@ celt/celt.c:206:0
      (br_if $folding-inner1
       (i32.eq
        (local.get $0)
        (local.get $1)
       )
      )
      ;;@ celt/celt.c:207:0
      (local.set $2
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
      )
      (br $folding-inner0)
     )
    )
    ;;@ celt/celt.c:220:0
    (local.set $16
     (i32.sub
      (i32.const 0)
      ;;@ celt/celt.c:213:0
      (local.tee $3
       (select
        (local.get $3)
        (i32.const 15)
        (i32.gt_s
         (local.get $3)
         (i32.const 15)
        )
       )
      )
     )
    )
    ;;@ celt/celt.c:214:0
    (local.set $15
     (f32.mul
      (f32.load
       (i32.add
        (i32.mul
         (local.get $7)
         (i32.const 12)
        )
        (i32.const 1232)
       )
      )
      (local.get $5)
     )
    )
    ;;@ celt/celt.c:215:0
    (local.set $24
     (f32.mul
      (f32.load
       (i32.add
        (i32.mul
         (local.get $7)
         (i32.const 12)
        )
        (i32.const 1236)
       )
      )
      (local.get $5)
     )
    )
    ;;@ celt/celt.c:216:0
    (local.set $25
     (f32.mul
      (f32.load
       (i32.add
        (i32.mul
         (local.get $7)
         (i32.const 12)
        )
        (i32.const 1240)
       )
      )
      (local.get $5)
     )
    )
    ;;@ celt/celt.c:217:0
    (local.set $17
     (f32.mul
      (f32.load
       (i32.add
        (i32.mul
         (local.get $8)
         (i32.const 12)
        )
        (i32.const 1232)
       )
      )
      (local.get $6)
     )
    )
    ;;@ celt/celt.c:218:0
    (local.set $18
     (f32.mul
      (f32.load
       (i32.add
        (i32.mul
         (local.get $8)
         (i32.const 12)
        )
        (i32.const 1236)
       )
      )
      (local.get $6)
     )
    )
    ;;@ celt/celt.c:219:0
    (local.set $19
     (f32.mul
      (f32.load
       (i32.add
        (i32.mul
         (local.get $8)
         (i32.const 12)
        )
        (i32.const 1240)
       )
      )
      (local.get $6)
     )
    )
    ;;@ celt/celt.c:220:0
    (local.set $20
     (i32.sub
      (i32.const 1)
      (local.get $3)
     )
    )
    ;;@ celt/celt.c:222:0
    (local.set $21
     (i32.xor
      (local.get $3)
      (i32.const -1)
     )
    )
    ;;@ celt/celt.c:223:0
    (local.set $22
     (i32.sub
      (i32.const -2)
      (local.get $3)
     )
    )
    (local.set $2
     (if (result i32)
      ;;@ celt/celt.c:227:0
      (i32.gt_s
       ;;@ celt/celt.c:225:0
       (local.tee $7
        (select
         (i32.const 0)
         (local.get $10)
         (i32.and
          (i32.and
           (i32.eq
            (local.get $3)
            ;;@ celt/celt.c:212:0
            (local.tee $10
             (select
              (local.get $2)
              (i32.const 15)
              (i32.gt_s
               (local.get $2)
               (i32.const 15)
              )
             )
            )
           )
           (f32.eq
            (local.get $5)
            (local.get $6)
           )
          )
          (i32.eq
           (local.get $7)
           (local.get $8)
          )
         )
        )
       )
       (i32.const 0)
      )
      (block (result i32)
       ;;@ celt/celt.c:223:0
       (local.set $12
        (f32.load
         (i32.add
          (i32.shl
           (local.get $22)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
       )
       ;;@ celt/celt.c:222:0
       (local.set $5
        (f32.load
         (i32.add
          (i32.shl
           (local.get $21)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
       )
       ;;@ celt/celt.c:221:0
       (local.set $6
        (f32.load
         (i32.add
          (i32.shl
           (local.get $16)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
       )
       ;;@ celt/celt.c:220:0
       (local.set $26
        (i32.sub
         (i32.const 2)
         (local.get $3)
        )
       )
       (local.set $13
        (f32.load
         (i32.add
          (i32.shl
           (local.get $20)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in (result i32)
        ;;@ celt/celt.c:233:0
        (local.set $14
         (f32.sub
          (f32.const 1)
          ;;@ celt/celt.c:231:0
          (local.tee $11
           (f32.mul
            (local.tee $11
             (f32.load
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 2)
               )
               (local.get $9)
              )
             )
            )
            (local.get $11)
           )
          )
         )
        )
        ;;@ celt/celt.c:239:0
        (f32.store
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (local.get $0)
         )
         (f32.add
          (f32.mul
           (f32.add
            (local.get $12)
            ;;@ celt/celt.c:230:0
            (local.tee $12
             (f32.load
              (i32.add
               (i32.shl
                (i32.add
                 (local.get $2)
                 (local.get $26)
                )
                (i32.const 2)
               )
               (local.get $1)
              )
             )
            )
           )
           (f32.mul
            (local.get $19)
            (local.get $11)
           )
          )
          (f32.add
           (f32.mul
            (f32.add
             (local.get $13)
             (local.get $5)
            )
            (f32.mul
             (local.get $18)
             (local.get $11)
            )
           )
           (f32.add
            (f32.mul
             (local.get $6)
             (f32.mul
              (local.get $17)
              (local.get $11)
             )
            )
            (f32.add
             (f32.add
              (f32.add
               (f32.load
                (i32.add
                 (i32.shl
                  (local.get $2)
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
               (f32.mul
                (f32.load
                 (i32.add
                  (i32.shl
                   ;;@ celt/celt.c:233:0
                   (local.tee $8
                    (i32.sub
                     (local.get $2)
                     (local.get $10)
                    )
                   )
                   (i32.const 2)
                  )
                  (local.get $1)
                 )
                )
                (f32.mul
                 (local.get $15)
                 (local.get $14)
                )
               )
              )
              (f32.mul
               (f32.mul
                (local.get $24)
                (local.get $14)
               )
               (f32.add
                (f32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $8)
                    (i32.const 1)
                   )
                   (i32.const 2)
                  )
                  (local.get $1)
                 )
                )
                (f32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $8)
                    (i32.const -1)
                   )
                   (i32.const 2)
                  )
                  (local.get $1)
                 )
                )
               )
              )
             )
             (f32.mul
              (f32.mul
               (local.get $25)
               (local.get $14)
              )
              (f32.add
               (f32.load
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $8)
                   (i32.const 2)
                  )
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
               (f32.load
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $8)
                   (i32.const -2)
                  )
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
              )
             )
            )
           )
          )
         )
        )
        (if (result i32)
         ;;@ celt/celt.c:227:0
         (i32.eq
          (local.get $7)
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
         )
         (local.get $7)
         (block
          (local.set $11
           (local.get $13)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $13
           (local.get $12)
          )
          (local.set $12
           (local.get $5)
          )
          (local.set $6
           (local.get $11)
          )
          (local.set $5
           (local.get $14)
          )
          (br $while-in)
         )
        )
       )
      )
      (i32.const 0)
     )
    )
    (if
     (local.get $23)
     (block
      ;;@ celt/celt.c:249:0
      (br_if $folding-inner1
       (i32.eq
        (local.get $0)
        (local.get $1)
       )
      )
      ;;@ celt/celt.c:250:0
      (local.set $2
       (i32.shl
        (i32.sub
         (local.get $4)
         (local.get $7)
        )
        (i32.const 2)
       )
      )
      (local.set $1
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
      (local.set $0
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $0)
       )
      )
      (br $folding-inner0)
     )
    )
    ;;@ celt/celt.c:171:0
    (br_if $folding-inner1
     (i32.le_s
      ;;@ celt/celt.c:255:0
      (local.tee $4
       (i32.sub
        (local.get $4)
        (local.get $2)
       )
      )
      (i32.const 0)
     )
    )
    (local.set $7
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
      (local.get $0)
     )
    )
    ;;@ celt/celt.c:170:0
    (local.set $13
     (f32.load
      (i32.add
       ;;@ celt/celt.c:255:0
       (local.tee $1
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 2)
         )
         (local.get $1)
        )
       )
       (i32.shl
        (local.get $20)
        (i32.const 2)
       )
      )
     )
    )
    ;;@ celt/celt.c:169:0
    (local.set $6
     (f32.load
      (i32.add
       (i32.shl
        (local.get $16)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
    )
    ;;@ celt/celt.c:168:0
    (local.set $5
     (f32.load
      (i32.add
       (i32.shl
        (local.get $21)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
    )
    ;;@ celt/celt.c:167:0
    (local.set $2
     (i32.sub
      (i32.const 2)
      (local.get $3)
     )
    )
    (local.set $12
     (f32.load
      (i32.add
       (i32.shl
        (local.get $22)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in1
     ;;@ celt/celt.c:178:0
     (f32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $7)
      )
      (f32.add
       (f32.mul
        (local.get $19)
        (f32.add
         (local.get $12)
         ;;@ celt/celt.c:173:0
         (local.tee $15
          (f32.load
           (i32.add
            (i32.shl
             (i32.add
              (local.get $0)
              (local.get $2)
             )
             (i32.const 2)
            )
            (local.get $1)
           )
          )
         )
        )
       )
       (f32.add
        (f32.mul
         (local.get $18)
         (f32.add
          (local.get $5)
          (local.get $13)
         )
        )
        (f32.add
         (f32.mul
          (local.get $17)
          (local.get $6)
         )
         (f32.load
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $1)
          )
         )
        )
       )
      )
     )
     (if
      ;;@ celt/celt.c:171:0
      (i32.ne
       (local.get $4)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
      (block
       (local.set $11
        (local.get $13)
       )
       (local.set $14
        (local.get $6)
       )
       (local.set $12
        (local.get $5)
       )
       (local.set $13
        (local.get $15)
       )
       (local.set $6
        (local.get $11)
       )
       (local.set $5
        (local.get $14)
       )
       (br $while-in1)
      )
     )
    )
    ;;@ celt/celt.c:256:0
    (return)
   )
   (drop
    (call $_memmove
     (local.get $0)
     (local.get $1)
     (local.get $2)
    )
   )
  )
 )
 (func $_init_caps (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  ;;@ celt/celt.c:275:0
  (local.set $4
   (i32.load offset=8
    (local.get $0)
   )
  )
  (if
   (i32.le_s
    (local.get $4)
    (i32.const 0)
   )
   ;;@ celt/celt.c:281:0
   (return)
  )
  (local.set $10
   (i32.add
    (i32.add
     (local.get $3)
     (i32.const -1)
    )
    (i32.shl
     (local.get $2)
     (i32.const 1)
    )
   )
  )
  ;;@ celt/celt.c:278:0
  (local.set $9
   (i32.load offset=32
    (local.get $0)
   )
  )
  (local.set $5
   (i32.load16_s
    (local.get $9)
   )
  )
  ;;@ celt/celt.c:279:0
  (local.set $11
   (i32.load offset=104
    (local.get $0)
   )
  )
  (loop $while-in
   ;;@ celt/celt.c:278:0
   (local.set $8
    (i32.add
     (local.get $6)
     (i32.const 1)
    )
   )
   (local.set $7
    (i32.add
     (i32.shl
      (local.get $8)
      (i32.const 1)
     )
     (local.get $9)
    )
   )
   (local.set $7
    (i32.load16_s
     (local.get $7)
    )
   )
   (local.set $5
    (i32.shr_s
     (i32.shl
      (local.get $5)
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
   (local.set $5
    (i32.sub
     (local.get $7)
     (local.get $5)
    )
   )
   (local.set $5
    (i32.shl
     (local.get $5)
     (local.get $2)
    )
   )
   ;;@ celt/celt.c:279:0
   (local.set $4
    (i32.mul
     (local.get $4)
     (local.get $10)
    )
   )
   (local.set $4
    (i32.add
     (local.get $4)
     (local.get $6)
    )
   )
   (local.set $4
    (i32.add
     (local.get $4)
     (local.get $11)
    )
   )
   (local.set $4
    (i32.load8_u
     (local.get $4)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (i32.const 255)
    )
   )
   (local.set $4
    (i32.sub
     (local.get $4)
     (i32.const -64)
    )
   )
   (local.set $5
    (i32.mul
     (local.get $3)
     (local.get $5)
    )
   )
   (local.set $5
    (i32.mul
     (local.get $4)
     (local.get $5)
    )
   )
   (local.set $5
    (i32.shr_s
     (local.get $5)
     (i32.const 2)
    )
   )
   (local.set $4
    (i32.add
     (i32.shl
      (local.get $6)
      (i32.const 2)
     )
     (local.get $1)
    )
   )
   (i32.store
    (local.get $4)
    (local.get $5)
   )
   ;;@ celt/celt.c:275:0
   (local.set $4
    (i32.load offset=8
     (local.get $0)
    )
   )
   (if
    (i32.lt_s
     (local.get $8)
     (local.get $4)
    )
    (block
     (local.set $6
      (local.get $8)
     )
     (local.set $5
      (local.get $7)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_validate_celt_decoder (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (if
   ;;@ celt/celt_decoder.c:118:0
   (i32.ne
    (i32.load
     (local.get $0)
    )
    (i32.const 36568)
   )
   (call $_celt_fatal
    (i32.const 40976)
    (i32.const 41048)
    (i32.const 118)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:119:0
   (i32.ne
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 120)
   )
   (call $_celt_fatal
    (i32.const 41068)
    (i32.const 41048)
    (i32.const 119)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:121:0
   (i32.ge_u
    (i32.add
     (i32.load offset=8
      (local.get $0)
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 44378)
    (i32.const 41048)
    (i32.const 121)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:122:0
   (i32.ge_u
    (i32.add
     (i32.load offset=12
      (local.get $0)
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 45300)
    (i32.const 41048)
    (i32.const 122)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:123:0
   (i32.le_s
    (i32.load offset=16
     (local.get $0)
    )
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 41105)
    (i32.const 41048)
    (i32.const 123)
   )
  )
  (block $switch
   (block $switch-default
    ;;@ celt/celt_decoder.c:124:0
    (br_table $switch $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch $switch-default
     (local.tee $1
      (i32.load offset=20
       (local.get $0)
      )
     )
    )
   )
   (call $_celt_fatal
    (i32.const 41142)
    (i32.const 41048)
    (i32.const 124)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:125:0
   (i32.ge_s
    (local.get $1)
    (local.tee $1
     (i32.load offset=24
      (local.get $0)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 41194)
    (i32.const 41048)
    (i32.const 125)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:126:0
   (i32.ge_s
    (local.get $1)
    (i32.const 22)
   )
   (call $_celt_fatal
    (i32.const 41232)
    (i32.const 41048)
    (i32.const 126)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:128:0
   (i32.le_s
    (local.tee $1
     (i32.load offset=36
      (local.get $0)
     )
    )
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 45224)
    (i32.const 41048)
    (i32.const 128)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:129:0
   (local.get $1)
   (call $_celt_fatal
    (i32.const 45256)
    (i32.const 41048)
    (i32.const 129)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:131:0
   (i32.ge_s
    (local.tee $1
     (i32.load offset=48
      (local.get $0)
     )
    )
    (i32.const 721)
   )
   (call $_celt_fatal
    (i32.const 41264)
    (i32.const 41048)
    (i32.const 131)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:132:0
   (i32.eqz
    (i32.or
     (i32.eqz
      (local.get $1)
     )
     (i32.gt_s
      (local.get $1)
      (i32.const 99)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 41324)
    (i32.const 41048)
    (i32.const 132)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:133:0
   (i32.ge_s
    (local.tee $1
     (i32.load offset=60
      (local.get $0)
     )
    )
    (i32.const 1024)
   )
   (call $_celt_fatal
    (i32.const 41413)
    (i32.const 41048)
    (i32.const 133)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:134:0
   (i32.eqz
    (i32.or
     (i32.eqz
      (local.get $1)
     )
     (i32.gt_s
      (local.get $1)
      (i32.const 14)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 41466)
    (i32.const 41048)
    (i32.const 134)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:135:0
   (i32.ge_s
    (local.tee $1
     (i32.load
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
    )
    (i32.const 1024)
   )
   (call $_celt_fatal
    (i32.const 41560)
    (i32.const 41048)
    (i32.const 135)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:136:0
   (i32.eqz
    (i32.or
     (i32.eqz
      (local.get $1)
     )
     (i32.gt_s
      (local.get $1)
      (i32.const 14)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 41617)
    (i32.const 41048)
    (i32.const 136)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:137:0
   (i32.ge_s
    (local.tee $1
     (i32.load offset=76
      (local.get $0)
     )
    )
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 41719)
    (i32.const 41048)
    (i32.const 137)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:138:0
   (i32.le_s
    (local.get $1)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 41764)
    (i32.const 41048)
    (i32.const 138)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:139:0
   (i32.ge_s
    (local.tee $0
     (i32.load offset=80
      (local.get $0)
     )
    )
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 41809)
    (i32.const 41048)
    (i32.const 139)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:140:0
   (i32.le_s
    (local.get $0)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 41858)
    (i32.const 41048)
    (i32.const 140)
   )
  )
 )
 (func $_celt_decoder_init (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:191:0
   (i32.gt_u
    (local.get $2)
    (i32.const 2)
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    ;;@ celt/celt_decoder.c:187:0
    (return
     (i32.const -1)
    )
   )
  )
  (if
   ;;@ celt/celt_decoder.c:194:0
   (i32.eqz
    (local.get $0)
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    ;;@ celt/celt_decoder.c:187:0
    (return
     (i32.const -7)
    )
   )
  )
  ;;@ celt/celt_decoder.c:197:0
  (drop
   (call $_memset
    (local.get $0)
    (i32.const 0)
    (i32.add
     (i32.add
      (i32.shl
       (i32.load
        (i32.const 36576)
       )
       (i32.const 5)
      )
      (i32.const 92)
     )
     (i32.mul
      (local.get $2)
      (i32.add
       (i32.shl
        (i32.load
         (i32.const 36572)
        )
        (i32.const 2)
       )
       (i32.const 8288)
      )
     )
    )
   )
  )
  ;;@ celt/celt_decoder.c:199:0
  (i32.store
   (local.get $0)
   (i32.const 36568)
  )
  ;;@ celt/celt_decoder.c:200:0
  (i32.store offset=4
   (local.get $0)
   (i32.load
    (i32.const 36572)
   )
  )
  ;;@ celt/celt_decoder.c:201:0
  (i32.store offset=8
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $2)
  )
  ;;@ celt/celt_decoder.c:203:0
  (i32.store offset=16
   (local.get $0)
   (i32.const 1)
  )
  ;;@ celt/celt_decoder.c:204:0
  (i32.store offset=20
   (local.get $0)
   (i32.const 0)
  )
  ;;@ celt/celt_decoder.c:205:0
  (i32.store offset=24
   (local.get $0)
   (i32.load
    (i32.const 36580)
   )
  )
  ;;@ celt/celt_decoder.c:206:0
  (i32.store offset=28
   (local.get $0)
   (i32.const 1)
  )
  ;;@ celt/celt_decoder.c:208:0
  (i32.store offset=32
   (local.get $0)
   (i32.eq
    (local.get $2)
    (i32.const 1)
   )
  )
  ;;@ celt/celt_decoder.c:212:0
  (i32.store offset=36
   (local.get $0)
   (i32.const 0)
  )
  ;;@ celt/celt_decoder.c:214:0
  (drop
   (call $_opus_custom_decoder_ctl
    (local.get $0)
    (i32.const 4028)
    (local.get $3)
   )
  )
  ;;@ celt/celt_decoder.c:182:0
  (i32.store offset=16
   (local.get $0)
   (local.tee $0
    (call $_resampling_factor
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  ;;@ celt/celt_decoder.c:187:0
  (i32.shr_s
   (i32.shl
    (i32.eqz
     (local.get $0)
    )
    (i32.const 31)
   )
   (i32.const 31)
  )
 )
 (func $_opus_custom_decoder_ctl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  ;;@ celt/celt_decoder.c:1251:0
  (i32.store
   (local.get $3)
   (local.get $2)
  )
  (block $__rjti$1
   (block $__rjti$0
    (block $switch-default
     (block $switch-case10
      (block $switch-case9
       (block $switch-case8
        (block $switch-case7
         (block $switch-case6
          (block $switch-case5
           (block $switch-case4
            (block $switch-case3
             (block $switch-case2
              (block $switch-case1
               (block $switch-case0
                (block $switch-case
                 (br_table $switch-case3 $switch-case4 $switch-default $switch-default $switch-case8 $switch-default $switch-case5 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case9 $switch-case10 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case2 $switch-case1 $switch-default $switch-case $switch-default $switch-case0 $switch-default $switch-default $switch-case6 $switch-case7 $switch-default
                  (i32.sub
                   (local.get $1)
                   (i32.const 4027)
                  )
                 )
                )
                ;;@ celt/celt_decoder.c:1256:0
                (local.set $1
                 (i32.load
                  (local.get $3)
                 )
                )
                (local.set $1
                 (i32.add
                  (local.get $1)
                  (i32.const 3)
                 )
                )
                (local.set $1
                 (i32.and
                  (local.get $1)
                  (i32.const -4)
                 )
                )
                (local.set $2
                 (i32.load
                  (local.get $1)
                 )
                )
                (local.set $1
                 (i32.add
                  (local.get $1)
                  (i32.const 4)
                 )
                )
                (i32.store
                 (local.get $3)
                 (local.get $1)
                )
                ;;@ celt/celt_decoder.c:1257:0
                (br_if $__rjti$1
                 (i32.lt_s
                  (local.get $2)
                  (i32.const 0)
                 )
                )
                (local.set $1
                 (i32.load
                  (local.get $0)
                 )
                )
                (local.set $1
                 (i32.load offset=8
                  (local.get $1)
                 )
                )
                (br_if $__rjti$1
                 (i32.ge_s
                  (local.get $2)
                  (local.get $1)
                 )
                )
                ;;@ celt/celt_decoder.c:1259:0
                (i32.store offset=20
                 (local.get $0)
                 (local.get $2)
                )
                (br $__rjti$0)
               )
               ;;@ celt/celt_decoder.c:1264:0
               (local.set $1
                (i32.load
                 (local.get $3)
                )
               )
               (local.set $1
                (i32.add
                 (local.get $1)
                 (i32.const 3)
                )
               )
               (local.set $1
                (i32.and
                 (local.get $1)
                 (i32.const -4)
                )
               )
               (local.set $2
                (i32.load
                 (local.get $1)
                )
               )
               (local.set $1
                (i32.add
                 (local.get $1)
                 (i32.const 4)
                )
               )
               (i32.store
                (local.get $3)
                (local.get $1)
               )
               ;;@ celt/celt_decoder.c:1265:0
               (br_if $__rjti$1
                (i32.lt_s
                 (local.get $2)
                 (i32.const 1)
                )
               )
               (local.set $1
                (i32.load
                 (local.get $0)
                )
               )
               (local.set $1
                (i32.load offset=8
                 (local.get $1)
                )
               )
               (br_if $__rjti$1
                (i32.gt_s
                 (local.get $2)
                 (local.get $1)
                )
               )
               ;;@ celt/celt_decoder.c:1267:0
               (i32.store offset=24
                (local.get $0)
                (local.get $2)
               )
               (br $__rjti$0)
              )
              ;;@ celt/celt_decoder.c:1272:0
              (local.set $1
               (i32.load
                (local.get $3)
               )
              )
              (local.set $1
               (i32.add
                (local.get $1)
                (i32.const 3)
               )
              )
              (local.set $1
               (i32.and
                (local.get $1)
                (i32.const -4)
               )
              )
              (local.set $2
               (i32.load
                (local.get $1)
               )
              )
              (local.set $1
               (i32.add
                (local.get $1)
                (i32.const 4)
               )
              )
              (i32.store
               (local.get $3)
               (local.get $1)
              )
              ;;@ celt/celt_decoder.c:1273:0
              (local.set $1
               (i32.add
                (local.get $2)
                (i32.const -1)
               )
              )
              (br_if $__rjti$1
               (i32.gt_u
                (local.get $1)
                (i32.const 1)
               )
              )
              ;;@ celt/celt_decoder.c:1275:0
              (i32.store offset=12
               (local.get $0)
               (local.get $2)
              )
              (br $__rjti$0)
             )
             ;;@ celt/celt_decoder.c:1280:0
             (local.set $1
              (i32.load
               (local.get $3)
              )
             )
             (local.set $1
              (i32.add
               (local.get $1)
               (i32.const 3)
              )
             )
             (local.set $1
              (i32.and
               (local.get $1)
               (i32.const -4)
              )
             )
             (local.set $2
              (i32.load
               (local.get $1)
              )
             )
             (local.set $1
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
             (i32.store
              (local.get $3)
              (local.get $1)
             )
             ;;@ celt/celt_decoder.c:1281:0
             (br_if $__rjti$1
              (i32.eqz
               (local.get $2)
              )
             )
             ;;@ celt/celt_decoder.c:1283:0
             (local.set $1
              (i32.load offset=44
               (local.get $0)
              )
             )
             (i32.store
              (local.get $2)
              (local.get $1)
             )
             ;;@ celt/celt_decoder.c:1284:0
             (i32.store offset=44
              (local.get $0)
              (i32.const 0)
             )
             (br $__rjti$0)
            )
            ;;@ celt/celt_decoder.c:1289:0
            (local.set $1
             (i32.load
              (local.get $3)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 3)
             )
            )
            (local.set $1
             (i32.and
              (local.get $1)
              (i32.const -4)
             )
            )
            (local.set $2
             (i32.load
              (local.get $1)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (i32.store
             (local.get $3)
             (local.get $1)
            )
            ;;@ celt/celt_decoder.c:1290:0
            (br_if $__rjti$1
             (i32.eqz
              (local.get $2)
             )
            )
            ;;@ celt/celt_decoder.c:1292:0
            (local.set $1
             (i32.load offset=4
              (local.get $0)
             )
            )
            (local.set $0
             (i32.load offset=16
              (local.get $0)
             )
            )
            (local.set $0
             (i32.div_s
              (local.get $1)
              (local.get $0)
             )
            )
            (i32.store
             (local.get $2)
             (local.get $0)
            )
            (br $__rjti$0)
           )
           ;;@ celt/celt_decoder.c:1299:0
           (local.set $1
            (i32.load offset=4
             (local.get $0)
            )
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 2048)
            )
           )
           (local.set $4
            (i32.load offset=8
             (local.get $0)
            )
           )
           (local.set $1
            (i32.mul
             (local.get $1)
             (local.get $4)
            )
           )
           (local.set $2
            (i32.add
             (i32.add
              (local.get $0)
              (i32.const 92)
             )
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
            )
           )
           ;;@ celt/celt_decoder.c:1300:0
           (local.set $1
            (i32.mul
             (local.get $4)
             (i32.const 24)
            )
           )
           (local.set $1
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $2)
            )
           )
           ;;@ celt/celt_decoder.c:1301:0
           (local.set $2
            (i32.load
             (local.get $0)
            )
           )
           (local.set $5
            (i32.load offset=8
             (local.get $2)
            )
           )
           (local.set $6
            (i32.shl
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.set $7
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 2)
             )
             (local.get $1)
            )
           )
           ;;@ celt/celt_decoder.c:1302:0
           (local.set $8
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 2)
             )
             (local.get $7)
            )
           )
           ;;@ celt/celt_decoder.c:1303:0
           (local.set $9
            (i32.add
             (local.get $0)
             (i32.const 40)
            )
           )
           (local.set $1
            (i32.load offset=4
             (local.get $2)
            )
           )
           ;;@ celt/celt_decoder.c:153:0
           (local.set $2
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
           )
           ;;@ celt/celt_decoder.c:155:0
           (local.set $1
            (i32.shl
             (local.get $5)
             (i32.const 5)
            )
           )
           (local.set $2
            (i32.mul
             (local.get $4)
             (i32.add
              (local.get $2)
              (i32.const 8288)
             )
            )
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 52)
            )
           )
           ;;@ celt/celt_decoder.c:1303:0
           (local.set $1
            (i32.add
             (local.get $1)
             (local.get $2)
            )
           )
           (drop
            (call $_memset
             (local.get $9)
             (i32.const 0)
             (local.get $1)
            )
           )
           (if
            ;;@ celt/celt_decoder.c:1306:0
            (i32.gt_s
             (local.get $5)
             (i32.const 0)
            )
            (block
             (local.set $1
              (i32.const 0)
             )
             (loop $while-in
              ;;@ celt/celt_decoder.c:1307:0
              (local.set $2
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 2)
                )
                (local.get $8)
               )
              )
              (f32.store
               (local.get $2)
               (f32.const -28)
              )
              (local.set $2
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 2)
                )
                (local.get $7)
               )
              )
              (f32.store
               (local.get $2)
               (f32.const -28)
              )
              ;;@ celt/celt_decoder.c:1306:0
              (local.set $1
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
              (br_if $while-in
               (i32.lt_s
                (local.get $1)
                (local.get $6)
               )
              )
             )
            )
           )
           ;;@ celt/celt_decoder.c:1308:0
           (i32.store offset=56
            (local.get $0)
            (i32.const 1)
           )
           (br $__rjti$0)
          )
          ;;@ celt/celt_decoder.c:1313:0
          (local.set $1
           (i32.load
            (local.get $3)
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const 3)
           )
          )
          (local.set $1
           (i32.and
            (local.get $1)
            (i32.const -4)
           )
          )
          (local.set $2
           (i32.load
            (local.get $1)
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const 4)
           )
          )
          (i32.store
           (local.get $3)
           (local.get $1)
          )
          ;;@ celt/celt_decoder.c:1314:0
          (br_if $__rjti$1
           (i32.eqz
            (local.get $2)
           )
          )
          ;;@ celt/celt_decoder.c:1316:0
          (local.set $0
           (i32.load offset=60
            (local.get $0)
           )
          )
          (i32.store
           (local.get $2)
           (local.get $0)
          )
          (br $__rjti$0)
         )
         ;;@ celt/celt_decoder.c:1321:0
         (local.set $1
          (i32.load
           (local.get $3)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 3)
          )
         )
         (local.set $1
          (i32.and
           (local.get $1)
           (i32.const -4)
          )
         )
         (local.set $2
          (i32.load
           (local.get $1)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (i32.store
          (local.get $3)
          (local.get $1)
         )
         ;;@ celt/celt_decoder.c:1322:0
         (br_if $__rjti$1
          (i32.eqz
           (local.get $2)
          )
         )
         ;;@ celt/celt_decoder.c:1324:0
         (local.set $0
          (i32.load
           (local.get $0)
          )
         )
         (i32.store
          (local.get $2)
          (local.get $0)
         )
         (br $__rjti$0)
        )
        ;;@ celt/celt_decoder.c:1329:0
        (local.set $1
         (i32.load
          (local.get $3)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 3)
         )
        )
        (local.set $1
         (i32.and
          (local.get $1)
          (i32.const -4)
         )
        )
        (local.set $2
         (i32.load
          (local.get $1)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
        (i32.store
         (local.get $3)
         (local.get $1)
        )
        ;;@ celt/celt_decoder.c:1330:0
        (i32.store offset=28
         (local.get $0)
         (local.get $2)
        )
        (br $__rjti$0)
       )
       ;;@ celt/celt_decoder.c:1335:0
       (local.set $1
        (i32.load
         (local.get $3)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 3)
        )
       )
       (local.set $1
        (i32.and
         (local.get $1)
         (i32.const -4)
        )
       )
       (local.set $2
        (i32.load
         (local.get $1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (i32.store
        (local.get $3)
        (local.get $1)
       )
       ;;@ celt/celt_decoder.c:1336:0
       (br_if $__rjti$1
        (i32.eqz
         (local.get $2)
        )
       )
       ;;@ celt/celt_decoder.c:1338:0
       (local.set $0
        (i32.load offset=40
         (local.get $0)
        )
       )
       (i32.store
        (local.get $2)
        (local.get $0)
       )
       (br $__rjti$0)
      )
      ;;@ celt/celt_decoder.c:1343:0
      (local.set $1
       (i32.load
        (local.get $3)
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 3)
       )
      )
      (local.set $1
       (i32.and
        (local.get $1)
        (i32.const -4)
       )
      )
      (local.set $2
       (i32.load
        (local.get $1)
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (i32.store
       (local.get $3)
       (local.get $1)
      )
      ;;@ celt/celt_decoder.c:1344:0
      (br_if $__rjti$1
       (i32.gt_u
        (local.get $2)
        (i32.const 1)
       )
      )
      ;;@ celt/celt_decoder.c:1348:0
      (i32.store offset=32
       (local.get $0)
       (local.get $2)
      )
      (br $__rjti$0)
     )
     ;;@ celt/celt_decoder.c:1353:0
     (local.set $1
      (i32.load
       (local.get $3)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 3)
      )
     )
     (local.set $1
      (i32.and
       (local.get $1)
       (i32.const -4)
      )
     )
     (local.set $2
      (i32.load
       (local.get $1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $3)
      (local.get $1)
     )
     ;;@ celt/celt_decoder.c:1354:0
     (br_if $__rjti$1
      (i32.eqz
       (local.get $2)
      )
     )
     ;;@ celt/celt_decoder.c:1358:0
     (local.set $0
      (i32.load offset=32
       (local.get $0)
      )
     )
     (i32.store
      (local.get $2)
      (local.get $0)
     )
     (br $__rjti$0)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    ;;@ celt/celt_decoder.c:1372:0
    (return
     (i32.const -5)
    )
   )
   (global.set $STACKTOP
    (local.get $3)
   )
   (return
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const -1)
 )
 (func $_celt_decode_with_ec (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 f32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 f32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local.set $18
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (local.set $7
   (i32.add
    (local.get $18)
    (i32.const 32)
   )
  )
  (local.set $39
   (i32.add
    (local.get $18)
    (i32.const 24)
   )
  )
  (local.set $29
   (i32.add
    (local.get $18)
    (i32.const 16)
   )
  )
  ;;@ celt/celt_decoder.c:841:0
  (local.set $22
   (i32.load offset=8
    (local.get $0)
   )
  )
  ;;@ celt/celt_decoder.c:850:0
  (i32.store
   (local.tee $40
    (i32.add
     (local.get $18)
     (i32.const 8)
    )
   )
   (i32.const 0)
  )
  ;;@ celt/celt_decoder.c:851:0
  (i32.store
   (local.tee $41
    (i32.add
     (local.get $18)
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  ;;@ celt/celt_decoder.c:860:0
  (local.set $16
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ celt/celt_decoder.c:867:0
  (call $_validate_celt_decoder
   (local.get $0)
  )
  ;;@ celt/celt_decoder.c:869:0
  (local.set $9
   (i32.load offset=8
    ;;@ celt/celt_decoder.c:868:0
    (local.tee $8
     (i32.load
      (local.get $0)
     )
    )
   )
  )
  ;;@ celt/celt_decoder.c:871:0
  (local.set $25
   (i32.load offset=32
    (local.get $8)
   )
  )
  ;;@ celt/celt_decoder.c:872:0
  (local.set $13
   (i32.load offset=20
    (local.get $0)
   )
  )
  ;;@ celt/celt_decoder.c:873:0
  (local.set $10
   (i32.load offset=24
    (local.get $0)
   )
  )
  ;;@ celt/celt_decoder.c:874:0
  (local.set $17
   (i32.mul
    (i32.load offset=16
     (local.get $0)
    )
    (local.get $4)
   )
  )
  ;;@ celt/celt_decoder.c:880:0
  (local.set $46
   (i32.add
    ;;@ celt/celt_decoder.c:879:0
    (local.tee $26
     (i32.add
      ;;@ celt/celt_decoder.c:878:0
      (local.tee $23
       (i32.add
        ;;@ celt/celt_decoder.c:877:0
        (local.tee $11
         (i32.add
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 92)
           )
           (i32.shl
            (i32.mul
             ;;@ celt/celt_decoder.c:876:0
             (local.tee $15
              (i32.add
               ;;@ celt/celt_decoder.c:870:0
               (local.tee $30
                (i32.load offset=4
                 (local.get $8)
                )
               )
               (i32.const 2048)
              )
             )
             (local.get $22)
            )
            (i32.const 2)
           )
          )
          (i32.shl
           (i32.mul
            (local.get $22)
            (i32.const 24)
           )
           (i32.const 2)
          )
         )
        )
        (i32.shl
         ;;@ celt/celt_decoder.c:878:0
         (local.tee $31
          (i32.shl
           (local.get $9)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
      )
      (i32.shl
       (local.get $31)
       (i32.const 2)
      )
     )
    )
    (i32.shl
     (local.get $31)
     (i32.const 2)
    )
   )
  )
  (block $folding-inner0
   ;;@ celt/celt_decoder.c:908:0
   (br_if $folding-inner0
    (i32.lt_s
     (local.tee $14
      (i32.load offset=36
       (local.get $8)
      )
     )
     (i32.const 0)
    )
   )
   (local.set $4
    (i32.load offset=44
     (local.get $8)
    )
   )
   (loop $while-in
    (if
     (i32.ne
      (local.get $17)
      (i32.shl
       (local.get $4)
       (local.get $12)
      )
     )
     (block
      (br_if $folding-inner0
       (i32.ge_s
        (local.get $12)
        (local.get $14)
       )
      )
      (local.set $12
       (i32.add
        (local.get $12)
        (i32.const 1)
       )
      )
      (br $while-in)
     )
    )
   )
   ;;@ celt/celt_decoder.c:916:0
   (br_if $folding-inner0
    (i32.or
     (i32.eqz
      (local.get $3)
     )
     (i32.gt_u
      (local.get $2)
      (i32.const 1275)
     )
    )
   )
   ;;@ celt/celt_decoder.c:922:0
   (local.set $19
    (i32.sub
     (i32.const 0)
     (local.get $17)
    )
   )
   (local.set $4
    (i32.const 0)
   )
   (loop $while-in1
    ;;@ celt/celt_decoder.c:921:0
    (i32.store
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (local.get $39)
     )
     (local.tee $14
      (i32.add
       (i32.add
        (local.get $0)
        (i32.const 92)
       )
       (i32.shl
        (i32.mul
         (local.get $4)
         (local.get $15)
        )
        (i32.const 2)
       )
      )
     )
    )
    ;;@ celt/celt_decoder.c:922:0
    (i32.store
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (local.get $29)
     )
     (i32.add
      (i32.sub
       (local.get $14)
       (i32.const -8192)
      )
      (i32.shl
       (local.get $19)
       (i32.const 2)
      )
     )
    )
    ;;@ celt/celt_decoder.c:923:0
    (br_if $while-in1
     (i32.lt_s
      (local.tee $4
       (i32.add
        (local.get $4)
        (i32.const 1)
       )
      )
      (local.get $22)
     )
    )
   )
   ;;@ celt/celt_decoder.c:926:0
   (local.set $14
    (i32.load offset=12
     (local.get $8)
    )
   )
   (if
    ;;@ celt/celt_decoder.c:929:0
    (i32.or
     (i32.eqz
      (local.get $1)
     )
     (i32.lt_s
      (local.get $2)
      (i32.const 2)
     )
    )
    (block
     ;;@ celt/celt_decoder.c:931:0
     (call $_celt_decode_lost
      (local.get $0)
      (local.get $17)
      (local.get $12)
     )
     ;;@ celt/celt_decoder.c:932:0
     (call $_deemphasis
      (local.get $29)
      (local.get $3)
      (local.get $17)
      (local.get $22)
      (i32.load offset=16
       (local.get $0)
      )
      (i32.add
       (local.get $8)
       (i32.const 16)
      )
      (i32.add
       (local.get $0)
       (i32.const 84)
      )
     )
     ;;@ celt/celt_decoder.c:934:0
     (local.set $0
      (i32.div_s
       (local.get $17)
       (i32.load offset=16
        (local.get $0)
       )
      )
     )
     (global.set $STACKTOP
      (local.get $18)
     )
     ;;@ celt/celt_decoder.c:1179:0
     (return
      (local.get $0)
     )
    )
   )
   ;;@ celt/celt_decoder.c:939:0
   (i32.store offset=56
    (local.get $0)
    (i32.ne
     (i32.load offset=52
      (local.get $0)
     )
     (i32.const 0)
    )
   )
   (if
    ;;@ celt/celt_decoder.c:941:0
    (i32.eqz
     (local.get $5)
    )
    (block
     ;;@ celt/celt_decoder.c:943:0
     (call $_ec_dec_init
      (local.get $7)
      (local.get $1)
      (local.get $2)
     )
     (local.set $5
      (local.get $7)
     )
    )
   )
   (if
    ;;@ celt/celt_decoder.c:947:0
    (i32.and
     ;;@ celt/celt_decoder.c:949:0
     (local.tee $42
      (i32.gt_s
       (local.get $9)
       (i32.const 0)
      )
     )
     ;;@ celt/celt_decoder.c:947:0
     (local.tee $47
      (i32.eq
       (local.get $16)
       (i32.const 1)
      )
     )
    )
    (block
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in3
      ;;@ celt/celt_decoder.c:950:0
      (local.set $27
       (f32.load
        (local.tee $4
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $11)
         )
        )
       )
      )
      (f32.store
       (local.get $4)
       (select
        (local.get $27)
        (local.tee $20
         (f32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $1)
             (local.get $9)
            )
            (i32.const 2)
           )
           (local.get $11)
          )
         )
        )
        (f32.gt
         (local.get $27)
         (local.get $20)
        )
       )
      )
      ;;@ celt/celt_decoder.c:949:0
      (br_if $while-in3
       (i32.ne
        (local.get $9)
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
   ;;@ celt/celt_decoder.c:914:0
   (local.set $43
    (i32.shl
     (i32.const 1)
     (local.get $12)
    )
   )
   ;;@ celt/celt_decoder.c:926:0
   (local.set $48
    (select
     (local.get $14)
     (local.get $10)
     (i32.gt_s
      (local.get $10)
      (local.get $14)
     )
    )
   )
   (local.set $4
    (i32.load offset=20
     (local.get $5)
    )
   )
   (local.set $36
    (if (result i32)
     ;;@ celt/celt_decoder.c:972:0
     (i32.or
      (local.get $13)
      (i32.gt_s
       (i32.add
        (local.tee $1
         (block $__rjto$1 (result i32)
          (block $__rjti$1
           (br $__rjto$1
            (if (result i32)
             ;;@ celt/celt_decoder.c:956:0
             (i32.lt_s
              ;;@ ./celt/entcode.h:112:0
              (local.tee $1
               (i32.add
                (local.tee $5
                 (i32.clz
                  (i32.load offset=28
                   (local.tee $6
                    (local.get $5)
                   )
                  )
                 )
                )
                (i32.add
                 (local.get $4)
                 (i32.const -32)
                )
               )
              )
              ;;@ celt/celt_decoder.c:953:0
              (local.tee $21
               (i32.shl
                (local.get $2)
                (i32.const 3)
               )
              )
             )
             (if (result i32)
              ;;@ celt/celt_decoder.c:958:0
              (i32.eq
               (local.get $1)
               (i32.const 1)
              )
              (if (result i32)
               ;;@ celt/celt_decoder.c:962:0
               (local.tee $4
                (call $_ec_dec_bit_logp
                 (local.get $6)
                 (i32.const 15)
                )
               )
               (block
                (local.set $1
                 (i32.load offset=20
                  (local.get $6)
                 )
                )
                ;;@ ./celt/entcode.h:112:0
                (local.set $5
                 (i32.clz
                  (i32.load offset=28
                   (local.get $6)
                  )
                 )
                )
                (br $__rjti$1)
               )
               (i32.const 1)
              )
              (local.get $1)
             )
             (block
              (local.set $1
               (local.get $4)
              )
              (local.set $4
               (i32.const 1)
              )
              (br $__rjti$1)
             )
            )
           )
          )
          ;;@ celt/celt_decoder.c:966:0
          (i32.store offset=20
           (local.get $6)
           (i32.add
            (i32.sub
             (i32.sub
              (i32.add
               (local.get $21)
               (i32.const 32)
              )
              (local.get $1)
             )
             (local.get $5)
            )
            (local.get $1)
           )
          )
          (local.set $49
           (local.get $4)
          )
          (local.set $50
           (i32.const 1)
          )
          (local.get $21)
         )
        )
        (i32.const 16)
       )
       (local.get $21)
      )
     )
     (block (result i32)
      (local.set $20
       (f32.const 0)
      )
      (i32.const 0)
     )
     (block (result i32)
      (local.set $20
       (if (result f32)
        ;;@ celt/celt_decoder.c:974:0
        (call $_ec_dec_bit_logp
         (local.get $6)
         (i32.const 1)
        )
        (block (result f32)
         ;;@ celt/celt_decoder.c:978:0
         (local.set $1
          (i32.add
           (i32.shl
            (i32.const 16)
            ;;@ celt/celt_decoder.c:977:0
            (local.tee $1
             (call $_ec_dec_uint
              (local.get $6)
              (i32.const 6)
             )
            )
           )
           (i32.add
            (call $_ec_dec_bits
             (local.get $6)
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (i32.const -1)
           )
          )
         )
         ;;@ celt/celt_decoder.c:979:0
         (local.set $5
          (call $_ec_dec_bits
           (local.get $6)
           (i32.const 3)
          )
         )
         (local.set $4
          (if (result i32)
           ;;@ celt/celt_decoder.c:980:0
           (i32.gt_s
            (i32.add
             (i32.clz
              (i32.load offset=28
               (local.get $6)
              )
             )
             (i32.add
              (i32.load offset=20
               (local.get $6)
              )
              (i32.const -30)
             )
            )
            (local.get $21)
           )
           (i32.const 0)
           ;;@ celt/celt_decoder.c:981:0
           (call $_ec_dec_icdf
            (local.get $6)
            (i32.const 41907)
            (i32.const 2)
           )
          )
         )
         ;;@ celt/celt_decoder.c:982:0
         (f32.mul
          (f32.convert_i32_s
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          (f32.const 0.09375)
         )
        )
        (block (result f32)
         (local.set $1
          (i32.const 0)
         )
         (local.set $4
          (i32.const 0)
         )
         (f32.const 0)
        )
       )
      )
      ;;@ ./celt/entcode.h:112:0
      (local.set $35
       (local.get $1)
      )
      (local.set $1
       (i32.add
        (i32.clz
         (i32.load offset=28
          (local.get $6)
         )
        )
        (i32.add
         (i32.load offset=20
          (local.get $6)
         )
         (i32.const -32)
        )
       )
      )
      (local.get $4)
     )
    )
   )
   (if
    ;;@ celt/celt_decoder.c:987:0
    (i32.eqz
     (i32.or
      (i32.eqz
       (local.get $12)
      )
      (i32.gt_s
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const 3)
        )
       )
       (local.get $21)
      )
     )
    )
    ;;@ celt/celt_decoder.c:1001:0
    (block
     ;;@ celt/celt_decoder.c:989:0
     (local.set $32
      (call $_ec_dec_bit_logp
       (local.get $6)
       (i32.const 3)
      )
     )
     (local.set $1
      (i32.add
       (i32.add
        (i32.clz
         (i32.load offset=28
          (local.get $6)
         )
        )
        (i32.load offset=20
         (local.get $6)
        )
       )
       (i32.const -29)
      )
     )
    )
   )
   ;;@ celt/celt_decoder.c:996:0
   (local.set $51
    (select
     (local.get $43)
     (i32.const 0)
     ;;@ celt/celt_decoder.c:995:0
     (local.tee $33
      (i32.ne
       (local.get $32)
       (i32.const 0)
      )
     )
    )
   )
   ;;@ celt/celt_decoder.c:1003:0
   (call $_unquant_coarse_energy
    (local.get $8)
    (local.get $13)
    (local.get $10)
    (local.get $11)
    (if (result i32)
     ;;@ celt/celt_decoder.c:1001:0
     (i32.gt_s
      (local.get $1)
      (local.get $21)
     )
     (i32.const 0)
     (call $_ec_dec_bit_logp
      (local.get $6)
      (i32.const 3)
     )
    )
    (local.get $6)
    (local.get $16)
    (local.get $12)
   )
   ;;@ celt/celt_decoder.c:1006:0
   (local.set $52
    (call $_llvm_stacksave)
   )
   (local.set $34
    (global.get $STACKTOP)
   )
   (global.set $STACKTOP
    (i32.add
     (global.get $STACKTOP)
     (i32.and
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   ;;@ celt/celt_decoder.c:453:0
   (local.set $24
    (i32.and
     (local.tee $44
      (i32.ne
       (local.get $12)
       (i32.const 0)
      )
     )
     (i32.le_u
      (i32.add
       ;;@ ./celt/entcode.h:112:0
       (local.tee $5
        (i32.add
         (i32.clz
          (i32.load offset=28
           (local.get $6)
          )
         )
         (i32.add
          (i32.load offset=20
           (local.get $6)
          )
          (i32.const -32)
         )
        )
       )
       (i32.or
        ;;@ celt/celt_decoder.c:452:0
        (local.tee $4
         (select
          (i32.const 2)
          (i32.const 4)
          (local.get $33)
         )
        )
        (i32.const 1)
       )
      )
      ;;@ celt/celt_decoder.c:450:0
      (local.tee $1
       (i32.shl
        (i32.load offset=4
         (local.get $6)
        )
        (i32.const 3)
       )
      )
     )
    )
   )
   ;;@ celt/celt_decoder.c:454:0
   (local.set $15
    (i32.sub
     (local.get $1)
     (i32.and
      (local.get $24)
      (i32.const 1)
     )
    )
   )
   (if
    ;;@ celt/celt_decoder.c:456:0
    (local.tee $19
     (i32.lt_s
      (local.get $13)
      (local.get $10)
     )
    )
    (block
     (if
      ;;@ celt/celt_decoder.c:458:0
      (i32.gt_u
       (i32.add
        (local.get $4)
        (local.get $5)
       )
       (local.get $15)
      )
      (local.set $1
       (i32.const 0)
      )
      (block
       ;;@ celt/celt_decoder.c:460:0
       (local.set $1
        (call $_ec_dec_bit_logp
         (local.get $6)
         (local.get $4)
        )
       )
       ;;@ ./celt/entcode.h:112:0
       (local.set $5
        (i32.add
         (i32.clz
          (i32.load offset=28
           (local.get $6)
          )
         )
         (i32.add
          (i32.load offset=20
           (local.get $6)
          )
          (i32.const -32)
         )
        )
       )
      )
     )
     (local.set $14
      (select
       (i32.const 4)
       (i32.const 5)
       (local.get $33)
      )
     )
     ;;@ celt/celt_decoder.c:464:0
     (i32.store
      (i32.add
       (i32.shl
        (local.get $13)
        (i32.const 2)
       )
       (local.get $34)
      )
      (local.get $1)
     )
     (if
      ;;@ celt/celt_decoder.c:456:0
      (i32.ne
       (local.get $10)
       (local.tee $7
        (i32.add
         (local.get $13)
         (i32.const 1)
        )
       )
      )
      (block
       (local.set $4
        (local.get $1)
       )
       (loop $while-in5
        (if
         ;;@ celt/celt_decoder.c:458:0
         (i32.le_u
          (i32.add
           (local.get $5)
           (local.get $14)
          )
          (local.get $15)
         )
         ;;@ celt/celt_decoder.c:462:0
         (block
          ;;@ celt/celt_decoder.c:460:0
          (local.set $4
           (i32.xor
            (call $_ec_dec_bit_logp
             (local.get $6)
             (local.get $14)
            )
            (local.get $4)
           )
          )
          ;;@ ./celt/entcode.h:112:0
          (local.set $5
           (i32.add
            (i32.clz
             (i32.load offset=28
              (local.get $6)
             )
            )
            (i32.add
             (i32.load offset=20
              (local.get $6)
             )
             (i32.const -32)
            )
           )
          )
          (local.set $1
           (i32.or
            (local.get $1)
            (local.get $4)
           )
          )
         )
        )
        ;;@ celt/celt_decoder.c:464:0
        (i32.store
         (i32.add
          (i32.shl
           (local.get $7)
           (i32.const 2)
          )
          (local.get $34)
         )
         (local.get $4)
        )
        ;;@ celt/celt_decoder.c:456:0
        (br_if $while-in5
         (i32.ne
          (local.get $10)
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
    )
    (local.set $1
     (i32.const 0)
    )
   )
   (local.set $1
    (if (result i32)
     (local.get $24)
     (if (result i32)
      ;;@ celt/celt_decoder.c:469:0
      (i32.eq
       (i32.load8_s
        (i32.add
         (i32.add
          (i32.shl
           (local.get $12)
           (i32.const 3)
          )
          (i32.const 1200)
         )
         (i32.add
          (local.tee $4
           (i32.shl
            (local.get $32)
            (i32.const 2)
           )
          )
          (local.get $1)
         )
        )
       )
       (i32.load8_s
        (i32.add
         (i32.add
          (i32.shl
           (local.get $12)
           (i32.const 3)
          )
          (i32.const 1200)
         )
         (i32.add
          (i32.or
           (local.get $4)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
       )
      )
      (i32.const 0)
      ;;@ celt/celt_decoder.c:473:0
      (i32.shl
       (call $_ec_dec_bit_logp
        (local.get $6)
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
     (i32.const 0)
    )
   )
   (if
    (local.get $19)
    (block
     (local.set $5
      (i32.add
       (local.get $1)
       (i32.shl
        (local.get $32)
        (i32.const 2)
       )
      )
     )
     (local.set $1
      (local.get $13)
     )
     (loop $while-in7
      ;;@ celt/celt_decoder.c:476:0
      (i32.store
       (local.tee $4
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $34)
        )
       )
       (i32.load8_s
        (i32.add
         (i32.add
          (i32.shl
           (local.get $12)
           (i32.const 3)
          )
          (i32.const 1200)
         )
         (i32.add
          (i32.load
           (local.get $4)
          )
          (local.get $5)
         )
        )
       )
      )
      ;;@ celt/celt_decoder.c:474:0
      (br_if $while-in7
       (i32.ne
        (local.get $10)
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
   (local.set $53
    (if (result i32)
     ;;@ celt/celt_decoder.c:1011:0
     (i32.gt_s
      (i32.add
       (i32.clz
        (i32.load offset=28
         (local.get $6)
        )
       )
       (i32.add
        (i32.load offset=20
         (local.get $6)
        )
        (i32.const -28)
       )
      )
      (local.get $21)
     )
     (i32.const 2)
     ;;@ celt/celt_decoder.c:1012:0
     (call $_ec_dec_icdf
      (local.get $6)
      (i32.const 41910)
      (i32.const 5)
     )
    )
   )
   (local.set $37
    (global.get $STACKTOP)
   )
   ;;@ celt/celt_decoder.c:1014:0
   (global.set $STACKTOP
    (i32.add
     (global.get $STACKTOP)
     (i32.and
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   ;;@ celt/celt_decoder.c:1016:0
   (call $_init_caps
    (local.get $8)
    (local.get $37)
    (local.get $12)
    (local.get $16)
   )
   (local.set $38
    (global.get $STACKTOP)
   )
   ;;@ celt/celt_decoder.c:1018:0
   (global.set $STACKTOP
    (i32.add
     (global.get $STACKTOP)
     (i32.and
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   ;;@ celt/celt_decoder.c:1021:0
   (local.set $14
    (i32.shl
     (local.get $2)
     (i32.const 6)
    )
   )
   ;;@ celt/celt_decoder.c:1022:0
   (local.set $2
    (call $_ec_tell_frac
     (local.get $6)
    )
   )
   (if
    (local.get $19)
    (block
     (local.set $4
      (i32.const 6)
     )
     (local.set $1
      (local.get $14)
     )
     (local.set $7
      (local.get $13)
     )
     (loop $while-in9
      ;;@ celt/celt_decoder.c:1031:0
      (local.set $28
       (select
        (local.tee $15
         (i32.shl
          ;;@ celt/celt_decoder.c:1028:0
          (local.tee $5
           (i32.shl
            (i32.mul
             (i32.sub
              (i32.load16_s
               (i32.add
                (i32.shl
                 (local.tee $19
                  (i32.add
                   (local.get $7)
                   (i32.const 1)
                  )
                 )
                 (i32.const 1)
                )
                (local.get $25)
               )
              )
              (i32.load16_s
               (i32.add
                (i32.shl
                 (local.get $7)
                 (i32.const 1)
                )
                (local.get $25)
               )
              )
             )
             (local.get $16)
            )
            (local.get $12)
           )
          )
          (i32.const 3)
         )
        )
        ;;@ celt/celt_decoder.c:1031:0
        (local.tee $5
         (select
          (local.get $5)
          (i32.const 48)
          (i32.gt_s
           (local.get $5)
           (i32.const 48)
          )
         )
        )
        (i32.lt_s
         (local.get $15)
         (local.get $5)
        )
       )
      )
      ;;@ celt/celt_decoder.c:1034:0
      (local.set $24
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $37)
       )
      )
      (if
       (i32.lt_s
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 3)
         )
         (local.get $2)
        )
        (local.get $1)
       )
       (block
        (local.set $5
         (i32.const 0)
        )
        (local.set $15
         (local.get $4)
        )
        (loop $while-in11
         (block $while-out10
          (br_if $while-out10
           (i32.ge_s
            (local.get $5)
            (i32.load
             (local.get $24)
            )
           )
          )
          ;;@ celt/celt_decoder.c:1037:0
          (local.set $15
           (call $_ec_dec_bit_logp
            (local.get $6)
            (local.get $15)
           )
          )
          ;;@ celt/celt_decoder.c:1038:0
          (local.set $2
           (call $_ec_tell_frac
            (local.get $6)
           )
          )
          ;;@ celt/celt_decoder.c:1039:0
          (br_if $while-out10
           (i32.eqz
            (local.get $15)
           )
          )
          ;;@ celt/celt_decoder.c:1041:0
          (local.set $5
           (i32.add
            (local.get $5)
            (local.get $28)
           )
          )
          (if
           ;;@ celt/celt_decoder.c:1034:0
           (i32.lt_s
            (i32.add
             (local.get $2)
             (i32.const 8)
            )
            ;;@ celt/celt_decoder.c:1042:0
            (local.tee $1
             (i32.sub
              (local.get $1)
              (local.get $28)
             )
            )
           )
           (block
            (local.set $15
             (i32.const 1)
            )
            (br $while-in11)
           )
          )
         )
        )
        ;;@ celt/celt_decoder.c:1045:0
        (i32.store
         (i32.add
          (i32.shl
           (local.get $7)
           (i32.const 2)
          )
          (local.get $38)
         )
         (local.get $5)
        )
        ;;@ celt/celt_decoder.c:1047:0
        (local.set $4
         (select
          (select
           ;;@ celt/celt_decoder.c:1048:0
           (local.tee $7
            (i32.add
             (local.get $4)
             (i32.const -1)
            )
           )
           (i32.const 2)
           (i32.gt_s
            (local.get $7)
            (i32.const 2)
           )
          )
          (local.get $4)
          (i32.gt_s
           (local.get $5)
           (i32.const 0)
          )
         )
        )
       )
       ;;@ celt/celt_decoder.c:1045:0
       (i32.store
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 2)
         )
         (local.get $38)
        )
        (i32.const 0)
       )
      )
      (if
       ;;@ celt/celt_decoder.c:1023:0
       (i32.ne
        (local.get $10)
        (local.get $19)
       )
       (block
        (local.set $7
         (local.get $19)
        )
        (br $while-in9)
       )
      )
     )
    )
    (local.set $1
     (local.get $14)
    )
   )
   (local.set $25
    (global.get $STACKTOP)
   )
   ;;@ celt/celt_decoder.c:1051:0
   (global.set $STACKTOP
    (i32.add
     (global.get $STACKTOP)
     (i32.and
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   (local.set $2
    (if (result i32)
     ;;@ celt/celt_decoder.c:1052:0
     (i32.gt_s
      (i32.add
       (local.get $2)
       (i32.const 48)
      )
      (local.get $1)
     )
     (i32.const 5)
     ;;@ celt/celt_decoder.c:1053:0
     (call $_ec_dec_icdf
      (local.get $6)
      (i32.const 41914)
      (i32.const 7)
     )
    )
   )
   ;;@ celt/celt_decoder.c:1056:0
   (local.set $19
    (select
     (i32.const 8)
     (i32.const 0)
     (local.tee $7
      (i32.and
       (i32.and
        (i32.gt_u
         (local.get $12)
         (i32.const 1)
        )
        (local.get $33)
       )
       (i32.ge_s
        ;;@ celt/celt_decoder.c:1055:0
        (local.tee $1
         (i32.add
          (i32.sub
           (local.get $14)
           (call $_ec_tell_frac
            (local.get $6)
           )
          )
          (i32.const -1)
         )
        )
        (i32.add
         (i32.shl
          (local.get $12)
          (i32.const 3)
         )
         (i32.const 16)
        )
       )
      )
     )
    )
   )
   (local.set $24
    (global.get $STACKTOP)
   )
   ;;@ celt/celt_decoder.c:1059:0
   (global.set $STACKTOP
    (i32.add
     (global.get $STACKTOP)
     (i32.and
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   (local.set $15
    (global.get $STACKTOP)
   )
   ;;@ celt/celt_decoder.c:1060:0
   (global.set $STACKTOP
    (i32.add
     (global.get $STACKTOP)
     (i32.and
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   ;;@ celt/celt_decoder.c:1062:0
   (local.set $5
    (call $_clt_compute_allocation
     (local.get $8)
     (local.get $13)
     (local.get $10)
     (local.get $38)
     (local.get $37)
     (local.get $2)
     (local.get $40)
     (local.get $41)
     (i32.sub
      (local.get $1)
      (local.get $19)
     )
     (local.get $18)
     (local.get $24)
     (local.get $25)
     (local.get $15)
     (local.get $16)
     (local.get $12)
     (local.get $6)
    )
   )
   ;;@ celt/celt_decoder.c:1066:0
   (call $_unquant_fine_energy
    (local.get $8)
    (local.get $13)
    (local.get $10)
    (local.get $11)
    (local.get $25)
    (local.get $6)
    (local.get $16)
   )
   (local.set $4
    (i32.shl
     (i32.sub
      (i32.add
       (i32.div_s
        (local.get $30)
        (i32.const 2)
       )
       (i32.const 2048)
      )
      (local.get $17)
     )
     (i32.const 2)
    )
   )
   (local.set $1
    (i32.const 0)
   )
   (loop $while-in13
    ;;@ celt/celt_decoder.c:1069:0
    (drop
     (call $_memmove
      (local.tee $2
       (i32.load
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $39)
        )
       )
      )
      (i32.add
       (i32.shl
        (local.get $17)
        (i32.const 2)
       )
       (local.get $2)
      )
      (local.get $4)
     )
    )
    ;;@ celt/celt_decoder.c:1070:0
    (br_if $while-in13
     (i32.lt_s
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (local.get $22)
     )
    )
   )
   ;;@ celt/celt_decoder.c:1073:0
   (local.set $4
    (global.get $STACKTOP)
   )
   (global.set $STACKTOP
    (i32.add
     (global.get $STACKTOP)
     (i32.and
      (i32.add
       (local.tee $2
        (i32.mul
         (local.get $9)
         (local.get $16)
        )
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   (local.set $28
    (global.get $STACKTOP)
   )
   ;;@ celt/celt_decoder.c:1080:0
   (global.set $STACKTOP
    (i32.add
     (global.get $STACKTOP)
     (i32.and
      (i32.add
       (i32.shl
        (i32.mul
         (local.get $16)
         (local.get $17)
        )
        (i32.const 2)
       )
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
   )
   ;;@ celt/celt_decoder.c:1083:0
   (call $_quant_all_bands
    (local.get $8)
    (local.get $13)
    (local.get $10)
    (local.get $28)
    (select
     (i32.add
      (i32.shl
       (local.get $17)
       (i32.const 2)
      )
      (local.get $28)
     )
     (i32.const 0)
     (i32.eq
      (local.get $16)
      (i32.const 2)
     )
    )
    (local.get $4)
    (local.get $24)
    (local.get $51)
    (local.get $53)
    (i32.load
     (local.get $41)
    )
    (i32.load
     (local.get $40)
    )
    (local.get $34)
    (i32.sub
     (local.get $14)
     (local.get $19)
    )
    (i32.load
     (local.get $18)
    )
    (local.get $6)
    (local.get $12)
    (local.get $5)
    ;;@ celt/celt_decoder.c:1085:0
    (local.tee $14
     (i32.add
      (local.get $0)
      (i32.const 40)
     )
    )
    (i32.load offset=36
     (local.get $0)
    )
    (i32.load offset=32
     (local.get $0)
    )
   )
   (if
    (local.get $7)
    (block
     ;;@ celt/celt_decoder.c:1091:0
     (local.set $1
      (i32.eqz
       (call $_ec_dec_bits
        (local.get $6)
        (i32.const 1)
       )
      )
     )
     ;;@ celt/celt_decoder.c:1093:0
     (call $_unquant_energy_finalise
      (local.get $8)
      (local.get $13)
      (local.get $10)
      (local.get $11)
      (local.get $25)
      (local.get $15)
      (i32.sub
       (i32.sub
        (i32.add
         (local.get $21)
         (i32.const 32)
        )
        (i32.load offset=20
         (local.get $6)
        )
       )
       (i32.clz
        (i32.load offset=28
         (local.get $6)
        )
       )
      )
      (local.get $6)
      (local.get $16)
     )
     (if
      (i32.eqz
       (local.get $1)
      )
      ;;@ celt/celt_decoder.c:1097:0
      (call $_anti_collapse
       (local.get $8)
       (local.get $28)
       (local.get $4)
       (local.get $12)
       (local.get $16)
       (local.get $17)
       (local.get $13)
       (local.get $10)
       (local.get $11)
       (local.get $23)
       (local.get $26)
       (local.get $24)
       (i32.load
        (local.get $14)
       )
       (i32.load offset=36
        (local.get $0)
       )
      )
     )
    )
    ;;@ celt/celt_decoder.c:1093:0
    (call $_unquant_energy_finalise
     (local.get $8)
     (local.get $13)
     (local.get $10)
     (local.get $11)
     (local.get $25)
     (local.get $15)
     (i32.sub
      (i32.sub
       (i32.add
        (local.get $21)
        (i32.const 32)
       )
       (i32.load offset=20
        (local.get $6)
       )
      )
      (i32.clz
       (i32.load offset=28
        (local.get $6)
       )
      )
     )
     (local.get $6)
     (local.get $16)
    )
   )
   (if
    ;;@ celt/celt_decoder.c:1100:0
    (i32.and
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
     (local.get $50)
    )
    (block
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in15
      ;;@ celt/celt_decoder.c:1103:0
      (f32.store
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $11)
       )
       (f32.const -28)
      )
      ;;@ celt/celt_decoder.c:1102:0
      (br_if $while-in15
       (i32.ne
        (local.get $2)
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
   ;;@ celt/celt_decoder.c:1106:0
   (call $_celt_synthesis
    (local.get $8)
    (local.get $28)
    (local.get $29)
    (local.get $11)
    (local.get $13)
    (local.get $48)
    (local.get $16)
    (local.get $22)
    (local.get $32)
    (local.get $12)
    (i32.load offset=16
     (local.get $0)
    )
    (local.get $49)
    (i32.load offset=36
     (local.get $0)
    )
   )
   (local.set $7
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
   (if
    (local.get $44)
    (block
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in17
      ;;@ celt/celt_decoder.c:1110:0
      (i32.store offset=60
       (local.get $0)
       (local.tee $4
        (select
         (local.tee $2
          (i32.load offset=60
           (local.get $0)
          )
         )
         (i32.const 15)
         (i32.gt_s
          (local.get $2)
          (i32.const 15)
         )
        )
       )
      )
      ;;@ celt/celt_decoder.c:1111:0
      (i32.store
       (local.get $7)
       (local.tee $2
        (select
         (local.tee $2
          (i32.load
           (local.get $7)
          )
         )
         (i32.const 15)
         (i32.gt_s
          (local.get $2)
          (i32.const 15)
         )
        )
       )
      )
      ;;@ celt/celt_decoder.c:1114:0
      (drop
       (i32.load offset=36
        (local.get $0)
       )
      )
      ;;@ celt/celt_decoder.c:1112:0
      (call $_comb_filter
       (local.tee $5
        (i32.load
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $29)
         )
        )
       )
       (local.get $5)
       (local.get $2)
       (local.get $4)
       (i32.load offset=44
        (local.get $8)
       )
       (f32.load offset=72
        (local.get $0)
       )
       (f32.load offset=68
        (local.get $0)
       )
       (i32.load offset=80
        (local.get $0)
       )
       (i32.load offset=76
        (local.get $0)
       )
       (i32.load offset=60
        (local.get $8)
       )
       (local.get $30)
      )
      ;;@ celt/celt_decoder.c:1118:0
      (drop
       (i32.load offset=36
        (local.get $0)
       )
      )
      ;;@ celt/celt_decoder.c:1116:0
      (call $_comb_filter
       (local.tee $2
        (i32.add
         (i32.shl
          (local.tee $4
           (i32.load offset=44
            (local.get $8)
           )
          )
          (i32.const 2)
         )
         (local.get $5)
        )
       )
       (local.get $2)
       (i32.load offset=60
        (local.get $0)
       )
       (local.get $35)
       (i32.sub
        (local.get $17)
        (local.get $4)
       )
       (f32.load offset=68
        (local.get $0)
       )
       (local.get $20)
       (i32.load offset=76
        (local.get $0)
       )
       (local.get $36)
       (i32.load offset=60
        (local.get $8)
       )
       (local.get $30)
      )
      ;;@ celt/celt_decoder.c:1120:0
      (br_if $while-in17
       (i32.lt_s
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.get $22)
       )
      )
     )
    )
    (block
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in19
      ;;@ celt/celt_decoder.c:1110:0
      (i32.store offset=60
       (local.get $0)
       (local.tee $5
        (select
         (local.tee $2
          (i32.load offset=60
           (local.get $0)
          )
         )
         (i32.const 15)
         (i32.gt_s
          (local.get $2)
          (i32.const 15)
         )
        )
       )
      )
      ;;@ celt/celt_decoder.c:1111:0
      (i32.store
       (local.get $7)
       (local.tee $4
        (select
         (local.tee $2
          (i32.load
           (local.get $7)
          )
         )
         (i32.const 15)
         (i32.gt_s
          (local.get $2)
          (i32.const 15)
         )
        )
       )
      )
      ;;@ celt/celt_decoder.c:1114:0
      (drop
       (i32.load offset=36
        (local.get $0)
       )
      )
      ;;@ celt/celt_decoder.c:1112:0
      (call $_comb_filter
       (local.tee $2
        (i32.load
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $29)
         )
        )
       )
       (local.get $2)
       (local.get $4)
       (local.get $5)
       (i32.load offset=44
        (local.get $8)
       )
       (f32.load offset=72
        (local.get $0)
       )
       (f32.load offset=68
        (local.get $0)
       )
       (i32.load offset=80
        (local.get $0)
       )
       (i32.load offset=76
        (local.get $0)
       )
       (i32.load offset=60
        (local.get $8)
       )
       (local.get $30)
      )
      ;;@ celt/celt_decoder.c:1120:0
      (br_if $while-in19
       (i32.lt_s
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.get $22)
       )
      )
     )
    )
   )
   ;;@ celt/celt_decoder.c:1121:0
   (i32.store
    (local.get $7)
    (i32.load offset=60
     (local.get $0)
    )
   )
   ;;@ celt/celt_decoder.c:1122:0
   (i32.store offset=72
    (local.get $0)
    (i32.load offset=68
     (local.get $0)
    )
   )
   ;;@ celt/celt_decoder.c:1123:0
   (i32.store offset=80
    (local.get $0)
    (i32.load offset=76
     (local.get $0)
    )
   )
   ;;@ celt/celt_decoder.c:1124:0
   (i32.store offset=60
    (local.get $0)
    (local.get $35)
   )
   ;;@ celt/celt_decoder.c:1125:0
   (f32.store offset=68
    (local.get $0)
    (local.get $20)
   )
   ;;@ celt/celt_decoder.c:1126:0
   (i32.store offset=76
    (local.get $0)
    (local.get $36)
   )
   (if
    (local.get $44)
    (block
     ;;@ celt/celt_decoder.c:1129:0
     (i32.store
      (local.get $7)
      (local.get $35)
     )
     ;;@ celt/celt_decoder.c:1130:0
     (f32.store offset=72
      (local.get $0)
      (local.get $20)
     )
     ;;@ celt/celt_decoder.c:1131:0
     (i32.store offset=80
      (local.get $0)
      (local.get $36)
     )
    )
   )
   (if
    (local.get $47)
    ;;@ celt/celt_decoder.c:1135:0
    (drop
     (call $_memcpy
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $11)
      )
      (local.get $11)
      (i32.shl
       (local.get $9)
       (i32.const 2)
      )
     )
    )
   )
   (block $do-once
    (if
     (local.get $33)
     (block
      (br_if $do-once
       (i32.eqz
        (local.get $42)
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in21
       ;;@ celt/celt_decoder.c:1154:0
       (local.set $27
        (f32.load
         (local.tee $2
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $23)
          )
         )
        )
       )
       (f32.store
        (local.get $2)
        (select
         (local.get $27)
         (local.tee $20
          (f32.load
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $11)
           )
          )
         )
         (f32.lt
          (local.get $27)
          (local.get $20)
         )
        )
       )
       ;;@ celt/celt_decoder.c:1153:0
       (br_if $while-in21
        (i32.lt_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $31)
        )
       )
      )
     )
     (block
      ;;@ celt/celt_decoder.c:1141:0
      (drop
       (call $_memcpy
        (local.get $26)
        (local.get $23)
        (local.tee $1
         (i32.shl
          (local.get $9)
          (i32.const 3)
         )
        )
       )
      )
      ;;@ celt/celt_decoder.c:1142:0
      (drop
       (call $_memcpy
        (local.get $23)
        (local.get $11)
        (local.get $1)
       )
      )
      ;;@ celt/celt_decoder.c:1146:0
      (local.set $1
       (i32.load offset=52
        (local.get $0)
       )
      )
      (br_if $do-once
       (i32.eqz
        (local.get $42)
       )
      )
      (local.set $27
       (select
        (f32.mul
         (f32.convert_i32_s
          (local.get $43)
         )
         (f32.const 1.0000000474974513e-03)
        )
        (f32.const 1)
        (i32.lt_s
         (local.get $1)
         (i32.const 10)
        )
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in23
       ;;@ celt/celt_decoder.c:1151:0
       (local.set $45
        (f32.add
         (local.get $27)
         (f32.load
          (local.tee $2
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $46)
           )
          )
         )
        )
       )
       (f32.store
        (local.get $2)
        (select
         (local.get $45)
         (local.tee $20
          (f32.load
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $11)
           )
          )
         )
         (f32.lt
          (local.get $45)
          (local.get $20)
         )
        )
       )
       ;;@ celt/celt_decoder.c:1150:0
       (br_if $while-in23
        (i32.lt_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $31)
        )
       )
      )
     )
    )
   )
   (local.set $4
    (i32.lt_s
     (local.get $10)
     (local.get $9)
    )
   )
   (block $do-once24
    (if
     (i32.gt_s
      (local.get $13)
      (i32.const 0)
     )
     (block
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in27
       ;;@ celt/celt_decoder.c:1160:0
       (f32.store
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $11)
        )
        (f32.const 0)
       )
       ;;@ celt/celt_decoder.c:1161:0
       (f32.store
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $26)
        )
        (f32.const -28)
       )
       (f32.store
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $23)
        )
        (f32.const -28)
       )
       ;;@ celt/celt_decoder.c:1158:0
       (br_if $while-in27
        (i32.ne
         (local.get $13)
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
      )
      (if
       (local.get $4)
       (block
        (local.set $1
         (local.get $10)
        )
        (loop $while-in29
         ;;@ celt/celt_decoder.c:1165:0
         (f32.store
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $11)
          )
          (f32.const 0)
         )
         ;;@ celt/celt_decoder.c:1166:0
         (f32.store
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $26)
          )
          (f32.const -28)
         )
         (f32.store
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $23)
          )
          (f32.const -28)
         )
         ;;@ celt/celt_decoder.c:1163:0
         (br_if $while-in29
          (i32.ne
           (local.get $9)
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in31
       ;;@ celt/celt_decoder.c:1160:0
       (f32.store
        (i32.add
         (i32.shl
          (local.tee $2
           (i32.add
            (local.get $1)
            (local.get $9)
           )
          )
          (i32.const 2)
         )
         (local.get $11)
        )
        (f32.const 0)
       )
       ;;@ celt/celt_decoder.c:1161:0
       (f32.store
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 2)
         )
         (local.get $26)
        )
        (f32.const -28)
       )
       (f32.store
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 2)
         )
         (local.get $23)
        )
        (f32.const -28)
       )
       ;;@ celt/celt_decoder.c:1158:0
       (br_if $while-in31
        (i32.ne
         (local.get $13)
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
      )
      (br_if $do-once24
       (i32.eqz
        (local.get $4)
       )
      )
     )
     (block
      (br_if $do-once24
       (i32.eqz
        (local.get $4)
       )
      )
      (local.set $1
       (local.get $10)
      )
      (loop $while-in35
       ;;@ celt/celt_decoder.c:1165:0
       (f32.store
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $11)
        )
        (f32.const 0)
       )
       ;;@ celt/celt_decoder.c:1166:0
       (f32.store
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $26)
        )
        (f32.const -28)
       )
       (f32.store
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $23)
        )
        (f32.const -28)
       )
       ;;@ celt/celt_decoder.c:1163:0
       (br_if $while-in35
        (i32.ne
         (local.get $9)
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    (loop $while-in33
     ;;@ celt/celt_decoder.c:1165:0
     (f32.store
      (i32.add
       (i32.shl
        (local.tee $1
         (i32.add
          (local.get $9)
          (local.get $10)
         )
        )
        (i32.const 2)
       )
       (local.get $11)
      )
      (f32.const 0)
     )
     ;;@ celt/celt_decoder.c:1166:0
     (f32.store
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $26)
      )
      (f32.const -28)
     )
     (f32.store
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $23)
      )
      (f32.const -28)
     )
     ;;@ celt/celt_decoder.c:1163:0
     (br_if $while-in33
      (i32.ne
       (local.get $9)
       (local.tee $10
        (i32.add
         (local.get $10)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
   ;;@ celt/celt_decoder.c:1169:0
   (i32.store
    (local.get $14)
    (i32.load offset=28
     (local.get $6)
    )
   )
   ;;@ celt/celt_decoder.c:1171:0
   (call $_deemphasis
    (local.get $29)
    (local.get $3)
    (local.get $17)
    (local.get $22)
    (i32.load offset=16
     (local.get $0)
    )
    (i32.add
     (local.get $8)
     (i32.const 16)
    )
    (i32.add
     (local.get $0)
     (i32.const 84)
    )
   )
   ;;@ celt/celt_decoder.c:1172:0
   (i32.store offset=52
    (local.get $0)
    (i32.const 0)
   )
   (local.set $0
    (if (result i32)
     ;;@ celt/celt_decoder.c:1174:0
     (i32.gt_s
      (i32.add
       (i32.clz
        (i32.load offset=28
         (local.get $6)
        )
       )
       (i32.add
        (i32.load offset=20
         (local.get $6)
        )
        (i32.const -32)
       )
      )
      (local.get $21)
     )
     (i32.const -3)
     (block (result i32)
      (if
       ;;@ celt/celt_decoder.c:1176:0
       (i32.load offset=44
        (local.get $6)
       )
       ;;@ celt/celt_decoder.c:1177:0
       (i32.store offset=44
        (local.get $0)
        (i32.const 1)
       )
      )
      ;;@ celt/celt_decoder.c:1178:0
      (i32.div_s
       (local.get $17)
       (i32.load offset=16
        (local.get $0)
       )
      )
     )
    )
   )
   ;;@ celt/celt_decoder.c:1179:0
   (call $_llvm_stackrestore
    (local.get $52)
   )
   (global.set $STACKTOP
    (local.get $18)
   )
   (return
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $18)
  )
  (i32.const -1)
 )
 (func $_celt_decode_lost (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 f32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 f32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 8304)
   )
  )
  ;;@ celt/celt_decoder.c:521:0
  (local.set $21
   (i32.sub
    (i32.const 0)
    (local.get $1)
   )
  )
  (local.set $16
   (i32.add
    (local.get $3)
    (i32.const 4096)
   )
  )
  (local.set $24
   (i32.add
    (local.get $3)
    (i32.const 8296)
   )
  )
  (local.set $17
   (i32.add
    (local.get $3)
    (i32.const 8288)
   )
  )
  ;;@ celt/celt_decoder.c:500:0
  (local.set $13
   (i32.load offset=8
    (local.get $0)
   )
  )
  ;;@ celt/celt_decoder.c:515:0
  (local.set $10
   (i32.load offset=8
    ;;@ celt/celt_decoder.c:514:0
    (local.tee $6
     (i32.load
      (local.get $0)
     )
    )
   )
  )
  ;;@ celt/celt_decoder.c:517:0
  (local.set $18
   (i32.load offset=32
    (local.get $6)
   )
  )
  (local.set $5
   (i32.add
    ;;@ celt/celt_decoder.c:516:0
    (local.tee $12
     (i32.load offset=4
      (local.get $6)
     )
    )
    (i32.const 2048)
   )
  )
  (loop $while-in
   ;;@ celt/celt_decoder.c:520:0
   (i32.store
    (i32.add
     (i32.shl
      (local.get $7)
      (i32.const 2)
     )
     (local.get $24)
    )
    (local.tee $8
     (i32.add
      (i32.add
       (local.get $0)
       (i32.const 92)
      )
      (i32.shl
       (i32.mul
        (local.get $5)
        (local.get $7)
       )
       (i32.const 2)
      )
     )
    )
   )
   ;;@ celt/celt_decoder.c:521:0
   (i32.store
    (i32.add
     (i32.shl
      (local.get $7)
      (i32.const 2)
     )
     (local.get $17)
    )
    (i32.add
     (i32.sub
      (local.get $8)
      (i32.const -8192)
     )
     (i32.shl
      (local.get $21)
      (i32.const 2)
     )
    )
   )
   ;;@ celt/celt_decoder.c:522:0
   (br_if $while-in
    (i32.lt_s
     (local.tee $7
      (i32.add
       (local.get $7)
       (i32.const 1)
      )
     )
     (local.get $13)
    )
   )
  )
  ;;@ celt/celt_decoder.c:523:0
  (local.set $22
   (i32.add
    (i32.add
     (local.get $0)
     (i32.const 92)
    )
    (i32.shl
     (i32.mul
      (local.get $5)
      (local.get $13)
     )
     (i32.const 2)
    )
   )
  )
  (if
   ;;@ celt/celt_decoder.c:531:0
   (i32.eqz
    (i32.or
     (i32.ne
      ;;@ celt/celt_decoder.c:530:0
      (local.tee $5
       (i32.load offset=20
        (local.get $0)
       )
      )
      (i32.const 0)
     )
     (i32.gt_s
      ;;@ celt/celt_decoder.c:529:0
      (local.tee $25
       (i32.load offset=52
        (local.get $0)
       )
      )
      (i32.const 4)
     )
    )
   )
   (if
    ;;@ celt/celt_decoder.c:531:0
    (i32.eqz
     (i32.load offset=56
      (local.get $0)
     )
    )
    (block
     (local.set $32
      (if (result f32)
       ;;@ celt/celt_decoder.c:599:0
       (local.tee $31
        (i32.eqz
         (local.get $25)
        )
       )
       (block (result f32)
        ;;@ celt/celt_decoder.c:601:0
        (local.set $10
         (i32.add
          (local.get $0)
          (i32.const 36)
         )
        )
        (drop
         (i32.load offset=36
          (local.get $0)
         )
        )
        ;;@ celt/celt_decoder.c:486:0
        (call $_pitch_downsample
         (local.get $24)
         (local.get $3)
         (local.get $13)
        )
        ;;@ celt/celt_decoder.c:488:0
        (call $_pitch_search
         (i32.add
          (local.get $3)
          (i32.const 1440)
         )
         (local.get $3)
         (local.get $16)
        )
        ;;@ celt/celt_decoder.c:601:0
        (i32.store offset=48
         (local.get $0)
         ;;@ celt/celt_decoder.c:491:0
         (local.tee $11
          (i32.sub
           (i32.const 720)
           (i32.load
            (local.get $16)
           )
          )
         )
        )
        (f32.const 1)
       )
       (block (result f32)
        ;;@ celt/celt_decoder.c:603:0
        (local.set $11
         (i32.load offset=48
          (local.get $0)
         )
        )
        (local.set $10
         (i32.add
          (local.get $0)
          (i32.const 36)
         )
        )
        (f32.const 0.800000011920929)
       )
      )
     )
     ;;@ celt/celt_decoder.c:676:0
     (local.set $2
      (i32.sub
       (i32.const 0)
       ;;@ celt/celt_decoder.c:609:0
       (local.tee $17
        (select
         (local.tee $2
          (i32.shl
           (local.get $11)
           (i32.const 1)
          )
         )
         (i32.const 1024)
         (i32.lt_s
          (local.get $2)
          (i32.const 1024)
         )
        )
       )
      )
     )
     ;;@ celt/celt_decoder.c:611:0
     (local.set $33
      (call $_llvm_stacksave)
     )
     (local.set $19
      (global.get $STACKTOP)
     )
     (global.set $STACKTOP
      (i32.add
       (global.get $STACKTOP)
       (i32.and
        (i32.add
         (i32.shl
          (local.get $12)
          (i32.const 2)
         )
         (i32.const 15)
        )
        (i32.const -16)
       )
      )
     )
     (local.set $28
      (global.get $STACKTOP)
     )
     ;;@ celt/celt_decoder.c:613:0
     (global.set $STACKTOP
      (i32.add
       (global.get $STACKTOP)
       (i32.and
        (i32.add
         (i32.shl
          (local.get $17)
          (i32.const 2)
         )
         (i32.const 15)
        )
        (i32.const -16)
       )
      )
     )
     ;;@ celt/celt_decoder.c:614:0
     (local.set $20
      (i32.add
       (local.get $16)
       (i32.const 96)
      )
     )
     ;;@ celt/celt_decoder.c:615:0
     (local.set $15
      (i32.load offset=60
       (local.get $6)
      )
     )
     (local.set $29
      (i32.add
       (i32.add
        (local.get $16)
        (i32.const 4192)
       )
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
      )
     )
     (local.set $34
      (i32.shl
       (local.get $17)
       (i32.const 2)
      )
     )
     (local.set $35
      (i32.gt_s
       (local.get $11)
       (i32.const 0)
      )
     )
     (local.set $36
      (i32.shl
       (local.tee $6
        (i32.sub
         (i32.const 2048)
         (local.get $1)
        )
       )
       (i32.const 2)
      )
     )
     (local.set $37
      (i32.sub
       (i32.const 1024)
       (local.get $11)
      )
     )
     (local.set $23
      (i32.gt_s
       (local.tee $18
        (i32.add
         (local.get $1)
         (local.get $12)
        )
       )
       (i32.const 0)
      )
     )
     (local.set $39
      (i32.sub
       (i32.const 1024)
       (local.tee $38
        (i32.shr_s
         (local.get $17)
         (i32.const 1)
        )
       )
      )
     )
     (local.set $40
      (i32.sub
       (i32.const 1024)
       (local.get $17)
      )
     )
     (local.set $41
      (i32.add
       (local.get $6)
       (i32.const -1)
      )
     )
     (local.set $42
      (i32.div_s
       (local.get $12)
       (i32.const 2)
      )
     )
     (local.set $43
      (i32.gt_s
       (local.get $12)
       (i32.const 1)
      )
     )
     (local.set $44
      (i32.gt_s
       (local.get $12)
       (i32.const 0)
      )
     )
     (local.set $45
      (i32.add
       (local.get $12)
       (i32.const -1)
      )
     )
     (local.set $46
      (i32.gt_s
       (local.get $1)
       (i32.const 0)
      )
     )
     ;;@ celt/celt_decoder.c:616:0
     (local.set $47
      (i32.shl
       (local.get $18)
       (i32.const 2)
      )
     )
     (local.set $30
      (i32.sub
       (local.get $3)
       (i32.const -64)
      )
     )
     (local.set $48
      (i32.add
       (local.get $6)
       (i32.const -2)
      )
     )
     (local.set $49
      (i32.add
       (local.get $6)
       (i32.const -3)
      )
     )
     (local.set $50
      (i32.add
       (local.get $6)
       (i32.const -4)
      )
     )
     (local.set $51
      (i32.add
       (local.get $6)
       (i32.const -5)
      )
     )
     (local.set $52
      (i32.add
       (local.get $6)
       (i32.const -6)
      )
     )
     (local.set $53
      (i32.add
       (local.get $6)
       (i32.const -7)
      )
     )
     (local.set $54
      (i32.add
       (local.get $6)
       (i32.const -8)
      )
     )
     (local.set $55
      (i32.add
       (local.get $6)
       (i32.const -9)
      )
     )
     (local.set $56
      (i32.add
       (local.get $6)
       (i32.const -10)
      )
     )
     (local.set $57
      (i32.add
       (local.get $6)
       (i32.const -11)
      )
     )
     (local.set $58
      (i32.add
       (local.get $6)
       (i32.const -12)
      )
     )
     (local.set $59
      (i32.add
       (local.get $6)
       (i32.const -13)
      )
     )
     (local.set $60
      (i32.add
       (local.get $6)
       (i32.const -14)
      )
     )
     (local.set $61
      (i32.add
       (local.get $6)
       (i32.const -15)
      )
     )
     (local.set $62
      (i32.add
       (local.get $6)
       (i32.const -16)
      )
     )
     (local.set $63
      (i32.add
       (local.get $6)
       (i32.const -17)
      )
     )
     (local.set $64
      (i32.sub
       (local.get $3)
       (i32.const -64)
      )
     )
     (local.set $65
      (i32.add
       (local.get $6)
       (i32.const -18)
      )
     )
     (local.set $66
      (i32.add
       (local.get $6)
       (i32.const -19)
      )
     )
     (local.set $67
      (i32.add
       (local.get $6)
       (i32.const -20)
      )
     )
     (local.set $68
      (i32.add
       (local.get $6)
       (i32.const -21)
      )
     )
     (local.set $69
      (i32.add
       (local.get $6)
       (i32.const -22)
      )
     )
     (local.set $70
      (i32.add
       (local.get $6)
       (i32.const -23)
      )
     )
     (local.set $71
      (i32.add
       (local.get $6)
       (i32.const -24)
      )
     )
     (local.set $7
      (i32.const 0)
     )
     (loop $while-in1
      ;;@ celt/celt_decoder.c:625:0
      (local.set $5
       (i32.load
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 2)
         )
         (local.get $24)
        )
       )
      )
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in3
       ;;@ celt/celt_decoder.c:627:0
       (i32.store
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 2)
         )
         (local.get $16)
        )
        (i32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $2)
            (i32.const 1000)
           )
           (i32.const 2)
          )
          (local.get $5)
         )
        )
       )
       ;;@ celt/celt_decoder.c:626:0
       (br_if $while-in3
        (i32.ne
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (i32.const 1048)
        )
       )
      )
      (if
       (local.get $31)
       (block
        ;;@ celt/celt_decoder.c:635:0
        (drop
         (i32.load
          (local.get $10)
         )
        )
        (call $__celt_autocorr
         (local.get $20)
         (local.get $3)
         (local.get $15)
         (local.get $12)
         (i32.const 24)
        )
        ;;@ celt/celt_decoder.c:640:0
        (f32.store
         (local.get $3)
         (f32.mul
          (f32.load
           (local.get $3)
          )
          (f32.const 1.000100016593933)
         )
        )
        ;;@ celt/celt_decoder.c:649:0
        (f32.store offset=4
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=4
            (local.get $3)
           )
          )
          (f32.mul
           (local.get $4)
           (f32.const 6.400000711437315e-05)
          )
         )
        )
        (f32.store offset=8
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=8
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 2)
           )
           (f32.const 2)
          )
         )
        )
        (f32.store offset=12
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=12
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 3)
           )
           (f32.const 3)
          )
         )
        )
        (f32.store offset=16
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=16
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 4)
           )
           (f32.const 4)
          )
         )
        )
        (f32.store offset=20
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=20
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 5)
           )
           (f32.const 5)
          )
         )
        )
        (f32.store offset=24
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=24
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 6)
           )
           (f32.const 6)
          )
         )
        )
        (f32.store offset=28
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=28
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 7)
           )
           (f32.const 7)
          )
         )
        )
        (f32.store offset=32
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=32
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 8)
           )
           (f32.const 8)
          )
         )
        )
        (f32.store offset=36
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=36
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 9)
           )
           (f32.const 9)
          )
         )
        )
        (f32.store offset=40
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=40
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 10)
           )
           (f32.const 10)
          )
         )
        )
        (f32.store offset=44
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=44
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 11)
           )
           (f32.const 11)
          )
         )
        )
        (f32.store offset=48
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=48
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 12)
           )
           (f32.const 12)
          )
         )
        )
        (f32.store offset=52
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=52
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 13)
           )
           (f32.const 13)
          )
         )
        )
        (f32.store offset=56
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=56
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 14)
           )
           (f32.const 14)
          )
         )
        )
        (f32.store offset=60
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=60
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 15)
           )
           (f32.const 15)
          )
         )
        )
        (f32.store
         (local.get $30)
         (f32.sub
          (local.tee $4
           (f32.load
            (local.get $30)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 16)
           )
           (f32.const 16)
          )
         )
        )
        (f32.store offset=68
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=68
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 17)
           )
           (f32.const 17)
          )
         )
        )
        (f32.store offset=72
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=72
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 18)
           )
           (f32.const 18)
          )
         )
        )
        (f32.store offset=76
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=76
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 19)
           )
           (f32.const 19)
          )
         )
        )
        (f32.store offset=80
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=80
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 20)
           )
           (f32.const 20)
          )
         )
        )
        (f32.store offset=84
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=84
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 21)
           )
           (f32.const 21)
          )
         )
        )
        (f32.store offset=88
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=88
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 22)
           )
           (f32.const 22)
          )
         )
        )
        (f32.store offset=92
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=92
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 23)
           )
           (f32.const 23)
          )
         )
        )
        (f32.store offset=96
         (local.get $3)
         (f32.sub
          (local.tee $4
           (f32.load offset=96
            (local.get $3)
           )
          )
          (f32.mul
           (f32.mul
            (f32.mul
             (local.get $4)
             (f32.const 6.400000711437315e-05)
            )
            (f32.const 24)
           )
           (f32.const 24)
          )
         )
        )
        ;;@ celt/celt_decoder.c:652:0
        (call $__celt_lpc
         (local.tee $14
          (i32.add
           (i32.shl
            (i32.mul
             (local.get $7)
             (i32.const 24)
            )
            (i32.const 2)
           )
           (local.get $22)
          )
         )
         (local.get $3)
         (i32.const 24)
        )
       )
       ;;@ celt/celt_decoder.c:676:0
       (local.set $14
        (i32.add
         (i32.shl
          (i32.mul
           (local.get $7)
           (i32.const 24)
          )
          (i32.const 2)
         )
         (local.get $22)
        )
       )
      )
      (drop
       (i32.load
        (local.get $10)
       )
      )
      (call $_celt_fir_c
       (local.get $29)
       (local.get $14)
       (local.get $28)
       (local.get $17)
      )
      ;;@ celt/celt_decoder.c:678:0
      (drop
       (call $_memcpy
        (local.get $29)
        (local.get $28)
        (local.get $34)
       )
      )
      (if
       (local.get $35)
       (block
        (local.set $9
         (f32.const 1)
        )
        (local.set $4
         (f32.const 1)
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in5
         ;;@ celt/celt_decoder.c:695:0
         (local.set $4
          (f32.add
           (local.get $4)
           (f32.mul
            ;;@ celt/celt_decoder.c:694:0
            (local.tee $4
             (f32.load
              (i32.add
               (i32.shl
                (i32.add
                 (local.get $2)
                 (local.get $39)
                )
                (i32.const 2)
               )
               (local.get $20)
              )
             )
            )
            (local.get $4)
           )
          )
         )
         ;;@ celt/celt_decoder.c:697:0
         (local.set $9
          (f32.add
           (local.get $9)
           (f32.mul
            ;;@ celt/celt_decoder.c:696:0
            (local.tee $9
             (f32.load
              (i32.add
               (i32.shl
                (i32.add
                 (local.get $2)
                 (local.get $40)
                )
                (i32.const 2)
               )
               (local.get $20)
              )
             )
            )
            (local.get $9)
           )
          )
         )
         ;;@ celt/celt_decoder.c:691:0
         (br_if $while-in5
          (i32.lt_s
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (local.get $38)
          )
         )
        )
       )
       (block
        (local.set $9
         (f32.const 1)
        )
        (local.set $4
         (f32.const 1)
        )
       )
      )
      ;;@ celt/celt_decoder.c:700:0
      (local.set $26
       (f32.sqrt
        (f32.div
         (select
          (local.get $4)
          (local.get $9)
          (f32.lt
           (local.get $4)
           (local.get $9)
          )
         )
         (local.get $9)
        )
       )
      )
      ;;@ celt/celt_decoder.c:706:0
      (drop
       (call $_memmove
        (local.get $5)
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $5)
        )
        (local.get $36)
       )
      )
      (local.set $9
       (if (result f32)
        (local.get $23)
        (block (result f32)
         ;;@ celt/celt_decoder.c:716:0
         (local.set $2
          (i32.const 0)
         )
         (local.set $9
          (f32.mul
           (local.get $32)
           (local.get $26)
          )
         )
         (local.set $4
          (f32.const 0)
         )
         (local.set $8
          (i32.const 0)
         )
         (loop $while-in7 (result f32)
          ;;@ celt/celt_decoder.c:724:0
          (f32.store
           (i32.add
            (i32.shl
             (i32.add
              (local.get $6)
              (local.get $8)
             )
             (i32.const 2)
            )
            (local.get $5)
           )
           (f32.mul
            ;;@ celt/celt_decoder.c:720:0
            (local.tee $9
             (select
              (local.get $9)
              (f32.mul
               (local.get $26)
               (local.get $9)
              )
              (local.tee $27
               (i32.lt_s
                (local.get $2)
                (local.get $11)
               )
              )
             )
            )
            (f32.load
             (i32.add
              (i32.shl
               ;;@ celt/celt_decoder.c:725:0
               (local.tee $27
                (i32.add
                 ;;@ celt/celt_decoder.c:720:0
                 (local.tee $2
                  (i32.sub
                   (local.get $2)
                   (select
                    (i32.const 0)
                    (local.get $11)
                    (local.get $27)
                   )
                  )
                 )
                 (local.get $37)
                )
               )
               (i32.const 2)
              )
              (local.get $20)
             )
            )
           )
          )
          ;;@ celt/celt_decoder.c:732:0
          (local.set $4
           (f32.add
            (local.get $4)
            (f32.mul
             ;;@ celt/celt_decoder.c:729:0
             (local.tee $4
              (f32.load
               (i32.add
                (i32.shl
                 (i32.sub
                  (i32.add
                   (local.get $27)
                   (i32.const 1024)
                  )
                  (local.get $1)
                 )
                 (i32.const 2)
                )
                (local.get $5)
               )
              )
             )
             (local.get $4)
            )
           )
          )
          ;;@ celt/celt_decoder.c:717:0
          (local.set $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (br_if $while-in7
           (i32.ne
            (local.get $18)
            (local.tee $8
             (i32.add
              (local.get $8)
              (i32.const 1)
             )
            )
           )
          )
          (local.get $4)
         )
        )
        (f32.const 0)
       )
      )
      ;;@ celt/celt_decoder.c:739:0
      (i32.store
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $41)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=4
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $48)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=8
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $49)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=12
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $50)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=16
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $51)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=20
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $52)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=24
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $53)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=28
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $54)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=32
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $55)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=36
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $56)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=40
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $57)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=44
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $58)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=48
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $59)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=52
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $60)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=56
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $61)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=60
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $62)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store
       (local.get $64)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $63)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=68
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $65)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=72
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $66)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=76
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $67)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=80
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $68)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=84
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $69)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=88
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $70)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      (i32.store offset=92
       (local.get $3)
       (i32.load
        (i32.add
         (i32.shl
          (local.get $71)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
      )
      ;;@ celt/celt_decoder.c:744:0
      (drop
       (i32.load
        (local.get $10)
       )
      )
      ;;@ celt/celt_decoder.c:742:0
      (call $_celt_iir
       (local.tee $2
        (i32.add
         (local.tee $8
          (i32.sub
           (local.get $5)
           (i32.const -8192)
          )
         )
         (i32.shl
          (local.get $21)
          (i32.const 2)
         )
        )
       )
       (local.get $14)
       (local.get $2)
       (local.get $18)
       (local.get $3)
      )
      (if
       (local.get $23)
       (block
        (local.set $4
         (f32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in9
         ;;@ celt/celt_decoder.c:759:0
         (local.set $4
          (f32.add
           (local.get $4)
           (f32.mul
            ;;@ celt/celt_decoder.c:758:0
            (local.tee $4
             (f32.load
              (i32.add
               (i32.shl
                (i32.add
                 (local.get $2)
                 (local.get $6)
                )
                (i32.const 2)
               )
               (local.get $5)
              )
             )
            )
            (local.get $4)
           )
          )
         )
         ;;@ celt/celt_decoder.c:756:0
         (br_if $while-in9
          (i32.ne
           (local.get $18)
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (local.set $4
        (f32.const 0)
       )
      )
      (if
       ;;@ celt/celt_decoder.c:767:0
       (f32.gt
        (local.get $9)
        (f32.mul
         (local.get $4)
         (f32.const 0.20000000298023224)
        )
       )
       (if
        ;;@ celt/celt_decoder.c:772:0
        (f32.lt
         (local.get $9)
         (local.get $4)
        )
        (block
         ;;@ celt/celt_decoder.c:774:0
         (local.set $4
          (f32.sqrt
           (f32.div
            (f32.add
             (local.get $9)
             (f32.const 1)
            )
            (f32.add
             (local.get $4)
             (f32.const 1)
            )
           )
          )
         )
         (if
          (local.get $44)
          (block
           (local.set $9
            (f32.sub
             (f32.const 1)
             (local.get $4)
            )
           )
           (local.set $2
            (i32.const 0)
           )
           (loop $while-in11
            ;;@ celt/celt_decoder.c:779:0
            (f32.store
             ;;@ celt/celt_decoder.c:780:0
             (local.tee $14
              (i32.add
               (i32.shl
                (i32.add
                 (local.get $2)
                 (local.get $6)
                )
                (i32.const 2)
               )
               (local.get $5)
              )
             )
             (f32.mul
              (f32.load
               (local.get $14)
              )
              (f32.sub
               (f32.const 1)
               (f32.mul
                (local.get $9)
                (f32.load
                 (i32.add
                  (i32.shl
                   (local.get $2)
                   (i32.const 2)
                  )
                  (local.get $15)
                 )
                )
               )
              )
             )
            )
            ;;@ celt/celt_decoder.c:775:0
            (br_if $while-in11
             (i32.ne
              (local.get $12)
              (local.tee $2
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
              )
             )
            )
           )
          )
         )
         (if
          (local.get $46)
          (block
           (local.set $2
            (local.get $12)
           )
           (loop $while-in13
            ;;@ celt/celt_decoder.c:784:0
            (f32.store
             ;;@ celt/celt_decoder.c:785:0
             (local.tee $14
              (i32.add
               (i32.shl
                (i32.add
                 (local.get $2)
                 (local.get $6)
                )
                (i32.const 2)
               )
               (local.get $5)
              )
             )
             (f32.mul
              (local.get $4)
              (f32.load
               (local.get $14)
              )
             )
            )
            ;;@ celt/celt_decoder.c:782:0
            (br_if $while-in13
             (i32.lt_s
              (local.tee $2
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
              )
              (local.get $18)
             )
            )
           )
          )
         )
        )
       )
       (if
        (local.get $23)
        ;;@ celt/celt_decoder.c:771:0
        (drop
         (call $_memset
          (i32.add
           (i32.shl
            (local.get $6)
            (i32.const 2)
           )
           (local.get $5)
          )
          (i32.const 0)
          (local.get $47)
         )
        )
       )
      )
      ;;@ celt/celt_decoder.c:796:0
      (drop
       (i32.load
        (local.get $10)
       )
      )
      ;;@ celt/celt_decoder.c:793:0
      (call $_comb_filter
       (local.get $19)
       (local.get $8)
       ;;@ celt/celt_decoder.c:794:0
       (local.tee $2
        (i32.load offset=60
         (local.get $0)
        )
       )
       (local.get $2)
       (local.get $12)
       ;;@ celt/celt_decoder.c:795:0
       (local.tee $4
        (f32.neg
         (f32.load offset=68
          (local.get $0)
         )
        )
       )
       (local.get $4)
       ;;@ celt/celt_decoder.c:796:0
       (local.tee $2
        (i32.load offset=76
         (local.get $0)
        )
       )
       (local.get $2)
       (i32.const 0)
       (i32.const 0)
      )
      (if
       (local.get $43)
       (block
        (local.set $8
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in15
         ;;@ celt/celt_decoder.c:802:0
         (f32.store
          (i32.add
           (i32.shl
            (i32.add
             (local.get $2)
             (i32.const 2048)
            )
            (i32.const 2)
           )
           (local.get $5)
          )
          (f32.add
           (f32.mul
            (f32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $15)
             )
            )
            (f32.load
             (i32.add
              (i32.shl
               ;;@ celt/celt_decoder.c:803:0
               (local.tee $8
                (i32.add
                 (local.get $8)
                 (local.get $45)
                )
               )
               (i32.const 2)
              )
              (local.get $19)
             )
            )
           )
           (f32.mul
            (f32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $15)
             )
            )
            (f32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $19)
             )
            )
           )
          )
         )
         (local.set $8
          (i32.xor
           (local.get $2)
           (i32.const -1)
          )
         )
         (br_if $while-in15
          ;;@ celt/celt_decoder.c:800:0
          (i32.ne
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (local.get $42)
          )
         )
        )
       )
      )
      ;;@ celt/celt_decoder.c:806:0
      (br_if $while-in1
       (i32.lt_s
        (local.tee $7
         (i32.add
          (local.get $7)
          (i32.const 1)
         )
        )
        (local.get $13)
       )
      )
     )
     ;;@ celt/celt_decoder.c:807:0
     (call $_llvm_stackrestore
      (local.get $33)
     )
     ;;@ celt/celt_decoder.c:809:0
     (i32.store offset=52
      (local.get $0)
      (i32.add
       (local.get $25)
       (i32.const 1)
      )
     )
     (global.set $STACKTOP
      (local.get $3)
     )
     ;;@ celt/celt_decoder.c:812:0
     (return)
    )
   )
  )
  ;;@ celt/celt_decoder.c:527:0
  (local.set $19
   (i32.add
    (i32.add
     (i32.add
      ;;@ celt/celt_decoder.c:524:0
      (local.tee $20
       (i32.add
        (i32.shl
         (i32.mul
          (local.get $13)
          (i32.const 24)
         )
         (i32.const 2)
        )
        (local.get $22)
       )
      )
      (i32.shl
       ;;@ celt/celt_decoder.c:525:0
       (local.tee $7
        (i32.shl
         (local.get $10)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.shl
      (local.get $7)
      (i32.const 2)
     )
    )
    (i32.shl
     (local.get $7)
     (i32.const 2)
    )
   )
  )
  ;;@ celt/celt_decoder.c:545:0
  (local.set $22
   (select
    (local.get $5)
    (local.tee $15
     (select
      ;;@ celt/celt_decoder.c:544:0
      (local.tee $11
       (i32.load offset=24
        (local.get $0)
       )
      )
      ;;@ celt/celt_decoder.c:545:0
      (local.tee $7
       (i32.load offset=12
        (local.get $6)
       )
      )
      (i32.lt_s
       (local.get $11)
       (local.get $7)
      )
     )
    )
    (i32.gt_s
     (local.get $5)
     (local.get $15)
    )
   )
  )
  ;;@ celt/celt_decoder.c:552:0
  (local.set $7
   (i32.mul
    (local.get $1)
    (local.get $13)
   )
  )
  (local.set $23
   (call $_llvm_stacksave)
  )
  (local.set $16
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $7)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ celt/celt_decoder.c:556:0
  (local.set $26
   (select
    (f32.const 0.5)
    (f32.const 1.5)
    (local.get $25)
   )
  )
  (if
   (i32.lt_s
    (local.get $5)
    (local.get $11)
   )
   (block
    (local.set $8
     (i32.const 0)
    )
    (loop $while-in17
     (local.set $14
      (i32.mul
       (local.get $8)
       (local.get $10)
      )
     )
     (local.set $7
      (local.get $5)
     )
     (loop $while-in19
      ;;@ celt/celt_decoder.c:560:0
      (local.set $4
       (f32.load
        (i32.add
         (i32.shl
          (local.tee $21
           (i32.add
            (local.get $7)
            (local.get $14)
           )
          )
          (i32.const 2)
         )
         (local.get $19)
        )
       )
      )
      (local.set $9
       (f32.sub
        (f32.load
         (local.tee $21
          (i32.add
           (i32.shl
            (local.get $21)
            (i32.const 2)
           )
           (local.get $20)
          )
         )
        )
        (local.get $26)
       )
      )
      (f32.store
       (local.get $21)
       (select
        (local.get $4)
        (local.get $9)
        (f32.gt
         (local.get $4)
         (local.get $9)
        )
       )
      )
      ;;@ celt/celt_decoder.c:559:0
      (br_if $while-in19
       (i32.ne
        (local.get $11)
        (local.tee $7
         (i32.add
          (local.get $7)
          (i32.const 1)
         )
        )
       )
      )
     )
     ;;@ celt/celt_decoder.c:561:0
     (br_if $while-in17
      (i32.lt_s
       (local.tee $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (local.get $13)
      )
     )
    )
   )
  )
  ;;@ celt/celt_decoder.c:562:0
  (local.set $7
   (i32.load offset=40
    (local.get $0)
   )
  )
  (if
   ;;@ celt/celt_decoder.c:563:0
   (i32.gt_s
    (local.get $13)
    (i32.const 0)
   )
   (if
    (i32.lt_s
     (local.get $5)
     (local.get $15)
    )
    (block
     (local.set $11
      (i32.const 0)
     )
     (loop $while-in21
      (local.set $14
       (i32.mul
        (local.get $1)
        (local.get $11)
       )
      )
      (local.set $8
       (local.get $5)
      )
      (loop $while-in23
       ;;@ celt/celt_decoder.c:570:0
       (local.set $15
        (i32.add
         (i32.shl
          (local.tee $10
           (i32.load16_s
            (i32.add
             (i32.shl
              (local.get $8)
              (i32.const 1)
             )
             (local.get $18)
            )
           )
          )
          (local.get $2)
         )
         (local.get $14)
        )
       )
       (if
        ;;@ celt/celt_decoder.c:572:0
        (i32.gt_s
         ;;@ celt/celt_decoder.c:571:0
         (local.tee $19
          (i32.shl
           (i32.sub
            (i32.load16_s
             (i32.add
              (i32.shl
               (local.tee $8
                (i32.add
                 (local.get $8)
                 (i32.const 1)
                )
               )
               (i32.const 1)
              )
              (local.get $18)
             )
            )
            (local.get $10)
           )
           (local.get $2)
          )
         )
         (i32.const 0)
        )
        (block
         (local.set $10
          (i32.const 0)
         )
         (loop $while-in25
          ;;@ celt/celt_decoder.c:575:0
          (f32.store
           (i32.add
            (i32.shl
             (i32.add
              (local.get $10)
              (local.get $15)
             )
             (i32.const 2)
            )
            (local.get $16)
           )
           (f32.convert_i32_s
            (i32.shr_s
             ;;@ celt/celt_decoder.c:574:0
             (local.tee $7
              ;;@ celt/bands.c:63:0
              (i32.add
               (i32.mul
                (local.get $7)
                (i32.const 1664525)
               )
               (i32.const 1013904223)
              )
             )
             (i32.const 20)
            )
           )
          )
          ;;@ celt/celt_decoder.c:572:0
          (br_if $while-in25
           (i32.ne
            (local.get $19)
            (local.tee $10
             (i32.add
              (local.get $10)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
       )
       ;;@ celt/celt_decoder.c:577:0
       (drop
        (i32.load offset=36
         (local.get $0)
        )
       )
       (call $_renormalise_vector
        (i32.add
         (i32.shl
          (local.get $15)
          (i32.const 2)
         )
         (local.get $16)
        )
        (local.get $19)
        (f32.const 1)
       )
       ;;@ celt/celt_decoder.c:565:0
       (br_if $while-in23
        (i32.lt_s
         (local.get $8)
         (local.get $22)
        )
       )
      )
      ;;@ celt/celt_decoder.c:563:0
      (br_if $while-in21
       (i32.ne
        (local.get $13)
        (local.tee $11
         (i32.add
          (local.get $11)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
  )
  ;;@ celt/celt_decoder.c:580:0
  (i32.store offset=40
   (local.get $0)
   (local.get $7)
  )
  (local.set $8
   (i32.shl
    (i32.add
     (i32.sub
      (i32.const 2048)
      (local.get $1)
     )
     (i32.shr_u
      (local.get $12)
      (i32.const 1)
     )
    )
    (i32.const 2)
   )
  )
  (local.set $7
   (i32.const 0)
  )
  (loop $while-in27
   ;;@ celt/celt_decoder.c:583:0
   (drop
    (call $_memmove
     (local.tee $12
      (i32.load
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $24)
       )
      )
     )
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $12)
     )
     (local.get $8)
    )
   )
   ;;@ celt/celt_decoder.c:585:0
   (br_if $while-in27
    (i32.lt_s
     (local.tee $7
      (i32.add
       (local.get $7)
       (i32.const 1)
      )
     )
     (local.get $13)
    )
   )
  )
  ;;@ celt/celt_decoder.c:587:0
  (call $_celt_synthesis
   (local.get $6)
   (local.get $16)
   (local.get $17)
   (local.get $20)
   (local.get $5)
   (local.get $22)
   (local.get $13)
   (local.get $13)
   (i32.const 0)
   (local.get $2)
   (i32.load offset=16
    (local.get $0)
   )
   (i32.const 0)
   (i32.load offset=36
    (local.get $0)
   )
  )
  ;;@ celt/celt_decoder.c:588:0
  (call $_llvm_stackrestore
   (local.get $23)
  )
  ;;@ celt/celt_decoder.c:809:0
  (i32.store offset=52
   (local.get $0)
   (i32.add
    (local.get $25)
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_deemphasis (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 f32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f32)
  (local $17 f32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local.set $14
   (global.get $STACKTOP)
  )
  (if
   ;;@ celt/celt_decoder.c:271:0
   (i32.eqz
    (i32.or
     (i32.ne
      (local.get $4)
      (i32.const 1)
     )
     (i32.ne
      (local.get $3)
      (i32.const 2)
     )
    )
   )
   (block
    ;;@ celt/celt_decoder.c:273:0
    (local.set $9
     (f32.load
      (local.get $5)
     )
    )
    (local.set $3
     (i32.load
      (local.get $0)
     )
    )
    (local.set $4
     (i32.load offset=4
      (local.get $0)
     )
    )
    ;;@ celt/celt_decoder.c:239:0
    (local.set $7
     (f32.load
      (local.get $6)
     )
    )
    ;;@ celt/celt_decoder.c:240:0
    (local.set $10
     (f32.load offset=4
      (local.get $6)
     )
    )
    (if
     ;;@ celt/celt_decoder.c:241:0
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
     (block
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in
       ;;@ celt/celt_decoder.c:247:0
       (local.set $7
        (f32.mul
         (local.get $9)
         ;;@ celt/celt_decoder.c:245:0
         (local.tee $16
          (f32.add
           (local.get $7)
           (f32.add
            (f32.load
             (i32.add
              (i32.shl
               (local.get $0)
               (i32.const 2)
              )
              (local.get $3)
             )
            )
            (f32.const 1.0000000031710769e-30)
           )
          )
         )
        )
       )
       ;;@ celt/celt_decoder.c:248:0
       (local.set $10
        (f32.mul
         (local.get $9)
         ;;@ celt/celt_decoder.c:246:0
         (local.tee $17
          (f32.add
           (local.get $10)
           (f32.add
            (f32.load
             (i32.add
              (i32.shl
               (local.get $0)
               (i32.const 2)
              )
              (local.get $4)
             )
            )
            (f32.const 1.0000000031710769e-30)
           )
          )
         )
        )
       )
       ;;@ celt/celt_decoder.c:249:0
       (f32.store
        (i32.add
         (i32.shl
          (local.tee $5
           (i32.shl
            (local.get $0)
            (i32.const 1)
           )
          )
          (i32.const 2)
         )
         (local.get $1)
        )
        (f32.mul
         (local.get $16)
         (f32.const 0.000030517578125)
        )
       )
       ;;@ celt/celt_decoder.c:250:0
       (f32.store
        (i32.add
         (i32.shl
          (i32.or
           (local.get $5)
           (i32.const 1)
          )
          (i32.const 2)
         )
         (local.get $1)
        )
        (f32.mul
         (local.get $17)
         (f32.const 0.000030517578125)
        )
       )
       ;;@ celt/celt_decoder.c:241:0
       (br_if $while-in
        (i32.ne
         (local.get $2)
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    ;;@ celt/celt_decoder.c:252:0
    (f32.store
     (local.get $6)
     (local.get $7)
    )
    ;;@ celt/celt_decoder.c:253:0
    (f32.store offset=4
     (local.get $6)
     (local.get $10)
    )
    (global.set $STACKTOP
     (local.get $14)
    )
    ;;@ celt/celt_decoder.c:358:0
    (return)
   )
  )
  ;;@ celt/celt_decoder.c:281:0
  (local.set $18
   (call $_llvm_stacksave)
  )
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ celt/celt_decoder.c:282:0
  (local.set $10
   (f32.load
    (local.get $5)
   )
  )
  ;;@ celt/celt_decoder.c:283:0
  (local.set $15
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
  )
  (local.set $19
   (i32.gt_s
    (local.tee $12
     (i32.div_s
      (local.get $2)
      (local.get $4)
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.gt_s
    (local.get $4)
    (i32.const 1)
   )
   (block
    (local.set $5
     (i32.const 0)
    )
    (loop $while-in1
     ;;@ celt/celt_decoder.c:288:0
     (local.set $7
      (f32.load
       (local.tee $20
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (local.get $6)
        )
       )
      )
     )
     ;;@ celt/celt_decoder.c:289:0
     (local.set $13
      (i32.load
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
        (local.get $0)
       )
      )
     )
     (if
      ;;@ celt/celt_decoder.c:290:0
      (local.get $15)
      (block
       (local.set $8
        (i32.const 0)
       )
       (loop $while-in3
        ;;@ celt/celt_decoder.c:313:0
        (local.set $7
         (f32.mul
          (local.get $10)
          ;;@ celt/celt_decoder.c:312:0
          (local.tee $9
           (f32.add
            (local.get $7)
            (f32.add
             (f32.load
              (i32.add
               (i32.shl
                (local.get $8)
                (i32.const 2)
               )
               (local.get $13)
              )
             )
             (f32.const 1.0000000031710769e-30)
            )
           )
          )
         )
        )
        ;;@ celt/celt_decoder.c:314:0
        (f32.store
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 2)
          )
          (local.get $11)
         )
         (local.get $9)
        )
        ;;@ celt/celt_decoder.c:310:0
        (br_if $while-in3
         (i32.ne
          (local.tee $8
           (i32.add
            (local.get $8)
            (i32.const 1)
           )
          )
          (local.get $2)
         )
        )
       )
      )
     )
     (local.set $13
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
     ;;@ celt/celt_decoder.c:339:0
     (f32.store
      (local.get $20)
      (local.get $7)
     )
     (if
      (local.get $19)
      (block
       (local.set $8
        (i32.const 0)
       )
       (loop $while-in5
        ;;@ celt/celt_decoder.c:353:0
        (f32.store
         (i32.add
          (i32.shl
           (i32.mul
            (local.get $3)
            (local.get $8)
           )
           (i32.const 2)
          )
          (local.get $13)
         )
         (f32.mul
          (f32.load
           (i32.add
            (i32.shl
             (i32.mul
              (local.get $4)
              (local.get $8)
             )
             (i32.const 2)
            )
            (local.get $11)
           )
          )
          (f32.const 0.000030517578125)
         )
        )
        ;;@ celt/celt_decoder.c:352:0
        (br_if $while-in5
         (i32.ne
          (local.get $12)
          (local.tee $8
           (i32.add
            (local.get $8)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     ;;@ celt/celt_decoder.c:356:0
     (br_if $while-in1
      (i32.lt_s
       (local.tee $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (local.get $3)
      )
     )
    )
   )
   (block
    (local.set $4
     (i32.const 0)
    )
    (loop $while-in7
     ;;@ celt/celt_decoder.c:288:0
     (local.set $7
      (f32.load
       (local.tee $8
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 2)
         )
         (local.get $6)
        )
       )
      )
     )
     ;;@ celt/celt_decoder.c:289:0
     (local.set $11
      (i32.load
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $0)
       )
      )
     )
     ;;@ celt/celt_decoder.c:290:0
     (local.set $12
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
     (if
      (local.get $15)
      (block
       (local.set $5
        (i32.const 0)
       )
       (loop $while-in9
        ;;@ celt/celt_decoder.c:334:0
        (local.set $7
         (f32.mul
          (local.get $10)
          ;;@ celt/celt_decoder.c:333:0
          (local.tee $9
           (f32.add
            (local.get $7)
            (f32.add
             (f32.load
              (i32.add
               (i32.shl
                (local.get $5)
                (i32.const 2)
               )
               (local.get $11)
              )
             )
             (f32.const 1.0000000031710769e-30)
            )
           )
          )
         )
        )
        ;;@ celt/celt_decoder.c:335:0
        (f32.store
         (i32.add
          (i32.shl
           (i32.mul
            (local.get $3)
            (local.get $5)
           )
           (i32.const 2)
          )
          (local.get $12)
         )
         (f32.mul
          (local.get $9)
          (f32.const 0.000030517578125)
         )
        )
        ;;@ celt/celt_decoder.c:331:0
        (br_if $while-in9
         (i32.ne
          (local.tee $5
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          (local.get $2)
         )
        )
       )
      )
     )
     ;;@ celt/celt_decoder.c:339:0
     (f32.store
      (local.get $8)
      (local.get $7)
     )
     ;;@ celt/celt_decoder.c:356:0
     (br_if $while-in7
      (i32.lt_s
       (local.tee $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (local.get $3)
      )
     )
    )
   )
  )
  ;;@ celt/celt_decoder.c:358:0
  (call $_llvm_stackrestore
   (local.get $18)
  )
  (global.set $STACKTOP
   (local.get $14)
  )
 )
 (func $_celt_synthesis (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 f32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local.set $16
   (global.get $STACKTOP)
  )
  ;;@ celt/celt_decoder.c:379:0
  (local.set $18
   (i32.load offset=4
    (local.get $0)
   )
  )
  ;;@ celt/celt_decoder.c:380:0
  (local.set $22
   (i32.load offset=8
    (local.get $0)
   )
  )
  ;;@ celt/celt_decoder.c:381:0
  (local.set $17
   (i32.load offset=44
    (local.get $0)
   )
  )
  (local.set $14
   (i32.shl
    (local.get $17)
    (local.get $9)
   )
  )
  ;;@ celt/celt_decoder.c:382:0
  (local.set $15
   (i32.shl
    (local.get $14)
    (i32.const 2)
   )
  )
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $15)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ celt/celt_decoder.c:383:0
  (local.set $15
   (i32.shl
    (i32.const 1)
    (local.get $9)
   )
  )
  ;;@ celt/celt_decoder.c:385:0
  (local.set $8
   (i32.eqz
    (local.get $8)
   )
  )
  (local.set $19
   (i32.load offset=36
    (local.get $0)
   )
  )
  (local.set $9
   (select
    (local.get $9)
    (i32.const 0)
    (local.get $8)
   )
  )
  (local.set $19
   (i32.sub
    (local.get $19)
    (local.get $9)
   )
  )
  (local.set $17
   (select
    (local.get $14)
    (local.get $17)
    (local.get $8)
   )
  )
  (local.set $9
   (select
    (i32.const 1)
    (local.get $15)
    (local.get $8)
   )
  )
  ;;@ celt/celt_decoder.c:396:0
  (local.set $8
   (i32.eq
    (local.get $7)
    (i32.const 2)
   )
  )
  (local.set $23
   (i32.eq
    (local.get $6)
    (i32.const 1)
   )
  )
  (block $folding-inner0
   (if
    (i32.and
     (local.get $8)
     (local.get $23)
    )
    (block
     ;;@ celt/celt_decoder.c:400:0
     (call $_denormalise_bands
      (local.get $0)
      (local.get $1)
      (local.get $13)
      (local.get $3)
      (local.get $4)
      (local.get $5)
      (local.get $15)
      (local.get $10)
      (local.get $11)
     )
     ;;@ celt/celt_decoder.c:403:0
     (local.set $1
      (i32.load offset=4
       (local.get $2)
      )
     )
     (local.set $3
      (i32.div_s
       (local.get $18)
       (i32.const 2)
      )
     )
     (local.set $3
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
     ;;@ celt/celt_decoder.c:404:0
     (local.set $1
      (i32.shl
       (local.get $14)
       (i32.const 2)
      )
     )
     (drop
      (call $_memcpy
       (local.get $3)
       (local.get $13)
       (local.get $1)
      )
     )
     ;;@ celt/celt_decoder.c:405:0
     (br_if $folding-inner0
      (i32.eqz
       (local.tee $4
        (i32.gt_s
         (local.get $9)
         (i32.const 0)
        )
       )
      )
     )
     (local.set $5
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in
      ;;@ celt/celt_decoder.c:406:0
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $3)
       )
      )
      (local.set $7
       (i32.load
        (local.get $2)
       )
      )
      (local.set $8
       (i32.mul
        (local.get $1)
        (local.get $17)
       )
      )
      (local.set $7
       (i32.add
        (i32.shl
         (local.get $8)
         (i32.const 2)
        )
        (local.get $7)
       )
      )
      (local.set $8
       (i32.load offset=60
        (local.get $0)
       )
      )
      (call $_clt_mdct_backward_c
       (local.get $5)
       (local.get $6)
       (local.get $7)
       (local.get $8)
       (local.get $18)
       (local.get $19)
       (local.get $9)
      )
      ;;@ celt/celt_decoder.c:405:0
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (br_if $while-in
       (i32.ne
        (local.get $1)
        (local.get $9)
       )
      )
     )
     (br_if $folding-inner0
      (i32.eqz
       (local.get $4)
      )
     )
     (local.set $3
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in1
      ;;@ celt/celt_decoder.c:408:0
      (local.set $4
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $13)
       )
      )
      (local.set $5
       (i32.load offset=4
        (local.get $2)
       )
      )
      (local.set $6
       (i32.mul
        (local.get $1)
        (local.get $17)
       )
      )
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $5)
       )
      )
      (local.set $6
       (i32.load offset=60
        (local.get $0)
       )
      )
      (call $_clt_mdct_backward_c
       (local.get $3)
       (local.get $4)
       (local.get $5)
       (local.get $6)
       (local.get $18)
       (local.get $19)
       (local.get $9)
      )
      ;;@ celt/celt_decoder.c:407:0
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (br_if $while-in1
       (i32.ne
        (local.get $1)
        (local.get $9)
       )
      )
     )
     (br $folding-inner0)
    )
   )
   ;;@ celt/celt_decoder.c:409:0
   (local.set $8
    (i32.eq
     (local.get $7)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.eq
     (local.get $6)
     (i32.const 2)
    )
   )
   (if
    (i32.and
     (local.get $6)
     (local.get $8)
    )
    (block
     ;;@ celt/celt_decoder.c:413:0
     (local.set $6
      (i32.load
       (local.get $2)
      )
     )
     (local.set $7
      (i32.div_s
       (local.get $18)
       (i32.const 2)
      )
     )
     (local.set $6
      (i32.add
       (i32.shl
        (local.get $7)
        (i32.const 2)
       )
       (local.get $6)
      )
     )
     ;;@ celt/celt_decoder.c:414:0
     (call $_denormalise_bands
      (local.get $0)
      (local.get $1)
      (local.get $13)
      (local.get $3)
      (local.get $4)
      (local.get $5)
      (local.get $15)
      (local.get $10)
      (local.get $11)
     )
     ;;@ celt/celt_decoder.c:417:0
     (local.set $1
      (i32.add
       (i32.shl
        (local.get $14)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
     (local.set $3
      (i32.add
       (i32.shl
        (local.get $22)
        (i32.const 2)
       )
       (local.get $3)
      )
     )
     (call $_denormalise_bands
      (local.get $0)
      (local.get $1)
      (local.get $6)
      (local.get $3)
      (local.get $4)
      (local.get $5)
      (local.get $15)
      (local.get $10)
      (local.get $11)
     )
     (if
      ;;@ celt/celt_decoder.c:419:0
      (i32.gt_s
       (local.get $14)
       (i32.const 0)
      )
      (block
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in3
        ;;@ celt/celt_decoder.c:420:0
        (local.set $3
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $13)
         )
        )
        (local.set $20
         (f32.load
          (local.get $3)
         )
        )
        (local.set $20
         (f32.mul
          (local.get $20)
          (f32.const 0.5)
         )
        )
        (local.set $4
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $6)
         )
        )
        (local.set $24
         (f32.load
          (local.get $4)
         )
        )
        (local.set $24
         (f32.mul
          (local.get $24)
          (f32.const 0.5)
         )
        )
        (local.set $20
         (f32.add
          (local.get $20)
          (local.get $24)
         )
        )
        (f32.store
         (local.get $3)
         (local.get $20)
        )
        ;;@ celt/celt_decoder.c:419:0
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br_if $while-in3
         (i32.ne
          (local.get $1)
          (local.get $14)
         )
        )
       )
      )
     )
     ;;@ celt/celt_decoder.c:421:0
     (br_if $folding-inner0
      (i32.le_s
       (local.get $9)
       (i32.const 0)
      )
     )
     (local.set $3
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in5
      ;;@ celt/celt_decoder.c:422:0
      (local.set $4
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $13)
       )
      )
      (local.set $5
       (i32.load
        (local.get $2)
       )
      )
      (local.set $6
       (i32.mul
        (local.get $1)
        (local.get $17)
       )
      )
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $5)
       )
      )
      (local.set $6
       (i32.load offset=60
        (local.get $0)
       )
      )
      (call $_clt_mdct_backward_c
       (local.get $3)
       (local.get $4)
       (local.get $5)
       (local.get $6)
       (local.get $18)
       (local.get $19)
       (local.get $9)
      )
      ;;@ celt/celt_decoder.c:421:0
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (br_if $while-in5
       (i32.ne
        (local.get $1)
        (local.get $9)
       )
      )
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.le_s
     (local.get $9)
     (i32.const 0)
    )
    (block
     (local.set $2
      (i32.const 0)
     )
     (loop $while-in7
      ;;@ celt/celt_decoder.c:426:0
      (local.set $6
       (i32.mul
        (local.get $2)
        (local.get $14)
       )
      )
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
      (local.set $8
       (i32.mul
        (local.get $2)
        (local.get $22)
       )
      )
      (local.set $8
       (i32.add
        (i32.shl
         (local.get $8)
         (i32.const 2)
        )
        (local.get $3)
       )
      )
      (call $_denormalise_bands
       (local.get $0)
       (local.get $6)
       (local.get $13)
       (local.get $8)
       (local.get $4)
       (local.get $5)
       (local.get $15)
       (local.get $10)
       (local.get $11)
      )
      ;;@ celt/celt_decoder.c:430:0
      (local.set $2
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (br_if $while-in7
       (i32.lt_s
        (local.get $2)
        (local.get $7)
       )
      )
     )
     (br $folding-inner0)
    )
   )
   (local.set $23
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
   (local.set $6
    (i32.const 0)
   )
   (loop $while-in9
    ;;@ celt/celt_decoder.c:426:0
    (local.set $8
     (i32.mul
      (local.get $6)
      (local.get $14)
     )
    )
    (local.set $8
     (i32.add
      (i32.shl
       (local.get $8)
       (i32.const 2)
      )
      (local.get $1)
     )
    )
    (local.set $21
     (i32.mul
      (local.get $6)
      (local.get $22)
     )
    )
    (local.set $21
     (i32.add
      (i32.shl
       (local.get $21)
       (i32.const 2)
      )
      (local.get $3)
     )
    )
    (call $_denormalise_bands
     (local.get $0)
     (local.get $8)
     (local.get $13)
     (local.get $21)
     (local.get $4)
     (local.get $5)
     (local.get $15)
     (local.get $10)
     (local.get $11)
    )
    (local.set $21
     (i32.add
      (i32.shl
       (local.get $6)
       (i32.const 2)
      )
      (local.get $2)
     )
    )
    (local.set $8
     (i32.const 0)
    )
    (loop $while-in11
     ;;@ celt/celt_decoder.c:429:0
     (local.set $27
      (i32.add
       (i32.shl
        (local.get $8)
        (i32.const 2)
       )
       (local.get $13)
      )
     )
     (local.set $25
      (i32.load
       (local.get $21)
      )
     )
     (local.set $26
      (i32.mul
       (local.get $8)
       (local.get $17)
      )
     )
     (local.set $25
      (i32.add
       (i32.shl
        (local.get $26)
        (i32.const 2)
       )
       (local.get $25)
      )
     )
     (local.set $26
      (i32.load offset=60
       (local.get $0)
      )
     )
     (call $_clt_mdct_backward_c
      (local.get $23)
      (local.get $27)
      (local.get $25)
      (local.get $26)
      (local.get $18)
      (local.get $19)
      (local.get $9)
     )
     ;;@ celt/celt_decoder.c:428:0
     (local.set $8
      (i32.add
       (local.get $8)
       (i32.const 1)
      )
     )
     (br_if $while-in11
      (i32.ne
       (local.get $8)
       (local.get $9)
      )
     )
    )
    ;;@ celt/celt_decoder.c:430:0
    (local.set $6
     (i32.add
      (local.get $6)
      (i32.const 1)
     )
    )
    (br_if $while-in9
     (i32.lt_s
      (local.get $6)
      (local.get $7)
     )
    )
   )
   (global.set $STACKTOP
    (local.get $16)
   )
   ;;@ celt/celt_decoder.c:439:0
   (return)
  )
  (global.set $STACKTOP
   (local.get $16)
  )
 )
 (func $_encode_pulses (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (if
   ;;@ celt/cwrs.c:459:0
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 41952)
    (i32.const 41975)
    (i32.const 459)
   )
  )
  (if
   ;;@ celt/cwrs.c:444:0
   (i32.le_s
    (local.get $1)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 41987)
    (i32.const 41975)
    (i32.const 444)
   )
  )
  ;;@ celt/cwrs.c:445:0
  (local.set $8
   (i32.add
    (local.get $1)
    (i32.const -1)
   )
  )
  ;;@ celt/cwrs.c:446:0
  (local.set $9
   (i32.add
    (i32.shl
     (local.get $8)
     (i32.const 2)
    )
    (local.get $0)
   )
  )
  (local.set $6
   (i32.load
    (local.get $9)
   )
  )
  (local.set $9
   (i32.shr_u
    (local.get $6)
    (i32.const 31)
   )
  )
  ;;@ celt/cwrs.c:447:0
  (local.set $10
   (i32.gt_s
    (local.get $6)
    (i32.const -1)
   )
  )
  (local.set $5
   (i32.sub
    (i32.const 0)
    (local.get $6)
   )
  )
  (local.set $6
   (select
    (local.get $6)
    (local.get $5)
    (local.get $10)
   )
  )
  (loop $while-in
   ;;@ celt/cwrs.c:449:0
   (local.set $10
    (i32.add
     (local.get $8)
     (i32.const -1)
    )
   )
   ;;@ celt/cwrs.c:450:0
   (local.set $5
    (i32.sub
     (local.get $1)
     (local.get $10)
    )
   )
   (local.set $4
    (i32.lt_s
     (local.get $5)
     (local.get $6)
    )
   )
   (local.set $4
    (select
     (local.get $5)
     (local.get $6)
     (local.get $4)
    )
   )
   (local.set $4
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
     (i32.const 1280)
    )
   )
   (local.set $4
    (i32.load
     (local.get $4)
    )
   )
   (local.set $7
    (i32.gt_s
     (local.get $5)
     (local.get $6)
    )
   )
   (local.set $7
    (select
     (local.get $5)
     (local.get $6)
     (local.get $7)
    )
   )
   (local.set $4
    (i32.add
     (i32.shl
      (local.get $7)
      (i32.const 2)
     )
     (local.get $4)
    )
   )
   (local.set $4
    (i32.load
     (local.get $4)
    )
   )
   (local.set $9
    (i32.add
     (local.get $4)
     (local.get $9)
    )
   )
   ;;@ celt/cwrs.c:451:0
   (local.set $4
    (i32.add
     (i32.shl
      (local.get $10)
      (i32.const 2)
     )
     (local.get $0)
    )
   )
   (local.set $4
    (i32.load
     (local.get $4)
    )
   )
   (local.set $7
    (i32.gt_s
     (local.get $4)
     (i32.const -1)
    )
   )
   (local.set $11
    (i32.sub
     (i32.const 0)
     (local.get $4)
    )
   )
   (local.set $7
    (select
     (local.get $4)
     (local.get $11)
     (local.get $7)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (local.get $7)
    )
   )
   ;;@ celt/cwrs.c:452:0
   (local.set $7
    (i32.lt_s
     (local.get $4)
     (i32.const 0)
    )
   )
   (local.set $4
    (i32.add
     (local.get $6)
     (i32.const 1)
    )
   )
   (if
    (local.get $7)
    (block
     (local.set $7
      (i32.gt_s
       (local.get $5)
       (local.get $6)
      )
     )
     (local.set $7
      (select
       (local.get $4)
       (local.get $5)
       (local.get $7)
      )
     )
     (local.set $7
      (i32.add
       (i32.shl
        (local.get $7)
        (i32.const 2)
       )
       (i32.const 1280)
      )
     )
     (local.set $11
      (i32.gt_s
       (local.get $5)
       (local.get $4)
      )
     )
     (local.set $5
      (select
       (local.get $5)
       (local.get $4)
       (local.get $11)
      )
     )
     (local.set $4
      (i32.load
       (local.get $7)
      )
     )
     (local.set $5
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $4)
      )
     )
     (local.set $5
      (i32.load
       (local.get $5)
      )
     )
     (local.set $9
      (i32.add
       (local.get $5)
       (local.get $9)
      )
     )
    )
   )
   (if
    ;;@ celt/cwrs.c:454:0
    (i32.gt_s
     (local.get $8)
     (i32.const 1)
    )
    (block
     (local.set $8
      (local.get $10)
     )
     (br $while-in)
    )
   )
  )
  ;;@ celt/cwrs.c:460:0
  (local.set $0
   (i32.lt_s
    (local.get $1)
    (local.get $2)
   )
  )
  (local.set $0
   (select
    (local.get $1)
    (local.get $2)
    (local.get $0)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 2)
    )
    (i32.const 1280)
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (local.set $8
   (i32.gt_s
    (local.get $1)
    (local.get $2)
   )
  )
  (local.set $8
   (select
    (local.get $1)
    (local.get $2)
    (local.get $8)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $8)
     (i32.const 2)
    )
    (local.get $0)
   )
  )
  (local.set $8
   (i32.load
    (local.get $0)
   )
  )
  (local.set $0
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.gt_s
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $2
   (select
    (local.get $1)
    (local.get $0)
    (local.get $2)
   )
  )
  (local.set $2
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 2)
    )
    (i32.const 1280)
   )
  )
  (local.set $2
   (i32.load
    (local.get $2)
   )
  )
  (local.set $6
   (i32.lt_s
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $0
   (select
    (local.get $1)
    (local.get $0)
    (local.get $6)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 2)
    )
    (local.get $2)
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (local.set $0
   (i32.add
    (local.get $0)
    (local.get $8)
   )
  )
  (call $_ec_enc_uint
   (local.get $3)
   (local.get $9)
   (local.get $0)
  )
 )
 (func $_decode_pulses (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result f32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  ;;@ celt/cwrs.c:540:0
  (local.set $5
   (i32.lt_s
    (local.get $1)
    (local.get $2)
   )
  )
  (local.set $5
   (select
    (local.get $1)
    (local.get $2)
    (local.get $5)
   )
  )
  (local.set $5
   (i32.add
    (i32.shl
     (local.get $5)
     (i32.const 2)
    )
    (i32.const 1280)
   )
  )
  (local.set $5
   (i32.load
    (local.get $5)
   )
  )
  (local.set $4
   (i32.gt_s
    (local.get $1)
    (local.get $2)
   )
  )
  (local.set $4
   (select
    (local.get $1)
    (local.get $2)
    (local.get $4)
   )
  )
  (local.set $5
   (i32.add
    (i32.shl
     (local.get $4)
     (i32.const 2)
    )
    (local.get $5)
   )
  )
  (local.set $4
   (i32.load
    (local.get $5)
   )
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $6
   (i32.gt_s
    (local.get $5)
    (local.get $1)
   )
  )
  (local.set $6
   (select
    (local.get $1)
    (local.get $5)
    (local.get $6)
   )
  )
  (local.set $6
   (i32.add
    (i32.shl
     (local.get $6)
     (i32.const 2)
    )
    (i32.const 1280)
   )
  )
  (local.set $6
   (i32.load
    (local.get $6)
   )
  )
  (local.set $7
   (i32.lt_s
    (local.get $5)
    (local.get $1)
   )
  )
  (local.set $5
   (select
    (local.get $1)
    (local.get $5)
    (local.get $7)
   )
  )
  (local.set $5
   (i32.add
    (i32.shl
     (local.get $5)
     (i32.const 2)
    )
    (local.get $6)
   )
  )
  (local.set $5
   (i32.load
    (local.get $5)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (local.get $5)
   )
  )
  (local.set $3
   (call $_ec_dec_uint
    (local.get $3)
    (local.get $5)
   )
  )
  (if
   ;;@ celt/cwrs.c:469:0
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 41952)
    (i32.const 41975)
    (i32.const 469)
   )
  )
  (if
   ;;@ celt/cwrs.c:470:0
   (i32.le_s
    (local.get $1)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 42011)
    (i32.const 41975)
    (i32.const 470)
   )
  )
  (if
   ;;@ celt/cwrs.c:471:0
   (i32.eq
    (local.get $1)
    (i32.const 2)
   )
   (block
    (local.set $5
     (local.get $0)
    )
    (local.set $0
     (local.get $3)
    )
   )
   (block
    (local.set $5
     (local.get $0)
    )
    (local.set $0
     (local.get $3)
    )
    (loop $while-in
     (if
      ;;@ celt/cwrs.c:474:0
      (i32.lt_s
       (local.get $2)
       (local.get $1)
      )
      (block $do-once
       ;;@ celt/cwrs.c:499:0
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 2)
         )
         (i32.const 1280)
        )
       )
       (local.set $3
        (i32.load
         (local.get $3)
        )
       )
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $3)
        )
       )
       (local.set $4
        (i32.load
         (local.get $3)
        )
       )
       ;;@ celt/cwrs.c:500:0
       (local.set $6
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $6)
          (i32.const 2)
         )
         (i32.const 1280)
        )
       )
       (local.set $3
        (i32.load
         (local.get $3)
        )
       )
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $3)
        )
       )
       (local.set $3
        (i32.load
         (local.get $3)
        )
       )
       ;;@ celt/cwrs.c:501:0
       (local.set $7
        (i32.ge_u
         (local.get $0)
         (local.get $4)
        )
       )
       (local.set $10
        (i32.lt_u
         (local.get $0)
         (local.get $3)
        )
       )
       (if
        (i32.and
         (local.get $7)
         (local.get $10)
        )
        (block
         ;;@ celt/cwrs.c:502:0
         (local.set $0
          (i32.sub
           (local.get $0)
           (local.get $4)
          )
         )
         ;;@ celt/cwrs.c:503:0
         (i32.store
          (local.get $5)
          (i32.const 0)
         )
         (br $do-once)
        )
       )
       ;;@ celt/cwrs.c:507:0
       (local.set $4
        (i32.ge_u
         (local.get $0)
         (local.get $3)
        )
       )
       (local.set $4
        (i32.shr_s
         (i32.shl
          (local.get $4)
          (i32.const 31)
         )
         (i32.const 31)
        )
       )
       ;;@ celt/cwrs.c:508:0
       (local.set $3
        (i32.and
         (local.get $3)
         (local.get $4)
        )
       )
       (local.set $0
        (i32.sub
         (local.get $0)
         (local.get $3)
        )
       )
       (loop $while-in1
        ;;@ celt/cwrs.c:511:0
        (local.set $3
         (i32.add
          (local.get $2)
          (i32.const -1)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $3)
           (i32.const 2)
          )
          (i32.const 1280)
         )
        )
        (local.set $7
         (i32.load
          (local.get $7)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $7)
         )
        )
        (local.set $7
         (i32.load
          (local.get $7)
         )
        )
        (if
         ;;@ celt/cwrs.c:512:0
         (i32.lt_u
          (local.get $0)
          (local.get $7)
         )
         (block
          (local.set $2
           (local.get $3)
          )
          (br $while-in1)
         )
        )
       )
       ;;@ celt/cwrs.c:513:0
       (local.set $0
        (i32.sub
         (local.get $0)
         (local.get $7)
        )
       )
       ;;@ celt/cwrs.c:514:0
       (local.set $6
        (i32.add
         (local.get $4)
         (local.get $6)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $6)
         (local.get $2)
        )
       )
       (local.set $2
        (i32.xor
         (local.get $2)
         (local.get $4)
        )
       )
       (local.set $4
        (i32.and
         (local.get $2)
         (i32.const 65535)
        )
       )
       ;;@ celt/cwrs.c:515:0
       (local.set $2
        (i32.shl
         (local.get $2)
         (i32.const 16)
        )
       )
       (local.set $2
        (i32.shr_s
         (local.get $2)
         (i32.const 16)
        )
       )
       (i32.store
        (local.get $5)
        (local.get $2)
       )
       ;;@ celt/cwrs.c:516:0
       (local.set $8
        (f32.convert_i32_s
         (i32.shr_s
          (i32.shl
           (local.get $4)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
       )
       (local.set $8
        (f32.mul
         (local.get $8)
         (local.get $8)
        )
       )
       (local.set $9
        (f32.add
         (local.get $9)
         (local.get $8)
        )
       )
       (local.set $2
        (local.get $3)
       )
      )
      (block
       ;;@ celt/cwrs.c:476:0
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (i32.const 1280)
        )
       )
       (local.set $7
        (i32.load
         (local.get $3)
        )
       )
       ;;@ celt/cwrs.c:478:0
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (local.get $7)
        )
       )
       (local.set $3
        (i32.load
         (local.get $3)
        )
       )
       ;;@ celt/cwrs.c:479:0
       (local.set $4
        (i32.ge_u
         (local.get $0)
         (local.get $3)
        )
       )
       (local.set $10
        (i32.shr_s
         (i32.shl
          (local.get $4)
          (i32.const 31)
         )
         (i32.const 31)
        )
       )
       ;;@ celt/cwrs.c:480:0
       (local.set $3
        (i32.and
         (local.get $3)
         (local.get $10)
        )
       )
       (local.set $6
        (i32.sub
         (local.get $0)
         (local.get $3)
        )
       )
       ;;@ celt/cwrs.c:483:0
       (local.set $0
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $7)
        )
       )
       (local.set $0
        (i32.load
         (local.get $0)
        )
       )
       (if
        ;;@ celt/cwrs.c:484:0
        (i32.gt_u
         (local.get $0)
         (local.get $6)
        )
        (block
         (local.set $3
          (local.get $1)
         )
         (loop $while-in3
          ;;@ celt/cwrs.c:487:0
          (local.set $3
           (i32.add
            (local.get $3)
            (i32.const -1)
           )
          )
          (local.set $0
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
            (i32.const 1280)
           )
          )
          (local.set $0
           (i32.load
            (local.get $0)
           )
          )
          (local.set $0
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $0)
           )
          )
          (local.set $4
           (i32.load
            (local.get $0)
           )
          )
          ;;@ celt/cwrs.c:488:0
          (br_if $while-in3
           (i32.gt_u
            (local.get $4)
            (local.get $6)
           )
          )
         )
        )
        (block
         (local.set $0
          (local.get $2)
         )
         (local.set $3
          (loop $while-in5 (result i32)
           (local.set $4
            (i32.load
             (i32.add
              (i32.shl
               (local.get $0)
               (i32.const 2)
              )
              (local.get $7)
             )
            )
           )
           ;;@ celt/cwrs.c:490:0
           (local.set $11
            (i32.gt_u
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $3
            (i32.add
             (local.get $0)
             (i32.const -1)
            )
           )
           (if (result i32)
            (local.get $11)
            (block
             (local.set $0
              (local.get $3)
             )
             (br $while-in5)
            )
            (local.get $0)
           )
          )
         )
        )
       )
       ;;@ celt/cwrs.c:491:0
       (local.set $0
        (i32.sub
         (local.get $6)
         (local.get $4)
        )
       )
       ;;@ celt/cwrs.c:492:0
       (local.set $2
        (i32.add
         (local.get $2)
         (local.get $10)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $2)
         (local.get $3)
        )
       )
       (local.set $2
        (i32.xor
         (local.get $2)
         (local.get $10)
        )
       )
       (local.set $4
        (i32.and
         (local.get $2)
         (i32.const 65535)
        )
       )
       ;;@ celt/cwrs.c:493:0
       (local.set $2
        (i32.shl
         (local.get $2)
         (i32.const 16)
        )
       )
       (local.set $2
        (i32.shr_s
         (local.get $2)
         (i32.const 16)
        )
       )
       (i32.store
        (local.get $5)
        (local.get $2)
       )
       ;;@ celt/cwrs.c:494:0
       (local.set $8
        (f32.convert_i32_s
         (i32.shr_s
          (i32.shl
           (local.get $4)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
       )
       (local.set $8
        (f32.mul
         (local.get $8)
         (local.get $8)
        )
       )
       (local.set $9
        (f32.add
         (local.get $9)
         (local.get $8)
        )
       )
       (local.set $2
        (local.get $3)
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 4)
      )
     )
     ;;@ celt/cwrs.c:519:0
     (local.set $3
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (if
      ;;@ celt/cwrs.c:471:0
      (i32.gt_s
       (local.get $1)
       (i32.const 3)
      )
      (block
       (local.set $1
        (local.get $3)
       )
       (br $while-in)
      )
     )
    )
   )
  )
  ;;@ celt/cwrs.c:522:0
  (local.set $1
   (i32.shl
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.or
    (local.get $1)
    (i32.const 1)
   )
  )
  ;;@ celt/cwrs.c:523:0
  (local.set $1
   (i32.ge_u
    (local.get $0)
    (local.get $3)
   )
  )
  (local.set $1
   (i32.shr_s
    (i32.shl
     (local.get $1)
     (i32.const 31)
    )
    (i32.const 31)
   )
  )
  ;;@ celt/cwrs.c:524:0
  (local.set $3
   (i32.and
    (local.get $1)
    (local.get $3)
   )
  )
  (local.set $3
   (i32.sub
    (local.get $0)
    (local.get $3)
   )
  )
  ;;@ celt/cwrs.c:526:0
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.shr_u
    (local.get $4)
    (i32.const 1)
   )
  )
  ;;@ celt/cwrs.c:527:0
  (local.set $6
   (i32.eqz
    (local.get $0)
   )
  )
  (local.set $4
   (i32.and
    (local.get $4)
    (i32.const -2)
   )
  )
  (local.set $4
   (i32.add
    (local.get $4)
    (i32.const -1)
   )
  )
  (local.set $4
   (select
    (i32.const 0)
    (local.get $4)
    (local.get $6)
   )
  )
  (local.set $3
   (i32.sub
    (local.get $3)
    (local.get $4)
   )
  )
  ;;@ celt/cwrs.c:528:0
  (local.set $2
   (i32.add
    (local.get $1)
    (local.get $2)
   )
  )
  (local.set $2
   (i32.sub
    (local.get $2)
    (local.get $0)
   )
  )
  (local.set $1
   (i32.xor
    (local.get $1)
    (local.get $2)
   )
  )
  (local.set $2
   (i32.and
    (local.get $1)
    (i32.const 65535)
   )
  )
  ;;@ celt/cwrs.c:529:0
  (local.set $1
   (i32.shl
    (local.get $1)
    (i32.const 16)
   )
  )
  (local.set $1
   (i32.shr_s
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $1)
  )
  ;;@ celt/cwrs.c:530:0
  (local.set $8
   (f32.convert_i32_s
    (i32.shr_s
     (i32.shl
      (local.get $2)
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
  )
  (local.set $8
   (f32.mul
    (local.get $8)
    (local.get $8)
   )
  )
  (local.set $8
   (f32.add
    (local.get $9)
    (local.get $8)
   )
  )
  ;;@ celt/cwrs.c:532:0
  (local.set $1
   (i32.sub
    (i32.const 0)
    (local.get $3)
   )
  )
  ;;@ celt/cwrs.c:533:0
  (local.set $0
   (i32.sub
    (local.get $0)
    (local.get $3)
   )
  )
  (local.set $0
   (i32.xor
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $1
   (i32.and
    (local.get $0)
    (i32.const 65535)
   )
  )
  ;;@ celt/cwrs.c:534:0
  (local.set $0
   (i32.shl
    (local.get $0)
    (i32.const 16)
   )
  )
  (local.set $0
   (i32.shr_s
    (local.get $0)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $5)
   (local.get $0)
  )
  ;;@ celt/cwrs.c:535:0
  (local.set $9
   (f32.convert_i32_s
    (i32.shr_s
     (i32.shl
      (local.get $1)
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
  )
  (local.set $9
   (f32.mul
    (local.get $9)
    (local.get $9)
   )
  )
  (local.set $9
   (f32.add
    (local.get $8)
    (local.get $9)
   )
  )
  ;;@ celt/cwrs.c:540:0
  (local.get $9)
 )
 (func $_ec_tell_frac (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  ;;@ celt/entcode.c:77:0
  (local.set $1
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $4
   (i32.shl
    (local.get $1)
    (i32.const 3)
   )
  )
  ;;@ celt/entcode.c:78:0
  (local.set $0
   (i32.load offset=28
    (local.get $0)
   )
  )
  (local.set $1
   (i32.clz
    (local.get $0)
   )
  )
  (local.set $1
   (i32.sub
    (i32.const 32)
    (local.get $1)
   )
  )
  ;;@ celt/entcode.c:79:0
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const -16)
   )
  )
  (local.set $0
   (i32.shr_u
    (local.get $0)
    (local.get $2)
   )
  )
  ;;@ celt/entcode.c:80:0
  (local.set $2
   (i32.shr_u
    (local.get $0)
    (i32.const 12)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const -8)
   )
  )
  ;;@ celt/entcode.c:81:0
  (local.set $3
   (i32.add
    (i32.shl
     (local.get $3)
     (i32.const 2)
    )
    (i32.const 6432)
   )
  )
  (local.set $3
   (i32.load
    (local.get $3)
   )
  )
  (local.set $1
   (i32.mul
    (local.get $1)
    (i32.const -8)
   )
  )
  (local.set $2
   (i32.sub
    (i32.const 8)
    (local.get $2)
   )
  )
  (local.set $0
   (i32.shr_s
    (i32.shl
     (i32.gt_u
      (local.get $0)
      (local.get $3)
     )
     (i32.const 31)
    )
    (i32.const 31)
   )
  )
  (local.set $1
   (i32.add
    (local.get $1)
    (local.get $4)
   )
  )
  ;;@ celt/entcode.c:82:0
  (local.set $0
   (i32.add
    (local.get $0)
    (local.get $1)
   )
  )
  ;;@ celt/entcode.c:83:0
  (local.set $0
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (local.get $0)
 )
 (func $_ec_dec_init (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  ;;@ celt/entdec.c:120:0
  (i32.store
   (local.get $0)
   (local.get $1)
  )
  ;;@ celt/entdec.c:121:0
  (i32.store offset=4
   (local.get $0)
   (local.get $2)
  )
  ;;@ celt/entdec.c:122:0
  (i32.store offset=8
   (local.get $0)
   (i32.const 0)
  )
  ;;@ celt/entdec.c:123:0
  (i32.store offset=12
   (local.get $0)
   (i32.const 0)
  )
  ;;@ celt/entdec.c:124:0
  (i32.store offset=16
   (local.get $0)
   (i32.const 0)
  )
  ;;@ celt/entdec.c:128:0
  (i32.store offset=20
   (local.get $0)
   (i32.const 9)
  )
  ;;@ celt/entdec.c:130:0
  (i32.store offset=24
   (local.get $0)
   (i32.const 0)
  )
  ;;@ celt/entdec.c:131:0
  (i32.store offset=28
   (local.get $0)
   (i32.const 128)
  )
  (local.set $4
   (if (result i32)
    ;;@ celt/entdec.c:92:0
    (local.get $2)
    (block (result i32)
     (i32.store offset=24
      (local.get $0)
      (i32.const 1)
     )
     (local.set $5
      (i32.load8_u
       (local.get $1)
      )
     )
     (local.set $6
      (i32.and
       (local.get $5)
       (i32.const 255)
      )
     )
     (i32.const 1)
    )
    (i32.const 0)
   )
  )
  ;;@ celt/entdec.c:132:0
  (i32.store offset=40
   (local.get $0)
   (local.get $6)
  )
  (local.set $5
   (i32.shr_u
    (local.get $6)
    (i32.const 1)
   )
  )
  ;;@ celt/entdec.c:133:0
  (local.set $8
   (i32.xor
    (local.get $5)
    (i32.const 127)
   )
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $8)
  )
  ;;@ celt/entdec.c:134:0
  (i32.store offset=44
   (local.get $0)
   (i32.const 0)
  )
  ;;@ celt/entdec.c:106:0
  (i32.store offset=20
   (local.get $0)
   (i32.const 17)
  )
  ;;@ celt/entdec.c:107:0
  (i32.store offset=28
   (local.get $0)
   (i32.const 32768)
  )
  ;;@ celt/entdec.c:92:0
  (local.set $5
   (i32.lt_u
    (local.get $4)
    (local.get $2)
   )
  )
  (local.set $3
   (i32.add
    (local.get $4)
    (i32.const 1)
   )
  )
  (if
   (local.get $5)
   (block
    (local.set $5
     (i32.add
      (local.get $1)
      (local.get $4)
     )
    )
    (i32.store offset=24
     (local.get $0)
     (local.get $3)
    )
    (local.set $5
     (i32.load8_u
      (local.get $5)
     )
    )
    (local.set $7
     (i32.and
      (local.get $5)
      (i32.const 255)
     )
    )
    (local.set $5
     (i32.or
      (local.get $4)
      (i32.const 2)
     )
    )
   )
   (block
    (local.set $5
     (local.get $3)
    )
    (local.set $3
     (local.get $4)
    )
   )
  )
  ;;@ celt/entdec.c:111:0
  (i32.store offset=40
   (local.get $0)
   (local.get $7)
  )
  ;;@ celt/entdec.c:113:0
  (local.set $4
   (i32.shl
    (local.get $6)
    (i32.const 8)
   )
  )
  (local.set $4
   (i32.or
    (local.get $4)
    (local.get $7)
   )
  )
  (local.set $4
   (i32.shr_u
    (local.get $4)
    (i32.const 1)
   )
  )
  ;;@ celt/entdec.c:115:0
  (local.set $6
   (i32.shl
    (local.get $8)
    (i32.const 8)
   )
  )
  (local.set $4
   (i32.and
    (local.get $4)
    (i32.const 255)
   )
  )
  (local.set $4
   (i32.or
    (local.get $4)
    (local.get $6)
   )
  )
  (local.set $8
   (i32.xor
    (local.get $4)
    (i32.const 255)
   )
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $8)
  )
  ;;@ celt/entdec.c:106:0
  (i32.store offset=20
   (local.get $0)
   (i32.const 25)
  )
  ;;@ celt/entdec.c:107:0
  (i32.store offset=28
   (local.get $0)
   (i32.const 8388608)
  )
  (if
   ;;@ celt/entdec.c:92:0
   (i32.lt_u
    (local.get $3)
    (local.get $2)
   )
   (block
    (local.set $3
     (i32.add
      (local.get $1)
      (local.get $3)
     )
    )
    (i32.store offset=24
     (local.get $0)
     (local.get $5)
    )
    (local.set $3
     (i32.load8_u
      (local.get $3)
     )
    )
    (local.set $4
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
    )
    (local.set $6
     (i32.add
      (local.get $5)
      (i32.const 1)
     )
    )
   )
   (block
    (local.set $6
     (local.get $5)
    )
    (local.set $4
     (i32.const 0)
    )
    (local.set $5
     (local.get $3)
    )
   )
  )
  ;;@ celt/entdec.c:111:0
  (i32.store offset=40
   (local.get $0)
   (local.get $4)
  )
  ;;@ celt/entdec.c:113:0
  (local.set $3
   (i32.shl
    (local.get $7)
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.or
    (local.get $3)
    (local.get $4)
   )
  )
  (local.set $3
   (i32.shr_u
    (local.get $3)
    (i32.const 1)
   )
  )
  ;;@ celt/entdec.c:115:0
  (local.set $7
   (i32.shl
    (local.get $8)
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.and
    (local.get $3)
    (i32.const 255)
   )
  )
  (local.set $7
   (i32.and
    (local.get $7)
    (i32.const 2147483392)
   )
  )
  (local.set $3
   (i32.or
    (local.get $3)
    (local.get $7)
   )
  )
  (local.set $3
   (i32.xor
    (local.get $3)
    (i32.const 255)
   )
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $3)
  )
  ;;@ celt/entdec.c:106:0
  (i32.store offset=20
   (local.get $0)
   (i32.const 33)
  )
  ;;@ celt/entdec.c:107:0
  (i32.store offset=28
   (local.get $0)
   (i32.const -2147483648)
  )
  (if
   ;;@ celt/entdec.c:92:0
   (i32.ge_u
    (local.get $5)
    (local.get $2)
   )
   (block
    ;;@ celt/entdec.c:111:0
    (i32.store offset=40
     (local.get $0)
     (i32.const 0)
    )
    ;;@ celt/entdec.c:113:0
    (local.set $1
     (i32.shl
      (local.get $4)
      (i32.const 8)
     )
    )
    (local.set $1
     (i32.shr_u
      (local.get $1)
      (i32.const 1)
     )
    )
    ;;@ celt/entdec.c:115:0
    (local.set $2
     (i32.shl
      (local.get $3)
      (i32.const 8)
     )
    )
    (local.set $1
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
    )
    (local.set $2
     (i32.and
      (local.get $2)
      (i32.const 2147483392)
     )
    )
    (local.set $1
     (i32.or
      (local.get $1)
      (local.get $2)
     )
    )
    (local.set $1
     (i32.xor
      (local.get $1)
      (i32.const 255)
     )
    )
    (i32.store offset=32
     (local.get $0)
     (local.get $1)
    )
    ;;@ celt/entdec.c:137:0
    (return)
   )
  )
  ;;@ celt/entdec.c:92:0
  (local.set $1
   (i32.add
    (local.get $1)
    (local.get $5)
   )
  )
  (i32.store offset=24
   (local.get $0)
   (local.get $6)
  )
  (local.set $1
   (i32.load8_u
    (local.get $1)
   )
  )
  (local.set $1
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
  )
  ;;@ celt/entdec.c:111:0
  (i32.store offset=40
   (local.get $0)
   (local.get $1)
  )
  ;;@ celt/entdec.c:113:0
  (local.set $2
   (i32.shl
    (local.get $4)
    (i32.const 8)
   )
  )
  (local.set $1
   (i32.or
    (local.get $1)
    (local.get $2)
   )
  )
  (local.set $1
   (i32.shr_u
    (local.get $1)
    (i32.const 1)
   )
  )
  ;;@ celt/entdec.c:115:0
  (local.set $2
   (i32.shl
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $1
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
  )
  (local.set $2
   (i32.and
    (local.get $2)
    (i32.const 2147483392)
   )
  )
  (local.set $1
   (i32.or
    (local.get $1)
    (local.get $2)
   )
  )
  (local.set $1
   (i32.xor
    (local.get $1)
    (i32.const 255)
   )
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_ec_decode (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  ;;@ celt/entdec.c:141:0
  (local.set $2
   (i32.load offset=28
    (local.get $0)
   )
  )
  ;;@ ./celt/entcode.h:136:0
  (local.set $2
   (i32.div_u
    (local.get $2)
    (local.get $1)
   )
  )
  ;;@ celt/entdec.c:141:0
  (i32.store offset=36
   (local.get $0)
   (local.get $2)
  )
  ;;@ celt/entdec.c:142:0
  (local.set $0
   (i32.load offset=32
    (local.get $0)
   )
  )
  (local.set $0
   (i32.div_u
    (local.get $0)
    (local.get $2)
   )
  )
  ;;@ celt/entdec.c:143:0
  (local.set $0
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.gt_u
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $0
   (select
    (local.get $1)
    (local.get $0)
    (local.get $2)
   )
  )
  (local.set $0
   (i32.sub
    (local.get $1)
    (local.get $0)
   )
  )
  (local.get $0)
 )
 (func $_ec_decode_bin (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  ;;@ celt/entdec.c:148:0
  (i32.store offset=36
   (local.get $0)
   (local.tee $1
    (i32.shr_u
     (i32.load offset=28
      (local.get $0)
     )
     (i32.const 15)
    )
   )
  )
  ;;@ celt/entdec.c:150:0
  (i32.sub
   (i32.const 32768)
   (select
    (i32.const 32768)
    (local.tee $0
     (i32.add
      (i32.div_u
       (i32.load offset=32
        (local.get $0)
       )
       (local.get $1)
      )
      (i32.const 1)
     )
    )
    (i32.lt_u
     (i32.const 32768)
     (local.get $0)
    )
   )
  )
 )
 (func $_ec_dec_update (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  ;;@ celt/entdec.c:155:0
  (local.set $4
   (i32.load offset=36
    (local.get $0)
   )
  )
  (local.set $3
   (i32.sub
    (local.get $3)
    (local.get $2)
   )
  )
  (local.set $3
   (i32.mul
    (local.get $3)
    (local.get $4)
   )
  )
  ;;@ celt/entdec.c:156:0
  (local.set $5
   (i32.load offset=32
    (local.get $0)
   )
  )
  (local.set $5
   (i32.sub
    (local.get $5)
    (local.get $3)
   )
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $5)
  )
  (if
   ;;@ celt/entdec.c:157:0
   (local.get $1)
   (block
    (local.set $1
     (i32.sub
      (local.get $2)
      (local.get $1)
     )
    )
    (local.set $3
     (i32.mul
      (local.get $1)
      (local.get $4)
     )
    )
    (local.set $7
     (i32.add
      (local.get $0)
      (i32.const 28)
     )
    )
   )
   (block
    (local.set $7
     (i32.add
      (local.get $0)
      (i32.const 28)
     )
    )
    (local.set $1
     (i32.load
      (local.get $7)
     )
    )
    (local.set $3
     (i32.sub
      (local.get $1)
      (local.get $3)
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (local.get $3)
  )
  (if
   ;;@ celt/entdec.c:104:0
   (i32.ge_u
    (local.get $3)
    (i32.const 8388609)
   )
   ;;@ celt/entdec.c:159:0
   (return)
  )
  ;;@ celt/entdec.c:106:0
  (local.set $2
   (i32.load offset=20
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:109:0
  (local.set $4
   (i32.load offset=40
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:92:0
  (local.set $1
   (i32.load offset=24
    (local.get $0)
   )
  )
  (local.set $9
   (i32.load offset=4
    (local.get $0)
   )
  )
  (loop $while-in
   ;;@ celt/entdec.c:106:0
   (local.set $2
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (i32.store offset=20
    (local.get $0)
    (local.get $2)
   )
   ;;@ celt/entdec.c:107:0
   (local.set $3
    (i32.shl
     (local.get $3)
     (i32.const 8)
    )
   )
   (i32.store
    (local.get $7)
    (local.get $3)
   )
   (if
    ;;@ celt/entdec.c:92:0
    (i32.lt_u
     (local.get $1)
     (local.get $9)
    )
    (block
     (local.set $6
      (i32.load
       (local.get $0)
      )
     )
     (local.set $8
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.store offset=24
      (local.get $0)
      (local.get $8)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $6)
      )
     )
     (local.set $1
      (i32.load8_u
       (local.get $1)
      )
     )
     (local.set $6
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (local.set $1
      (local.get $8)
     )
    )
    (local.set $6
     (i32.const 0)
    )
   )
   ;;@ celt/entdec.c:111:0
   (i32.store offset=40
    (local.get $0)
    (local.get $6)
   )
   ;;@ celt/entdec.c:113:0
   (local.set $4
    (i32.shl
     (local.get $4)
     (i32.const 8)
    )
   )
   (local.set $4
    (i32.or
     (local.get $4)
     (local.get $6)
    )
   )
   (local.set $4
    (i32.shr_u
     (local.get $4)
     (i32.const 1)
    )
   )
   ;;@ celt/entdec.c:115:0
   (local.set $5
    (i32.shl
     (local.get $5)
     (i32.const 8)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (i32.const 255)
    )
   )
   (local.set $5
    (i32.and
     (local.get $5)
     (i32.const 2147483392)
    )
   )
   (local.set $4
    (i32.or
     (local.get $4)
     (local.get $5)
    )
   )
   (local.set $5
    (i32.xor
     (local.get $4)
     (i32.const 255)
    )
   )
   (i32.store offset=32
    (local.get $0)
    (local.get $5)
   )
   (if
    ;;@ celt/entdec.c:104:0
    (i32.lt_u
     (local.get $3)
     (i32.const 8388609)
    )
    (block
     (local.set $4
      (local.get $6)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_ec_dec_bit_logp (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  ;;@ celt/entdec.c:167:0
  (local.set $4
   (i32.load offset=28
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:168:0
  (local.set $2
   (i32.load offset=32
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:169:0
  (local.set $1
   (i32.shr_u
    (local.get $4)
    (local.get $1)
   )
  )
  ;;@ celt/entdec.c:170:0
  (local.set $6
   (i32.lt_u
    (local.get $2)
    (local.get $1)
   )
  )
  (if
   (i32.eqz
    (local.get $6)
   )
   (block
    ;;@ celt/entdec.c:172:0
    (local.set $4
     (i32.sub
      (local.get $4)
      (local.get $1)
     )
    )
    ;;@ celt/entdec.c:171:0
    (local.set $2
     (i32.sub
      (local.get $2)
      (local.get $1)
     )
    )
    (i32.store offset=32
     (local.get $0)
     (local.get $2)
    )
    (local.set $1
     (local.get $4)
    )
   )
  )
  (local.set $7
   (local.get $6)
  )
  ;;@ celt/entdec.c:172:0
  (i32.store offset=28
   (local.get $0)
   (local.get $1)
  )
  (if
   ;;@ celt/entdec.c:104:0
   (i32.ge_u
    (local.get $1)
    (i32.const 8388609)
   )
   ;;@ celt/entdec.c:174:0
   (return
    (local.get $7)
   )
  )
  ;;@ celt/entdec.c:106:0
  (local.set $6
   (i32.load offset=20
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:109:0
  (local.set $3
   (i32.load offset=40
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:92:0
  (local.set $5
   (i32.load offset=24
    (local.get $0)
   )
  )
  (local.set $9
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $4
   (local.get $1)
  )
  (local.set $1
   (local.get $5)
  )
  (loop $while-in
   ;;@ celt/entdec.c:106:0
   (local.set $6
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.store offset=20
    (local.get $0)
    (local.get $6)
   )
   ;;@ celt/entdec.c:107:0
   (local.set $4
    (i32.shl
     (local.get $4)
     (i32.const 8)
    )
   )
   (i32.store offset=28
    (local.get $0)
    (local.get $4)
   )
   (if
    ;;@ celt/entdec.c:92:0
    (i32.lt_u
     (local.get $1)
     (local.get $9)
    )
    (block
     (local.set $5
      (i32.load
       (local.get $0)
      )
     )
     (local.set $8
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.store offset=24
      (local.get $0)
      (local.get $8)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $5)
      )
     )
     (local.set $1
      (i32.load8_u
       (local.get $1)
      )
     )
     (local.set $5
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (local.set $1
      (local.get $8)
     )
    )
    (local.set $5
     (i32.const 0)
    )
   )
   ;;@ celt/entdec.c:111:0
   (i32.store offset=40
    (local.get $0)
    (local.get $5)
   )
   ;;@ celt/entdec.c:113:0
   (local.set $3
    (i32.shl
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.set $3
    (i32.or
     (local.get $3)
     (local.get $5)
    )
   )
   (local.set $3
    (i32.shr_u
     (local.get $3)
     (i32.const 1)
    )
   )
   ;;@ celt/entdec.c:115:0
   (local.set $2
    (i32.shl
     (local.get $2)
     (i32.const 8)
    )
   )
   (local.set $3
    (i32.and
     (local.get $3)
     (i32.const 255)
    )
   )
   (local.set $2
    (i32.and
     (local.get $2)
     (i32.const 2147483392)
    )
   )
   (local.set $2
    (i32.or
     (local.get $2)
     (local.get $3)
    )
   )
   (local.set $2
    (i32.xor
     (local.get $2)
     (i32.const 255)
    )
   )
   (i32.store offset=32
    (local.get $0)
    (local.get $2)
   )
   (if
    ;;@ celt/entdec.c:104:0
    (i32.lt_u
     (local.get $4)
     (i32.const 8388609)
    )
    (block
     (local.set $3
      (local.get $5)
     )
     (br $while-in)
    )
   )
  )
  ;;@ celt/entdec.c:174:0
  (local.get $7)
 )
 (func $_ec_dec_icdf (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  ;;@ celt/entdec.c:183:0
  (local.set $3
   (i32.load offset=28
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:184:0
  (local.set $4
   (i32.load offset=32
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:185:0
  (local.set $5
   (i32.shr_u
    (local.get $3)
    (local.get $2)
   )
  )
  (local.set $7
   (i32.const -1)
  )
  (local.set $2
   (local.get $3)
  )
  (loop $while-in
   ;;@ celt/entdec.c:189:0
   (local.set $7
    (i32.add
     (local.get $7)
     (i32.const 1)
    )
   )
   (local.set $3
    (i32.add
     (local.get $1)
     (local.get $7)
    )
   )
   (local.set $3
    (i32.load8_u
     (local.get $3)
    )
   )
   (local.set $3
    (i32.and
     (local.get $3)
     (i32.const 255)
    )
   )
   (local.set $3
    (i32.mul
     (local.get $3)
     (local.get $5)
    )
   )
   (if
    ;;@ celt/entdec.c:191:0
    (i32.lt_u
     (local.get $4)
     (local.get $3)
    )
    (block
     (local.set $2
      (local.get $3)
     )
     (br $while-in)
    )
   )
  )
  ;;@ celt/entdec.c:192:0
  (local.set $5
   (i32.sub
    (local.get $4)
    (local.get $3)
   )
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $5)
  )
  ;;@ celt/entdec.c:193:0
  (local.set $3
   (i32.sub
    (local.get $2)
    (local.get $3)
   )
  )
  (i32.store offset=28
   (local.get $0)
   (local.get $3)
  )
  (if
   ;;@ celt/entdec.c:104:0
   (i32.ge_u
    (local.get $3)
    (i32.const 8388609)
   )
   ;;@ celt/entdec.c:195:0
   (return
    (local.get $7)
   )
  )
  ;;@ celt/entdec.c:106:0
  (local.set $2
   (i32.load offset=20
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:109:0
  (local.set $4
   (i32.load offset=40
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:92:0
  (local.set $1
   (i32.load offset=24
    (local.get $0)
   )
  )
  (local.set $9
   (i32.load offset=4
    (local.get $0)
   )
  )
  (loop $while-in1
   ;;@ celt/entdec.c:106:0
   (local.set $2
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (i32.store offset=20
    (local.get $0)
    (local.get $2)
   )
   ;;@ celt/entdec.c:107:0
   (local.set $3
    (i32.shl
     (local.get $3)
     (i32.const 8)
    )
   )
   (i32.store offset=28
    (local.get $0)
    (local.get $3)
   )
   (if
    ;;@ celt/entdec.c:92:0
    (i32.lt_u
     (local.get $1)
     (local.get $9)
    )
    (block
     (local.set $6
      (i32.load
       (local.get $0)
      )
     )
     (local.set $8
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.store offset=24
      (local.get $0)
      (local.get $8)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $6)
      )
     )
     (local.set $1
      (i32.load8_u
       (local.get $1)
      )
     )
     (local.set $6
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (local.set $1
      (local.get $8)
     )
    )
    (local.set $6
     (i32.const 0)
    )
   )
   ;;@ celt/entdec.c:111:0
   (i32.store offset=40
    (local.get $0)
    (local.get $6)
   )
   ;;@ celt/entdec.c:113:0
   (local.set $4
    (i32.shl
     (local.get $4)
     (i32.const 8)
    )
   )
   (local.set $4
    (i32.or
     (local.get $4)
     (local.get $6)
    )
   )
   (local.set $4
    (i32.shr_u
     (local.get $4)
     (i32.const 1)
    )
   )
   ;;@ celt/entdec.c:115:0
   (local.set $5
    (i32.shl
     (local.get $5)
     (i32.const 8)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (i32.const 255)
    )
   )
   (local.set $5
    (i32.and
     (local.get $5)
     (i32.const 2147483392)
    )
   )
   (local.set $4
    (i32.or
     (local.get $4)
     (local.get $5)
    )
   )
   (local.set $5
    (i32.xor
     (local.get $4)
     (i32.const 255)
    )
   )
   (i32.store offset=32
    (local.get $0)
    (local.get $5)
   )
   (if
    ;;@ celt/entdec.c:104:0
    (i32.lt_u
     (local.get $3)
     (i32.const 8388609)
    )
    (block
     (local.set $4
      (local.get $6)
     )
     (br $while-in1)
    )
   )
  )
  ;;@ celt/entdec.c:195:0
  (local.get $7)
 )
 (func $_ec_dec_uint (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (if
   ;;@ celt/entdec.c:203:0
   (i32.le_u
    (local.get $1)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 42048)
    (i32.const 42034)
    (i32.const 203)
   )
  )
  ;;@ celt/entdec.c:204:0
  (local.set $9
   (i32.add
    (local.get $1)
    (i32.const -1)
   )
  )
  ;;@ celt/entdec.c:205:0
  (local.set $4
   (i32.clz
    (local.get $9)
   )
  )
  (local.set $4
   (i32.sub
    (i32.const 32)
    (local.get $4)
   )
  )
  (if
   ;;@ celt/entdec.c:206:0
   (i32.le_s
    (local.get $4)
    (i32.const 8)
   )
   (block
    ;;@ celt/entdec.c:141:0
    (local.set $5
     (i32.load offset=28
      (local.get $0)
     )
    )
    ;;@ ./celt/entcode.h:136:0
    (local.set $4
     (i32.div_u
      (local.get $5)
      (local.get $1)
     )
    )
    ;;@ celt/entdec.c:141:0
    (i32.store offset=36
     (local.get $0)
     (local.get $4)
    )
    ;;@ celt/entdec.c:142:0
    (local.set $2
     (i32.load offset=32
      (local.get $0)
     )
    )
    (local.set $3
     (i32.div_u
      (local.get $2)
      (local.get $4)
     )
    )
    ;;@ celt/entdec.c:143:0
    (local.set $3
     (i32.add
      (local.get $3)
      (i32.const 1)
     )
    )
    (local.set $6
     (i32.gt_u
      (local.get $3)
      (local.get $1)
     )
    )
    (local.set $3
     (select
      (local.get $1)
      (local.get $3)
      (local.get $6)
     )
    )
    (local.set $7
     (i32.sub
      (local.get $1)
      (local.get $3)
     )
    )
    ;;@ celt/entdec.c:155:0
    (local.set $1
     (i32.sub
      (local.get $9)
      (local.get $7)
     )
    )
    (local.set $1
     (i32.mul
      (local.get $1)
      (local.get $4)
     )
    )
    ;;@ celt/entdec.c:156:0
    (local.set $3
     (i32.sub
      (local.get $2)
      (local.get $1)
     )
    )
    (i32.store offset=32
     (local.get $0)
     (local.get $3)
    )
    ;;@ celt/entdec.c:157:0
    (local.set $2
     (i32.eqz
      (local.get $7)
     )
    )
    (local.set $1
     (i32.sub
      (local.get $5)
      (local.get $1)
     )
    )
    (local.set $5
     (select
      (local.get $1)
      (local.get $4)
      (local.get $2)
     )
    )
    (i32.store offset=28
     (local.get $0)
     (local.get $5)
    )
    (if
     ;;@ celt/entdec.c:104:0
     (i32.ge_u
      (local.get $5)
      (i32.const 8388609)
     )
     ;;@ celt/entdec.c:223:0
     (return
      (local.get $7)
     )
    )
    ;;@ celt/entdec.c:106:0
    (local.set $4
     (i32.load offset=20
      (local.get $0)
     )
    )
    ;;@ celt/entdec.c:109:0
    (local.set $2
     (i32.load offset=40
      (local.get $0)
     )
    )
    ;;@ celt/entdec.c:92:0
    (local.set $1
     (i32.load offset=24
      (local.get $0)
     )
    )
    (local.set $8
     (i32.load offset=4
      (local.get $0)
     )
    )
    (loop $while-in
     ;;@ celt/entdec.c:106:0
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 8)
      )
     )
     (i32.store offset=20
      (local.get $0)
      (local.get $4)
     )
     ;;@ celt/entdec.c:107:0
     (local.set $5
      (i32.shl
       (local.get $5)
       (i32.const 8)
      )
     )
     (i32.store offset=28
      (local.get $0)
      (local.get $5)
     )
     (if
      ;;@ celt/entdec.c:92:0
      (i32.lt_u
       (local.get $1)
       (local.get $8)
      )
      (block
       (local.set $6
        (i32.load
         (local.get $0)
        )
       )
       (local.set $9
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.store offset=24
        (local.get $0)
        (local.get $9)
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (local.get $6)
        )
       )
       (local.set $1
        (i32.load8_u
         (local.get $1)
        )
       )
       (local.set $6
        (i32.and
         (local.get $1)
         (i32.const 255)
        )
       )
       (local.set $1
        (local.get $9)
       )
      )
      (local.set $6
       (i32.const 0)
      )
     )
     ;;@ celt/entdec.c:111:0
     (i32.store offset=40
      (local.get $0)
      (local.get $6)
     )
     ;;@ celt/entdec.c:113:0
     (local.set $2
      (i32.shl
       (local.get $2)
       (i32.const 8)
      )
     )
     (local.set $2
      (i32.or
       (local.get $2)
       (local.get $6)
      )
     )
     (local.set $2
      (i32.shr_u
       (local.get $2)
       (i32.const 1)
      )
     )
     ;;@ celt/entdec.c:115:0
     (local.set $3
      (i32.shl
       (local.get $3)
       (i32.const 8)
      )
     )
     (local.set $2
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
     )
     (local.set $3
      (i32.and
       (local.get $3)
       (i32.const 2147483392)
      )
     )
     (local.set $2
      (i32.or
       (local.get $2)
       (local.get $3)
      )
     )
     (local.set $3
      (i32.xor
       (local.get $2)
       (i32.const 255)
      )
     )
     (i32.store offset=32
      (local.get $0)
      (local.get $3)
     )
     (if
      ;;@ celt/entdec.c:104:0
      (i32.lt_u
       (local.get $5)
       (i32.const 8388609)
      )
      (block
       (local.set $2
        (local.get $6)
       )
       (br $while-in)
      )
     )
    )
    ;;@ celt/entdec.c:223:0
    (return
     (local.get $7)
    )
   )
  )
  ;;@ celt/entdec.c:208:0
  (local.set $7
   (i32.add
    (local.get $4)
    (i32.const -8)
   )
  )
  ;;@ celt/entdec.c:209:0
  (local.set $5
   (i32.shr_u
    (local.get $9)
    (local.get $7)
   )
  )
  (local.set $1
   (i32.add
    (local.get $5)
    (i32.const 1)
   )
  )
  ;;@ celt/entdec.c:141:0
  (local.set $2
   (i32.load offset=28
    (local.get $0)
   )
  )
  ;;@ ./celt/entcode.h:136:0
  (local.set $4
   (i32.div_u
    (local.get $2)
    (local.get $1)
   )
  )
  ;;@ celt/entdec.c:141:0
  (i32.store offset=36
   (local.get $0)
   (local.get $4)
  )
  ;;@ celt/entdec.c:142:0
  (local.set $3
   (i32.load offset=32
    (local.get $0)
   )
  )
  (local.set $6
   (i32.div_u
    (local.get $3)
    (local.get $4)
   )
  )
  ;;@ celt/entdec.c:143:0
  (local.set $6
   (i32.add
    (local.get $6)
    (i32.const 1)
   )
  )
  (local.set $8
   (i32.gt_u
    (local.get $6)
    (local.get $1)
   )
  )
  (local.set $6
   (select
    (local.get $1)
    (local.get $6)
    (local.get $8)
   )
  )
  (local.set $8
   (i32.sub
    (local.get $1)
    (local.get $6)
   )
  )
  ;;@ celt/entdec.c:155:0
  (local.set $1
   (i32.sub
    (local.get $5)
    (local.get $8)
   )
  )
  (local.set $1
   (i32.mul
    (local.get $1)
    (local.get $4)
   )
  )
  ;;@ celt/entdec.c:156:0
  (local.set $3
   (i32.sub
    (local.get $3)
    (local.get $1)
   )
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $3)
  )
  ;;@ celt/entdec.c:157:0
  (local.set $5
   (i32.eqz
    (local.get $8)
   )
  )
  (local.set $1
   (i32.sub
    (local.get $2)
    (local.get $1)
   )
  )
  (local.set $5
   (select
    (local.get $1)
    (local.get $4)
    (local.get $5)
   )
  )
  (i32.store offset=28
   (local.get $0)
   (local.get $5)
  )
  (if
   ;;@ celt/entdec.c:104:0
   (i32.lt_u
    (local.get $5)
    (i32.const 8388609)
   )
   (block
    ;;@ celt/entdec.c:106:0
    (local.set $4
     (i32.load offset=20
      (local.get $0)
     )
    )
    ;;@ celt/entdec.c:109:0
    (local.set $2
     (i32.load offset=40
      (local.get $0)
     )
    )
    ;;@ celt/entdec.c:92:0
    (local.set $1
     (i32.load offset=24
      (local.get $0)
     )
    )
    (local.set $11
     (i32.load offset=4
      (local.get $0)
     )
    )
    (loop $while-in1
     ;;@ celt/entdec.c:106:0
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 8)
      )
     )
     (i32.store offset=20
      (local.get $0)
      (local.get $4)
     )
     ;;@ celt/entdec.c:107:0
     (local.set $5
      (i32.shl
       (local.get $5)
       (i32.const 8)
      )
     )
     (i32.store offset=28
      (local.get $0)
      (local.get $5)
     )
     (local.set $6
      (if (result i32)
       ;;@ celt/entdec.c:92:0
       (i32.lt_u
        (local.get $1)
        (local.get $11)
       )
       (block (result i32)
        (local.set $10
         (i32.load
          (local.get $0)
         )
        )
        (local.set $6
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store offset=24
         (local.get $0)
         (local.get $6)
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (local.get $10)
         )
        )
        (local.set $10
         (i32.load8_u
          (local.get $1)
         )
        )
        (local.set $1
         (local.get $6)
        )
        (i32.and
         (local.get $10)
         (i32.const 255)
        )
       )
       (i32.const 0)
      )
     )
     ;;@ celt/entdec.c:111:0
     (i32.store offset=40
      (local.get $0)
      (local.get $6)
     )
     ;;@ celt/entdec.c:113:0
     (local.set $2
      (i32.shl
       (local.get $2)
       (i32.const 8)
      )
     )
     (local.set $2
      (i32.or
       (local.get $2)
       (local.get $6)
      )
     )
     (local.set $2
      (i32.shr_u
       (local.get $2)
       (i32.const 1)
      )
     )
     ;;@ celt/entdec.c:115:0
     (local.set $3
      (i32.shl
       (local.get $3)
       (i32.const 8)
      )
     )
     (local.set $2
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
     )
     (local.set $3
      (i32.and
       (local.get $3)
       (i32.const 2147483392)
      )
     )
     (local.set $2
      (i32.or
       (local.get $2)
       (local.get $3)
      )
     )
     (local.set $3
      (i32.xor
       (local.get $2)
       (i32.const 255)
      )
     )
     (i32.store offset=32
      (local.get $0)
      (local.get $3)
     )
     (if
      ;;@ celt/entdec.c:104:0
      (i32.lt_u
       (local.get $5)
       (i32.const 8388609)
      )
      (block
       (local.set $2
        (local.get $6)
       )
       (br $while-in1)
      )
     )
    )
   )
  )
  ;;@ celt/entdec.c:212:0
  (local.set $8
   (i32.shl
    (local.get $8)
    (local.get $7)
   )
  )
  ;;@ celt/entdec.c:229:0
  (local.set $5
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:230:0
  (local.set $2
   (i32.load offset=16
    (local.get $0)
   )
  )
  (if
   ;;@ celt/entdec.c:231:0
   (i32.lt_u
    (local.get $2)
    (local.get $7)
   )
   (block
    ;;@ celt/entdec.c:232:0
    (local.set $1
     (i32.gt_s
      (local.get $2)
      (i32.const 17)
     )
    )
    (local.set $1
     (select
      (local.get $2)
      (i32.const 17)
      (local.get $1)
     )
    )
    (local.set $4
     (i32.sub
      (i32.const 7)
      (local.get $2)
     )
    )
    (local.set $11
     (i32.add
      (local.get $1)
      (local.get $4)
     )
    )
    ;;@ celt/entdec.c:96:0
    (local.set $1
     (i32.load offset=8
      (local.get $0)
     )
    )
    (local.set $6
     (i32.load offset=4
      (local.get $0)
     )
    )
    (local.set $4
     (local.get $2)
    )
    (loop $while-in3
     (local.set $3
      (if (result i32)
       (i32.lt_u
        (local.get $1)
        (local.get $6)
       )
       (block (result i32)
        ;;@ celt/entdec.c:97:0
        (local.set $3
         (i32.load
          (local.get $0)
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store offset=8
         (local.get $0)
         (local.get $1)
        )
        (local.set $10
         (i32.sub
          (local.get $6)
          (local.get $1)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (local.get $10)
         )
        )
        (local.set $3
         (i32.load8_u
          (local.get $3)
         )
        )
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
       (i32.const 0)
      )
     )
     ;;@ celt/entdec.c:233:0
     (local.set $3
      (i32.shl
       (local.get $3)
       (local.get $4)
      )
     )
     (local.set $5
      (i32.or
       (local.get $3)
       (local.get $5)
      )
     )
     ;;@ celt/entdec.c:234:0
     (local.set $3
      (i32.add
       (local.get $4)
       (i32.const 8)
      )
     )
     (if
      ;;@ celt/entdec.c:236:0
      (i32.lt_s
       (local.get $4)
       (i32.const 17)
      )
      (block
       (local.set $4
        (local.get $3)
       )
       (br $while-in3)
      )
     )
    )
    ;;@ celt/entdec.c:232:0
    (local.set $1
     (i32.and
      (local.get $11)
      (i32.const -8)
     )
    )
    (local.set $4
     (i32.add
      (local.get $2)
      (i32.const 8)
     )
    )
    (local.set $2
     (i32.add
      (local.get $1)
      (local.get $4)
     )
    )
   )
  )
  ;;@ celt/entdec.c:238:0
  (local.set $1
   (i32.shl
    (i32.const 1)
    (local.get $7)
   )
  )
  (local.set $1
   (i32.add
    (local.get $1)
    (i32.const -1)
   )
  )
  (local.set $1
   (i32.and
    (local.get $1)
    (local.get $5)
   )
  )
  ;;@ celt/entdec.c:239:0
  (local.set $4
   (i32.shr_u
    (local.get $5)
    (local.get $7)
   )
  )
  ;;@ celt/entdec.c:240:0
  (local.set $5
   (i32.sub
    (local.get $2)
    (local.get $7)
   )
  )
  ;;@ celt/entdec.c:241:0
  (i32.store offset=12
   (local.get $0)
   (local.get $4)
  )
  ;;@ celt/entdec.c:242:0
  (i32.store offset=16
   (local.get $0)
   (local.get $5)
  )
  ;;@ celt/entdec.c:243:0
  (local.set $4
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $4
   (i32.add
    (local.get $4)
    (local.get $7)
   )
  )
  (i32.store offset=20
   (local.get $0)
   (local.get $4)
  )
  ;;@ celt/entdec.c:212:0
  (local.set $1
   (i32.or
    (local.get $1)
    (local.get $8)
   )
  )
  (if
   ;;@ celt/entdec.c:213:0
   (i32.le_u
    (local.get $1)
    (local.get $9)
   )
   ;;@ celt/entdec.c:223:0
   (return
    (local.get $1)
   )
  )
  ;;@ celt/entdec.c:214:0
  (i32.store offset=44
   (local.get $0)
   (i32.const 1)
  )
  ;;@ celt/entdec.c:223:0
  (local.get $9)
 )
 (func $_ec_dec_bits (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  ;;@ celt/entdec.c:229:0
  (local.set $5
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ celt/entdec.c:230:0
  (local.set $3
   (i32.load offset=16
    (local.get $0)
   )
  )
  (if
   ;;@ celt/entdec.c:231:0
   (i32.lt_u
    (local.get $3)
    (local.get $1)
   )
   (block
    ;;@ celt/entdec.c:232:0
    (local.set $2
     (i32.gt_s
      (local.get $3)
      (i32.const 17)
     )
    )
    (local.set $2
     (select
      (local.get $3)
      (i32.const 17)
      (local.get $2)
     )
    )
    (local.set $2
     (i32.add
      (local.get $2)
      (i32.const 7)
     )
    )
    (local.set $2
     (i32.sub
      (local.get $2)
      (local.get $3)
     )
    )
    (local.set $2
     (i32.and
      (local.get $2)
      (i32.const -8)
     )
    )
    (local.set $7
     (i32.add
      (local.get $2)
      (local.get $3)
     )
    )
    ;;@ celt/entdec.c:96:0
    (local.set $2
     (i32.load offset=8
      (local.get $0)
     )
    )
    (local.set $6
     (i32.load offset=4
      (local.get $0)
     )
    )
    (loop $while-in
     (local.set $4
      (if (result i32)
       (i32.lt_u
        (local.get $2)
        (local.get $6)
       )
       (block (result i32)
        ;;@ celt/entdec.c:97:0
        (local.set $4
         (i32.load
          (local.get $0)
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store offset=8
         (local.get $0)
         (local.get $2)
        )
        (local.set $8
         (i32.sub
          (local.get $6)
          (local.get $2)
         )
        )
        (local.set $4
         (i32.add
          (local.get $4)
          (local.get $8)
         )
        )
        (local.set $4
         (i32.load8_u
          (local.get $4)
         )
        )
        (i32.and
         (local.get $4)
         (i32.const 255)
        )
       )
       (i32.const 0)
      )
     )
     ;;@ celt/entdec.c:233:0
     (local.set $4
      (i32.shl
       (local.get $4)
       (local.get $3)
      )
     )
     (local.set $5
      (i32.or
       (local.get $4)
       (local.get $5)
      )
     )
     ;;@ celt/entdec.c:234:0
     (local.set $4
      (i32.add
       (local.get $3)
       (i32.const 8)
      )
     )
     (if
      ;;@ celt/entdec.c:236:0
      (i32.lt_s
       (local.get $3)
       (i32.const 17)
      )
      (block
       (local.set $3
        (local.get $4)
       )
       (br $while-in)
      )
     )
    )
    ;;@ celt/entdec.c:232:0
    (local.set $3
     (i32.add
      (local.get $7)
      (i32.const 8)
     )
    )
   )
  )
  ;;@ celt/entdec.c:238:0
  (local.set $2
   (i32.shl
    (i32.const 1)
    (local.get $1)
   )
  )
  (local.set $2
   (i32.add
    (local.get $2)
    (i32.const -1)
   )
  )
  (local.set $2
   (i32.and
    (local.get $2)
    (local.get $5)
   )
  )
  ;;@ celt/entdec.c:239:0
  (local.set $5
   (i32.shr_u
    (local.get $5)
    (local.get $1)
   )
  )
  ;;@ celt/entdec.c:240:0
  (local.set $3
   (i32.sub
    (local.get $3)
    (local.get $1)
   )
  )
  ;;@ celt/entdec.c:241:0
  (i32.store offset=12
   (local.get $0)
   (local.get $5)
  )
  ;;@ celt/entdec.c:242:0
  (i32.store offset=16
   (local.get $0)
   (local.get $3)
  )
  ;;@ celt/entdec.c:243:0
  (local.set $3
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $1
   (i32.add
    (local.get $1)
    (local.get $3)
   )
  )
  (i32.store offset=20
   (local.get $0)
   (local.get $1)
  )
  ;;@ celt/entdec.c:244:0
  (local.get $2)
 )
 (func $_ec_encode (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  ;;@ celt/entenc.c:130:0
  (local.set $5
   (i32.load offset=28
    (local.get $0)
   )
  )
  ;;@ ./celt/entcode.h:136:0
  (local.set $4
   (i32.div_u
    (local.get $5)
    (local.get $3)
   )
  )
  ;;@ celt/entenc.c:131:0
  (i32.store offset=28
   (local.get $0)
   (local.tee $1
    (if (result i32)
     (local.get $1)
     (block (result i32)
      ;;@ celt/entenc.c:132:0
      (local.set $3
       (i32.sub
        (local.get $3)
        (local.get $1)
       )
      )
      (local.set $3
       (i32.mul
        (local.get $3)
        (local.get $4)
       )
      )
      (local.set $3
       (i32.sub
        (local.get $5)
        (local.get $3)
       )
      )
      (local.set $5
       (i32.load offset=32
        (local.get $0)
       )
      )
      (local.set $3
       (i32.add
        (local.get $3)
        (local.get $5)
       )
      )
      (i32.store offset=32
       (local.get $0)
       (local.get $3)
      )
      ;;@ celt/entenc.c:133:0
      (local.set $1
       (i32.sub
        (local.get $2)
        (local.get $1)
       )
      )
      (i32.mul
       (local.get $1)
       (local.get $4)
      )
     )
     (block (result i32)
      ;;@ celt/entenc.c:135:0
      (local.set $1
       (i32.sub
        (local.get $3)
        (local.get $2)
       )
      )
      (local.set $1
       (i32.mul
        (local.get $1)
        (local.get $4)
       )
      )
      (i32.sub
       (local.get $5)
       (local.get $1)
      )
     )
    )
   )
  )
  (if
   ;;@ celt/entenc.c:103:0
   (i32.ge_u
    (local.get $1)
    (i32.const 8388609)
   )
   ;;@ celt/entenc.c:137:0
   (return)
  )
  ;;@ celt/entenc.c:104:0
  (local.set $2
   (i32.load offset=32
    (local.get $0)
   )
  )
  (loop $while-in
   (local.set $3
    (i32.shr_u
     (local.get $2)
     (i32.const 23)
    )
   )
   (if
    ;;@ celt/entenc.c:83:0
    (i32.eq
     (local.get $3)
     (i32.const 255)
    )
    (block
     ;;@ celt/entenc.c:98:0
     (local.set $3
      (i32.load offset=36
       (local.get $0)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.store offset=36
      (local.get $0)
      (local.get $3)
     )
    )
    (block
     (local.set $2
      (i32.shr_u
       (local.get $2)
       (i32.const 31)
      )
     )
     ;;@ celt/entenc.c:89:0
     (local.set $5
      (i32.load offset=40
       (local.get $0)
      )
     )
     (if
      (i32.gt_s
       (local.get $5)
       (i32.const -1)
      )
      (block
       ;;@ celt/entenc.c:61:0
       (local.set $1
        (i32.load offset=24
         (local.get $0)
        )
       )
       (local.set $4
        (i32.load offset=8
         (local.get $0)
        )
       )
       (local.set $4
        (i32.add
         (local.get $1)
         (local.get $4)
        )
       )
       (local.set $6
        (i32.load offset=4
         (local.get $0)
        )
       )
       (local.set $1
        (if (result i32)
         (i32.lt_u
          (local.get $4)
          (local.get $6)
         )
         (block (result i32)
          ;;@ celt/entenc.c:89:0
          (local.set $5
           (i32.add
            (local.get $2)
            (local.get $5)
           )
          )
          ;;@ celt/entenc.c:62:0
          (local.set $5
           (i32.and
            (local.get $5)
            (i32.const 255)
           )
          )
          (local.set $4
           (i32.load
            (local.get $0)
           )
          )
          (local.set $6
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store offset=24
           (local.get $0)
           (local.get $6)
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (local.get $4)
           )
          )
          (i32.store8
           (local.get $1)
           (local.get $5)
          )
          (i32.const 0)
         )
         (i32.const -1)
        )
       )
       ;;@ celt/entenc.c:89:0
       (local.set $5
        (i32.load offset=44
         (local.get $0)
        )
       )
       (local.set $1
        (i32.or
         (local.get $1)
         (local.get $5)
        )
       )
       (i32.store offset=44
        (local.get $0)
        (local.get $1)
       )
      )
     )
     ;;@ celt/entenc.c:90:0
     (local.set $1
      (i32.load offset=36
       (local.get $0)
      )
     )
     (if
      (local.get $1)
      (block
       ;;@ celt/entenc.c:92:0
       (local.set $5
        (i32.and
         (i32.add
          (local.get $2)
          (i32.const 255)
         )
         (i32.const 255)
        )
       )
       (loop $while-in1
        ;;@ celt/entenc.c:61:0
        (local.set $2
         (i32.load offset=24
          (local.get $0)
         )
        )
        (local.set $4
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.set $4
         (i32.add
          (local.get $2)
          (local.get $4)
         )
        )
        (local.set $6
         (i32.load offset=4
          (local.get $0)
         )
        )
        (local.set $2
         (if (result i32)
          (i32.lt_u
           (local.get $4)
           (local.get $6)
          )
          (block (result i32)
           ;;@ celt/entenc.c:62:0
           (local.set $1
            (i32.load
             (local.get $0)
            )
           )
           (local.set $4
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (i32.store offset=24
            (local.get $0)
            (local.get $4)
           )
           (local.set $1
            (i32.add
             (local.get $1)
             (local.get $2)
            )
           )
           (i32.store8
            (local.get $1)
            (local.get $5)
           )
           ;;@ celt/entenc.c:94:0
           (local.set $1
            (i32.load offset=36
             (local.get $0)
            )
           )
           (i32.const 0)
          )
          (i32.const -1)
         )
        )
        ;;@ celt/entenc.c:93:0
        (local.set $4
         (i32.load offset=44
          (local.get $0)
         )
        )
        (local.set $2
         (i32.or
          (local.get $2)
          (local.get $4)
         )
        )
        (i32.store offset=44
         (local.get $0)
         (local.get $2)
        )
        ;;@ celt/entenc.c:94:0
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
        )
        (i32.store offset=36
         (local.get $0)
         (local.get $1)
        )
        (br_if $while-in1
         (local.get $1)
        )
       )
      )
     )
     ;;@ celt/entenc.c:96:0
     (local.set $1
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
     )
     (i32.store offset=40
      (local.get $0)
      (local.get $1)
     )
     ;;@ celt/entenc.c:106:0
     (local.set $2
      (i32.load offset=32
       (local.get $0)
      )
     )
     ;;@ celt/entenc.c:107:0
     (local.set $1
      (i32.load offset=28
       (local.get $0)
      )
     )
    )
   )
   ;;@ celt/entenc.c:106:0
   (local.set $2
    (i32.shl
     (local.get $2)
     (i32.const 8)
    )
   )
   (local.set $2
    (i32.and
     (local.get $2)
     (i32.const 2147483392)
    )
   )
   (i32.store offset=32
    (local.get $0)
    (local.get $2)
   )
   ;;@ celt/entenc.c:107:0
   (local.set $1
    (i32.shl
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.store offset=28
    (local.get $0)
    (local.get $1)
   )
   ;;@ celt/entenc.c:108:0
   (local.set $3
    (i32.load offset=20
     (local.get $0)
    )
   )
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (i32.store offset=20
    (local.get $0)
    (local.get $3)
   )
   ;;@ celt/entenc.c:103:0
   (br_if $while-in
    (i32.lt_u
     (local.get $1)
     (i32.const 8388609)
    )
   )
  )
 )
 (func $_ec_enc_bit_logp (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  ;;@ celt/entenc.c:157:0
  (local.set $2
   (i32.shr_u
    ;;@ celt/entenc.c:155:0
    (local.tee $3
     (i32.load offset=28
      (local.get $0)
     )
    )
    (i32.const 2)
   )
  )
  ;;@ celt/entenc.c:158:0
  (local.set $3
   (i32.sub
    (local.get $3)
    (local.get $2)
   )
  )
  (if
   ;;@ celt/entenc.c:159:0
   (local.tee $1
    (i32.ne
     (local.get $1)
     (i32.const 0)
    )
   )
   (i32.store offset=32
    (local.get $0)
    (i32.add
     (i32.load offset=32
      (local.get $0)
     )
     (local.get $3)
    )
   )
  )
  ;;@ celt/entenc.c:160:0
  (i32.store offset=28
   (local.get $0)
   (local.tee $1
    (select
     (local.get $2)
     (local.get $3)
     (local.get $1)
    )
   )
  )
  (if
   ;;@ celt/entenc.c:103:0
   (i32.ge_u
    (local.get $1)
    (i32.const 8388609)
   )
   ;;@ celt/entenc.c:162:0
   (return)
  )
  ;;@ celt/entenc.c:104:0
  (local.set $2
   (i32.load offset=32
    (local.get $0)
   )
  )
  (loop $while-in
   (if
    ;;@ celt/entenc.c:83:0
    (i32.eq
     ;;@ celt/entenc.c:104:0
     (local.tee $3
      (i32.shr_u
       (local.get $2)
       (i32.const 23)
      )
     )
     (i32.const 255)
    )
    ;;@ celt/entenc.c:98:0
    (i32.store offset=36
     (local.get $0)
     (i32.add
      (i32.load offset=36
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (block
     (local.set $2
      (i32.shr_u
       (local.get $2)
       (i32.const 31)
      )
     )
     (if
      ;;@ celt/entenc.c:89:0
      (i32.gt_s
       (local.tee $4
        (i32.load offset=40
         (local.get $0)
        )
       )
       (i32.const -1)
      )
      (i32.store offset=44
       (local.get $0)
       (i32.or
        (if (result i32)
         ;;@ celt/entenc.c:61:0
         (i32.lt_u
          (i32.add
           (local.tee $1
            (i32.load offset=24
             (local.get $0)
            )
           )
           (i32.load offset=8
            (local.get $0)
           )
          )
          (i32.load offset=4
           (local.get $0)
          )
         )
         (block (result i32)
          ;;@ celt/entenc.c:62:0
          (local.set $5
           (i32.load
            (local.get $0)
           )
          )
          (i32.store offset=24
           (local.get $0)
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (local.get $5)
           )
           (i32.add
            (local.get $2)
            (local.get $4)
           )
          )
          (i32.const 0)
         )
         (i32.const -1)
        )
        (i32.load offset=44
         (local.get $0)
        )
       )
      )
     )
     (if
      ;;@ celt/entenc.c:90:0
      (local.tee $1
       (i32.load offset=36
        (local.get $0)
       )
      )
      (block
       ;;@ celt/entenc.c:92:0
       (local.set $4
        (i32.and
         (i32.add
          (local.get $2)
          (i32.const 255)
         )
         (i32.const 255)
        )
       )
       (loop $while-in1
        ;;@ celt/entenc.c:93:0
        (i32.store offset=44
         (local.get $0)
         (i32.or
          (if (result i32)
           ;;@ celt/entenc.c:61:0
           (i32.lt_u
            (i32.add
             (local.tee $2
              (i32.load offset=24
               (local.get $0)
              )
             )
             (i32.load offset=8
              (local.get $0)
             )
            )
            (i32.load offset=4
             (local.get $0)
            )
           )
           (block (result i32)
            ;;@ celt/entenc.c:62:0
            (local.set $1
             (i32.load
              (local.get $0)
             )
            )
            (i32.store offset=24
             (local.get $0)
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (i32.store8
             (i32.add
              (local.get $1)
              (local.get $2)
             )
             (local.get $4)
            )
            ;;@ celt/entenc.c:94:0
            (local.set $1
             (i32.load offset=36
              (local.get $0)
             )
            )
            (i32.const 0)
           )
           (i32.const -1)
          )
          (i32.load offset=44
           (local.get $0)
          )
         )
        )
        (i32.store offset=36
         (local.get $0)
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
        )
        (br_if $while-in1
         (local.get $1)
        )
       )
      )
     )
     ;;@ celt/entenc.c:96:0
     (i32.store offset=40
      (local.get $0)
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
     )
     ;;@ celt/entenc.c:106:0
     (local.set $2
      (i32.load offset=32
       (local.get $0)
      )
     )
     ;;@ celt/entenc.c:107:0
     (local.set $1
      (i32.load offset=28
       (local.get $0)
      )
     )
    )
   )
   ;;@ celt/entenc.c:106:0
   (i32.store offset=32
    (local.get $0)
    (local.tee $2
     (i32.and
      (i32.shl
       (local.get $2)
       (i32.const 8)
      )
      (i32.const 2147483392)
     )
    )
   )
   ;;@ celt/entenc.c:107:0
   (i32.store offset=28
    (local.get $0)
    (local.tee $1
     (i32.shl
      (local.get $1)
      (i32.const 8)
     )
    )
   )
   ;;@ celt/entenc.c:108:0
   (i32.store offset=20
    (local.get $0)
    (i32.add
     (i32.load offset=20
      (local.get $0)
     )
     (i32.const 8)
    )
   )
   ;;@ celt/entenc.c:103:0
   (br_if $while-in
    (i32.lt_u
     (local.get $1)
     (i32.const 8388609)
    )
   )
  )
 )
 (func $_ec_enc_uint (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (if
   ;;@ celt/entenc.c:180:0
   (i32.le_u
    (local.get $2)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 42048)
    (i32.const 42072)
    (i32.const 180)
   )
  )
  ;;@ celt/entenc.c:181:0
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const -1)
   )
  )
  ;;@ celt/entenc.c:182:0
  (local.set $3
   (i32.clz
    (local.get $4)
   )
  )
  (local.set $3
   (i32.sub
    (i32.const 32)
    (local.get $3)
   )
  )
  (if
   ;;@ celt/entenc.c:183:0
   (i32.le_s
    (local.get $3)
    (i32.const 8)
   )
   (block
    ;;@ celt/entenc.c:190:0
    (local.set $4
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
    (call $_ec_encode
     (local.get $0)
     (local.get $1)
     (local.get $4)
     (local.get $2)
    )
    ;;@ celt/entenc.c:191:0
    (return)
   )
  )
  ;;@ celt/entenc.c:184:0
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const -8)
   )
  )
  ;;@ celt/entenc.c:185:0
  (local.set $2
   (i32.shr_u
    (local.get $4)
    (local.get $5)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
  )
  ;;@ celt/entenc.c:186:0
  (local.set $2
   (i32.shr_u
    (local.get $1)
    (local.get $5)
   )
  )
  ;;@ celt/entenc.c:187:0
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
  )
  (call $_ec_encode
   (local.get $0)
   (local.get $2)
   (local.get $3)
   (local.get $4)
  )
  ;;@ celt/entenc.c:188:0
  (local.set $2
   (i32.shl
    (i32.const 1)
    (local.get $5)
   )
  )
  (local.set $2
   (i32.add
    (local.get $2)
    (i32.const -1)
   )
  )
  (local.set $8
   (i32.and
    (local.get $1)
    (local.get $2)
   )
  )
  ;;@ celt/entenc.c:196:0
  (local.set $2
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ celt/entenc.c:197:0
  (local.set $4
   (i32.load offset=16
    (local.get $0)
   )
  )
  ;;@ celt/entenc.c:199:0
  (local.set $1
   (i32.add
    (local.get $4)
    (local.get $5)
   )
  )
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const 32)
   )
   (block
    ;;@ celt/entenc.c:200:0
    (local.set $1
     (i32.xor
      (local.get $4)
      (i32.const -1)
     )
    )
    (local.set $3
     (i32.gt_s
      (local.get $1)
      (i32.const -16)
     )
    )
    (local.set $1
     (select
      (local.get $1)
      (i32.const -16)
      (local.get $3)
     )
    )
    (local.set $3
     (i32.add
      (local.get $4)
      (i32.const 8)
     )
    )
    (local.set $9
     (i32.add
      (local.get $1)
      (local.get $3)
     )
    )
    (local.set $1
     (local.get $4)
    )
    (loop $while-in
     ;;@ celt/entenc.c:67:0
     (local.set $6
      (i32.load offset=24
       (local.get $0)
      )
     )
     (local.set $3
      (i32.load offset=8
       (local.get $0)
      )
     )
     (local.set $7
      (i32.add
       (local.get $3)
       (local.get $6)
      )
     )
     (local.set $6
      (i32.load offset=4
       (local.get $0)
      )
     )
     (local.set $3
      (if (result i32)
       (i32.lt_u
        (local.get $7)
        (local.get $6)
       )
       (block (result i32)
        ;;@ celt/entenc.c:68:0
        (local.set $7
         (i32.and
          (local.get $2)
          (i32.const 255)
         )
        )
        (local.set $10
         (i32.load
          (local.get $0)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (i32.store offset=8
         (local.get $0)
         (local.get $3)
        )
        (local.set $3
         (i32.sub
          (local.get $6)
          (local.get $3)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (local.get $10)
         )
        )
        (i32.store8
         (local.get $3)
         (local.get $7)
        )
        (i32.const 0)
       )
       (i32.const -1)
      )
     )
     ;;@ celt/entenc.c:201:0
     (local.set $6
      (i32.load offset=44
       (local.get $0)
      )
     )
     (local.set $3
      (i32.or
       (local.get $3)
       (local.get $6)
      )
     )
     (i32.store offset=44
      (local.get $0)
      (local.get $3)
     )
     ;;@ celt/entenc.c:202:0
     (local.set $2
      (i32.shr_u
       (local.get $2)
       (i32.const 8)
      )
     )
     ;;@ celt/entenc.c:203:0
     (local.set $3
      (i32.add
       (local.get $1)
       (i32.const -8)
      )
     )
     (if
      ;;@ celt/entenc.c:205:0
      (i32.gt_s
       (local.get $1)
       (i32.const 15)
      )
      (block
       (local.set $1
        (local.get $3)
       )
       (br $while-in)
      )
     )
    )
    ;;@ celt/entenc.c:200:0
    (local.set $1
     (i32.and
      (local.get $9)
      (i32.const -8)
     )
    )
    (local.set $4
     (i32.add
      (local.get $4)
      (i32.const -8)
     )
    )
    (local.set $4
     (i32.sub
      (local.get $4)
      (local.get $1)
     )
    )
    ;;@ celt/entenc.c:208:0
    (local.set $1
     (i32.add
      (local.get $4)
      (local.get $5)
     )
    )
   )
  )
  ;;@ celt/entenc.c:207:0
  (local.set $4
   (i32.shl
    (local.get $8)
    (local.get $4)
   )
  )
  (local.set $2
   (i32.or
    (local.get $2)
    (local.get $4)
   )
  )
  ;;@ celt/entenc.c:209:0
  (i32.store offset=12
   (local.get $0)
   (local.get $2)
  )
  ;;@ celt/entenc.c:210:0
  (i32.store offset=16
   (local.get $0)
   (local.get $1)
  )
  ;;@ celt/entenc.c:211:0
  (local.set $1
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $1
   (i32.add
    (local.get $1)
    (local.get $5)
   )
  )
  (i32.store offset=20
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_ec_enc_bits (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  ;;@ celt/entenc.c:196:0
  (local.set $3
   (i32.load offset=12
    (local.get $0)
   )
  )
  (if
   ;;@ celt/entenc.c:199:0
   (i32.le_u
    (local.tee $2
     (i32.add
      ;;@ celt/entenc.c:197:0
      (local.tee $4
       (i32.load offset=16
        (local.get $0)
       )
      )
      (i32.const 1)
     )
    )
    (i32.const 32)
   )
   (block
    ;;@ celt/entenc.c:209:0
    (i32.store offset=12
     (local.get $0)
     (i32.or
      (i32.shl
       (local.get $1)
       (local.get $4)
      )
      (local.get $3)
     )
    )
    ;;@ celt/entenc.c:210:0
    (i32.store offset=16
     (local.get $0)
     (local.get $2)
    )
    ;;@ celt/entenc.c:211:0
    (i32.store offset=20
     (local.get $0)
     (i32.add
      (i32.load offset=20
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    ;;@ celt/entenc.c:212:0
    (return)
   )
  )
  ;;@ celt/entenc.c:200:0
  (local.set $6
   (i32.and
    (i32.add
     (i32.add
      (select
       (local.tee $2
        (i32.xor
         (local.get $4)
         (i32.const -1)
        )
       )
       (i32.const -16)
       (i32.gt_s
        (local.get $2)
        (i32.const -16)
       )
      )
      (local.get $4)
     )
     (i32.const 8)
    )
    (i32.const -8)
   )
  )
  (local.set $2
   (local.get $4)
  )
  (loop $while-in
   ;;@ celt/entenc.c:201:0
   (i32.store offset=44
    (local.get $0)
    (i32.or
     (if (result i32)
      ;;@ celt/entenc.c:67:0
      (i32.lt_u
       (i32.add
        (local.tee $5
         (i32.load offset=8
          (local.get $0)
         )
        )
        (i32.load offset=24
         (local.get $0)
        )
       )
       (local.tee $7
        (i32.load offset=4
         (local.get $0)
        )
       )
      )
      (block (result i32)
       ;;@ celt/entenc.c:68:0
       (local.set $8
        (i32.load
         (local.get $0)
        )
       )
       (i32.store offset=8
        (local.get $0)
        (local.tee $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
       )
       (i32.store8
        (i32.add
         (i32.sub
          (local.get $7)
          (local.get $5)
         )
         (local.get $8)
        )
        (local.get $3)
       )
       (i32.const 0)
      )
      (i32.const -1)
     )
     (i32.load offset=44
      (local.get $0)
     )
    )
   )
   ;;@ celt/entenc.c:202:0
   (local.set $3
    (i32.shr_u
     (local.get $3)
     (i32.const 8)
    )
   )
   ;;@ celt/entenc.c:203:0
   (local.set $5
    (i32.add
     (local.get $2)
     (i32.const -8)
    )
   )
   (if
    ;;@ celt/entenc.c:205:0
    (i32.gt_s
     (local.get $2)
     (i32.const 15)
    )
    (block
     (local.set $2
      (local.get $5)
     )
     (br $while-in)
    )
   )
  )
  ;;@ celt/entenc.c:209:0
  (i32.store offset=12
   (local.get $0)
   (i32.or
    (i32.shl
     (local.get $1)
     ;;@ celt/entenc.c:200:0
     (local.tee $1
      (i32.sub
       (i32.add
        (local.get $4)
        (i32.const -8)
       )
       (local.get $6)
      )
     )
    )
    (local.get $3)
   )
  )
  ;;@ celt/entenc.c:210:0
  (i32.store offset=16
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  ;;@ celt/entenc.c:211:0
  (i32.store offset=20
   (local.get $0)
   (i32.add
    (i32.load offset=20
     (local.get $0)
    )
    (i32.const 1)
   )
  )
 )
 (func $_opus_fft_impl (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 f32)
  (local $4 f32)
  (local $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 f32)
  (local $26 i32)
  (local $27 f32)
  (local $28 f32)
  (local $29 i32)
  (local $30 f32)
  (local $31 f32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 f32)
  (local $36 f32)
  (local $37 i32)
  (local $38 f32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local.set $32
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  ;;@ celt/kiss_fft.c:531:0
  (local.set $12
   (i32.load offset=8
    (local.get $0)
   )
  )
  (local.set $18
   (i32.gt_s
    (local.get $12)
    (i32.const 0)
   )
  )
  ;;@ celt/kiss_fft.c:533:0
  (i32.store
   (local.get $32)
   (i32.const 1)
  )
  (local.set $2
   (i32.const 1)
  )
  (loop $while-in
   ;;@ celt/kiss_fft.c:536:0
   (local.set $5
    (i32.shl
     (local.get $26)
     (i32.const 1)
    )
   )
   (local.set $11
    (i32.add
     (i32.add
      (local.get $0)
      (i32.const 12)
     )
     (i32.shl
      (local.get $5)
      (i32.const 1)
     )
    )
   )
   (local.set $11
    (i32.load16_s
     (local.get $11)
    )
   )
   ;;@ celt/kiss_fft.c:537:0
   (local.set $5
    (i32.or
     (local.get $5)
     (i32.const 1)
    )
   )
   (local.set $5
    (i32.add
     (i32.add
      (local.get $0)
      (i32.const 12)
     )
     (i32.shl
      (local.get $5)
      (i32.const 1)
     )
    )
   )
   (local.set $33
    (i32.load16_s
     (local.get $5)
    )
   )
   ;;@ celt/kiss_fft.c:538:0
   (local.set $5
    (i32.mul
     (local.get $2)
     (local.get $11)
    )
   )
   (local.set $2
    (i32.add
     (local.get $26)
     (i32.const 1)
    )
   )
   (local.set $11
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
     (local.get $32)
    )
   )
   (i32.store
    (local.get $11)
    (local.get $5)
   )
   (if
    ;;@ celt/kiss_fft.c:540:0
    (i32.ne
     (local.get $33)
     (i32.const 1)
    )
    (block
     (local.set $26
      (local.get $2)
     )
     (local.set $2
      (local.get $5)
     )
     (br $while-in)
    )
   )
  )
  ;;@ celt/kiss_fft.c:531:0
  (local.set $42
   (select
    (local.get $12)
    (i32.const 0)
    (local.get $18)
   )
  )
  ;;@ celt/kiss_fft.c:541:0
  (local.set $2
   (i32.shl
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.add
    (local.get $2)
    (i32.const -1)
   )
  )
  (local.set $2
   (i32.add
    (i32.add
     (local.get $0)
     (i32.const 12)
    )
    (i32.shl
     (local.get $2)
     (i32.const 1)
    )
   )
  )
  (local.set $2
   (i32.load16_s
    (local.get $2)
   )
  )
  ;;@ celt/kiss_fft.c:567:0
  (block $__rjto$1
   (block $__rjti$1
    (loop $label$continue$L4
     (block $__rjti$0
      (if
       ;;@ celt/kiss_fft.c:544:0
       (local.get $26)
       ;;@ celt/kiss_fft.c:545:0
       (block
        (local.set $5
         (i32.shl
          (local.get $26)
          (i32.const 1)
         )
        )
        (local.set $12
         (i32.add
          (local.get $5)
          (i32.const -1)
         )
        )
        (local.set $12
         (i32.add
          (i32.add
           (local.get $0)
           (i32.const 12)
          )
          (i32.shl
           (local.get $12)
           (i32.const 1)
          )
         )
        )
        (local.set $33
         (i32.load16_s
          (local.get $12)
         )
        )
       )
       (block
        (local.set $33
         (i32.const 1)
        )
        (local.set $5
         (i32.const 0)
        )
       )
      )
      ;;@ celt/kiss_fft.c:548:0
      (local.set $5
       (i32.add
        (i32.add
         (local.get $0)
         (i32.const 12)
        )
        (i32.shl
         (local.get $5)
         (i32.const 1)
        )
       )
      )
      (local.set $5
       (i32.load16_s
        (local.get $5)
       )
      )
      (block $label$break$L9
       (block $switch-case18
        (block $switch-case13
         (block $switch-case8
          (block $switch-case
           (br_table $switch-case $switch-case13 $switch-case8 $switch-case18 $label$break$L9
            (i32.sub
             (local.get $5)
             (i32.const 2)
            )
           )
          )
          ;;@ celt/kiss_fft.c:551:0
          (local.set $5
           (i32.add
            (i32.shl
             (local.get $26)
             (i32.const 2)
            )
            (local.get $32)
           )
          )
          (local.set $12
           (i32.load
            (local.get $5)
           )
          )
          ;;@ celt/kiss_fft.c:76:0
          (br_if $__rjti$0
           (i32.ne
            (local.get $2)
            (i32.const 4)
           )
          )
          (if
           ;;@ celt/kiss_fft.c:77:0
           (i32.gt_s
            (local.get $12)
            (i32.const 0)
           )
           (block
            (local.set $5
             (i32.const 0)
            )
            (local.set $2
             (local.get $1)
            )
            (loop $while-in1
             ;;@ celt/kiss_fft.c:81:0
             (local.set $6
              (f32.load offset=32
               (local.get $2)
              )
             )
             (local.set $3
              (f32.load offset=36
               (local.get $2)
              )
             )
             ;;@ celt/kiss_fft.c:82:0
             (local.set $7
              (f32.load
               (local.get $2)
              )
             )
             (local.set $4
              (f32.sub
               (local.get $7)
               (local.get $6)
              )
             )
             (f32.store offset=32
              (local.get $2)
              (local.get $4)
             )
             (local.set $4
              (f32.load offset=4
               (local.get $2)
              )
             )
             (local.set $10
              (f32.sub
               (local.get $4)
               (local.get $3)
              )
             )
             (f32.store offset=36
              (local.get $2)
              (local.get $10)
             )
             ;;@ celt/kiss_fft.c:83:0
             (local.set $6
              (f32.add
               (local.get $6)
               (local.get $7)
              )
             )
             (f32.store
              (local.get $2)
              (local.get $6)
             )
             (local.set $6
              (f32.add
               (local.get $3)
               (local.get $4)
              )
             )
             (f32.store offset=4
              (local.get $2)
              (local.get $6)
             )
             ;;@ celt/kiss_fft.c:85:0
             (local.set $6
              (f32.load offset=40
               (local.get $2)
              )
             )
             (local.set $3
              (f32.load offset=44
               (local.get $2)
              )
             )
             (local.set $7
              (f32.add
               (local.get $6)
               (local.get $3)
              )
             )
             (local.set $7
              (f32.mul
               (local.get $7)
               (f32.const 0.7071067690849304)
              )
             )
             ;;@ celt/kiss_fft.c:86:0
             (local.set $6
              (f32.sub
               (local.get $3)
               (local.get $6)
              )
             )
             (local.set $6
              (f32.mul
               (local.get $6)
               (f32.const 0.7071067690849304)
              )
             )
             ;;@ celt/kiss_fft.c:87:0
             (local.set $3
              (f32.load offset=8
               (local.get $2)
              )
             )
             (local.set $4
              (f32.sub
               (local.get $3)
               (local.get $7)
              )
             )
             (f32.store offset=40
              (local.get $2)
              (local.get $4)
             )
             (local.set $4
              (f32.load offset=12
               (local.get $2)
              )
             )
             (local.set $10
              (f32.sub
               (local.get $4)
               (local.get $6)
              )
             )
             (f32.store offset=44
              (local.get $2)
              (local.get $10)
             )
             ;;@ celt/kiss_fft.c:88:0
             (local.set $3
              (f32.add
               (local.get $3)
               (local.get $7)
              )
             )
             (f32.store offset=8
              (local.get $2)
              (local.get $3)
             )
             (local.set $6
              (f32.add
               (local.get $6)
               (local.get $4)
              )
             )
             (f32.store offset=12
              (local.get $2)
              (local.get $6)
             )
             ;;@ celt/kiss_fft.c:90:0
             (local.set $6
              (f32.load offset=52
               (local.get $2)
              )
             )
             ;;@ celt/kiss_fft.c:91:0
             (local.set $3
              (f32.load offset=48
               (local.get $2)
              )
             )
             ;;@ celt/kiss_fft.c:92:0
             (local.set $7
              (f32.load offset=16
               (local.get $2)
              )
             )
             (local.set $4
              (f32.sub
               (local.get $7)
               (local.get $6)
              )
             )
             (f32.store offset=48
              (local.get $2)
              (local.get $4)
             )
             (local.set $4
              (f32.load offset=20
               (local.get $2)
              )
             )
             (local.set $10
              (f32.add
               (local.get $3)
               (local.get $4)
              )
             )
             (f32.store offset=52
              (local.get $2)
              (local.get $10)
             )
             ;;@ celt/kiss_fft.c:93:0
             (local.set $6
              (f32.add
               (local.get $6)
               (local.get $7)
              )
             )
             (f32.store offset=16
              (local.get $2)
              (local.get $6)
             )
             (local.set $6
              (f32.sub
               (local.get $4)
               (local.get $3)
              )
             )
             (f32.store offset=20
              (local.get $2)
              (local.get $6)
             )
             ;;@ celt/kiss_fft.c:95:0
             (local.set $6
              (f32.load offset=60
               (local.get $2)
              )
             )
             (local.set $3
              (f32.load offset=56
               (local.get $2)
              )
             )
             (local.set $7
              (f32.sub
               (local.get $6)
               (local.get $3)
              )
             )
             (local.set $7
              (f32.mul
               (local.get $7)
               (f32.const 0.7071067690849304)
              )
             )
             ;;@ celt/kiss_fft.c:96:0
             (local.set $6
              (f32.add
               (local.get $6)
               (local.get $3)
              )
             )
             (local.set $6
              (f32.mul
               (local.get $6)
               (f32.const -0.7071067690849304)
              )
             )
             ;;@ celt/kiss_fft.c:97:0
             (local.set $3
              (f32.load offset=24
               (local.get $2)
              )
             )
             (local.set $4
              (f32.sub
               (local.get $3)
               (local.get $7)
              )
             )
             (f32.store offset=56
              (local.get $2)
              (local.get $4)
             )
             (local.set $4
              (f32.load offset=28
               (local.get $2)
              )
             )
             (local.set $10
              (f32.sub
               (local.get $4)
               (local.get $6)
              )
             )
             (f32.store offset=60
              (local.get $2)
              (local.get $10)
             )
             ;;@ celt/kiss_fft.c:98:0
             (local.set $3
              (f32.add
               (local.get $3)
               (local.get $7)
              )
             )
             (f32.store offset=24
              (local.get $2)
              (local.get $3)
             )
             (local.set $6
              (f32.add
               (local.get $6)
               (local.get $4)
              )
             )
             (f32.store offset=28
              (local.get $2)
              (local.get $6)
             )
             ;;@ celt/kiss_fft.c:99:0
             (local.set $2
              (i32.sub
               (local.get $2)
               (i32.const -64)
              )
             )
             ;;@ celt/kiss_fft.c:77:0
             (local.set $5
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (br_if $while-in1
              (i32.ne
               (local.get $5)
               (local.get $12)
              )
             )
            )
           )
          )
          (br $label$break$L9)
         )
         ;;@ celt/kiss_fft.c:554:0
         (local.set $5
          (i32.add
           (i32.shl
            (local.get $26)
            (i32.const 2)
           )
           (local.get $32)
          )
         )
         (local.set $17
          (i32.load
           (local.get $5)
          )
         )
         (local.set $24
          (i32.shl
           (local.get $17)
           (local.get $42)
          )
         )
         (if
          ;;@ celt/kiss_fft.c:115:0
          (i32.eq
           (local.get $2)
           (i32.const 1)
          )
          (block
           ;;@ celt/kiss_fft.c:118:0
           (br_if $label$break$L9
            (i32.le_s
             (local.get $17)
             (i32.const 0)
            )
           )
           (local.set $5
            (i32.const 0)
           )
           (local.set $2
            (local.get $1)
           )
           (loop $while-in3
            ;;@ celt/kiss_fft.c:122:0
            (local.set $6
             (f32.load
              (local.get $2)
             )
            )
            (local.set $3
             (f32.load offset=16
              (local.get $2)
             )
            )
            (local.set $7
             (f32.sub
              (local.get $6)
              (local.get $3)
             )
            )
            (local.set $4
             (f32.load offset=4
              (local.get $2)
             )
            )
            (local.set $10
             (f32.load offset=20
              (local.get $2)
             )
            )
            (local.set $13
             (f32.sub
              (local.get $4)
              (local.get $10)
             )
            )
            ;;@ celt/kiss_fft.c:123:0
            (local.set $6
             (f32.add
              (local.get $6)
              (local.get $3)
             )
            )
            (local.set $3
             (f32.add
              (local.get $4)
              (local.get $10)
             )
            )
            ;;@ celt/kiss_fft.c:124:0
            (local.set $4
             (f32.load offset=8
              (local.get $2)
             )
            )
            (local.set $10
             (f32.load offset=24
              (local.get $2)
             )
            )
            (local.set $8
             (f32.add
              (local.get $4)
              (local.get $10)
             )
            )
            (local.set $9
             (f32.load offset=12
              (local.get $2)
             )
            )
            (local.set $14
             (f32.load offset=28
              (local.get $2)
             )
            )
            (local.set $15
             (f32.add
              (local.get $9)
              (local.get $14)
             )
            )
            ;;@ celt/kiss_fft.c:125:0
            (local.set $27
             (f32.sub
              (local.get $6)
              (local.get $8)
             )
            )
            (f32.store offset=16
             (local.get $2)
             (local.get $27)
            )
            (local.set $27
             (f32.sub
              (local.get $3)
              (local.get $15)
             )
            )
            (f32.store offset=20
             (local.get $2)
             (local.get $27)
            )
            ;;@ celt/kiss_fft.c:126:0
            (local.set $6
             (f32.add
              (local.get $6)
              (local.get $8)
             )
            )
            (f32.store
             (local.get $2)
             (local.get $6)
            )
            (local.set $6
             (f32.add
              (local.get $3)
              (local.get $15)
             )
            )
            (f32.store offset=4
             (local.get $2)
             (local.get $6)
            )
            ;;@ celt/kiss_fft.c:127:0
            (local.set $6
             (f32.sub
              (local.get $4)
              (local.get $10)
             )
            )
            (local.set $3
             (f32.sub
              (local.get $9)
              (local.get $14)
             )
            )
            ;;@ celt/kiss_fft.c:129:0
            (local.set $4
             (f32.add
              (local.get $7)
              (local.get $3)
             )
            )
            (f32.store offset=8
             (local.get $2)
             (local.get $4)
            )
            ;;@ celt/kiss_fft.c:130:0
            (local.set $4
             (f32.sub
              (local.get $13)
              (local.get $6)
             )
            )
            (f32.store offset=12
             (local.get $2)
             (local.get $4)
            )
            ;;@ celt/kiss_fft.c:131:0
            (local.set $3
             (f32.sub
              (local.get $7)
              (local.get $3)
             )
            )
            (f32.store offset=24
             (local.get $2)
             (local.get $3)
            )
            ;;@ celt/kiss_fft.c:132:0
            (local.set $6
             (f32.add
              (local.get $13)
              (local.get $6)
             )
            )
            (f32.store offset=28
             (local.get $2)
             (local.get $6)
            )
            ;;@ celt/kiss_fft.c:133:0
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 32)
             )
            )
            ;;@ celt/kiss_fft.c:118:0
            (local.set $5
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (br_if $while-in3
             (i32.ne
              (local.get $5)
              (local.get $17)
             )
            )
           )
           (br $label$break$L9)
          )
         )
         ;;@ celt/kiss_fft.c:139:0
         (local.set $29
          (i32.shl
           (local.get $2)
           (i32.const 1)
          )
         )
         ;;@ celt/kiss_fft.c:140:0
         (local.set $19
          (i32.mul
           (local.get $2)
           (i32.const 3)
          )
         )
         (if
          ;;@ celt/kiss_fft.c:142:0
          (i32.gt_s
           (local.get $17)
           (i32.const 0)
          )
          (block
           (local.set $18
            (i32.load offset=48
             (local.get $0)
            )
           )
           (local.set $43
            (i32.shl
             (local.get $24)
             (i32.const 1)
            )
           )
           (local.set $44
            (i32.mul
             (local.get $24)
             (i32.const 3)
            )
           )
           (if
            (i32.gt_s
             (local.get $2)
             (i32.const 0)
            )
            (block
             (local.set $22
              (i32.const 0)
             )
             (loop $while-in5
              ;;@ celt/kiss_fft.c:144:0
              (local.set $11
               (i32.mul
                (local.get $22)
                (local.get $33)
               )
              )
              (local.set $23
               (i32.const 0)
              )
              (local.set $21
               (local.tee $5
                (local.get $18)
               )
              )
              (local.set $12
               (local.get $5)
              )
              (local.set $11
               (i32.add
                (i32.shl
                 (local.get $11)
                 (i32.const 3)
                )
                (local.get $1)
               )
              )
              (loop $while-in7
               ;;@ celt/kiss_fft.c:149:0
               (local.set $20
                (i32.add
                 (i32.shl
                  (local.get $2)
                  (i32.const 3)
                 )
                 (local.get $11)
                )
               )
               (local.set $6
                (f32.load
                 (local.get $20)
                )
               )
               (local.set $3
                (f32.load
                 (local.get $12)
                )
               )
               (local.set $10
                (f32.mul
                 (local.get $6)
                 (local.get $3)
                )
               )
               (local.set $34
                (i32.add
                 (i32.shl
                  (local.get $2)
                  (i32.const 3)
                 )
                 (local.get $11)
                )
               )
               (local.set $7
                (f32.load offset=4
                 (local.get $34)
                )
               )
               (local.set $4
                (f32.load offset=4
                 (local.get $12)
                )
               )
               (local.set $13
                (f32.mul
                 (local.get $7)
                 (local.get $4)
                )
               )
               (local.set $10
                (f32.sub
                 (local.get $10)
                 (local.get $13)
                )
               )
               (local.set $6
                (f32.mul
                 (local.get $6)
                 (local.get $4)
                )
               )
               (local.set $3
                (f32.mul
                 (local.get $3)
                 (local.get $7)
                )
               )
               (local.set $6
                (f32.add
                 (local.get $3)
                 (local.get $6)
                )
               )
               ;;@ celt/kiss_fft.c:150:0
               (local.set $37
                (i32.add
                 (i32.shl
                  (local.get $29)
                  (i32.const 3)
                 )
                 (local.get $11)
                )
               )
               (local.set $3
                (f32.load
                 (local.get $37)
                )
               )
               (local.set $7
                (f32.load
                 (local.get $21)
                )
               )
               (local.set $8
                (f32.mul
                 (local.get $3)
                 (local.get $7)
                )
               )
               (local.set $39
                (i32.add
                 (i32.shl
                  (local.get $29)
                  (i32.const 3)
                 )
                 (local.get $11)
                )
               )
               (local.set $4
                (f32.load offset=4
                 (local.get $39)
                )
               )
               (local.set $13
                (f32.load offset=4
                 (local.get $21)
                )
               )
               (local.set $9
                (f32.mul
                 (local.get $4)
                 (local.get $13)
                )
               )
               (local.set $8
                (f32.sub
                 (local.get $8)
                 (local.get $9)
                )
               )
               (local.set $3
                (f32.mul
                 (local.get $3)
                 (local.get $13)
                )
               )
               (local.set $7
                (f32.mul
                 (local.get $7)
                 (local.get $4)
                )
               )
               (local.set $3
                (f32.add
                 (local.get $7)
                 (local.get $3)
                )
               )
               ;;@ celt/kiss_fft.c:151:0
               (local.set $40
                (i32.add
                 (i32.shl
                  (local.get $19)
                  (i32.const 3)
                 )
                 (local.get $11)
                )
               )
               (local.set $7
                (f32.load
                 (local.get $40)
                )
               )
               (local.set $4
                (f32.load
                 (local.get $5)
                )
               )
               (local.set $14
                (f32.mul
                 (local.get $7)
                 (local.get $4)
                )
               )
               (local.set $41
                (i32.add
                 (i32.shl
                  (local.get $19)
                  (i32.const 3)
                 )
                 (local.get $11)
                )
               )
               (local.set $13
                (f32.load offset=4
                 (local.get $41)
                )
               )
               (local.set $9
                (f32.load offset=4
                 (local.get $5)
                )
               )
               (local.set $15
                (f32.mul
                 (local.get $13)
                 (local.get $9)
                )
               )
               (local.set $14
                (f32.sub
                 (local.get $14)
                 (local.get $15)
                )
               )
               (local.set $7
                (f32.mul
                 (local.get $7)
                 (local.get $9)
                )
               )
               (local.set $4
                (f32.mul
                 (local.get $4)
                 (local.get $13)
                )
               )
               (local.set $7
                (f32.add
                 (local.get $4)
                 (local.get $7)
                )
               )
               ;;@ celt/kiss_fft.c:153:0
               (local.set $4
                (f32.load
                 (local.get $11)
                )
               )
               (local.set $13
                (f32.sub
                 (local.get $4)
                 (local.get $8)
                )
               )
               (local.set $9
                (f32.load offset=4
                 (local.get $11)
                )
               )
               (local.set $15
                (f32.sub
                 (local.get $9)
                 (local.get $3)
                )
               )
               ;;@ celt/kiss_fft.c:154:0
               (local.set $4
                (f32.add
                 (local.get $8)
                 (local.get $4)
                )
               )
               (f32.store
                (local.get $11)
                (local.get $4)
               )
               (local.set $3
                (f32.add
                 (local.get $3)
                 (local.get $9)
                )
               )
               (f32.store offset=4
                (local.get $11)
                (local.get $3)
               )
               ;;@ celt/kiss_fft.c:155:0
               (local.set $8
                (f32.add
                 (local.get $10)
                 (local.get $14)
                )
               )
               (local.set $9
                (f32.add
                 (local.get $6)
                 (local.get $7)
                )
               )
               ;;@ celt/kiss_fft.c:156:0
               (local.set $10
                (f32.sub
                 (local.get $10)
                 (local.get $14)
                )
               )
               (local.set $6
                (f32.sub
                 (local.get $6)
                 (local.get $7)
                )
               )
               ;;@ celt/kiss_fft.c:157:0
               (local.set $7
                (f32.sub
                 (local.get $4)
                 (local.get $8)
                )
               )
               (f32.store
                (local.get $37)
                (local.get $7)
               )
               (local.set $3
                (f32.sub
                 (local.get $3)
                 (local.get $9)
                )
               )
               (f32.store offset=4
                (local.get $39)
                (local.get $3)
               )
               ;;@ celt/kiss_fft.c:158:0
               (local.set $12
                (i32.add
                 (i32.shl
                  (local.get $24)
                  (i32.const 3)
                 )
                 (local.get $12)
                )
               )
               ;;@ celt/kiss_fft.c:159:0
               (local.set $21
                (i32.add
                 (i32.shl
                  (local.get $43)
                  (i32.const 3)
                 )
                 (local.get $21)
                )
               )
               ;;@ celt/kiss_fft.c:160:0
               (local.set $5
                (i32.add
                 (i32.shl
                  (local.get $44)
                  (i32.const 3)
                 )
                 (local.get $5)
                )
               )
               ;;@ celt/kiss_fft.c:161:0
               (local.set $3
                (f32.load
                 (local.get $11)
                )
               )
               (local.set $3
                (f32.add
                 (local.get $8)
                 (local.get $3)
                )
               )
               (f32.store
                (local.get $11)
                (local.get $3)
               )
               (local.set $3
                (f32.load offset=4
                 (local.get $11)
                )
               )
               (local.set $3
                (f32.add
                 (local.get $9)
                 (local.get $3)
                )
               )
               (f32.store offset=4
                (local.get $11)
                (local.get $3)
               )
               ;;@ celt/kiss_fft.c:163:0
               (local.set $3
                (f32.add
                 (local.get $13)
                 (local.get $6)
                )
               )
               (f32.store
                (local.get $20)
                (local.get $3)
               )
               ;;@ celt/kiss_fft.c:164:0
               (local.set $3
                (f32.sub
                 (local.get $15)
                 (local.get $10)
                )
               )
               (f32.store offset=4
                (local.get $34)
                (local.get $3)
               )
               ;;@ celt/kiss_fft.c:165:0
               (local.set $6
                (f32.sub
                 (local.get $13)
                 (local.get $6)
                )
               )
               (f32.store
                (local.get $40)
                (local.get $6)
               )
               ;;@ celt/kiss_fft.c:166:0
               (local.set $6
                (f32.add
                 (local.get $15)
                 (local.get $10)
                )
               )
               (f32.store offset=4
                (local.get $41)
                (local.get $6)
               )
               ;;@ celt/kiss_fft.c:167:0
               (local.set $11
                (i32.add
                 (local.get $11)
                 (i32.const 8)
                )
               )
               ;;@ celt/kiss_fft.c:147:0
               (local.set $23
                (i32.add
                 (local.get $23)
                 (i32.const 1)
                )
               )
               (br_if $while-in7
                (i32.ne
                 (local.get $2)
                 (local.get $23)
                )
               )
              )
              ;;@ celt/kiss_fft.c:142:0
              (local.set $22
               (i32.add
                (local.get $22)
                (i32.const 1)
               )
              )
              (br_if $while-in5
               (i32.ne
                (local.get $17)
                (local.get $22)
               )
              )
             )
            )
           )
          )
         )
         (br $label$break$L9)
        )
        ;;@ celt/kiss_fft.c:558:0
        (local.set $5
         (i32.add
          (i32.shl
           (local.get $26)
           (i32.const 2)
          )
          (local.get $32)
         )
        )
        (local.set $24
         (i32.load
          (local.get $5)
         )
        )
        (local.set $29
         (i32.shl
          (local.get $24)
          (local.get $42)
         )
        )
        (local.set $22
         (i32.load offset=48
          (local.get $0)
         )
        )
        ;;@ celt/kiss_fft.c:187:0
        (local.set $19
         (i32.shl
          (local.get $2)
          (i32.const 1)
         )
        )
        ;;@ celt/kiss_fft.c:197:0
        (local.set $5
         (i32.mul
          (local.get $2)
          (local.get $29)
         )
        )
        (local.set $5
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 3)
          )
          (local.get $22)
         )
        )
        (local.set $6
         (f32.load offset=4
          (local.get $5)
         )
        )
        (if
         ;;@ celt/kiss_fft.c:199:0
         (i32.gt_s
          (local.get $24)
          (i32.const 0)
         )
         (block
          (local.set $37
           (i32.shl
            (local.get $29)
            (i32.const 1)
           )
          )
          (local.set $21
           (i32.const 0)
          )
          (loop $while-in10
           ;;@ celt/kiss_fft.c:201:0
           (local.set $5
            (i32.mul
             (local.get $21)
             (local.get $33)
            )
           )
           (local.set $18
            (i32.add
             (i32.shl
              (local.get $5)
              (i32.const 3)
             )
             (local.get $1)
            )
           )
           (local.set $12
            (local.get $2)
           )
           (local.set $11
            (local.tee $5
             (local.get $22)
            )
           )
           (loop $while-in12
            ;;@ celt/kiss_fft.c:207:0
            (local.set $23
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 3)
              )
              (local.get $18)
             )
            )
            (local.set $3
             (f32.load
              (local.get $23)
             )
            )
            (local.set $7
             (f32.load
              (local.get $5)
             )
            )
            (local.set $13
             (f32.mul
              (local.get $3)
              (local.get $7)
             )
            )
            (local.set $17
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 3)
              )
              (local.get $18)
             )
            )
            (local.set $4
             (f32.load offset=4
              (local.get $17)
             )
            )
            (local.set $10
             (f32.load offset=4
              (local.get $5)
             )
            )
            (local.set $8
             (f32.mul
              (local.get $4)
              (local.get $10)
             )
            )
            (local.set $13
             (f32.sub
              (local.get $13)
              (local.get $8)
             )
            )
            (local.set $3
             (f32.mul
              (local.get $3)
              (local.get $10)
             )
            )
            (local.set $7
             (f32.mul
              (local.get $7)
              (local.get $4)
             )
            )
            (local.set $3
             (f32.add
              (local.get $7)
              (local.get $3)
             )
            )
            ;;@ celt/kiss_fft.c:208:0
            (local.set $20
             (i32.add
              (i32.shl
               (local.get $19)
               (i32.const 3)
              )
              (local.get $18)
             )
            )
            (local.set $7
             (f32.load
              (local.get $20)
             )
            )
            (local.set $4
             (f32.load
              (local.get $11)
             )
            )
            (local.set $9
             (f32.mul
              (local.get $7)
              (local.get $4)
             )
            )
            (local.set $34
             (i32.add
              (i32.shl
               (local.get $19)
               (i32.const 3)
              )
              (local.get $18)
             )
            )
            (local.set $10
             (f32.load offset=4
              (local.get $34)
             )
            )
            (local.set $8
             (f32.load offset=4
              (local.get $11)
             )
            )
            (local.set $14
             (f32.mul
              (local.get $10)
              (local.get $8)
             )
            )
            (local.set $9
             (f32.sub
              (local.get $9)
              (local.get $14)
             )
            )
            (local.set $7
             (f32.mul
              (local.get $7)
              (local.get $8)
             )
            )
            (local.set $4
             (f32.mul
              (local.get $4)
              (local.get $10)
             )
            )
            (local.set $7
             (f32.add
              (local.get $4)
              (local.get $7)
             )
            )
            ;;@ celt/kiss_fft.c:210:0
            (local.set $4
             (f32.add
              (local.get $13)
              (local.get $9)
             )
            )
            (local.set $10
             (f32.add
              (local.get $3)
              (local.get $7)
             )
            )
            ;;@ celt/kiss_fft.c:211:0
            (local.set $13
             (f32.sub
              (local.get $13)
              (local.get $9)
             )
            )
            (local.set $7
             (f32.sub
              (local.get $3)
              (local.get $7)
             )
            )
            ;;@ celt/kiss_fft.c:212:0
            (local.set $5
             (i32.add
              (i32.shl
               (local.get $29)
               (i32.const 3)
              )
              (local.get $5)
             )
            )
            ;;@ celt/kiss_fft.c:213:0
            (local.set $11
             (i32.add
              (i32.shl
               (local.get $37)
               (i32.const 3)
              )
              (local.get $11)
             )
            )
            ;;@ celt/kiss_fft.c:215:0
            (local.set $3
             (f32.load
              (local.get $18)
             )
            )
            (local.set $8
             (f32.mul
              (local.get $4)
              (f32.const 0.5)
             )
            )
            (local.set $3
             (f32.sub
              (local.get $3)
              (local.get $8)
             )
            )
            (f32.store
             (local.get $23)
             (local.get $3)
            )
            ;;@ celt/kiss_fft.c:216:0
            (local.set $3
             (f32.load offset=4
              (local.get $18)
             )
            )
            (local.set $8
             (f32.mul
              (local.get $10)
              (f32.const 0.5)
             )
            )
            (local.set $3
             (f32.sub
              (local.get $3)
              (local.get $8)
             )
            )
            (f32.store offset=4
             (local.get $17)
             (local.get $3)
            )
            ;;@ celt/kiss_fft.c:218:0
            (local.set $3
             (f32.mul
              (local.get $6)
              (local.get $13)
             )
            )
            (local.set $7
             (f32.mul
              (local.get $6)
              (local.get $7)
             )
            )
            ;;@ celt/kiss_fft.c:220:0
            (local.set $13
             (f32.load
              (local.get $18)
             )
            )
            (local.set $4
             (f32.add
              (local.get $4)
              (local.get $13)
             )
            )
            (f32.store
             (local.get $18)
             (local.get $4)
            )
            (local.set $4
             (f32.load offset=4
              (local.get $18)
             )
            )
            (local.set $4
             (f32.add
              (local.get $10)
              (local.get $4)
             )
            )
            (f32.store offset=4
             (local.get $18)
             (local.get $4)
            )
            ;;@ celt/kiss_fft.c:222:0
            (local.set $4
             (f32.load
              (local.get $23)
             )
            )
            (local.set $4
             (f32.add
              (local.get $7)
              (local.get $4)
             )
            )
            (f32.store
             (local.get $20)
             (local.get $4)
            )
            ;;@ celt/kiss_fft.c:223:0
            (local.set $4
             (f32.load offset=4
              (local.get $17)
             )
            )
            (local.set $4
             (f32.sub
              (local.get $4)
              (local.get $3)
             )
            )
            (f32.store offset=4
             (local.get $34)
             (local.get $4)
            )
            ;;@ celt/kiss_fft.c:225:0
            (local.set $4
             (f32.load
              (local.get $23)
             )
            )
            (local.set $7
             (f32.sub
              (local.get $4)
              (local.get $7)
             )
            )
            (f32.store
             (local.get $23)
             (local.get $7)
            )
            ;;@ celt/kiss_fft.c:226:0
            (local.set $7
             (f32.load offset=4
              (local.get $17)
             )
            )
            (local.set $3
             (f32.add
              (local.get $3)
              (local.get $7)
             )
            )
            (f32.store offset=4
             (local.get $17)
             (local.get $3)
            )
            ;;@ celt/kiss_fft.c:228:0
            (local.set $18
             (i32.add
              (local.get $18)
              (i32.const 8)
             )
            )
            ;;@ celt/kiss_fft.c:229:0
            (local.set $12
             (i32.add
              (local.get $12)
              (i32.const -1)
             )
            )
            (br_if $while-in12
             (local.get $12)
            )
           )
           ;;@ celt/kiss_fft.c:199:0
           (local.set $21
            (i32.add
             (local.get $21)
             (i32.const 1)
            )
           )
           (br_if $while-in10
            (i32.ne
             (local.get $21)
             (local.get $24)
            )
           )
          )
         )
        )
        (br $label$break$L9)
       )
       ;;@ celt/kiss_fft.c:561:0
       (local.set $5
        (i32.add
         (i32.shl
          (local.get $26)
          (i32.const 2)
         )
         (local.get $32)
        )
       )
       (local.set $29
        (i32.load
         (local.get $5)
        )
       )
       (local.set $24
        (i32.shl
         (local.get $29)
         (local.get $42)
        )
       )
       (local.set $17
        (i32.load offset=48
         (local.get $0)
        )
       )
       ;;@ celt/kiss_fft.c:257:0
       (local.set $5
        (i32.mul
         (local.get $2)
         (local.get $24)
        )
       )
       (local.set $12
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 3)
         )
         (local.get $17)
        )
       )
       (local.set $6
        (f32.load
         (local.get $12)
        )
       )
       (local.set $5
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 3)
         )
         (local.get $17)
        )
       )
       (local.set $3
        (f32.load offset=4
         (local.get $5)
        )
       )
       ;;@ celt/kiss_fft.c:258:0
       (local.set $5
        (i32.shl
         (local.get $24)
         (i32.const 1)
        )
       )
       (local.set $5
        (i32.mul
         (local.get $2)
         (local.get $5)
        )
       )
       (local.set $12
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 3)
         )
         (local.get $17)
        )
       )
       (local.set $7
        (f32.load
         (local.get $12)
        )
       )
       (local.set $5
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 3)
         )
         (local.get $17)
        )
       )
       (local.set $4
        (f32.load offset=4
         (local.get $5)
        )
       )
       (if
        ;;@ celt/kiss_fft.c:262:0
        (i32.gt_s
         (local.get $29)
         (i32.const 0)
        )
        (block
         (local.set $34
          (i32.shl
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.set $37
          (i32.mul
           (local.get $2)
           (i32.const 3)
          )
         )
         (local.set $39
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
         )
         (local.set $40
          (i32.gt_s
           (local.get $2)
           (i32.const 0)
          )
         )
         (local.set $23
          (i32.const 0)
         )
         (loop $while-in15
          ;;@ celt/kiss_fft.c:264:0
          (local.set $5
           (i32.mul
            (local.get $23)
            (local.get $33)
           )
          )
          (local.set $11
           (i32.add
            (i32.shl
             (local.get $5)
             (i32.const 3)
            )
            (local.get $1)
           )
          )
          (if
           (local.get $40)
           (block
            ;;@ celt/kiss_fft.c:269:0
            (local.set $18
             (i32.add
              (i32.shl
               (local.get $39)
               (i32.const 3)
              )
              (local.get $11)
             )
            )
            ;;@ celt/kiss_fft.c:268:0
            (local.set $12
             (i32.add
              (i32.shl
               (local.get $37)
               (i32.const 3)
              )
              (local.get $11)
             )
            )
            ;;@ celt/kiss_fft.c:267:0
            (local.set $5
             (i32.add
              (i32.shl
               (local.get $34)
               (i32.const 3)
              )
              (local.get $11)
             )
            )
            ;;@ celt/kiss_fft.c:266:0
            (local.set $21
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 3)
              )
              (local.get $11)
             )
            )
            (local.set $22
             (i32.const 0)
            )
            (loop $while-in17
             ;;@ celt/kiss_fft.c:273:0
             (local.set $10
              (f32.load
               (local.get $11)
              )
             )
             (local.set $13
              (f32.load offset=4
               (local.get $11)
              )
             )
             ;;@ celt/kiss_fft.c:275:0
             (local.set $8
              (f32.load
               (local.get $21)
              )
             )
             (local.set $19
              (i32.mul
               (local.get $22)
               (local.get $24)
              )
             )
             (local.set $20
              (i32.add
               (i32.shl
                (local.get $19)
                (i32.const 3)
               )
               (local.get $17)
              )
             )
             (local.set $9
              (f32.load
               (local.get $20)
              )
             )
             (local.set $27
              (f32.mul
               (local.get $8)
               (local.get $9)
              )
             )
             (local.set $14
              (f32.load offset=4
               (local.get $21)
              )
             )
             (local.set $20
              (i32.add
               (i32.shl
                (local.get $19)
                (i32.const 3)
               )
               (local.get $17)
              )
             )
             (local.set $15
              (f32.load offset=4
               (local.get $20)
              )
             )
             (local.set $30
              (f32.mul
               (local.get $14)
               (local.get $15)
              )
             )
             (local.set $27
              (f32.sub
               (local.get $27)
               (local.get $30)
              )
             )
             (local.set $8
              (f32.mul
               (local.get $8)
               (local.get $15)
              )
             )
             (local.set $9
              (f32.mul
               (local.get $9)
               (local.get $14)
              )
             )
             (local.set $14
              (f32.add
               (local.get $9)
               (local.get $8)
              )
             )
             ;;@ celt/kiss_fft.c:276:0
             (local.set $8
              (f32.load
               (local.get $5)
              )
             )
             (local.set $20
              (i32.shl
               (local.get $22)
               (i32.const 1)
              )
             )
             (local.set $20
              (i32.mul
               (local.get $20)
               (local.get $24)
              )
             )
             (local.set $41
              (i32.add
               (i32.shl
                (local.get $20)
                (i32.const 3)
               )
               (local.get $17)
              )
             )
             (local.set $9
              (f32.load
               (local.get $41)
              )
             )
             (local.set $35
              (f32.mul
               (local.get $8)
               (local.get $9)
              )
             )
             (local.set $15
              (f32.load offset=4
               (local.get $5)
              )
             )
             (local.set $20
              (i32.add
               (i32.shl
                (local.get $20)
                (i32.const 3)
               )
               (local.get $17)
              )
             )
             (local.set $30
              (f32.load offset=4
               (local.get $20)
              )
             )
             (local.set $16
              (f32.mul
               (local.get $15)
               (local.get $30)
              )
             )
             (local.set $35
              (f32.sub
               (local.get $35)
               (local.get $16)
              )
             )
             (local.set $8
              (f32.mul
               (local.get $8)
               (local.get $30)
              )
             )
             (local.set $9
              (f32.mul
               (local.get $9)
               (local.get $15)
              )
             )
             (local.set $30
              (f32.add
               (local.get $9)
               (local.get $8)
              )
             )
             ;;@ celt/kiss_fft.c:277:0
             (local.set $8
              (f32.load
               (local.get $12)
              )
             )
             (local.set $19
              (i32.mul
               (local.get $19)
               (i32.const 3)
              )
             )
             (local.set $20
              (i32.add
               (i32.shl
                (local.get $19)
                (i32.const 3)
               )
               (local.get $17)
              )
             )
             (local.set $9
              (f32.load
               (local.get $20)
              )
             )
             (local.set $25
              (f32.mul
               (local.get $8)
               (local.get $9)
              )
             )
             (local.set $15
              (f32.load offset=4
               (local.get $12)
              )
             )
             (local.set $19
              (i32.add
               (i32.shl
                (local.get $19)
                (i32.const 3)
               )
               (local.get $17)
              )
             )
             (local.set $16
              (f32.load offset=4
               (local.get $19)
              )
             )
             (local.set $36
              (f32.mul
               (local.get $15)
               (local.get $16)
              )
             )
             (local.set $25
              (f32.sub
               (local.get $25)
               (local.get $36)
              )
             )
             (local.set $8
              (f32.mul
               (local.get $8)
               (local.get $16)
              )
             )
             (local.set $9
              (f32.mul
               (local.get $9)
               (local.get $15)
              )
             )
             (local.set $16
              (f32.add
               (local.get $9)
               (local.get $8)
              )
             )
             ;;@ celt/kiss_fft.c:278:0
             (local.set $8
              (f32.load
               (local.get $18)
              )
             )
             (local.set $19
              (i32.shl
               (local.get $22)
               (i32.const 2)
              )
             )
             (local.set $19
              (i32.mul
               (local.get $19)
               (local.get $24)
              )
             )
             (local.set $20
              (i32.add
               (i32.shl
                (local.get $19)
                (i32.const 3)
               )
               (local.get $17)
              )
             )
             (local.set $9
              (f32.load
               (local.get $20)
              )
             )
             (local.set $28
              (f32.mul
               (local.get $8)
               (local.get $9)
              )
             )
             (local.set $15
              (f32.load offset=4
               (local.get $18)
              )
             )
             (local.set $19
              (i32.add
               (i32.shl
                (local.get $19)
                (i32.const 3)
               )
               (local.get $17)
              )
             )
             (local.set $36
              (f32.load offset=4
               (local.get $19)
              )
             )
             (local.set $31
              (f32.mul
               (local.get $15)
               (local.get $36)
              )
             )
             (local.set $28
              (f32.sub
               (local.get $28)
               (local.get $31)
              )
             )
             (local.set $8
              (f32.mul
               (local.get $8)
               (local.get $36)
              )
             )
             (local.set $9
              (f32.mul
               (local.get $9)
               (local.get $15)
              )
             )
             (local.set $15
              (f32.add
               (local.get $9)
               (local.get $8)
              )
             )
             ;;@ celt/kiss_fft.c:280:0
             (local.set $8
              (f32.add
               (local.get $27)
               (local.get $28)
              )
             )
             (local.set $9
              (f32.add
               (local.get $14)
               (local.get $15)
              )
             )
             ;;@ celt/kiss_fft.c:281:0
             (local.set $27
              (f32.sub
               (local.get $27)
               (local.get $28)
              )
             )
             (local.set $36
              (f32.sub
               (local.get $14)
               (local.get $15)
              )
             )
             ;;@ celt/kiss_fft.c:282:0
             (local.set $14
              (f32.add
               (local.get $35)
               (local.get $25)
              )
             )
             (local.set $15
              (f32.add
               (local.get $30)
               (local.get $16)
              )
             )
             ;;@ celt/kiss_fft.c:283:0
             (local.set $35
              (f32.sub
               (local.get $35)
               (local.get $25)
              )
             )
             (local.set $30
              (f32.sub
               (local.get $30)
               (local.get $16)
              )
             )
             ;;@ celt/kiss_fft.c:285:0
             (local.set $16
              (f32.add
               (local.get $14)
               (local.get $8)
              )
             )
             (local.set $16
              (f32.add
               (local.get $10)
               (local.get $16)
              )
             )
             (f32.store
              (local.get $11)
              (local.get $16)
             )
             ;;@ celt/kiss_fft.c:286:0
             (local.set $16
              (f32.add
               (local.get $15)
               (local.get $9)
              )
             )
             (local.set $16
              (f32.add
               (local.get $13)
               (local.get $16)
              )
             )
             (f32.store offset=4
              (local.get $11)
              (local.get $16)
             )
             ;;@ celt/kiss_fft.c:288:0
             (local.set $16
              (f32.mul
               (local.get $6)
               (local.get $8)
              )
             )
             (local.set $25
              (f32.mul
               (local.get $7)
               (local.get $14)
              )
             )
             (local.set $16
              (f32.add
               (local.get $25)
               (local.get $16)
              )
             )
             (local.set $16
              (f32.add
               (local.get $10)
               (local.get $16)
              )
             )
             ;;@ celt/kiss_fft.c:289:0
             (local.set $25
              (f32.mul
               (local.get $6)
               (local.get $9)
              )
             )
             (local.set $28
              (f32.mul
               (local.get $7)
               (local.get $15)
              )
             )
             (local.set $25
              (f32.add
               (local.get $28)
               (local.get $25)
              )
             )
             (local.set $25
              (f32.add
               (local.get $13)
               (local.get $25)
              )
             )
             ;;@ celt/kiss_fft.c:291:0
             (local.set $28
              (f32.mul
               (local.get $3)
               (local.get $36)
              )
             )
             (local.set $31
              (f32.mul
               (local.get $4)
               (local.get $30)
              )
             )
             (local.set $28
              (f32.add
               (local.get $31)
               (local.get $28)
              )
             )
             ;;@ celt/kiss_fft.c:292:0
             (local.set $31
              (f32.mul
               (local.get $3)
               (local.get $27)
              )
             )
             (local.set $38
              (f32.mul
               (local.get $4)
               (local.get $35)
              )
             )
             (local.set $31
              (f32.add
               (local.get $38)
               (local.get $31)
              )
             )
             ;;@ celt/kiss_fft.c:294:0
             (local.set $38
              (f32.sub
               (local.get $16)
               (local.get $28)
              )
             )
             (f32.store
              (local.get $21)
              (local.get $38)
             )
             (local.set $38
              (f32.add
               (local.get $31)
               (local.get $25)
              )
             )
             (f32.store offset=4
              (local.get $21)
              (local.get $38)
             )
             ;;@ celt/kiss_fft.c:295:0
             (local.set $16
              (f32.add
               (local.get $28)
               (local.get $16)
              )
             )
             (f32.store
              (local.get $18)
              (local.get $16)
             )
             (local.set $16
              (f32.sub
               (local.get $25)
               (local.get $31)
              )
             )
             (f32.store offset=4
              (local.get $18)
              (local.get $16)
             )
             ;;@ celt/kiss_fft.c:297:0
             (local.set $8
              (f32.mul
               (local.get $7)
               (local.get $8)
              )
             )
             (local.set $14
              (f32.mul
               (local.get $6)
               (local.get $14)
              )
             )
             (local.set $8
              (f32.add
               (local.get $14)
               (local.get $8)
              )
             )
             (local.set $10
              (f32.add
               (local.get $10)
               (local.get $8)
              )
             )
             ;;@ celt/kiss_fft.c:298:0
             (local.set $8
              (f32.mul
               (local.get $7)
               (local.get $9)
              )
             )
             (local.set $9
              (f32.mul
               (local.get $6)
               (local.get $15)
              )
             )
             (local.set $8
              (f32.add
               (local.get $9)
               (local.get $8)
              )
             )
             (local.set $13
              (f32.add
               (local.get $13)
               (local.get $8)
              )
             )
             ;;@ celt/kiss_fft.c:299:0
             (local.set $8
              (f32.mul
               (local.get $3)
               (local.get $30)
              )
             )
             (local.set $9
              (f32.mul
               (local.get $4)
               (local.get $36)
              )
             )
             (local.set $8
              (f32.sub
               (local.get $8)
               (local.get $9)
              )
             )
             ;;@ celt/kiss_fft.c:300:0
             (local.set $9
              (f32.mul
               (local.get $4)
               (local.get $27)
              )
             )
             (local.set $14
              (f32.mul
               (local.get $3)
               (local.get $35)
              )
             )
             (local.set $9
              (f32.sub
               (local.get $9)
               (local.get $14)
              )
             )
             ;;@ celt/kiss_fft.c:302:0
             (local.set $14
              (f32.add
               (local.get $8)
               (local.get $10)
              )
             )
             (f32.store
              (local.get $5)
              (local.get $14)
             )
             (local.set $14
              (f32.add
               (local.get $9)
               (local.get $13)
              )
             )
             (f32.store offset=4
              (local.get $5)
              (local.get $14)
             )
             ;;@ celt/kiss_fft.c:303:0
             (local.set $10
              (f32.sub
               (local.get $10)
               (local.get $8)
              )
             )
             (f32.store
              (local.get $12)
              (local.get $10)
             )
             (local.set $10
              (f32.sub
               (local.get $13)
               (local.get $9)
              )
             )
             (f32.store offset=4
              (local.get $12)
              (local.get $10)
             )
             ;;@ celt/kiss_fft.c:305:0
             (local.set $11
              (i32.add
               (local.get $11)
               (i32.const 8)
              )
             )
             (local.set $21
              (i32.add
               (local.get $21)
               (i32.const 8)
              )
             )
             (local.set $5
              (i32.add
               (local.get $5)
               (i32.const 8)
              )
             )
             (local.set $12
              (i32.add
               (local.get $12)
               (i32.const 8)
              )
             )
             (local.set $18
              (i32.add
               (local.get $18)
               (i32.const 8)
              )
             )
             ;;@ celt/kiss_fft.c:272:0
             (local.set $22
              (i32.add
               (local.get $22)
               (i32.const 1)
              )
             )
             (br_if $while-in17
              (i32.ne
               (local.get $2)
               (local.get $22)
              )
             )
            )
           )
          )
          ;;@ celt/kiss_fft.c:262:0
          (local.set $23
           (i32.add
            (local.get $23)
            (i32.const 1)
           )
          )
          (br_if $while-in15
           (i32.ne
            (local.get $23)
            (local.get $29)
           )
          )
         )
        )
       )
      )
      ;;@ celt/kiss_fft.c:542:0
      (local.set $2
       (i32.add
        (local.get $26)
        (i32.const -1)
       )
      )
      (br_if $__rjti$1
       (i32.le_s
        (local.get $26)
        (i32.const 0)
       )
      )
      (local.set $26
       (local.get $2)
      )
      (local.set $2
       (local.get $33)
      )
      (br $label$continue$L4)
     )
    )
    ;;@ celt/kiss_fft.c:76:0
    (call $_celt_fatal
     (i32.const 42112)
     (i32.const 42135)
     (i32.const 76)
    )
    (br $__rjto$1)
   )
   (global.set $STACKTOP
    (local.get $32)
   )
  )
 )
 (func $_ec_laplace_decode (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  ;;@ celt/laplace.c:99:0
  (local.set $6
   (call $_ec_decode_bin
    (local.get $0)
   )
  )
  (if
   ;;@ celt/laplace.c:101:0
   (i32.lt_u
    (local.get $6)
    (local.get $1)
   )
   (local.set $8
    (local.get $1)
   )
   (block
    ;;@ celt/laplace.c:47:0
    (local.set $4
     (i32.sub
      (i32.const 32736)
      (local.get $1)
     )
    )
    ;;@ celt/laplace.c:48:0
    (local.set $3
     (i32.sub
      (i32.const 16384)
      (local.get $2)
     )
    )
    (local.set $3
     (i32.shr_u
      (i32.mul
       (local.get $3)
       (local.get $4)
      )
      (i32.const 15)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (if
       ;;@ celt/laplace.c:107:0
       (local.get $3)
       (block $label$break$L3
        (local.set $4
         (i32.const 1)
        )
        (loop $while-in
         (local.set $5
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.set $10
          (i32.shl
           (local.get $5)
           (i32.const 1)
          )
         )
         (local.set $3
          (i32.add
           (local.get $1)
           (local.get $10)
          )
         )
         (if
          (i32.lt_u
           (local.get $6)
           (local.get $3)
          )
          (block
           (local.set $2
            (local.get $5)
           )
           (br $label$break$L3)
          )
         )
         ;;@ celt/laplace.c:111:0
         (local.set $1
          (i32.add
           (local.get $10)
           (i32.const -2)
          )
         )
         (local.set $1
          (i32.mul
           (local.get $1)
           (local.get $2)
          )
         )
         ;;@ celt/laplace.c:113:0
         (local.set $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.set $5
          (i32.shr_u
           (local.get $1)
           (i32.const 15)
          )
         )
         (if
          ;;@ celt/laplace.c:107:0
          (local.get $5)
          (block
           (local.set $1
            (local.get $3)
           )
           (local.set $3
            (local.get $5)
           )
           (br $while-in)
          )
          (block
           (local.set $1
            (local.get $3)
           )
           (br $__rjti$0)
          )
         )
        )
       )
       (block
        (local.set $4
         (i32.const 1)
        )
        (br $__rjti$0)
       )
      )
      (br $__rjto$0)
     )
     ;;@ celt/laplace.c:119:0
     (local.set $2
      (i32.sub
       (local.get $6)
       (local.get $1)
      )
     )
     (local.set $3
      (i32.shr_u
       (local.get $2)
       (i32.const 1)
      )
     )
     ;;@ celt/laplace.c:120:0
     (local.set $4
      (i32.add
       (local.get $3)
       (local.get $4)
      )
     )
     ;;@ celt/laplace.c:121:0
     (local.set $3
      (i32.and
       (local.get $2)
       (i32.const -2)
      )
     )
     (local.set $2
      (i32.const 1)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $3)
      )
     )
    )
    ;;@ celt/laplace.c:123:0
    (local.set $3
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
    (local.set $5
     (i32.lt_u
      (local.get $6)
      (local.get $3)
     )
    )
    (local.set $1
     (select
      (local.get $1)
      (local.get $3)
      (local.get $5)
     )
    )
    (if
     ;;@ celt/laplace.c:128:0
     (i32.ge_u
      (local.get $1)
      (i32.const 32768)
     )
     (call $_celt_fatal
      (i32.const 42166)
      (i32.const 42151)
      (i32.const 128)
     )
    )
    ;;@ celt/laplace.c:124:0
    (local.set $3
     (i32.sub
      (i32.const 0)
      (local.get $4)
     )
    )
    ;;@ celt/laplace.c:123:0
    (local.set $4
     (select
      (local.get $3)
      (local.get $4)
      (local.get $5)
     )
    )
    (if
     ;;@ celt/laplace.c:130:0
     (i32.gt_u
      (local.get $1)
      (local.get $6)
     )
     (call $_celt_fatal
      (i32.const 42193)
      (i32.const 42151)
      (i32.const 130)
     )
     (block
      (local.set $8
       (local.get $2)
      )
      (local.set $7
       (local.get $1)
      )
      (local.set $9
       (local.get $4)
      )
     )
    )
   )
  )
  ;;@ celt/laplace.c:131:0
  (local.set $1
   (i32.add
    (local.get $7)
    (local.get $8)
   )
  )
  (local.set $2
   (i32.lt_u
    (local.get $1)
    (i32.const 32768)
   )
  )
  (local.set $1
   (select
    (local.get $1)
    (i32.const 32768)
    (local.get $2)
   )
  )
  (if
   (i32.lt_u
    (local.get $6)
    (local.get $1)
   )
   (block
    ;;@ celt/laplace.c:132:0
    (call $_ec_dec_update
     (local.get $0)
     (local.get $7)
     (local.get $1)
     (i32.const 32768)
    )
    ;;@ celt/laplace.c:133:0
    (return
     (local.get $9)
    )
   )
   ;;@ celt/laplace.c:131:0
   (call $_celt_fatal
    (i32.const 42218)
    (i32.const 42151)
    (i32.const 131)
   )
  )
  (i32.const 0)
 )
 (func $_isqrt32 (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  ;;@ celt/mathops.c:52:0
  (local.set $1
   (i32.clz
    (local.get $0)
   )
  )
  (local.set $1
   (i32.sub
    (i32.const 31)
    (local.get $1)
   )
  )
  (local.set $1
   (i32.shr_s
    (local.get $1)
    (i32.const 1)
   )
  )
  ;;@ celt/mathops.c:53:0
  (local.set $4
   (i32.shl
    (i32.const 1)
    (local.get $1)
   )
  )
  (loop $while-in
   ;;@ celt/mathops.c:56:0
   (local.set $2
    (i32.shl
     (local.get $3)
     (i32.const 1)
    )
   )
   (local.set $2
    (i32.add
     (local.get $2)
     (local.get $4)
    )
   )
   (local.set $5
    (i32.shl
     (local.get $2)
     (local.get $1)
    )
   )
   ;;@ celt/mathops.c:57:0
   (local.set $6
    (i32.lt_u
     (local.get $0)
     (local.get $5)
    )
   )
   (local.set $2
    (select
     (i32.const 0)
     (local.get $4)
     (local.get $6)
    )
   )
   (local.set $3
    (i32.add
     (local.get $2)
     (local.get $3)
    )
   )
   (local.set $2
    (select
     (i32.const 0)
     (local.get $5)
     (local.get $6)
    )
   )
   (local.set $0
    (i32.sub
     (local.get $0)
     (local.get $2)
    )
   )
   ;;@ celt/mathops.c:61:0
   (local.set $4
    (i32.shr_u
     (local.get $4)
     (i32.const 1)
    )
   )
   ;;@ celt/mathops.c:62:0
   (local.set $2
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
   (if
    ;;@ celt/mathops.c:64:0
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
    (block
     (local.set $1
      (local.get $2)
     )
     (br $while-in)
    )
   )
  )
  ;;@ celt/mathops.c:65:0
  (local.get $3)
 )
 (func $_clt_mdct_backward_c (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 f32)
  ;;@ celt/mdct.c:251:0
  (local.set $8
   (i32.load offset=24
    (local.get $0)
   )
  )
  ;;@ celt/mdct.c:252:0
  (local.set $9
   (i32.shr_s
    ;;@ celt/mdct.c:250:0
    (local.tee $7
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.gt_s
    (local.get $5)
    (i32.const 0)
   )
   (block
    (local.set $7
     (local.get $9)
    )
    (loop $while-in
     ;;@ celt/mdct.c:255:0
     (local.set $8
      (i32.add
       (i32.shl
        (local.get $7)
        (i32.const 2)
       )
       (local.get $8)
      )
     )
     (local.set $9
      (i32.shr_s
       (local.get $7)
       (i32.const 1)
      )
     )
     (if
      ;;@ celt/mdct.c:252:0
      (i32.ne
       (local.tee $10
        (i32.add
         (local.get $10)
         (i32.const 1)
        )
       )
       (local.get $5)
      )
      (block
       (local.set $7
        (local.get $9)
       )
       (br $while-in)
      )
     )
    )
   )
  )
  ;;@ celt/mdct.c:258:0
  (local.set $15
   (i32.shr_s
    (local.get $7)
    (i32.const 2)
   )
  )
  ;;@ celt/mdct.c:265:0
  (local.set $10
   (i32.add
    (i32.shl
     (i32.shr_s
      (local.get $4)
      (i32.const 1)
     )
     (i32.const 2)
    )
    (local.get $2)
   )
  )
  ;;@ celt/mdct.c:267:0
  (local.set $16
   (i32.load
    (i32.add
     (i32.add
      (local.get $0)
      (i32.const 8)
     )
     (i32.shl
      (local.get $5)
      (i32.const 2)
     )
    )
   )
  )
  (if
   ;;@ celt/mdct.c:268:0
   (local.tee $17
    (i32.gt_s
     (local.get $7)
     (i32.const 3)
    )
   )
   (block
    ;;@ celt/mdct.c:267:0
    (local.set $0
     (i32.load offset=44
      (local.get $16)
     )
    )
    ;;@ celt/mdct.c:264:0
    (local.set $19
     (i32.sub
      (i32.const 0)
      (local.tee $18
       (i32.shl
        (local.get $6)
        (i32.const 1)
       )
      )
     )
    )
    (local.set $6
     (i32.add
      (i32.shl
       (i32.mul
        (i32.add
         (local.get $9)
         (i32.const -1)
        )
        (local.get $6)
       )
       (i32.const 2)
      )
      (local.get $1)
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (loop $while-in1
     ;;@ celt/mdct.c:272:0
     (local.set $7
      (i32.add
       (local.get $0)
       (i32.const 2)
      )
     )
     ;;@ celt/mdct.c:276:0
     (f32.store
      (i32.add
       (i32.shl
        (i32.or
         (local.tee $0
          (i32.shl
           (i32.load16_s
            (local.get $0)
           )
           (i32.const 1)
          )
         )
         (i32.const 1)
        )
        (i32.const 2)
       )
       (local.get $10)
      )
      (f32.add
       (f32.mul
        ;;@ celt/mdct.c:273:0
        (local.tee $13
         (f32.load
          (local.get $6)
         )
        )
        (local.tee $14
         (f32.load
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
           (local.get $8)
          )
         )
        )
       )
       (f32.mul
        (local.tee $11
         (f32.load
          (local.get $1)
         )
        )
        (local.tee $12
         (f32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $5)
             (local.get $15)
            )
            (i32.const 2)
           )
           (local.get $8)
          )
         )
        )
       )
      )
     )
     ;;@ celt/mdct.c:277:0
     (f32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $10)
      )
      (f32.sub
       (f32.mul
        (local.get $14)
        (local.get $11)
       )
       (f32.mul
        (local.get $13)
        (local.get $12)
       )
      )
     )
     ;;@ celt/mdct.c:279:0
     (local.set $1
      (i32.add
       (i32.shl
        (local.get $18)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
     ;;@ celt/mdct.c:280:0
     (local.set $6
      (i32.add
       (i32.shl
        (local.get $19)
        (i32.const 2)
       )
       (local.get $6)
      )
     )
     (if
      ;;@ celt/mdct.c:268:0
      (i32.lt_s
       (local.tee $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (local.get $15)
      )
      (block
       (local.set $0
        (local.get $7)
       )
       (br $while-in1)
      )
     )
    )
    ;;@ celt/mdct.c:284:0
    (call $_opus_fft_impl
     (local.get $16)
     (local.get $10)
    )
    ;;@ celt/mdct.c:294:0
    (local.set $7
     (i32.shr_s
      (i32.add
       (local.get $15)
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
    (if
     (local.get $17)
     (block
      ;;@ celt/mdct.c:290:0
      (local.set $16
       (i32.add
        (local.get $15)
        (i32.const -1)
       )
      )
      (local.set $17
       (i32.add
        (local.get $9)
        (i32.const -1)
       )
      )
      (local.set $5
       (i32.const 0)
      )
      (local.set $1
       (i32.const 0)
      )
      (local.set $6
       (i32.add
        (local.tee $0
         (local.get $10)
        )
        (i32.shl
         (local.get $9)
         (i32.const 2)
        )
       )
      )
      (loop $while-in3
       ;;@ celt/mdct.c:307:0
       (local.set $13
        (f32.load
         (local.tee $9
          (i32.add
           (local.get $6)
           (i32.const -4)
          )
         )
        )
       )
       ;;@ celt/mdct.c:308:0
       (local.set $14
        (f32.load
         (local.tee $6
          (i32.add
           (local.get $6)
           (i32.const -8)
          )
         )
        )
       )
       ;;@ celt/mdct.c:309:0
       (f32.store
        (local.get $0)
        (f32.add
         (f32.mul
          ;;@ celt/mdct.c:299:0
          (local.tee $11
           (f32.load offset=4
            (local.get $0)
           )
          )
          ;;@ celt/mdct.c:301:0
          (local.tee $12
           (f32.load
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $8)
            )
           )
          )
         )
         (f32.mul
          ;;@ celt/mdct.c:300:0
          (local.tee $20
           (f32.load
            (local.get $0)
           )
          )
          ;;@ celt/mdct.c:302:0
          (local.tee $21
           (f32.load
            (i32.add
             (i32.shl
              (i32.add
               (local.get $1)
               (local.get $15)
              )
              (i32.const 2)
             )
             (local.get $8)
            )
           )
          )
         )
        )
       )
       ;;@ celt/mdct.c:310:0
       (f32.store
        (local.get $9)
        (f32.sub
         (f32.mul
          (local.get $11)
          (local.get $21)
         )
         (f32.mul
          (local.get $20)
          (local.get $12)
         )
        )
       )
       ;;@ celt/mdct.c:317:0
       (f32.store
        (local.get $6)
        (f32.add
         (f32.mul
          (local.get $13)
          ;;@ celt/mdct.c:312:0
          (local.tee $11
           (f32.load
            (i32.add
             (i32.shl
              (i32.add
               (local.get $5)
               (local.get $16)
              )
              (i32.const 2)
             )
             (local.get $8)
            )
           )
          )
         )
         (f32.mul
          (local.get $14)
          ;;@ celt/mdct.c:313:0
          (local.tee $12
           (f32.load
            (i32.add
             (i32.shl
              (i32.add
               (local.get $5)
               (local.get $17)
              )
              (i32.const 2)
             )
             (local.get $8)
            )
           )
          )
         )
        )
       )
       ;;@ celt/mdct.c:318:0
       (f32.store offset=4
        (local.get $0)
        (f32.sub
         (f32.mul
          (local.get $13)
          (local.get $12)
         )
         (f32.mul
          (local.get $14)
          (local.get $11)
         )
        )
       )
       ;;@ celt/mdct.c:319:0
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 8)
        )
       )
       (local.set $5
        (i32.xor
         (local.get $1)
         (i32.const -1)
        )
       )
       (br_if $while-in3
        ;;@ celt/mdct.c:294:0
        (i32.lt_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $7)
        )
       )
      )
     )
    )
   )
   ;;@ celt/mdct.c:284:0
   (call $_opus_fft_impl
    (local.get $16)
    (local.get $10)
   )
  )
  ;;@ celt/mdct.c:331:0
  (local.set $6
   (i32.div_s
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.le_s
    (local.get $4)
    (i32.const 1)
   )
   ;;@ celt/mdct.c:342:0
   (return)
  )
  ;;@ celt/mdct.c:326:0
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $4)
     (i32.const 2)
    )
    (local.get $2)
   )
  )
  ;;@ celt/mdct.c:329:0
  (local.set $1
   (i32.const 0)
  )
  (local.set $4
   (i32.add
    (i32.shl
     (local.get $4)
     (i32.const 2)
    )
    (local.get $3)
   )
  )
  (loop $while-in5
   ;;@ celt/mdct.c:336:0
   (local.set $5
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (f32.store
    (local.get $2)
    (f32.sub
     (f32.mul
      ;;@ celt/mdct.c:335:0
      (local.tee $13
       (f32.load
        (local.get $2)
       )
      )
      ;;@ celt/mdct.c:336:0
      (local.tee $14
       (f32.load
        (local.tee $4
         (i32.add
          (local.get $4)
          (i32.const -4)
         )
        )
       )
      )
     )
     (f32.mul
      ;;@ celt/mdct.c:334:0
      (local.tee $11
       (f32.load
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const -4)
         )
        )
       )
      )
      ;;@ celt/mdct.c:336:0
      (local.tee $12
       (f32.load
        (local.get $3)
       )
      )
     )
    )
   )
   ;;@ celt/mdct.c:337:0
   (f32.store
    (local.get $0)
    (f32.add
     (f32.mul
      (local.get $11)
      (local.get $14)
     )
     (f32.mul
      (local.get $13)
      (local.get $12)
     )
    )
   )
   ;;@ celt/mdct.c:338:0
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (if
    ;;@ celt/mdct.c:331:0
    (i32.ne
     (local.get $6)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
    )
    (block
     (local.set $2
      (local.get $5)
     )
     (br $while-in5)
    )
   )
  )
 )
 (func $_pitch_downsample (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  ;;@ celt/pitch.c:166:0
  (f32.store offset=4
   (local.get $1)
   (f32.mul
    (f32.add
     (f32.load offset=8
      ;;@ celt/pitch.c:165:0
      (local.tee $4
       (i32.load
        (local.get $0)
       )
      )
     )
     (f32.mul
      (f32.add
       (f32.load offset=4
        (local.get $4)
       )
       (f32.load offset=12
        (local.get $4)
       )
      )
      (f32.const 0.5)
     )
    )
    (f32.const 0.5)
   )
  )
  (local.set $9
   (i32.const 2)
  )
  (loop $while-in
   ;;@ celt/pitch.c:166:0
   (f32.store
    (i32.add
     (i32.shl
      (local.get $9)
      (i32.const 2)
     )
     (local.get $1)
    )
    (f32.mul
     (f32.add
      (f32.load
       (i32.add
        (i32.shl
         (local.tee $10
          (i32.shl
           (local.get $9)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
        (local.get $4)
       )
      )
      (f32.mul
       (f32.add
        (f32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $10)
            (i32.const -1)
           )
           (i32.const 2)
          )
          (local.get $4)
         )
        )
        (f32.load
         (i32.add
          (i32.shl
           (i32.or
            (local.get $10)
            (i32.const 1)
           )
           (i32.const 2)
          )
          (local.get $4)
         )
        )
       )
       (f32.const 0.5)
      )
     )
     (f32.const 0.5)
    )
   )
   ;;@ celt/pitch.c:165:0
   (br_if $while-in
    (i32.lt_s
     (local.tee $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (i32.const 1024)
    )
   )
  )
  ;;@ celt/pitch.c:167:0
  (f32.store
   (local.get $1)
   (f32.mul
    (f32.add
     (f32.mul
      (f32.load offset=4
       (local.get $4)
      )
      (f32.const 0.5)
     )
     (f32.load
      (local.get $4)
     )
    )
    (f32.const 0.5)
   )
  )
  (if
   ;;@ celt/pitch.c:168:0
   (i32.eq
    (local.get $2)
    (i32.const 2)
   )
   (block
    ;;@ celt/pitch.c:171:0
    (f32.store offset=4
     (local.get $1)
     (f32.add
      (f32.load offset=4
       (local.get $1)
      )
      (f32.mul
       (f32.add
        (f32.load offset=8
         (local.tee $2
          (i32.load offset=4
           (local.get $0)
          )
         )
        )
        (f32.mul
         (f32.add
          (f32.load offset=4
           (local.get $2)
          )
          (f32.load offset=12
           (local.get $2)
          )
         )
         (f32.const 0.5)
        )
       )
       (f32.const 0.5)
      )
     )
    )
    (local.set $0
     (i32.const 2)
    )
    (loop $while-in1
     (f32.store
      (local.tee $4
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
      (f32.add
       (f32.load
        (local.get $4)
       )
       (f32.mul
        (f32.add
         (f32.load
          (i32.add
           (i32.shl
            (local.tee $4
             (i32.shl
              (local.get $0)
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
           (local.get $2)
          )
         )
         (f32.mul
          (f32.add
           (f32.load
            (i32.add
             (i32.shl
              (i32.add
               (local.get $4)
               (i32.const -1)
              )
              (i32.const 2)
             )
             (local.get $2)
            )
           )
           (f32.load
            (i32.add
             (i32.shl
              (i32.or
               (local.get $4)
               (i32.const 1)
              )
              (i32.const 2)
             )
             (local.get $2)
            )
           )
          )
          (f32.const 0.5)
         )
        )
        (f32.const 0.5)
       )
      )
     )
     ;;@ celt/pitch.c:170:0
     (br_if $while-in1
      (i32.lt_s
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (i32.const 1024)
      )
     )
    )
    ;;@ celt/pitch.c:172:0
    (f32.store
     (local.get $1)
     (f32.add
      (f32.load
       (local.get $1)
      )
      (f32.mul
       (f32.add
        (f32.mul
         (f32.load offset=4
          (local.get $2)
         )
         (f32.const 0.5)
        )
        (f32.load
         (local.get $2)
        )
       )
       (f32.const 0.5)
      )
     )
    )
   )
  )
  (call $__celt_autocorr
   (local.get $1)
   (local.tee $0
    (i32.add
     (local.get $5)
     (i32.const 16)
    )
   )
   (i32.const 0)
   (i32.const 0)
   (i32.const 4)
  )
  ;;@ celt/pitch.c:182:0
  (f32.store
   (local.get $0)
   (f32.mul
    (f32.load
     (local.get $0)
    )
    (f32.const 1.000100016593933)
   )
  )
  ;;@ celt/pitch.c:191:0
  (f32.store offset=4
   (local.get $0)
   (f32.sub
    (local.tee $3
     (f32.load offset=4
      (local.get $0)
     )
    )
    (f32.mul
     (f32.mul
      (local.get $3)
      (f32.const 0.00800000037997961)
     )
     (f32.const 0.00800000037997961)
    )
   )
  )
  (f32.store offset=8
   (local.get $0)
   (f32.sub
    (local.tee $3
     (f32.load offset=8
      (local.get $0)
     )
    )
    (f32.mul
     (f32.mul
      (local.get $3)
      (f32.const 0.01600000075995922)
     )
     (f32.const 0.01600000075995922)
    )
   )
  )
  (f32.store offset=12
   (local.get $0)
   (f32.sub
    (local.tee $3
     (f32.load offset=12
      (local.get $0)
     )
    )
    (f32.mul
     (f32.mul
      (local.get $3)
      (f32.const 0.024000000208616257)
     )
     (f32.const 0.024000000208616257)
    )
   )
  )
  (f32.store offset=16
   (local.get $0)
   (f32.sub
    (local.tee $3
     (f32.load offset=16
      (local.get $0)
     )
    )
    (f32.mul
     (f32.mul
      (local.get $3)
      (f32.const 0.03200000151991844)
     )
     (f32.const 0.03200000151991844)
    )
   )
  )
  ;;@ celt/pitch.c:195:0
  (call $__celt_lpc
   (local.get $5)
   (local.get $0)
   (i32.const 4)
  )
  ;;@ celt/pitch.c:199:0
  (f32.store
   (local.get $5)
   (local.tee $3
    (f32.mul
     (f32.load
      (local.get $5)
     )
     (f32.const 0.8999999761581421)
    )
   )
  )
  (f32.store offset=4
   (local.get $5)
   (local.tee $6
    (f32.mul
     (f32.load offset=4
      (local.get $5)
     )
     (f32.const 0.809999942779541)
    )
   )
  )
  (f32.store offset=8
   (local.get $5)
   (local.tee $7
    (f32.mul
     (f32.load offset=8
      (local.get $5)
     )
     (f32.const 0.7289999127388)
    )
   )
  )
  (f32.store offset=12
   (local.get $5)
   (local.tee $8
    (f32.mul
     (f32.load offset=12
      (local.get $5)
     )
     (f32.const 0.6560999155044556)
    )
   )
  )
  ;;@ celt/pitch.c:202:0
  (local.set $12
   (f32.add
    (local.get $3)
    (f32.const 0.800000011920929)
   )
  )
  ;;@ celt/pitch.c:203:0
  (local.set $13
   (f32.add
    (local.get $6)
    (f32.mul
     (local.get $3)
     (f32.const 0.800000011920929)
    )
   )
  )
  ;;@ celt/pitch.c:204:0
  (local.set $14
   (f32.add
    (local.get $7)
    (f32.mul
     (local.get $6)
     (f32.const 0.800000011920929)
    )
   )
  )
  ;;@ celt/pitch.c:205:0
  (local.set $15
   (f32.add
    (local.get $8)
    (f32.mul
     (local.get $7)
     (f32.const 0.800000011920929)
    )
   )
  )
  ;;@ celt/pitch.c:206:0
  (local.set $16
   (f32.mul
    (local.get $8)
    (f32.const 0.800000011920929)
   )
  )
  (local.set $3
   (f32.const 0)
  )
  (local.set $6
   (f32.const 0)
  )
  (local.set $7
   (f32.const 0)
  )
  (local.set $8
   (f32.const 0)
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in3
   ;;@ celt/pitch.c:124:0
   (local.set $11
    (f32.load
     (local.tee $2
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
    )
   )
   ;;@ celt/pitch.c:135:0
   (f32.store
    (local.get $2)
    (f32.add
     (f32.mul
      (local.get $16)
      (local.get $17)
     )
     (f32.add
      (f32.mul
       (local.get $15)
       (local.get $3)
      )
      (f32.add
       (f32.mul
        (local.get $14)
        (local.get $6)
       )
       (f32.add
        (f32.mul
         (local.get $13)
         (local.get $7)
        )
        (f32.add
         (f32.mul
          (local.get $12)
          (local.get $8)
         )
         (local.get $11)
        )
       )
      )
     )
    )
   )
   (if
    ;;@ celt/pitch.c:122:0
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 1024)
    )
    (block
     (local.set $18
      (local.get $8)
     )
     (local.set $19
      (local.get $7)
     )
     (local.set $20
      (local.get $6)
     )
     (local.set $17
      (local.get $3)
     )
     (local.set $8
      (local.get $11)
     )
     (local.set $7
      (local.get $18)
     )
     (local.set $6
      (local.get $19)
     )
     (local.set $3
      (local.get $20)
     )
     (br $while-in3)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_celt_pitch_xcorr_c (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 i32)
  (local $14 f32)
  (local $15 f32)
  (local $16 i32)
  (local $17 i32)
  (local $18 f32)
  (local $19 i32)
  (local $20 f32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 f32)
  (local $25 f32)
  (local $26 f32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (if
   ;;@ celt/pitch.c:251:0
   (i32.le_s
    (local.get $4)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 42257)
    (i32.const 42287)
    (i32.const 251)
   )
  )
  ;;@ celt/pitch.c:253:0
  (local.set $29
   (i32.add
    (local.get $4)
    (i32.const -3)
   )
  )
  (if
   ;;@ celt/pitch.c:269:0
   (i32.ge_s
    (local.tee $6
     (if (result i32)
      ;;@ celt/pitch.c:253:0
      (i32.gt_s
       (local.get $4)
       (i32.const 3)
      )
      (block (result i32)
       (if
        (i32.le_s
         (local.get $3)
         (i32.const 2)
        )
        ;;@ ./celt/pitch.h:69:0
        (call $_celt_fatal
         (i32.const 42365)
         (i32.const 42390)
         (i32.const 69)
        )
       )
       (local.set $30
        (i32.eq
         (local.get $3)
         (i32.const 3)
        )
       )
       (local.set $28
        (i32.add
         (local.tee $5
          (i32.and
           (i32.add
            (select
             (local.tee $27
              (i32.add
               (local.get $3)
               (i32.const -3)
              )
             )
             (i32.const 4)
             (i32.gt_s
              (local.get $27)
              (i32.const 4)
             )
            )
            (i32.const -1)
           )
           (i32.const -4)
          )
         )
         (i32.const 4)
        )
       )
       (local.set $31
        (i32.add
         (local.get $5)
         (i32.const 7)
        )
       )
       (local.set $32
        (i32.add
         (i32.shl
          (local.get $28)
          (i32.const 2)
         )
         (local.get $0)
        )
       )
       (loop $while-in
        ;;@ ./celt/pitch.h:71:0
        (local.set $9
         (f32.load
          ;;@ celt/pitch.c:256:0
          (local.tee $23
           (i32.add
            (i32.shl
             (local.get $19)
             (i32.const 2)
            )
            (local.get $1)
           )
          )
         )
        )
        ;;@ ./celt/pitch.h:72:0
        (local.set $8
         (f32.load offset=4
          (local.get $23)
         )
        )
        ;;@ ./celt/pitch.h:73:0
        (local.set $5
         (i32.add
          (local.get $23)
          (i32.const 12)
         )
        )
        (local.set $7
         (f32.load offset=8
          (local.get $23)
         )
        )
        (local.set $6
         (if (result i32)
          (local.get $30)
          (block (result i32)
           (local.set $13
            (i32.const 0)
           )
           (local.set $14
            (f32.const 0)
           )
           (local.set $11
            (local.get $7)
           )
           (local.set $15
            (local.get $8)
           )
           (local.set $16
            (i32.const 0)
           )
           (local.set $21
            (i32.const 0)
           )
           (local.set $22
            (i32.const 0)
           )
           (local.set $17
            (i32.const 0)
           )
           (local.set $20
            (f32.const 0)
           )
           (local.set $7
            (f32.const 0)
           )
           (local.set $8
            (f32.const 0)
           )
           (local.set $10
            (f32.const 0)
           )
           (local.get $0)
          )
          (block (result i32)
           (local.set $6
            (local.get $5)
           )
           (local.set $16
            (i32.const 0)
           )
           (local.set $5
            (local.get $0)
           )
           (local.set $10
            (f32.const 0)
           )
           (local.set $12
            (f32.const 0)
           )
           (local.set $18
            (f32.const 0)
           )
           (local.set $20
            (f32.const 0)
           )
           (loop $while-in1
            ;;@ ./celt/pitch.h:91:0
            (local.set $11
             (f32.add
              (f32.add
               (f32.add
                (local.get $10)
                (f32.mul
                 (local.get $9)
                 ;;@ ./celt/pitch.h:77:0
                 (local.tee $24
                  (f32.load
                   (local.get $5)
                  )
                 )
                )
               )
               (f32.mul
                (local.get $8)
                ;;@ ./celt/pitch.h:83:0
                (local.tee $25
                 (f32.load offset=4
                  (local.get $5)
                 )
                )
               )
              )
              (f32.mul
               (local.get $7)
               ;;@ ./celt/pitch.h:89:0
               (local.tee $26
                (f32.load offset=8
                 (local.get $5)
                )
               )
              )
             )
            )
            ;;@ ./celt/pitch.h:93:0
            (local.set $15
             (f32.add
              (f32.add
               (f32.add
                (local.get $18)
                (f32.mul
                 (local.get $7)
                 (local.get $24)
                )
               )
               (f32.mul
                ;;@ ./celt/pitch.h:78:0
                (local.tee $14
                 (f32.load
                  (local.get $6)
                 )
                )
                (local.get $25)
               )
              )
              (f32.mul
               ;;@ ./celt/pitch.h:84:0
               (local.tee $9
                (f32.load offset=4
                 (local.get $6)
                )
               )
               (local.get $26)
              )
             )
            )
            ;;@ ./celt/pitch.h:95:0
            (local.set $17
             (i32.add
              (local.get $5)
              (i32.const 16)
             )
            )
            ;;@ ./celt/pitch.h:96:0
            (local.set $13
             (i32.add
              (local.get $6)
              (i32.const 16)
             )
            )
            ;;@ ./celt/pitch.h:97:0
            (local.set $10
             (f32.add
              (local.get $11)
              (f32.mul
               (local.get $14)
               ;;@ ./celt/pitch.h:95:0
               (local.tee $11
                (f32.load offset=12
                 (local.get $5)
                )
               )
              )
             )
            )
            ;;@ ./celt/pitch.h:98:0
            (local.set $12
             (f32.add
              (f32.add
               (f32.add
                (f32.add
                 (local.get $12)
                 (f32.mul
                  (local.get $8)
                  (local.get $24)
                 )
                )
                (f32.mul
                 (local.get $7)
                 (local.get $25)
                )
               )
               (f32.mul
                (local.get $14)
                (local.get $26)
               )
              )
              (f32.mul
               (local.get $9)
               (local.get $11)
              )
             )
            )
            ;;@ ./celt/pitch.h:99:0
            (local.set $18
             (f32.add
              (local.get $15)
              (f32.mul
               ;;@ ./celt/pitch.h:90:0
               (local.tee $8
                (f32.load offset=8
                 (local.get $6)
                )
               )
               (local.get $11)
              )
             )
            )
            ;;@ ./celt/pitch.h:100:0
            (local.set $20
             (f32.add
              (f32.add
               (f32.add
                (f32.add
                 (local.get $20)
                 (f32.mul
                  (local.get $24)
                  (local.get $14)
                 )
                )
                (f32.mul
                 (local.get $25)
                 (local.get $9)
                )
               )
               (f32.mul
                (local.get $26)
                (local.get $8)
               )
              )
              (f32.mul
               (local.get $11)
               ;;@ ./celt/pitch.h:96:0
               (local.tee $7
                (f32.load offset=12
                 (local.get $6)
                )
               )
              )
             )
            )
            (if
             ;;@ ./celt/pitch.h:74:0
             (i32.lt_s
              (local.tee $16
               (i32.add
                (local.get $16)
                (i32.const 4)
               )
              )
              (local.get $27)
             )
             (block
              (local.set $6
               (local.get $13)
              )
              (local.set $5
               (local.get $17)
              )
              (br $while-in1)
             )
            )
           )
           ;;@ ./celt/pitch.h:100:0
           (local.set $17
            (i32.reinterpret_f32
             (local.get $20)
            )
           )
           ;;@ ./celt/pitch.h:99:0
           (local.set $22
            (i32.reinterpret_f32
             (local.get $18)
            )
           )
           ;;@ ./celt/pitch.h:98:0
           (local.set $21
            (i32.reinterpret_f32
             (local.get $12)
            )
           )
           ;;@ ./celt/pitch.h:97:0
           (local.set $16
            (i32.reinterpret_f32
             (local.get $10)
            )
           )
           ;;@ ./celt/pitch.h:74:0
           (local.set $5
            (i32.add
             (i32.shl
              (local.get $31)
              (i32.const 2)
             )
             (local.get $23)
            )
           )
           (local.set $13
            (local.get $28)
           )
           (local.set $11
            (local.get $7)
           )
           (local.set $15
            (local.get $8)
           )
           (local.set $7
            (local.get $10)
           )
           (local.set $8
            (local.get $12)
           )
           (local.set $10
            (local.get $18)
           )
           (local.get $32)
          )
         )
        )
        (if
         ;;@ ./celt/pitch.h:102:0
         (i32.lt_s
          (local.get $13)
          (local.get $3)
         )
         (block
          ;;@ ./celt/pitch.h:106:0
          (local.set $7
           (f32.add
            (local.get $7)
            (f32.mul
             (local.get $9)
             ;;@ ./celt/pitch.h:104:0
             (local.tee $14
              (f32.load
               (local.get $6)
              )
             )
            )
           )
          )
          ;;@ ./celt/pitch.h:109:0
          (local.set $12
           (f32.add
            (local.get $20)
            (f32.mul
             (local.get $14)
             ;;@ ./celt/pitch.h:105:0
             (local.tee $18
              (f32.load
               (local.get $5)
              )
             )
            )
           )
          )
          ;;@ ./celt/pitch.h:109:0
          (local.set $6
           (i32.add
            (local.get $6)
            (i32.const 4)
           )
          )
          (local.set $5
           (i32.add
            (local.get $5)
            (i32.const 4)
           )
          )
          (local.set $16
           (i32.reinterpret_f32
            (local.get $7)
           )
          )
          (local.set $21
           (i32.reinterpret_f32
            ;;@ ./celt/pitch.h:107:0
            (local.tee $8
             (f32.add
              (local.get $8)
              (f32.mul
               (local.get $15)
               (local.get $14)
              )
             )
            )
           )
          )
          (local.set $22
           (i32.reinterpret_f32
            ;;@ ./celt/pitch.h:108:0
            (local.tee $10
             (f32.add
              (local.get $10)
              (f32.mul
               (local.get $11)
               (local.get $14)
              )
             )
            )
           )
          )
          (local.set $17
           (i32.reinterpret_f32
            (local.get $12)
           )
          )
         )
         (block
          (local.set $18
           (local.get $14)
          )
          (local.set $12
           (local.get $20)
          )
         )
        )
        (if
         ;;@ ./celt/pitch.h:111:0
         (i32.lt_s
          ;;@ ./celt/pitch.h:102:0
          (local.tee $13
           (i32.or
            (local.get $13)
            (i32.const 1)
           )
          )
          (local.get $3)
         )
         (block
          ;;@ ./celt/pitch.h:115:0
          (local.set $7
           (f32.add
            (local.get $7)
            (f32.mul
             (local.get $15)
             ;;@ ./celt/pitch.h:113:0
             (local.tee $15
              (f32.load
               (local.get $6)
              )
             )
            )
           )
          )
          ;;@ ./celt/pitch.h:118:0
          (local.set $6
           (i32.add
            (local.get $6)
            (i32.const 4)
           )
          )
          (local.set $16
           (i32.reinterpret_f32
            (local.get $7)
           )
          )
          (local.set $21
           (i32.reinterpret_f32
            ;;@ ./celt/pitch.h:116:0
            (local.tee $8
             (f32.add
              (local.get $8)
              (f32.mul
               (local.get $11)
               (local.get $15)
              )
             )
            )
           )
          )
          (local.set $22
           (i32.reinterpret_f32
            ;;@ ./celt/pitch.h:117:0
            (local.tee $10
             (f32.add
              (local.get $10)
              (f32.mul
               (local.get $18)
               (local.get $15)
              )
             )
            )
           )
          )
          (local.set $17
           (i32.reinterpret_f32
            ;;@ ./celt/pitch.h:118:0
            (local.tee $12
             (f32.add
              (local.get $12)
              (f32.mul
               (local.get $15)
               ;;@ ./celt/pitch.h:114:0
               (local.tee $9
                (f32.load
                 (local.get $5)
                )
               )
              )
             )
            )
           )
          )
          (local.set $5
           (i32.add
            (local.get $5)
            (i32.const 4)
           )
          )
         )
        )
        (if
         ;;@ ./celt/pitch.h:120:0
         (i32.lt_s
          (i32.add
           (local.get $13)
           (i32.const 1)
          )
          (local.get $3)
         )
         ;;@ ./celt/pitch.h:127:0
         (block
          ;;@ ./celt/pitch.h:124:0
          (local.set $16
           (i32.reinterpret_f32
            (f32.add
             (local.get $7)
             (f32.mul
              (local.get $11)
              ;;@ ./celt/pitch.h:122:0
              (local.tee $7
               (f32.load
                (local.get $6)
               )
              )
             )
            )
           )
          )
          ;;@ ./celt/pitch.h:125:0
          (local.set $21
           (i32.reinterpret_f32
            (f32.add
             (local.get $8)
             (f32.mul
              (local.get $18)
              (local.get $7)
             )
            )
           )
          )
          ;;@ ./celt/pitch.h:126:0
          (local.set $22
           (i32.reinterpret_f32
            (f32.add
             (local.get $10)
             (f32.mul
              (local.get $9)
              (local.get $7)
             )
            )
           )
          )
          (local.set $17
           (i32.reinterpret_f32
            (f32.add
             (local.get $12)
             (f32.mul
              (local.get $7)
              (f32.load
               (local.get $5)
              )
             )
            )
           )
          )
         )
        )
        ;;@ celt/pitch.c:257:0
        (i32.store
         (i32.add
          (i32.shl
           (local.get $19)
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $16)
        )
        ;;@ celt/pitch.c:258:0
        (i32.store
         (i32.add
          (i32.shl
           (i32.or
            (local.get $19)
            (i32.const 1)
           )
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $21)
        )
        ;;@ celt/pitch.c:259:0
        (i32.store
         (i32.add
          (i32.shl
           (i32.or
            (local.get $19)
            (i32.const 2)
           )
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $22)
        )
        ;;@ celt/pitch.c:260:0
        (i32.store
         (i32.add
          (i32.shl
           (i32.or
            (local.get $19)
            (i32.const 3)
           )
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $17)
        )
        ;;@ celt/pitch.c:253:0
        (br_if $while-in
         (i32.lt_s
          (local.tee $19
           (i32.add
            (local.get $19)
            (i32.const 4)
           )
          )
          (local.get $29)
         )
        )
       )
       (i32.and
        (local.get $4)
        (i32.const -4)
       )
      )
      (i32.const 0)
     )
    )
    (local.get $4)
   )
   ;;@ celt/pitch.c:282:0
   (return)
  )
  (if
   (i32.le_s
    (local.get $3)
    (i32.const 0)
   )
   (block
    ;;@ celt/pitch.c:273:0
    (drop
     (call $_memset
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.const 0)
      (i32.shl
       (i32.sub
        (local.get $4)
        (local.get $6)
       )
       (i32.const 2)
      )
     )
    )
    ;;@ celt/pitch.c:282:0
    (return)
   )
  )
  (loop $while-in3
   ;;@ celt/pitch.c:272:0
   (local.set $13
    (i32.add
     (i32.shl
      (local.get $6)
      (i32.const 2)
     )
     (local.get $1)
    )
   )
   (local.set $5
    (i32.const 0)
   )
   (local.set $9
    (f32.const 0)
   )
   (loop $while-in5
    ;;@ ./celt/pitch.h:165:0
    (local.set $9
     (f32.add
      (local.get $9)
      (f32.mul
       (f32.load
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (local.get $0)
        )
       )
       (f32.load
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (local.get $13)
        )
       )
      )
     )
    )
    ;;@ ./celt/pitch.h:164:0
    (br_if $while-in5
     (i32.ne
      (local.tee $5
       (i32.add
        (local.get $5)
        (i32.const 1)
       )
      )
      (local.get $3)
     )
    )
   )
   ;;@ celt/pitch.c:273:0
   (f32.store
    (i32.add
     (i32.shl
      (local.get $6)
      (i32.const 2)
     )
     (local.get $2)
    )
    (local.get $9)
   )
   ;;@ celt/pitch.c:269:0
   (br_if $while-in3
    (i32.ne
     (local.tee $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (local.get $4)
    )
   )
  )
 )
 (func $_pitch_search (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $16
   (global.get $STACKTOP)
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  ;;@ celt/pitch.c:306:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1328)
   )
  )
  (local.set $9
   (global.get $STACKTOP)
  )
  ;;@ celt/pitch.c:307:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1952)
   )
  )
  (local.set $10
   (global.get $STACKTOP)
  )
  ;;@ celt/pitch.c:308:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1248)
   )
  )
  (loop $while-in
   ;;@ celt/pitch.c:312:0
   (i32.store
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
     (local.get $7)
    )
    (i32.load
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 3)
      )
      (local.get $0)
     )
    )
   )
   ;;@ celt/pitch.c:311:0
   (br_if $while-in
    (i32.ne
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (i32.const 332)
    )
   )
  )
  (local.set $4
   (i32.const 0)
  )
  (loop $while-in1
   ;;@ celt/pitch.c:314:0
   (i32.store
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
     (local.get $9)
    )
    (i32.load
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 3)
      )
      (local.get $1)
     )
    )
   )
   ;;@ celt/pitch.c:313:0
   (br_if $while-in1
    (i32.lt_s
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (i32.const 487)
    )
   )
  )
  ;;@ celt/pitch.c:338:0
  (call $_celt_pitch_xcorr_c
   (local.get $7)
   (local.get $9)
   (local.get $10)
   (i32.const 332)
   (i32.const 155)
  )
  (local.set $4
   (i32.const 0)
  )
  (local.set $5
   (f32.const 1)
  )
  (loop $while-in3
   ;;@ celt/pitch.c:69:0
   (local.set $5
    (f32.add
     (local.get $5)
     (f32.mul
      (local.tee $3
       (f32.load
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 2)
         )
         (local.get $9)
        )
       )
      )
      (local.get $3)
     )
    )
   )
   ;;@ celt/pitch.c:68:0
   (br_if $while-in3
    (i32.ne
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (i32.const 332)
    )
   )
  )
  (local.set $7
   (i32.const 0)
  )
  (local.set $8
   (local.get $5)
  )
  (local.set $5
   (f32.const 0)
  )
  (local.set $3
   (f32.const -1)
  )
  (local.set $4
   (i32.const 1)
  )
  (local.set $11
   (f32.const -1)
  )
  (loop $while-in5
   (local.set $5
    (if (result f32)
     ;;@ celt/pitch.c:72:0
     (f32.gt
      (local.tee $6
       (f32.load
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 2)
         )
         (local.get $10)
        )
       )
      )
      (f32.const 0)
     )
     (if (result f32)
      ;;@ celt/pitch.c:83:0
      (f32.gt
       (f32.mul
        (local.get $14)
        ;;@ celt/pitch.c:82:0
        (local.tee $13
         (f32.mul
          ;;@ celt/pitch.c:80:0
          (local.tee $6
           (f32.mul
            (local.get $6)
            (f32.const 9.999999960041972e-13)
           )
          )
          (local.get $6)
         )
        )
       )
       (f32.mul
        (local.get $11)
        (local.get $8)
       )
      )
      (if (result f32)
       ;;@ celt/pitch.c:85:0
       (f32.gt
        (f32.mul
         (local.get $5)
         (local.get $13)
        )
        (f32.mul
         (local.get $3)
         (local.get $8)
        )
       )
       (block (result f32)
        (local.set $6
         (local.get $13)
        )
        (local.set $4
         (local.get $12)
        )
        (local.set $14
         (local.get $5)
        )
        (local.set $11
         (local.get $3)
        )
        (local.set $12
         (local.tee $15
          (local.get $7)
         )
        )
        (local.get $8)
       )
       (block (result f32)
        (local.set $6
         (local.get $3)
        )
        (local.set $4
         (local.get $7)
        )
        (local.set $14
         (local.get $8)
        )
        (local.set $11
         (local.get $13)
        )
        (local.get $5)
       )
      )
      (block (result f32)
       (local.set $6
        (local.get $3)
       )
       (local.get $5)
      )
     )
     (block (result f32)
      (local.set $6
       (local.get $3)
      )
      (local.get $5)
     )
    )
   )
   ;;@ celt/pitch.c:101:0
   (local.set $8
    (select
     (f32.const 1)
     ;;@ celt/pitch.c:100:0
     (local.tee $3
      (f32.add
       (local.get $8)
       (f32.sub
        (f32.mul
         (local.tee $3
          (f32.load
           (i32.add
            (i32.shl
             (i32.add
              (local.get $7)
              (i32.const 332)
             )
             (i32.const 2)
            )
            (local.get $9)
           )
          )
         )
         (local.get $3)
        )
        (f32.mul
         (local.tee $3
          (f32.load
           (i32.add
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
            (local.get $9)
           )
          )
         )
         (local.get $3)
        )
       )
      )
     )
     (f32.lt
      (local.get $3)
      (f32.const 1)
     )
    )
   )
   (if
    ;;@ celt/pitch.c:70:0
    (i32.ne
     (local.tee $7
      (i32.add
       (local.get $7)
       (i32.const 1)
      )
     )
     (i32.const 155)
    )
    (block
     (local.set $3
      (local.get $6)
     )
     (br $while-in5)
    )
   )
  )
  (local.set $15
   (i32.shl
    (local.get $15)
    (i32.const 1)
   )
  )
  (local.set $9
   (i32.shl
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $4
   (i32.const 0)
  )
  (loop $while-in9
   ;;@ celt/pitch.c:353:0
   (f32.store
    (local.tee $17
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (local.get $10)
     )
    )
    (f32.const 0)
   )
   (block $__rjto$1
    (block $__rjti$1
     ;;@ celt/pitch.c:354:0
     (br_if $__rjti$1
      (i32.le_s
       (select
        (local.tee $7
         (i32.sub
          (local.get $4)
          (local.get $15)
         )
        )
        (i32.sub
         (i32.const 0)
         (local.get $7)
        )
        (i32.gt_s
         (local.get $7)
         (i32.const -1)
        )
       )
       (i32.const 2)
      )
     )
     (br_if $__rjti$1
      (i32.le_s
       (select
        (local.tee $7
         (i32.sub
          (local.get $4)
          (local.get $9)
         )
        )
        (i32.sub
         (i32.const 0)
         (local.get $7)
        )
        (i32.gt_s
         (local.get $7)
         (i32.const -1)
        )
       )
       (i32.const 2)
      )
     )
     (br $__rjto$1)
    )
    ;;@ celt/pitch.c:361:0
    (local.set $7
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (local.get $1)
     )
    )
    (local.set $12
     (i32.const 0)
    )
    (local.set $5
     (f32.const 0)
    )
    (loop $while-in11
     ;;@ ./celt/pitch.h:165:0
     (local.set $5
      (f32.add
       (local.get $5)
       (f32.mul
        (f32.load
         (i32.add
          (i32.shl
           (local.get $12)
           (i32.const 2)
          )
          (local.get $0)
         )
        )
        (f32.load
         (i32.add
          (i32.shl
           (local.get $12)
           (i32.const 2)
          )
          (local.get $7)
         )
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:164:0
     (br_if $while-in11
      (i32.ne
       (local.tee $12
        (i32.add
         (local.get $12)
         (i32.const 1)
        )
       )
       (i32.const 664)
      )
     )
    )
    ;;@ celt/pitch.c:363:0
    (f32.store
     (local.get $17)
     (select
      (f32.const -1)
      (local.get $5)
      (f32.lt
       (local.get $5)
       (f32.const -1)
      )
     )
    )
   )
   ;;@ celt/pitch.c:350:0
   (br_if $while-in9
    (i32.ne
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (i32.const 310)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (local.set $5
   (f32.const 1)
  )
  (loop $while-in13
   ;;@ celt/pitch.c:69:0
   (local.set $5
    (f32.add
     (local.get $5)
     (f32.mul
      (local.tee $3
       (f32.load
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
         (local.get $1)
        )
       )
      )
      (local.get $3)
     )
    )
   )
   ;;@ celt/pitch.c:68:0
   (br_if $while-in13
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 664)
    )
   )
  )
  (local.set $4
   (i32.const 0)
  )
  (local.set $8
   (local.get $5)
  )
  (local.set $5
   (f32.const 0)
  )
  (local.set $0
   (i32.const 0)
  )
  (local.set $3
   (f32.const -1)
  )
  (local.set $14
   (f32.const 0)
  )
  (local.set $11
   (f32.const -1)
  )
  (loop $while-in15
   (local.set $5
    (if (result f32)
     ;;@ celt/pitch.c:72:0
     (f32.gt
      (local.tee $6
       (f32.load
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 2)
         )
         (local.get $10)
        )
       )
      )
      (f32.const 0)
     )
     (if (result f32)
      ;;@ celt/pitch.c:83:0
      (f32.gt
       (f32.mul
        (local.get $14)
        ;;@ celt/pitch.c:82:0
        (local.tee $13
         (f32.mul
          ;;@ celt/pitch.c:80:0
          (local.tee $6
           (f32.mul
            (local.get $6)
            (f32.const 9.999999960041972e-13)
           )
          )
          (local.get $6)
         )
        )
       )
       (f32.mul
        (local.get $11)
        (local.get $8)
       )
      )
      (if (result f32)
       ;;@ celt/pitch.c:85:0
       (f32.gt
        (f32.mul
         (local.get $5)
         (local.get $13)
        )
        (f32.mul
         (local.get $3)
         (local.get $8)
        )
       )
       (block (result f32)
        (local.set $0
         (local.get $4)
        )
        (local.set $6
         (local.get $13)
        )
        (local.set $14
         (local.get $5)
        )
        (local.set $11
         (local.get $3)
        )
        (local.get $8)
       )
       (block (result f32)
        (local.set $6
         (local.get $3)
        )
        (local.set $14
         (local.get $8)
        )
        (local.set $11
         (local.get $13)
        )
        (local.get $5)
       )
      )
      (block (result f32)
       (local.set $6
        (local.get $3)
       )
       (local.get $5)
      )
     )
     (block (result f32)
      (local.set $6
       (local.get $3)
      )
      (local.get $5)
     )
    )
   )
   ;;@ celt/pitch.c:101:0
   (local.set $8
    (select
     (f32.const 1)
     ;;@ celt/pitch.c:100:0
     (local.tee $3
      (f32.add
       (local.get $8)
       (f32.sub
        (f32.mul
         (local.tee $3
          (f32.load
           (i32.add
            (i32.shl
             (i32.add
              (local.get $4)
              (i32.const 664)
             )
             (i32.const 2)
            )
            (local.get $1)
           )
          )
         )
         (local.get $3)
        )
        (f32.mul
         (local.tee $3
          (f32.load
           (i32.add
            (i32.shl
             (local.get $4)
             (i32.const 2)
            )
            (local.get $1)
           )
          )
         )
         (local.get $3)
        )
       )
      )
     )
     (f32.lt
      (local.get $3)
      (f32.const 1)
     )
    )
   )
   (if
    ;;@ celt/pitch.c:70:0
    (i32.ne
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (i32.const 310)
    )
    (block
     (local.set $3
      (local.get $6)
     )
     (br $while-in15)
    )
   )
  )
  (block $folding-inner0
   (if
    ;;@ celt/pitch.c:375:0
    (i32.eqz
     (i32.and
      (i32.lt_s
       (local.get $0)
       (i32.const 309)
      )
      (i32.gt_s
       (local.get $0)
       (i32.const 0)
      )
     )
    )
    (block
     ;;@ celt/pitch.c:390:0
     (local.set $0
      (i32.shl
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $folding-inner0)
    )
   )
   (if
    ;;@ celt/pitch.c:381:0
    (f32.gt
     (f32.sub
      ;;@ celt/pitch.c:380:0
      (local.tee $3
       (f32.load
        (i32.add
         (i32.shl
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
          (i32.const 2)
         )
         (local.get $10)
        )
       )
      )
      ;;@ celt/pitch.c:378:0
      (local.tee $6
       (f32.load
        (i32.add
         (i32.shl
          (i32.add
           (local.get $0)
           (i32.const -1)
          )
          (i32.const 2)
         )
         (local.get $10)
        )
       )
      )
     )
     (f32.mul
      (f32.sub
       ;;@ celt/pitch.c:379:0
       (local.tee $5
        (f32.load
         (i32.add
          (i32.shl
           (local.get $0)
           (i32.const 2)
          )
          (local.get $10)
         )
        )
       )
       (local.get $6)
      )
      (f32.const 0.699999988079071)
     )
    )
    (block
     ;;@ celt/pitch.c:390:0
     (local.set $0
      (i32.sub
       (i32.shl
        (local.get $0)
        (i32.const 1)
       )
       (i32.const 1)
      )
     )
     (br $folding-inner0)
    )
   )
   (i32.store
    (local.get $2)
    (i32.sub
     (i32.shl
      (local.get $0)
      (i32.const 1)
     )
     (i32.shr_s
      (i32.shl
       (f32.gt
        (f32.sub
         (local.get $6)
         (local.get $3)
        )
        (f32.mul
         (f32.sub
          (local.get $5)
          (local.get $3)
         )
         (f32.const 0.699999988079071)
        )
       )
       (i32.const 31)
      )
      (i32.const 31)
     )
    )
   )
   (global.set $STACKTOP
    (local.get $16)
   )
   ;;@ celt/pitch.c:393:0
   (return)
  )
  ;;@ celt/pitch.c:390:0
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (global.set $STACKTOP
   (local.get $16)
  )
 )
 (func $__celt_lpc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 f32)
  (local $14 i32)
  (local $15 i32)
  ;;@ celt/celt_lpc.c:45:0
  (local.set $9
   (f32.load
    (local.get $1)
   )
  )
  ;;@ celt/celt_lpc.c:52:0
  (local.set $4
   (i32.shl
    (local.get $2)
    (i32.const 2)
   )
  )
  (drop
   (call $_memset
    (local.get $0)
    (i32.const 0)
    (local.get $4)
   )
  )
  ;;@ celt/celt_lpc.c:53:0
  (local.set $3
   (f32.load
    (local.get $1)
   )
  )
  (local.set $4
   (f32.ne
    (local.get $3)
    (f32.const 0)
   )
  )
  ;;@ celt/celt_lpc.c:55:0
  (local.set $6
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
  )
  (if
   ;;@ celt/celt_lpc.c:53:0
   (i32.eqz
    (i32.and
     (local.get $4)
     (local.get $6)
    )
   )
   ;;@ celt/celt_lpc.c:88:0
   (return)
  )
  (local.set $4
   (i32.const 0)
  )
  (local.set $11
   (i32.const 1)
  )
  (loop $while-in
   ;;@ celt/celt_lpc.c:58:0
   (local.set $14
    (i32.shr_u
     (local.get $11)
     (i32.const 1)
    )
   )
   (if
    (local.get $4)
    (block
     (local.set $6
      (i32.const 0)
     )
     (local.set $3
      (f32.const 0)
     )
     (loop $while-in1
      ;;@ celt/celt_lpc.c:59:0
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $0)
       )
      )
      (local.set $7
       (f32.load
        (local.get $5)
       )
      )
      (local.set $5
       (i32.sub
        (local.get $4)
        (local.get $6)
       )
      )
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
      (local.set $8
       (f32.load
        (local.get $5)
       )
      )
      (local.set $7
       (f32.mul
        (local.get $7)
        (local.get $8)
       )
      )
      (local.set $3
       (f32.add
        (local.get $3)
        (local.get $7)
       )
      )
      ;;@ celt/celt_lpc.c:58:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in1
       (i32.ne
        (local.get $4)
        (local.get $6)
       )
      )
     )
    )
    (local.set $3
     (f32.const 0)
    )
   )
   ;;@ celt/celt_lpc.c:60:0
   (local.set $6
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
   (local.set $5
    (i32.add
     (i32.shl
      (local.get $6)
      (i32.const 2)
     )
     (local.get $1)
    )
   )
   (local.set $7
    (f32.load
     (local.get $5)
    )
   )
   (local.set $3
    (f32.add
     (local.get $3)
     (local.get $7)
    )
   )
   ;;@ celt/celt_lpc.c:61:0
   (local.set $3
    (f32.div
     (local.get $3)
     (local.get $9)
    )
   )
   (local.set $7
    (f32.neg
     (local.get $3)
    )
   )
   ;;@ celt/celt_lpc.c:63:0
   (local.set $5
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
     (local.get $0)
    )
   )
   (f32.store
    (local.get $5)
    (local.get $7)
   )
   ;;@ celt/celt_lpc.c:64:0
   (local.set $5
    (i32.and
     (local.get $6)
     (i32.const 2147483646)
    )
   )
   (if
    (local.get $5)
    (block
     (local.set $15
      (i32.add
       (local.get $4)
       (i32.const -1)
      )
     )
     (local.set $4
      (i32.const 0)
     )
     (loop $while-in3
      ;;@ celt/celt_lpc.c:67:0
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $0)
       )
      )
      (local.set $8
       (f32.load
        (local.get $5)
       )
      )
      ;;@ celt/celt_lpc.c:68:0
      (local.set $10
       (i32.sub
        (local.get $15)
        (local.get $4)
       )
      )
      (local.set $10
       (i32.add
        (i32.shl
         (local.get $10)
         (i32.const 2)
        )
        (local.get $0)
       )
      )
      (local.set $13
       (f32.load
        (local.get $10)
       )
      )
      ;;@ celt/celt_lpc.c:69:0
      (local.set $12
       (f32.mul
        (local.get $13)
        (local.get $7)
       )
      )
      (local.set $12
       (f32.add
        (local.get $8)
        (local.get $12)
       )
      )
      (f32.store
       (local.get $5)
       (local.get $12)
      )
      ;;@ celt/celt_lpc.c:70:0
      (local.set $8
       (f32.mul
        (local.get $8)
        (local.get $7)
       )
      )
      (local.set $8
       (f32.add
        (local.get $13)
        (local.get $8)
       )
      )
      (f32.store
       (local.get $10)
       (local.get $8)
      )
      ;;@ celt/celt_lpc.c:64:0
      (local.set $4
       (i32.add
        (local.get $4)
        (i32.const 1)
       )
      )
      (br_if $while-in3
       (i32.ne
        (local.get $4)
        (local.get $14)
       )
      )
     )
    )
   )
   ;;@ celt/celt_lpc.c:73:0
   (local.set $3
    (f32.mul
     (local.get $3)
     (local.get $3)
    )
   )
   (local.set $3
    (f32.mul
     (local.get $9)
     (local.get $3)
    )
   )
   (local.set $9
    (f32.sub
     (local.get $9)
     (local.get $3)
    )
   )
   ;;@ celt/celt_lpc.c:79:0
   (local.set $3
    (f32.load
     (local.get $1)
    )
   )
   (local.set $3
    (f32.mul
     (local.get $3)
     (f32.const 1.0000000474974513e-03)
    )
   )
   (local.set $4
    (i32.eqz
     (f32.lt
      (local.get $9)
      (local.get $3)
     )
    )
   )
   ;;@ celt/celt_lpc.c:55:0
   (local.set $11
    (i32.add
     (local.get $11)
     (i32.const 1)
    )
   )
   (if
    (i32.and
     (local.get $4)
     (i32.lt_s
      (local.get $6)
      (local.get $2)
     )
    )
    (block
     (local.set $4
      (local.get $6)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_celt_fir_c (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   ;;@ celt/celt_lpc.c:102:0
   (i32.eq
    (local.get $0)
    (local.get $2)
   )
   (call $_celt_fatal
    (i32.const 42324)
    (i32.const 42349)
    (i32.const 102)
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  ;;@ celt/celt_lpc.c:103:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (loop $while-in
   ;;@ celt/celt_lpc.c:105:0
   (i32.store
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 2)
     )
     (local.get $6)
    )
    (i32.load
     (i32.add
      (i32.shl
       (i32.sub
        (i32.const 23)
        (local.get $5)
       )
       (i32.const 2)
      )
      (local.get $1)
     )
    )
   )
   ;;@ celt/celt_lpc.c:104:0
   (br_if $while-in
    (i32.ne
     (local.tee $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (i32.const 24)
    )
   )
  )
  ;;@ celt/celt_lpc.c:106:0
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const -3)
   )
  )
  (if
   (i32.gt_s
    (local.get $3)
    (i32.const 3)
   )
   (block
    (local.set $1
     (i32.const 0)
    )
    (loop $while-in1
     ;;@ celt/celt_lpc.c:109:0
     (i32.store
      (local.get $4)
      (i32.load
       (local.tee $7
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $0)
        )
       )
      )
     )
     ;;@ celt/celt_lpc.c:110:0
     (i32.store offset=4
      (local.get $4)
      (i32.load
       (i32.add
        (i32.shl
         (local.tee $9
          (i32.or
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
        (local.get $0)
       )
      )
     )
     ;;@ celt/celt_lpc.c:111:0
     (i32.store offset=8
      (local.get $4)
      (i32.load
       (i32.add
        (i32.shl
         (local.tee $10
          (i32.or
           (local.get $1)
           (i32.const 2)
          )
         )
         (i32.const 2)
        )
        (local.get $0)
       )
      )
     )
     ;;@ celt/celt_lpc.c:112:0
     (i32.store offset=12
      (local.get $4)
      (i32.load
       (i32.add
        (i32.shl
         (local.tee $11
          (i32.or
           (local.get $1)
           (i32.const 3)
          )
         )
         (i32.const 2)
        )
        (local.get $0)
       )
      )
     )
     ;;@ celt/celt_lpc.c:113:0
     (call $_xcorr_kernel_c
      (local.get $6)
      (i32.add
       (local.get $7)
       (i32.const -96)
      )
      (local.get $4)
     )
     ;;@ celt/celt_lpc.c:114:0
     (i32.store
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.load
       (local.get $4)
      )
     )
     ;;@ celt/celt_lpc.c:115:0
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.load offset=4
       (local.get $4)
      )
     )
     ;;@ celt/celt_lpc.c:116:0
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.load offset=8
       (local.get $4)
      )
     )
     ;;@ celt/celt_lpc.c:117:0
     (i32.store
      (i32.add
       (i32.shl
        (local.get $11)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.load offset=12
       (local.get $4)
      )
     )
     ;;@ celt/celt_lpc.c:106:0
     (br_if $while-in1
      (i32.lt_s
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (local.get $5)
      )
     )
    )
   )
   (local.set $1
    (i32.const 0)
   )
  )
  (if
   (i32.lt_s
    (local.get $1)
    (local.get $3)
   )
   (block
    (loop $while-in5
     ;;@ celt/celt_lpc.c:121:0
     (local.set $7
      (i32.sub
       (local.get $1)
       (i32.const 24)
      )
     )
     (local.set $5
      (i32.const 0)
     )
     (local.set $8
      (f32.load
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $0)
       )
      )
     )
     (loop $while-in7
      ;;@ celt/celt_lpc.c:123:0
      (local.set $8
       (f32.add
        (local.get $8)
        (f32.mul
         (f32.load
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
           (local.get $6)
          )
         )
         (f32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $5)
             (local.get $7)
            )
            (i32.const 2)
           )
           (local.get $0)
          )
         )
        )
       )
      )
      ;;@ celt/celt_lpc.c:122:0
      (br_if $while-in7
       (i32.ne
        (local.tee $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (i32.const 24)
       )
      )
     )
     ;;@ celt/celt_lpc.c:124:0
     (f32.store
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (local.get $8)
     )
     ;;@ celt/celt_lpc.c:119:0
     (br_if $while-in5
      (i32.ne
       (local.get $3)
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
      )
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    ;;@ celt/celt_lpc.c:127:0
    (return)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_xcorr_kernel_c (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  ;;@ ./celt/pitch.h:71:0
  (local.set $8
   (f32.load
    (local.get $1)
   )
  )
  ;;@ ./celt/pitch.h:72:0
  (local.set $12
   (f32.load offset=4
    (local.get $1)
   )
  )
  ;;@ ./celt/pitch.h:73:0
  (local.set $13
   (i32.add
    (local.get $1)
    (i32.const 12)
   )
  )
  (local.set $9
   (f32.load offset=8
    (local.get $1)
   )
  )
  (if
   ;;@ ./celt/pitch.h:102:0
   (block (result i32)
    ;;@ ./celt/pitch.h:79:0
    (local.set $5
     (f32.load
      (local.get $2)
     )
    )
    ;;@ ./celt/pitch.h:80:0
    (local.set $10
     (f32.load offset=4
      (local.get $2)
     )
    )
    ;;@ ./celt/pitch.h:81:0
    (local.set $11
     (f32.load offset=8
      (local.get $2)
     )
    )
    ;;@ ./celt/pitch.h:82:0
    (local.set $7
     (local.get $0)
    )
    (local.set $6
     (f32.load offset=12
      (local.get $2)
     )
    )
    (loop $while-in
     ;;@ ./celt/pitch.h:78:0
     (local.set $3
      (f32.load
       (local.get $13)
      )
     )
     ;;@ ./celt/pitch.h:79:0
     (f32.store
      (local.get $2)
      (local.tee $5
       (f32.add
        (f32.mul
         (local.get $8)
         ;;@ ./celt/pitch.h:77:0
         (local.tee $4
          (f32.load
           (local.get $7)
          )
         )
        )
        (local.get $5)
       )
      )
     )
     ;;@ ./celt/pitch.h:80:0
     (f32.store offset=4
      (local.get $2)
      (local.tee $10
       (f32.add
        (f32.mul
         (local.get $12)
         (local.get $4)
        )
        (local.get $10)
       )
      )
     )
     ;;@ ./celt/pitch.h:81:0
     (f32.store offset=8
      (local.get $2)
      (local.tee $11
       (f32.add
        (f32.mul
         (local.get $9)
         (local.get $4)
        )
        (local.get $11)
       )
      )
     )
     ;;@ ./celt/pitch.h:82:0
     (f32.store offset=12
      (local.get $2)
      (local.tee $6
       (f32.add
        (f32.mul
         (local.get $4)
         (local.get $3)
        )
        (local.get $6)
       )
      )
     )
     ;;@ ./celt/pitch.h:84:0
     (local.set $8
      (f32.load offset=4
       (local.get $13)
      )
     )
     ;;@ ./celt/pitch.h:85:0
     (f32.store
      (local.get $2)
      (local.tee $5
       (f32.add
        (local.get $5)
        (f32.mul
         (local.get $12)
         ;;@ ./celt/pitch.h:83:0
         (local.tee $4
          (f32.load offset=4
           (local.get $7)
          )
         )
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:86:0
     (f32.store offset=4
      (local.get $2)
      (local.tee $10
       (f32.add
        (local.get $10)
        (f32.mul
         (local.get $9)
         (local.get $4)
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:87:0
     (f32.store offset=8
      (local.get $2)
      (local.tee $11
       (f32.add
        (local.get $11)
        (f32.mul
         (local.get $3)
         (local.get $4)
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:88:0
     (f32.store offset=12
      (local.get $2)
      (local.tee $6
       (f32.add
        (local.get $6)
        (f32.mul
         (local.get $4)
         (local.get $8)
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:90:0
     (local.set $12
      (f32.load offset=8
       (local.get $13)
      )
     )
     ;;@ ./celt/pitch.h:91:0
     (f32.store
      (local.get $2)
      (local.tee $5
       (f32.add
        (local.get $5)
        (f32.mul
         (local.get $9)
         ;;@ ./celt/pitch.h:89:0
         (local.tee $4
          (f32.load offset=8
           (local.get $7)
          )
         )
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:92:0
     (f32.store offset=4
      (local.get $2)
      (local.tee $10
       (f32.add
        (local.get $10)
        (f32.mul
         (local.get $3)
         (local.get $4)
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:93:0
     (f32.store offset=8
      (local.get $2)
      (local.tee $11
       (f32.add
        (local.get $11)
        (f32.mul
         (local.get $8)
         (local.get $4)
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:94:0
     (f32.store offset=12
      (local.get $2)
      (local.tee $6
       (f32.add
        (local.get $6)
        (f32.mul
         (local.get $4)
         (local.get $12)
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:95:0
     (local.set $14
      (i32.add
       (local.get $7)
       (i32.const 16)
      )
     )
     ;;@ ./celt/pitch.h:96:0
     (local.set $15
      (i32.add
       (local.get $13)
       (i32.const 16)
      )
     )
     (local.set $9
      (f32.load offset=12
       (local.get $13)
      )
     )
     ;;@ ./celt/pitch.h:97:0
     (f32.store
      (local.get $2)
      (local.tee $5
       (f32.add
        (local.get $5)
        (f32.mul
         (local.get $3)
         ;;@ ./celt/pitch.h:95:0
         (local.tee $4
          (f32.load offset=12
           (local.get $7)
          )
         )
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:98:0
     (f32.store offset=4
      (local.get $2)
      (local.tee $10
       (f32.add
        (local.get $10)
        (f32.mul
         (local.get $8)
         (local.get $4)
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:99:0
     (f32.store offset=8
      (local.get $2)
      (local.tee $11
       (f32.add
        (local.get $11)
        (f32.mul
         (local.get $12)
         (local.get $4)
        )
       )
      )
     )
     ;;@ ./celt/pitch.h:100:0
     (f32.store offset=12
      (local.get $2)
      (local.tee $6
       (f32.add
        (local.get $6)
        (f32.mul
         (local.get $4)
         (local.get $9)
        )
       )
      )
     )
     (if
      ;;@ ./celt/pitch.h:74:0
      (i32.lt_s
       (local.tee $16
        (i32.add
         (local.get $16)
         (i32.const 4)
        )
       )
       (i32.const 21)
      )
      (block
       (local.set $13
        (local.get $15)
       )
       (local.set $7
        (local.get $14)
       )
       (br $while-in)
      )
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 96)
     )
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (i32.const 108)
     )
    )
    (local.set $5
     (local.get $3)
    )
    (i32.lt_s
     (local.tee $7
      (i32.const 24)
     )
     (i32.const 24)
    )
   )
   (block
    ;;@ ./celt/pitch.h:105:0
    (local.set $5
     (f32.load
      (local.get $1)
     )
    )
    ;;@ ./celt/pitch.h:106:0
    (f32.store
     (local.get $2)
     (f32.add
      (f32.mul
       (local.get $8)
       ;;@ ./celt/pitch.h:104:0
       (local.tee $3
        (f32.load
         (local.get $0)
        )
       )
      )
      (f32.load
       (local.get $2)
      )
     )
    )
    ;;@ ./celt/pitch.h:107:0
    (f32.store offset=4
     (local.get $2)
     (f32.add
      (f32.mul
       (local.get $12)
       (local.get $3)
      )
      (f32.load offset=4
       (local.get $2)
      )
     )
    )
    ;;@ ./celt/pitch.h:108:0
    (f32.store offset=8
     (local.get $2)
     (f32.add
      (f32.mul
       (local.get $9)
       (local.get $3)
      )
      (f32.load offset=8
       (local.get $2)
      )
     )
    )
    ;;@ ./celt/pitch.h:109:0
    (f32.store offset=12
     (local.get $2)
     (f32.add
      (f32.mul
       (local.get $3)
       (local.get $5)
      )
      (f32.load offset=12
       (local.get $2)
      )
     )
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (i32.const 4)
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
   )
  )
  (if
   ;;@ ./celt/pitch.h:111:0
   (i32.lt_s
    ;;@ ./celt/pitch.h:102:0
    (local.tee $7
     (i32.const 25)
    )
    (i32.const 24)
   )
   (block
    ;;@ ./celt/pitch.h:114:0
    (local.set $8
     (f32.load
      (local.get $1)
     )
    )
    ;;@ ./celt/pitch.h:115:0
    (f32.store
     (local.get $2)
     (f32.add
      (f32.mul
       (local.get $12)
       ;;@ ./celt/pitch.h:113:0
       (local.tee $3
        (f32.load
         (local.get $0)
        )
       )
      )
      (f32.load
       (local.get $2)
      )
     )
    )
    ;;@ ./celt/pitch.h:116:0
    (f32.store offset=4
     (local.get $2)
     (f32.add
      (f32.mul
       (local.get $9)
       (local.get $3)
      )
      (f32.load offset=4
       (local.get $2)
      )
     )
    )
    ;;@ ./celt/pitch.h:117:0
    (f32.store offset=8
     (local.get $2)
     (f32.add
      (f32.mul
       (local.get $5)
       (local.get $3)
      )
      (f32.load offset=8
       (local.get $2)
      )
     )
    )
    ;;@ ./celt/pitch.h:118:0
    (f32.store offset=12
     (local.get $2)
     (f32.add
      (f32.mul
       (local.get $3)
       (local.get $8)
      )
      (f32.load offset=12
       (local.get $2)
      )
     )
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (i32.const 4)
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
   )
  )
  (return)
 )
 (func $_celt_iir (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $11
   (global.get $STACKTOP)
  )
  ;;@ celt/celt_lpc.c:161:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (local.set $8
   (global.get $STACKTOP)
  )
  ;;@ celt/celt_lpc.c:162:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.tee $10
        (i32.add
         (local.get $3)
         (i32.const 24)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (if
   ;;@ celt/celt_lpc.c:167:0
   (block (result i32)
    (loop $while-in
     ;;@ celt/celt_lpc.c:164:0
     (i32.store
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $11)
      )
      (i32.load
       (i32.add
        (i32.shl
         (i32.sub
          (i32.const 23)
          (local.get $5)
         )
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     ;;@ celt/celt_lpc.c:163:0
     (br_if $while-in
      (i32.ne
       (local.tee $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (i32.const 24)
      )
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (i32.gt_s
     (local.get $10)
     (local.tee $5
      (loop $while-in1 (result i32)
       ;;@ celt/celt_lpc.c:166:0
       (f32.store
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (local.get $8)
        )
        (f32.neg
         (f32.load
          (i32.add
           (i32.shl
            (i32.sub
             (i32.const 23)
             (local.get $5)
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
        )
       )
       ;;@ celt/celt_lpc.c:165:0
       (br_if $while-in1
        (i32.ne
         (local.tee $5
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (i32.const 24)
        )
       )
       (i32.const 24)
      )
     )
    )
   )
   ;;@ celt/celt_lpc.c:168:0
   (drop
    (call $_memset
     (i32.add
      (local.get $8)
      (i32.const 96)
     )
     (i32.const 0)
     (i32.shl
      (i32.sub
       (local.get $10)
       (i32.const 24)
      )
      (i32.const 2)
     )
    )
   )
  )
  ;;@ celt/celt_lpc.c:169:0
  (local.set $13
   (i32.add
    (local.get $3)
    (i32.const -3)
   )
  )
  (if
   ;;@ celt/celt_lpc.c:196:0
   (i32.lt_s
    (local.tee $1
     (if (result i32)
      ;;@ celt/celt_lpc.c:169:0
      (i32.gt_s
       (local.get $3)
       (i32.const 3)
      )
      (block (result i32)
       (local.set $5
        (i32.const 0)
       )
       (loop $while-in3 (result i32)
        ;;@ celt/celt_lpc.c:173:0
        (i32.store
         (local.get $6)
         (i32.load
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
           (local.get $0)
          )
         )
        )
        ;;@ celt/celt_lpc.c:174:0
        (i32.store offset=4
         (local.get $6)
         (i32.load
          (i32.add
           (i32.shl
            (local.tee $14
             (i32.or
              (local.get $5)
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
           (local.get $0)
          )
         )
        )
        ;;@ celt/celt_lpc.c:175:0
        (i32.store offset=8
         (local.get $6)
         (i32.load
          (i32.add
           (i32.shl
            (local.tee $15
             (i32.or
              (local.get $5)
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (local.get $0)
          )
         )
        )
        ;;@ celt/celt_lpc.c:176:0
        (i32.store offset=12
         (local.get $6)
         (i32.load
          (i32.add
           (i32.shl
            (local.tee $16
             (i32.or
              (local.get $5)
              (i32.const 3)
             )
            )
            (i32.const 2)
           )
           (local.get $0)
          )
         )
        )
        ;;@ celt/celt_lpc.c:177:0
        (call $_xcorr_kernel_c
         (local.get $11)
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $8)
         )
         (local.get $6)
        )
        ;;@ celt/celt_lpc.c:180:0
        (f32.store
         (i32.add
          (i32.shl
           (local.tee $10
            (i32.add
             (local.get $5)
             (i32.const 24)
            )
           )
           (i32.const 2)
          )
          (local.get $8)
         )
         (local.tee $7
          (f32.neg
           (local.tee $9
            (f32.load
             (local.get $6)
            )
           )
          )
         )
        )
        ;;@ celt/celt_lpc.c:181:0
        (f32.store
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $9)
        )
        ;;@ celt/celt_lpc.c:182:0
        (f32.store offset=4
         (local.get $6)
         (local.tee $9
          (f32.add
           (f32.load offset=4
            (local.get $6)
           )
           (f32.mul
            (f32.load
             (local.get $1)
            )
            (local.get $7)
           )
          )
         )
        )
        ;;@ celt/celt_lpc.c:183:0
        (f32.store
         (i32.add
          (i32.shl
           (i32.add
            (local.get $10)
            (i32.const 1)
           )
           (i32.const 2)
          )
          (local.get $8)
         )
         (local.tee $12
          (f32.neg
           (local.get $9)
          )
         )
        )
        ;;@ celt/celt_lpc.c:184:0
        (f32.store
         (i32.add
          (i32.shl
           (local.get $14)
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $9)
        )
        ;;@ celt/celt_lpc.c:186:0
        (f32.store offset=8
         (local.get $6)
         (local.tee $9
          (f32.add
           (f32.add
            (f32.load offset=8
             (local.get $6)
            )
            (f32.mul
             (f32.load
              (local.get $1)
             )
             (local.get $12)
            )
           )
           (f32.mul
            (f32.load offset=4
             (local.get $1)
            )
            (local.get $7)
           )
          )
         )
        )
        ;;@ celt/celt_lpc.c:187:0
        (f32.store
         (i32.add
          (i32.shl
           (i32.add
            (local.get $10)
            (i32.const 2)
           )
           (i32.const 2)
          )
          (local.get $8)
         )
         (local.tee $17
          (f32.neg
           (local.get $9)
          )
         )
        )
        ;;@ celt/celt_lpc.c:188:0
        (f32.store
         (i32.add
          (i32.shl
           (local.get $15)
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $9)
        )
        ;;@ celt/celt_lpc.c:193:0
        (f32.store
         (i32.add
          (i32.shl
           (i32.add
            (local.get $10)
            (i32.const 3)
           )
           (i32.const 2)
          )
          (local.get $8)
         )
         (f32.neg
          ;;@ celt/celt_lpc.c:192:0
          (local.tee $7
           (f32.add
            (f32.add
             (f32.add
              (f32.load offset=12
               (local.get $6)
              )
              (f32.mul
               (f32.load
                (local.get $1)
               )
               (local.get $17)
              )
             )
             (f32.mul
              (f32.load offset=4
               (local.get $1)
              )
              (local.get $12)
             )
            )
            (f32.mul
             (f32.load offset=8
              (local.get $1)
             )
             (local.get $7)
            )
           )
          )
         )
        )
        ;;@ celt/celt_lpc.c:194:0
        (f32.store
         (i32.add
          (i32.shl
           (local.get $16)
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $7)
        )
        ;;@ celt/celt_lpc.c:169:0
        (br_if $while-in3
         (i32.lt_s
          (local.tee $5
           (i32.add
            (local.get $5)
            (i32.const 4)
           )
          )
          (local.get $13)
         )
        )
        (local.get $5)
       )
      )
      (i32.const 0)
     )
    )
    (local.get $3)
   )
   (loop $while-in7
    ;;@ celt/celt_lpc.c:198:0
    (local.set $5
     (i32.const 0)
    )
    (local.set $7
     (f32.load
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $0)
      )
     )
    )
    (loop $while-in9
     ;;@ celt/celt_lpc.c:200:0
     (local.set $7
      (f32.sub
       (local.get $7)
       (f32.mul
        (f32.load
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $11)
         )
        )
        (f32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $1)
            (local.get $5)
           )
           (i32.const 2)
          )
          (local.get $8)
         )
        )
       )
      )
     )
     ;;@ celt/celt_lpc.c:199:0
     (br_if $while-in9
      (i32.ne
       (local.tee $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (i32.const 24)
      )
     )
    )
    ;;@ celt/celt_lpc.c:201:0
    (f32.store
     (i32.add
      (i32.shl
       (i32.add
        (local.get $1)
        (i32.const 24)
       )
       (i32.const 2)
      )
      (local.get $8)
     )
     (local.get $7)
    )
    ;;@ celt/celt_lpc.c:202:0
    (f32.store
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $2)
     )
     (local.get $7)
    )
    ;;@ celt/celt_lpc.c:196:0
    (br_if $while-in7
     (i32.ne
      (local.get $3)
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
   )
  )
  (local.set $1
   (i32.add
    (local.get $3)
    (i32.const -1)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in11
   ;;@ celt/celt_lpc.c:205:0
   (i32.store
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
     (local.get $4)
    )
    (i32.load
     (i32.add
      (i32.shl
       (i32.sub
        (local.get $1)
        (local.get $0)
       )
       (i32.const 2)
      )
      (local.get $2)
     )
    )
   )
   ;;@ celt/celt_lpc.c:204:0
   (br_if $while-in11
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 24)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $__celt_autocorr (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  ;;@ celt/celt_lpc.c:227:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 4096)
   )
  )
  (if
   ;;@ celt/celt_lpc.c:229:0
   (i32.le_s
    (local.get $3)
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 42456)
    (i32.const 42349)
    (i32.const 229)
   )
  )
  ;;@ celt/celt_lpc.c:222:0
  (local.set $9
   (i32.sub
    (i32.const 1024)
    (local.get $4)
   )
  )
  ;;@ celt/celt_lpc.c:266:0
  (call $_celt_pitch_xcorr_c
   (local.tee $2
    (if (result i32)
     ;;@ celt/celt_lpc.c:230:0
     (local.get $3)
     (block (result i32)
      ;;@ celt/celt_lpc.c:235:0
      (drop
       (call $_memcpy
        (local.get $7)
        (local.get $0)
        (i32.const 4096)
       )
      )
      (loop $while-in (result i32)
       ;;@ celt/celt_lpc.c:238:0
       (f32.store
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (local.get $7)
        )
        (f32.mul
         (f32.load
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
           (local.get $0)
          )
         )
         (local.tee $6
          (f32.load
           (i32.add
            (i32.shl
             (local.get $5)
             (i32.const 2)
            )
            (local.get $2)
           )
          )
         )
        )
       )
       ;;@ celt/celt_lpc.c:239:0
       (f32.store
        (i32.add
         (i32.shl
          (local.tee $10
           (i32.sub
            (i32.const 1023)
            (local.get $5)
           )
          )
          (i32.const 2)
         )
         (local.get $7)
        )
        (f32.mul
         (local.get $6)
         (f32.load
          (i32.add
           (i32.shl
            (local.get $10)
            (i32.const 2)
           )
           (local.get $0)
          )
         )
        )
       )
       ;;@ celt/celt_lpc.c:236:0
       (br_if $while-in
        (i32.ne
         (local.tee $5
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (local.get $3)
        )
       )
       (local.get $7)
      )
     )
     (local.get $0)
    )
   )
   (local.get $2)
   (local.get $1)
   (local.get $9)
   ;;@ celt/celt_lpc.c:266:0
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
  )
  (if
   ;;@ celt/celt_lpc.c:267:0
   (i32.lt_s
    (local.get $4)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $8)
    )
    (return)
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in1
   (if
    ;;@ celt/celt_lpc.c:269:0
    (i32.lt_s
     (local.tee $0
      (i32.add
       (local.get $3)
       (local.get $9)
      )
     )
     (i32.const 1024)
    )
    (block
     (local.set $6
      (f32.const 0)
     )
     (loop $while-in3
      ;;@ celt/celt_lpc.c:270:0
      (local.set $6
       (f32.add
        (local.get $6)
        (f32.mul
         (f32.load
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $2)
          )
         )
         (f32.load
          (i32.add
           (i32.shl
            (i32.sub
             (local.get $0)
             (local.get $3)
            )
            (i32.const 2)
           )
           (local.get $2)
          )
         )
        )
       )
      )
      ;;@ celt/celt_lpc.c:269:0
      (br_if $while-in3
       (i32.ne
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.const 1024)
       )
      )
     )
    )
    (local.set $6
     (f32.const 0)
    )
   )
   ;;@ celt/celt_lpc.c:271:0
   (f32.store
    (local.tee $0
     (i32.add
      (i32.shl
       (local.get $3)
       (i32.const 2)
      )
      (local.get $1)
     )
    )
    (f32.add
     (local.get $6)
     (f32.load
      (local.get $0)
     )
    )
   )
   ;;@ celt/celt_lpc.c:267:0
   (br_if $while-in1
    (i32.ne
     (local.get $5)
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_unquant_coarse_energy (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local.set $12
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  ;;@ celt/quant_bands.c:432:0
  (i64.store
   (local.get $12)
   (i64.const 0)
  )
  (local.set $16
   (if (result f32)
    ;;@ celt/quant_bands.c:438:0
    (local.get $4)
    (block (result f32)
     (local.set $15
      (f32.const 0.149993896484375)
     )
     (f32.const 0)
    )
    (block (result f32)
     ;;@ celt/quant_bands.c:444:0
     (local.set $8
      (i32.add
       (i32.shl
        (local.get $7)
        (i32.const 2)
       )
       (i32.const 21376)
      )
     )
     ;;@ celt/quant_bands.c:443:0
     (local.set $10
      (i32.add
       (i32.shl
        (local.get $7)
        (i32.const 2)
       )
       (i32.const 21392)
      )
     )
     (local.set $15
      (f32.load
       (local.get $10)
      )
     )
     ;;@ celt/quant_bands.c:444:0
     (f32.load
      (local.get $8)
     )
    )
   )
  )
  (if
   ;;@ celt/quant_bands.c:450:0
   (i32.ge_s
    (local.get $1)
    (local.get $2)
   )
   (block
    (global.set $STACKTOP
     (local.get $12)
    )
    ;;@ celt/quant_bands.c:491:0
    (return)
   )
  )
  ;;@ celt/quant_bands.c:447:0
  (local.set $10
   (i32.load offset=4
    (local.get $5)
   )
  )
  (local.set $17
   (i32.add
    (i32.shl
     (local.get $10)
     (i32.const 3)
    )
    (i32.const 32)
   )
  )
  (loop $while-in
   (local.set $18
    (i32.add
     (local.tee $10
      (i32.shl
       (select
        (local.get $1)
        (i32.const 20)
        (i32.lt_s
         (local.get $1)
         (i32.const 20)
        )
       )
       (i32.const 1)
      )
     )
     (i32.add
      (i32.add
       (i32.mul
        (local.get $7)
        (i32.const 84)
       )
       (i32.const 21040)
      )
      (i32.mul
       (local.get $4)
       (i32.const 42)
      )
     )
    )
   )
   (local.set $19
    (i32.add
     (i32.add
      (i32.add
       (i32.mul
        (local.get $7)
        (i32.const 84)
       )
       (i32.const 21040)
      )
      (i32.mul
       (local.get $4)
       (i32.const 42)
      )
     )
     (i32.or
      (local.get $10)
      (i32.const 1)
     )
    )
   )
   (local.set $10
    (i32.const 0)
   )
   (loop $while-in1
    (local.set $20
     (i32.load offset=20
      (local.get $5)
     )
    )
    (local.set $8
     (i32.load offset=28
      (local.get $5)
     )
    )
    ;;@ ./celt/entcode.h:112:0
    (local.set $11
     (i32.clz
      (local.get $8)
     )
    )
    (local.set $8
     (i32.sub
      (local.get $17)
      (local.get $20)
     )
    )
    ;;@ celt/quant_bands.c:462:0
    (local.set $8
     (i32.sub
      (local.get $8)
      (local.get $11)
     )
    )
    (local.set $8
     (if (result i32)
      (i32.gt_s
       (local.get $8)
       (i32.const 14)
      )
      (block (result i32)
       ;;@ celt/quant_bands.c:467:0
       (local.set $8
        (i32.load8_u
         (local.get $18)
        )
       )
       (local.set $8
        (i32.and
         (local.get $8)
         (i32.const 255)
        )
       )
       (local.set $11
        (i32.shl
         (local.get $8)
         (i32.const 7)
        )
       )
       (local.set $8
        (i32.load8_u
         (local.get $19)
        )
       )
       (local.set $8
        (i32.and
         (local.get $8)
         (i32.const 255)
        )
       )
       (local.set $8
        (i32.shl
         (local.get $8)
         (i32.const 6)
        )
       )
       ;;@ celt/quant_bands.c:466:0
       (call $_ec_laplace_decode
        (local.get $5)
        (local.get $11)
        (local.get $8)
       )
      )
      (block $do-once (result i32)
       (if
        ;;@ celt/quant_bands.c:469:0
        (i32.gt_s
         (local.get $8)
         (i32.const 1)
        )
        (block
         ;;@ celt/quant_bands.c:471:0
         (local.set $8
          (call $_ec_dec_icdf
           (local.get $5)
           (i32.const 42485)
           (i32.const 2)
          )
         )
         ;;@ celt/quant_bands.c:472:0
         (local.set $11
          (i32.shr_s
           (local.get $8)
           (i32.const 1)
          )
         )
         (local.set $8
          (i32.and
           (local.get $8)
           (i32.const 1)
          )
         )
         (local.set $8
          (i32.sub
           (i32.const 0)
           (local.get $8)
          )
         )
         (br $do-once
          (i32.xor
           (local.get $8)
           (local.get $11)
          )
         )
        )
       )
       (if (result i32)
        ;;@ celt/quant_bands.c:474:0
        (i32.eq
         (local.get $8)
         (i32.const 1)
        )
        (block (result i32)
         ;;@ celt/quant_bands.c:476:0
         (local.set $8
          (call $_ec_dec_bit_logp
           (local.get $5)
           (i32.const 1)
          )
         )
         (i32.sub
          (i32.const 0)
          (local.get $8)
         )
        )
        (i32.const -1)
       )
      )
     )
    )
    ;;@ celt/quant_bands.c:480:0
    (local.set $14
     (f32.convert_i32_s
      (local.get $8)
     )
    )
    ;;@ celt/quant_bands.c:482:0
    (local.set $8
     (i32.load offset=8
      (local.get $0)
     )
    )
    (local.set $8
     (i32.mul
      (local.get $8)
      (local.get $10)
     )
    )
    (local.set $8
     (i32.add
      (local.get $1)
      (local.get $8)
     )
    )
    (local.set $11
     (i32.add
      (i32.shl
       (local.get $8)
       (i32.const 2)
      )
      (local.get $3)
     )
    )
    (local.set $9
     (f32.load
      (local.get $11)
     )
    )
    (local.set $8
     (f32.lt
      (local.get $9)
      (f32.const -9)
     )
    )
    (local.set $9
     (select
      (f32.const -9)
      (local.get $9)
      (local.get $8)
     )
    )
    ;;@ celt/quant_bands.c:483:0
    (local.set $9
     (f32.mul
      (local.get $16)
      (local.get $9)
     )
    )
    (local.set $8
     (i32.add
      (i32.shl
       (local.get $10)
       (i32.const 2)
      )
      (local.get $12)
     )
    )
    (local.set $13
     (f32.load
      (local.get $8)
     )
    )
    (local.set $9
     (f32.add
      (local.get $13)
      (local.get $9)
     )
    )
    (local.set $9
     (f32.add
      (local.get $9)
      (local.get $14)
     )
    )
    ;;@ celt/quant_bands.c:487:0
    (f32.store
     (local.get $11)
     (local.get $9)
    )
    ;;@ celt/quant_bands.c:488:0
    (local.set $13
     (f32.add
      (local.get $13)
      (local.get $14)
     )
    )
    (local.set $9
     (f32.mul
      (local.get $15)
      (local.get $14)
     )
    )
    (local.set $9
     (f32.sub
      (local.get $13)
      (local.get $9)
     )
    )
    (f32.store
     (local.get $8)
     (local.get $9)
    )
    ;;@ celt/quant_bands.c:489:0
    (local.set $10
     (i32.add
      (local.get $10)
      (i32.const 1)
     )
    )
    (br_if $while-in1
     (i32.lt_s
      (local.get $10)
      (local.get $6)
     )
    )
   )
   ;;@ celt/quant_bands.c:450:0
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $12)
  )
 )
 (func $_unquant_fine_energy (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (if
   ;;@ celt/quant_bands.c:497:0
   (i32.ge_s
    (local.get $1)
    (local.get $2)
   )
   ;;@ celt/quant_bands.c:514:0
   (return)
  )
  (loop $while-in
   ;;@ celt/quant_bands.c:499:0
   (local.set $12
    (i32.add
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
     (local.get $4)
    )
   )
   (local.set $9
    (i32.load
     (local.get $12)
    )
   )
   (if
    (i32.ge_s
     (local.get $9)
     (i32.const 1)
    )
    (block
     (local.set $10
      (i32.const 0)
     )
     (loop $while-in1
      ;;@ celt/quant_bands.c:505:0
      (local.set $9
       (call $_ec_dec_bits
        (local.get $5)
        (local.get $9)
       )
      )
      ;;@ celt/quant_bands.c:509:0
      (local.set $8
       (f32.convert_i32_s
        (local.get $9)
       )
      )
      (local.set $8
       (f32.add
        (local.get $8)
        (f32.const 0.5)
       )
      )
      (local.set $9
       (i32.load
        (local.get $12)
       )
      )
      (local.set $7
       (i32.sub
        (i32.const 14)
        (local.get $9)
       )
      )
      (local.set $7
       (i32.shl
        (i32.const 1)
        (local.get $7)
       )
      )
      (local.set $11
       (f32.convert_i32_s
        (local.get $7)
       )
      )
      (local.set $8
       (f32.mul
        (local.get $8)
        (local.get $11)
       )
      )
      (local.set $8
       (f32.mul
        (local.get $8)
        (f32.const 0.00006103515625)
       )
      )
      (local.set $8
       (f32.add
        (local.get $8)
        (f32.const -0.5)
       )
      )
      ;;@ celt/quant_bands.c:511:0
      (local.set $7
       (i32.load offset=8
        (local.get $0)
       )
      )
      (local.set $7
       (i32.mul
        (local.get $7)
        (local.get $10)
       )
      )
      (local.set $7
       (i32.add
        (local.get $1)
        (local.get $7)
       )
      )
      (local.set $7
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $3)
       )
      )
      (local.set $11
       (f32.load
        (local.get $7)
       )
      )
      (local.set $8
       (f32.add
        (local.get $11)
        (local.get $8)
       )
      )
      (f32.store
       (local.get $7)
       (local.get $8)
      )
      ;;@ celt/quant_bands.c:512:0
      (local.set $10
       (i32.add
        (local.get $10)
        (i32.const 1)
       )
      )
      (br_if $while-in1
       (i32.lt_s
        (local.get $10)
        (local.get $6)
       )
      )
     )
    )
   )
   ;;@ celt/quant_bands.c:497:0
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
   )
  )
 )
 (func $_unquant_energy_finalise (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f32)
  (if
   (i32.ge_s
    (local.get $1)
    (local.get $2)
   )
   ;;@ celt/quant_bands.c:542:0
   (return)
  )
  (if
   ;;@ celt/quant_bands.c:523:0
   (i32.ge_s
    (local.get $6)
    (local.get $8)
   )
   (block
    (local.set $13
     (local.get $1)
    )
    (loop $while-in
     ;;@ celt/quant_bands.c:525:0
     (local.set $9
      (i32.add
       (i32.shl
        (local.get $13)
        (i32.const 2)
       )
       (local.get $4)
      )
     )
     (local.set $11
      (i32.load
       (local.get $9)
      )
     )
     (if
      (i32.le_s
       (local.get $11)
       (i32.const 7)
      )
      (block
       (local.set $11
        (i32.add
         (i32.shl
          (local.get $13)
          (i32.const 2)
         )
         (local.get $5)
        )
       )
       (local.set $11
        (i32.load
         (local.get $11)
        )
       )
       (if
        (i32.eqz
         (local.get $11)
        )
        (block
         (local.set $11
          (i32.const 0)
         )
         (loop $while-in1
          ;;@ celt/quant_bands.c:531:0
          (local.set $12
           (call $_ec_dec_bits
            (local.get $7)
            (i32.const 1)
           )
          )
          ;;@ celt/quant_bands.c:535:0
          (local.set $10
           (f32.convert_i32_s
            (local.get $12)
           )
          )
          (local.set $10
           (f32.add
            (local.get $10)
            (f32.const -0.5)
           )
          )
          (local.set $12
           (i32.load
            (local.get $9)
           )
          )
          (local.set $12
           (i32.sub
            (i32.const 13)
            (local.get $12)
           )
          )
          (local.set $12
           (i32.shl
            (i32.const 1)
            (local.get $12)
           )
          )
          (local.set $14
           (f32.convert_i32_s
            (local.get $12)
           )
          )
          (local.set $10
           (f32.mul
            (local.get $10)
            (local.get $14)
           )
          )
          (local.set $10
           (f32.mul
            (local.get $10)
            (f32.const 0.00006103515625)
           )
          )
          ;;@ celt/quant_bands.c:537:0
          (local.set $12
           (i32.load offset=8
            (local.get $0)
           )
          )
          (local.set $12
           (i32.mul
            (local.get $11)
            (local.get $12)
           )
          )
          (local.set $12
           (i32.add
            (local.get $12)
            (local.get $13)
           )
          )
          (local.set $12
           (i32.add
            (i32.shl
             (local.get $12)
             (i32.const 2)
            )
            (local.get $3)
           )
          )
          (local.set $14
           (f32.load
            (local.get $12)
           )
          )
          (local.set $10
           (f32.add
            (local.get $14)
            (local.get $10)
           )
          )
          (f32.store
           (local.get $12)
           (local.get $10)
          )
          ;;@ celt/quant_bands.c:538:0
          (local.set $6
           (i32.add
            (local.get $6)
            (i32.const -1)
           )
          )
          ;;@ celt/quant_bands.c:539:0
          (local.set $11
           (i32.add
            (local.get $11)
            (i32.const 1)
           )
          )
          (br_if $while-in1
           (i32.lt_s
            (local.get $11)
            (local.get $8)
           )
          )
         )
        )
       )
      )
     )
     ;;@ celt/quant_bands.c:523:0
     (local.set $13
      (i32.add
       (local.get $13)
       (i32.const 1)
      )
     )
     (local.set $11
      (i32.ge_s
       (local.get $13)
       (local.get $2)
      )
     )
     (local.set $9
      (i32.lt_s
       (local.get $6)
       (local.get $8)
      )
     )
     (br_if $while-in
      (i32.eqz
       (i32.or
        (local.get $9)
        (local.get $11)
       )
      )
     )
    )
   )
  )
  (if
   (i32.lt_s
    (local.get $6)
    (local.get $8)
   )
   ;;@ celt/quant_bands.c:542:0
   (return)
  )
  (local.set $13
   (local.get $1)
  )
  (local.set $1
   (local.get $6)
  )
  (loop $while-in3
   ;;@ celt/quant_bands.c:525:0
   (local.set $11
    (i32.add
     (i32.shl
      (local.get $13)
      (i32.const 2)
     )
     (local.get $4)
    )
   )
   (local.set $6
    (i32.load
     (local.get $11)
    )
   )
   (if
    (i32.le_s
     (local.get $6)
     (i32.const 7)
    )
    (block
     (local.set $6
      (i32.add
       (i32.shl
        (local.get $13)
        (i32.const 2)
       )
       (local.get $5)
      )
     )
     (local.set $6
      (i32.load
       (local.get $6)
      )
     )
     (if
      (i32.eq
       (local.get $6)
       (i32.const 1)
      )
      (block
       (local.set $6
        (i32.const 0)
       )
       (loop $while-in5
        ;;@ celt/quant_bands.c:531:0
        (local.set $9
         (call $_ec_dec_bits
          (local.get $7)
          (i32.const 1)
         )
        )
        ;;@ celt/quant_bands.c:535:0
        (local.set $10
         (f32.convert_i32_s
          (local.get $9)
         )
        )
        (local.set $10
         (f32.add
          (local.get $10)
          (f32.const -0.5)
         )
        )
        (local.set $9
         (i32.load
          (local.get $11)
         )
        )
        (local.set $9
         (i32.sub
          (i32.const 13)
          (local.get $9)
         )
        )
        (local.set $9
         (i32.shl
          (i32.const 1)
          (local.get $9)
         )
        )
        (local.set $14
         (f32.convert_i32_s
          (local.get $9)
         )
        )
        (local.set $10
         (f32.mul
          (local.get $10)
          (local.get $14)
         )
        )
        (local.set $10
         (f32.mul
          (local.get $10)
          (f32.const 0.00006103515625)
         )
        )
        ;;@ celt/quant_bands.c:537:0
        (local.set $9
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.set $9
         (i32.mul
          (local.get $6)
          (local.get $9)
         )
        )
        (local.set $9
         (i32.add
          (local.get $9)
          (local.get $13)
         )
        )
        (local.set $9
         (i32.add
          (i32.shl
           (local.get $9)
           (i32.const 2)
          )
          (local.get $3)
         )
        )
        (local.set $14
         (f32.load
          (local.get $9)
         )
        )
        (local.set $10
         (f32.add
          (local.get $14)
          (local.get $10)
         )
        )
        (f32.store
         (local.get $9)
         (local.get $10)
        )
        ;;@ celt/quant_bands.c:538:0
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
        )
        ;;@ celt/quant_bands.c:539:0
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (br_if $while-in5
         (i32.lt_s
          (local.get $6)
          (local.get $8)
         )
        )
       )
      )
     )
    )
   )
   ;;@ celt/quant_bands.c:523:0
   (local.set $13
    (i32.add
     (local.get $13)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.ge_s
     (local.get $13)
     (local.get $2)
    )
   )
   (local.set $11
    (i32.lt_s
     (local.get $1)
     (local.get $8)
    )
   )
   (br_if $while-in3
    (i32.eqz
     (i32.or
      (local.get $6)
      (local.get $11)
     )
    )
   )
  )
 )
 (func $_clt_compute_allocation (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32) (param $15 i32) (result i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  ;;@ celt/rate.c:548:0
  (local.set $25
   (i32.load offset=8
    (local.get $0)
   )
  )
  ;;@ celt/rate.c:551:0
  (local.set $36
   (select
    (i32.const 8)
    (i32.const 0)
    (i32.gt_s
     ;;@ celt/rate.c:547:0
     (local.tee $8
      (select
       (local.get $8)
       (i32.const 0)
       (i32.gt_s
        (local.get $8)
        (i32.const 0)
       )
      )
     )
     (i32.const 7)
    )
   )
  )
  ;;@ celt/rate.c:552:0
  (local.set $23
   (i32.sub
    (local.get $8)
    (local.get $36)
   )
  )
  (if
   ;;@ celt/rate.c:555:0
   (local.tee $38
    (i32.eq
     (local.get $13)
     (i32.const 2)
    )
   )
   (block
    ;;@ celt/rate.c:558:0
    (local.set $8
     (i32.lt_s
      (local.get $23)
      ;;@ celt/rate.c:557:0
      (local.tee $17
       (i32.load8_u
        (i32.add
         (i32.sub
          (local.get $2)
          (local.get $1)
         )
         (i32.const 21408)
        )
       )
      )
     )
    )
    ;;@ celt/rate.c:558:0
    (local.set $20
     (select
      (i32.const 0)
      (local.get $17)
      (local.get $8)
     )
    )
    (local.set $37
     (select
      (i32.const 0)
      ;;@ celt/rate.c:563:0
      (local.tee $16
       (select
        (i32.const 8)
        (i32.const 0)
        (i32.gt_s
         ;;@ celt/rate.c:562:0
         (local.tee $17
          (i32.sub
           (local.get $23)
           (local.get $17)
          )
         )
         (i32.const 7)
        )
       )
      )
      (local.get $8)
     )
    )
    ;;@ celt/rate.c:558:0
    (local.set $23
     (select
      (local.get $23)
      (i32.sub
       (local.get $17)
       (local.get $16)
      )
      (local.get $8)
     )
    )
   )
  )
  (local.set $39
   (global.get $STACKTOP)
  )
  (local.set $28
   (global.get $STACKTOP)
  )
  ;;@ celt/rate.c:567:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $25)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $26
   (global.get $STACKTOP)
  )
  ;;@ celt/rate.c:568:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $25)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $29
   (global.get $STACKTOP)
  )
  ;;@ celt/rate.c:569:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $25)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $32
   (global.get $STACKTOP)
  )
  ;;@ celt/rate.c:570:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $25)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (local.set $16
     (if (result i32)
      ;;@ celt/rate.c:572:0
      (local.tee $34
       (i32.gt_s
        (local.get $2)
        (local.get $1)
       )
      )
      (block (result i32)
       (local.set $22
        (i32.shl
         (local.get $13)
         (i32.const 3)
        )
       )
       (local.set $18
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
       (local.set $21
        (i32.mul
         (local.get $13)
         (i32.sub
          (i32.add
           (local.get $5)
           (i32.const -5)
          )
          (local.get $14)
         )
        )
       )
       (local.set $19
        (i32.add
         (local.get $14)
         (i32.const 3)
        )
       )
       ;;@ celt/rate.c:575:0
       (local.set $5
        (local.get $1)
       )
       (local.set $16
        (i32.load16_s
         (i32.add
          (local.tee $31
           (i32.load
            (local.tee $24
             (i32.add
              (local.get $0)
              (i32.const 32)
             )
            )
           )
          )
          (i32.shl
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
       (loop $while-in
        (i32.store
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $29)
         )
         (select
          (local.get $22)
          (local.tee $27
           (i32.shr_s
            (i32.shl
             (i32.shl
              (i32.mul
               (local.tee $16
                (i32.sub
                 (local.tee $17
                  (i32.load16_s
                   (i32.add
                    (i32.shl
                     (local.tee $8
                      (i32.add
                       (local.get $5)
                       (i32.const 1)
                      )
                     )
                     (i32.const 1)
                    )
                    (local.get $31)
                   )
                  )
                 )
                 (i32.shr_s
                  (i32.shl
                   (local.get $16)
                   (i32.const 16)
                  )
                  (i32.const 16)
                 )
                )
               )
               (i32.const 3)
              )
              (local.get $14)
             )
             (i32.const 3)
            )
            (i32.const 4)
           )
          )
          (i32.gt_s
           (local.get $22)
           (local.get $27)
          )
         )
        )
        ;;@ celt/rate.c:581:0
        (i32.store
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $32)
         )
         (i32.sub
          (i32.shr_s
           (i32.shl
            (i32.mul
             (i32.mul
              (i32.sub
               (local.get $18)
               (local.get $5)
              )
              (local.get $21)
             )
             (local.get $16)
            )
            (local.get $19)
           )
           (i32.const 6)
          )
          (select
           (local.get $22)
           (i32.const 0)
           (i32.eq
            (i32.shl
             (local.get $16)
             (local.get $14)
            )
            (i32.const 1)
           )
          )
         )
        )
        (if
         ;;@ celt/rate.c:572:0
         (i32.ne
          (local.get $2)
          (local.get $8)
         )
         (block
          (local.set $5
           (local.get $8)
          )
          (local.set $16
           (local.get $17)
          )
          (br $while-in)
         )
        )
       )
       ;;@ celt/rate.c:585:0
       (local.set $16
        (i32.add
         (local.tee $18
          (i32.load offset=48
           (local.get $0)
          )
         )
         (i32.const -1)
        )
       )
       (local.set $19
        (i32.add
         (local.get $0)
         (i32.const 52)
        )
       )
       (if (result i32)
        (local.get $34)
        (block (result i32)
         (local.set $35
          (i32.load offset=52
           (local.get $0)
          )
         )
         ;;@ celt/rate.c:594:0
         (local.set $21
          (i32.load16_s
           (i32.add
            (local.tee $40
             (i32.load
              (local.get $24)
             )
            )
            (i32.shl
             (local.get $2)
             (i32.const 1)
            )
           )
          )
         )
         (local.set $17
          (i32.const 1)
         )
         (local.set $5
          (local.get $16)
         )
         (loop $while-in1 (result i32)
          ;;@ celt/rate.c:590:0
          (local.set $41
           (i32.mul
            (local.get $25)
            (local.tee $30
             (i32.shr_s
              (i32.add
               (local.get $5)
               (local.get $17)
              )
              (i32.const 1)
             )
            )
           )
          )
          (local.set $31
           (i32.const 0)
          )
          (local.set $33
           (i32.const 0)
          )
          (local.set $8
           (local.get $2)
          )
          (local.set $16
           (local.get $21)
          )
          (loop $while-in3
           ;;@ celt/rate.c:595:0
           (local.set $27
            (i32.shr_s
             (local.tee $42
              (i32.shl
               (i32.mul
                (i32.mul
                 (i32.sub
                  (i32.shr_s
                   (i32.shl
                    (local.get $16)
                    (i32.const 16)
                   )
                   (i32.const 16)
                  )
                  ;;@ celt/rate.c:594:0
                  (local.tee $16
                   (i32.load16_s
                    (i32.add
                     (i32.shl
                      (local.tee $8
                       (i32.add
                        (local.get $8)
                        (i32.const -1)
                       )
                      )
                      (i32.const 1)
                     )
                     (local.get $40)
                    )
                   )
                  )
                 )
                 (local.get $13)
                )
                (i32.load8_u
                 (i32.add
                  (i32.add
                   (local.get $8)
                   (local.get $41)
                  )
                  (local.get $35)
                 )
                )
               )
               (local.get $14)
              )
             )
             (i32.const 2)
            )
           )
           (local.set $33
            (if (result i32)
             ;;@ celt/rate.c:599:0
             (i32.or
              (local.get $33)
              (i32.ge_s
               ;;@ celt/rate.c:598:0
               (local.tee $27
                (i32.add
                 (if (result i32)
                  ;;@ celt/rate.c:596:0
                  (i32.gt_s
                   (local.get $42)
                   (i32.const 3)
                  )
                  (select
                   ;;@ celt/rate.c:597:0
                   (local.tee $27
                    (i32.add
                     (i32.load
                      (i32.add
                       (i32.shl
                        (local.get $8)
                        (i32.const 2)
                       )
                       (local.get $32)
                      )
                     )
                     (local.get $27)
                    )
                   )
                   (i32.const 0)
                   (i32.gt_s
                    (local.get $27)
                    (i32.const 0)
                   )
                  )
                  (local.get $27)
                 )
                 (i32.load
                  (i32.add
                   (i32.shl
                    (local.get $8)
                    (i32.const 2)
                   )
                   (local.get $3)
                  )
                 )
                )
               )
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $8)
                  (i32.const 2)
                 )
                 (local.get $29)
                )
               )
              )
             )
             (block (result i32)
              ;;@ celt/rate.c:603:0
              (local.set $27
               (select
                (local.get $27)
                (local.tee $33
                 (i32.load
                  (i32.add
                   (i32.shl
                    (local.get $8)
                    (i32.const 2)
                   )
                   (local.get $4)
                  )
                 )
                )
                (i32.lt_s
                 (local.get $27)
                 (local.get $33)
                )
               )
              )
              (i32.const 1)
             )
             (block (result i32)
              ;;@ celt/rate.c:605:0
              (local.set $27
               (select
                (i32.const 0)
                (local.get $22)
                (i32.lt_s
                 (local.get $27)
                 (local.get $22)
                )
               )
              )
              (i32.const 0)
             )
            )
           )
           (local.set $31
            (i32.add
             (local.get $27)
             (local.get $31)
            )
           )
           ;;@ celt/rate.c:591:0
           (br_if $while-in3
            (i32.gt_s
             (local.get $8)
             (local.get $1)
            )
           )
          )
          ;;@ celt/rate.c:609:0
          (local.set $5
           (select
            (i32.add
             (local.get $30)
             (i32.const -1)
            )
            (local.get $5)
            (local.tee $8
             (i32.gt_s
              (local.get $31)
              (local.get $23)
             )
            )
           )
          )
          (br_if $while-in1
           ;;@ celt/rate.c:615:0
           (i32.le_s
            ;;@ celt/rate.c:609:0
            (local.tee $17
             (select
              (local.get $17)
              (i32.add
               (local.get $30)
               (i32.const 1)
              )
              (local.get $8)
             )
            )
            (local.get $5)
           )
          )
          (local.get $18)
         )
        )
        (block
         (local.set $5
          (local.get $24)
         )
         (local.set $8
          (local.get $22)
         )
         (local.set $17
          (local.get $16)
         )
         (local.set $16
          (local.get $18)
         )
         (br $__rjti$2)
        )
       )
      )
      (block
       (local.set $5
        (i32.add
         (local.get $0)
         (i32.const 32)
        )
       )
       (local.set $8
        (i32.shl
         (local.get $13)
         (i32.const 3)
        )
       )
       ;;@ celt/rate.c:585:0
       (local.set $19
        (i32.add
         (local.get $0)
         (i32.const 52)
        )
       )
       (local.set $17
        (i32.add
         (local.tee $16
          (i32.load offset=48
           (local.get $0)
          )
         )
         (i32.const -1)
        )
       )
       (br $__rjti$2)
      )
     )
    )
    (br $__rjto$2)
   )
   ;;@ celt/rate.c:609:0
   (local.set $24
    (i32.lt_s
     (local.get $23)
     (i32.const 0)
    )
   )
   (local.set $18
    (i32.const 1)
   )
   (local.set $22
    (loop $while-in5 (result i32)
     (local.set $21
      (select
       (i32.add
        ;;@ celt/rate.c:590:0
        (local.tee $22
         (i32.shr_s
          (i32.add
           (local.get $17)
           (local.get $18)
          )
          (i32.const 1)
         )
        )
        (i32.const -1)
       )
       (local.get $17)
       (local.get $24)
      )
     )
     (if (result i32)
      ;;@ celt/rate.c:615:0
      (i32.gt_s
       ;;@ celt/rate.c:609:0
       (local.tee $17
        (select
         (local.get $18)
         (i32.add
          (local.get $22)
          (i32.const 1)
         )
         (local.get $24)
        )
       )
       (local.get $21)
      )
      (block (result i32)
       (local.set $24
        (local.get $5)
       )
       (local.get $8)
      )
      (block
       (local.set $18
        (local.get $17)
       )
       (local.set $17
        (local.get $21)
       )
       (br $while-in5)
      )
     )
    )
   )
  )
  (if
   (local.get $34)
   (block
    ;;@ celt/rate.c:616:0
    (local.set $21
     (i32.load
      (local.get $19)
     )
    )
    (local.set $31
     (i32.mul
      (i32.add
       (local.get $17)
       (i32.const -1)
      )
      (local.get $25)
     )
    )
    (local.set $5
     (i32.lt_s
      (local.get $17)
      (local.get $16)
     )
    )
    (local.set $33
     (i32.mul
      (local.get $17)
      (local.get $25)
     )
    )
    (local.set $25
     (i32.gt_s
      (local.get $17)
      (i32.const 1)
     )
    )
    ;;@ celt/rate.c:621:0
    (local.set $16
     (i32.load16_s
      (i32.add
       (local.tee $27
        (i32.load
         (local.get $24)
        )
       )
       (i32.shl
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (if
     (local.get $5)
     (block
      (local.set $8
       (local.tee $5
        (local.get $1)
       )
      )
      (loop $while-in7
       ;;@ celt/rate.c:622:0
       (local.set $16
        (i32.shr_s
         (local.tee $30
          (i32.shl
           (i32.mul
            (local.tee $19
             (i32.mul
              (i32.sub
               ;;@ celt/rate.c:621:0
               (local.tee $18
                (i32.load16_s
                 (i32.add
                  (i32.shl
                   (local.tee $17
                    (i32.add
                     (local.get $8)
                     (i32.const 1)
                    )
                   )
                   (i32.const 1)
                  )
                  (local.get $27)
                 )
                )
               )
               (i32.shr_s
                (i32.shl
                 (local.get $16)
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $13)
             )
            )
            (i32.load8_u
             (i32.add
              (i32.add
               (local.get $8)
               (local.get $31)
              )
              (local.get $21)
             )
            )
           )
           (local.get $14)
          )
         )
         (i32.const 2)
        )
       )
       ;;@ celt/rate.c:624:0
       (local.set $19
        (i32.shr_s
         (local.tee $35
          (i32.shl
           (i32.mul
            (i32.load8_u
             (i32.add
              (i32.add
               (local.get $8)
               (local.get $33)
              )
              (local.get $21)
             )
            )
            (local.get $19)
           )
           (local.get $14)
          )
         )
         (i32.const 2)
        )
       )
       (if
        ;;@ celt/rate.c:625:0
        (i32.gt_s
         (local.get $30)
         (i32.const 3)
        )
        ;;@ celt/rate.c:626:0
        (local.set $16
         (select
          (local.tee $16
           (i32.add
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $32)
             )
            )
            (local.get $16)
           )
          )
          (i32.const 0)
          (i32.gt_s
           (local.get $16)
           (i32.const 0)
          )
         )
        )
       )
       (if
        ;;@ celt/rate.c:627:0
        (i32.gt_s
         (local.get $35)
         (i32.const 3)
        )
        ;;@ celt/rate.c:628:0
        (local.set $19
         (select
          (local.tee $19
           (i32.add
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $32)
             )
            )
            (local.get $19)
           )
          )
          (i32.const 0)
          (i32.gt_s
           (local.get $19)
           (i32.const 0)
          )
         )
        )
       )
       ;;@ celt/rate.c:629:0
       (local.set $30
        (i32.add
         (local.get $16)
         (select
          (local.tee $16
           (i32.load
            (i32.add
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
          )
          (i32.const 0)
          (local.get $25)
         )
        )
       )
       ;;@ celt/rate.c:632:0
       (local.set $5
        (select
         (local.get $8)
         (local.get $5)
         (i32.gt_s
          (local.get $16)
          (i32.const 0)
         )
        )
       )
       ;;@ celt/rate.c:635:0
       (i32.store
        (i32.add
         (i32.shl
          (local.get $8)
          (i32.const 2)
         )
         (local.get $28)
        )
        (local.get $30)
       )
       ;;@ celt/rate.c:636:0
       (i32.store
        (i32.add
         (i32.shl
          (local.get $8)
          (i32.const 2)
         )
         (local.get $26)
        )
        (select
         ;;@ celt/rate.c:634:0
         (local.tee $8
          (i32.add
           (i32.sub
            (local.get $19)
            (local.get $30)
           )
           (local.get $16)
          )
         )
         (i32.const 0)
         (i32.gt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
       (if
        ;;@ celt/rate.c:618:0
        (i32.ne
         (local.get $2)
         (local.get $17)
        )
        (block
         (local.set $8
          (local.get $17)
         )
         (local.set $16
          (local.get $18)
         )
         (br $while-in7)
        )
       )
      )
     )
     (block
      (local.set $8
       (local.tee $5
        (local.get $1)
       )
      )
      (loop $while-in9
       ;;@ celt/rate.c:622:0
       (local.set $19
        (i32.shr_s
         (local.tee $30
          (i32.shl
           (i32.mul
            (i32.load8_u
             (i32.add
              (i32.add
               (local.get $8)
               (local.get $31)
              )
              (local.get $21)
             )
            )
            (i32.mul
             (i32.sub
              ;;@ celt/rate.c:621:0
              (local.tee $18
               (i32.load16_s
                (i32.add
                 (i32.shl
                  (local.tee $17
                   (i32.add
                    (local.get $8)
                    (i32.const 1)
                   )
                  )
                  (i32.const 1)
                 )
                 (local.get $27)
                )
               )
              )
              (i32.shr_s
               (i32.shl
                (local.get $16)
                (i32.const 16)
               )
               (i32.const 16)
              )
             )
             (local.get $13)
            )
           )
           (local.get $14)
          )
         )
         (i32.const 2)
        )
       )
       ;;@ celt/rate.c:624:0
       (local.set $16
        (i32.load
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 2)
          )
          (local.get $4)
         )
        )
       )
       (if
        ;;@ celt/rate.c:625:0
        (i32.gt_s
         (local.get $30)
         (i32.const 3)
        )
        ;;@ celt/rate.c:626:0
        (local.set $19
         (select
          (local.tee $19
           (i32.add
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $32)
             )
            )
            (local.get $19)
           )
          )
          (i32.const 0)
          (i32.gt_s
           (local.get $19)
           (i32.const 0)
          )
         )
        )
       )
       (if
        ;;@ celt/rate.c:627:0
        (i32.gt_s
         (local.get $16)
         (i32.const 0)
        )
        ;;@ celt/rate.c:628:0
        (local.set $16
         (select
          (local.tee $16
           (i32.add
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $32)
             )
            )
            (local.get $16)
           )
          )
          (i32.const 0)
          (i32.gt_s
           (local.get $16)
           (i32.const 0)
          )
         )
        )
       )
       ;;@ celt/rate.c:629:0
       (local.set $30
        (i32.add
         (local.get $19)
         (select
          (local.tee $19
           (i32.load
            (i32.add
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
          )
          (i32.const 0)
          (local.get $25)
         )
        )
       )
       ;;@ celt/rate.c:632:0
       (local.set $5
        (select
         (local.get $8)
         (local.get $5)
         (i32.gt_s
          (local.get $19)
          (i32.const 0)
         )
        )
       )
       ;;@ celt/rate.c:635:0
       (i32.store
        (i32.add
         (i32.shl
          (local.get $8)
          (i32.const 2)
         )
         (local.get $28)
        )
        (local.get $30)
       )
       ;;@ celt/rate.c:636:0
       (i32.store
        (i32.add
         (i32.shl
          (local.get $8)
          (i32.const 2)
         )
         (local.get $26)
        )
        (select
         ;;@ celt/rate.c:634:0
         (local.tee $8
          (i32.add
           (i32.sub
            (local.get $16)
            (local.get $30)
           )
           (local.get $19)
          )
         )
         (i32.const 0)
         (i32.gt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
       (if
        ;;@ celt/rate.c:618:0
        (i32.ne
         (local.get $2)
         (local.get $17)
        )
        (block
         (local.set $8
          (local.get $17)
         )
         (local.set $16
          (local.get $18)
         )
         (br $while-in9)
        )
       )
      )
     )
    )
    ;;@ celt/rate.c:266:0
    (local.set $3
     (i32.gt_s
      (local.get $13)
      (i32.const 1)
     )
    )
    ;;@ celt/rate.c:268:0
    (local.set $31
     (i32.shl
      (local.get $14)
      (i32.const 3)
     )
    )
    (local.set $16
     (if (result i32)
      (local.get $34)
      (block (result i32)
       (local.set $16
        (i32.const 0)
       )
       (local.set $17
        (i32.const 0)
       )
       (local.set $8
        (local.get $2)
       )
       (loop $while-in11
        (local.set $17
         (if (result i32)
          ;;@ celt/rate.c:279:0
          (i32.or
           (local.get $17)
           (i32.ge_s
            ;;@ celt/rate.c:278:0
            (local.tee $18
             (i32.add
              (i32.load
               (i32.add
                (i32.shl
                 (local.tee $8
                  (i32.add
                   (local.get $8)
                   (i32.const -1)
                  )
                 )
                 (i32.const 2)
                )
                (local.get $28)
               )
              )
              (i32.shr_s
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $8)
                  (i32.const 2)
                 )
                 (local.get $26)
                )
               )
               (i32.const 1)
              )
             )
            )
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $29)
             )
            )
           )
          )
          (block (result i32)
           ;;@ celt/rate.c:283:0
           (local.set $18
            (select
             (local.get $18)
             (local.tee $17
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
                (local.get $4)
               )
              )
             )
             (i32.lt_s
              (local.get $18)
              (local.get $17)
             )
            )
           )
           (i32.const 1)
          )
          (block (result i32)
           ;;@ celt/rate.c:285:0
           (local.set $18
            (select
             (i32.const 0)
             (local.get $22)
             (i32.lt_s
              (local.get $18)
              (local.get $22)
             )
            )
           )
           (i32.const 0)
          )
         )
        )
        (local.set $16
         (i32.add
          (local.get $16)
          (local.get $18)
         )
        )
        ;;@ celt/rate.c:276:0
        (br_if $while-in11
         (i32.gt_s
          (local.get $8)
          (local.get $1)
         )
        )
       )
       ;;@ celt/rate.c:290:0
       (local.set $25
        (select
         (i32.const 32)
         (i32.const 64)
         ;;@ celt/rate.c:289:0
         (local.tee $19
          (i32.gt_s
           (local.get $16)
           (local.get $23)
          )
         )
        )
       )
       ;;@ celt/rate.c:273:0
       (local.set $21
        (select
         (i32.const 16)
         (i32.const 48)
         (local.get $19)
        )
       )
       (local.set $16
        (i32.const 0)
       )
       (local.set $17
        (i32.const 0)
       )
       (local.set $8
        (local.get $2)
       )
       (loop $while-in13
        (local.set $17
         (if (result i32)
          ;;@ celt/rate.c:279:0
          (i32.or
           (local.get $17)
           (i32.ge_s
            ;;@ celt/rate.c:278:0
            (local.tee $18
             (i32.add
              (i32.load
               (i32.add
                (i32.shl
                 (local.tee $8
                  (i32.add
                   (local.get $8)
                   (i32.const -1)
                  )
                 )
                 (i32.const 2)
                )
                (local.get $28)
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $8)
                   (i32.const 2)
                  )
                  (local.get $26)
                 )
                )
                (local.get $21)
               )
               (i32.const 6)
              )
             )
            )
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $29)
             )
            )
           )
          )
          (block (result i32)
           ;;@ celt/rate.c:283:0
           (local.set $18
            (select
             (local.get $18)
             (local.tee $17
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
                (local.get $4)
               )
              )
             )
             (i32.lt_s
              (local.get $18)
              (local.get $17)
             )
            )
           )
           (i32.const 1)
          )
          (block (result i32)
           ;;@ celt/rate.c:285:0
           (local.set $18
            (select
             (i32.const 0)
             (local.get $22)
             (i32.lt_s
              (local.get $18)
              (local.get $22)
             )
            )
           )
           (i32.const 0)
          )
         )
        )
        (local.set $16
         (i32.add
          (local.get $16)
          (local.get $18)
         )
        )
        ;;@ celt/rate.c:276:0
        (br_if $while-in13
         (i32.gt_s
          (local.get $8)
          (local.get $1)
         )
        )
       )
       ;;@ celt/rate.c:273:0
       (local.set $21
        (i32.shr_u
         (i32.add
          ;;@ celt/rate.c:290:0
          (local.tee $25
           (select
            (local.get $21)
            (local.get $25)
            ;;@ celt/rate.c:289:0
            (local.tee $8
             (i32.gt_s
              (local.get $16)
              (local.get $23)
             )
            )
           )
          )
          ;;@ celt/rate.c:290:0
          (local.tee $19
           (select
            (select
             (i32.const 0)
             (i32.const 32)
             (local.get $19)
            )
            (local.get $21)
            (local.get $8)
           )
          )
         )
         (i32.const 1)
        )
       )
       (local.set $16
        (i32.const 0)
       )
       (local.set $17
        (i32.const 0)
       )
       (local.set $8
        (local.get $2)
       )
       (loop $while-in15
        (local.set $17
         (if (result i32)
          ;;@ celt/rate.c:279:0
          (i32.or
           (local.get $17)
           (i32.ge_s
            ;;@ celt/rate.c:278:0
            (local.tee $18
             (i32.add
              (i32.load
               (i32.add
                (i32.shl
                 (local.tee $8
                  (i32.add
                   (local.get $8)
                   (i32.const -1)
                  )
                 )
                 (i32.const 2)
                )
                (local.get $28)
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $8)
                   (i32.const 2)
                  )
                  (local.get $26)
                 )
                )
                (local.get $21)
               )
               (i32.const 6)
              )
             )
            )
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $29)
             )
            )
           )
          )
          (block (result i32)
           ;;@ celt/rate.c:283:0
           (local.set $18
            (select
             (local.get $18)
             (local.tee $17
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
                (local.get $4)
               )
              )
             )
             (i32.lt_s
              (local.get $18)
              (local.get $17)
             )
            )
           )
           (i32.const 1)
          )
          (block (result i32)
           ;;@ celt/rate.c:285:0
           (local.set $18
            (select
             (i32.const 0)
             (local.get $22)
             (i32.lt_s
              (local.get $18)
              (local.get $22)
             )
            )
           )
           (i32.const 0)
          )
         )
        )
        (local.set $16
         (i32.add
          (local.get $16)
          (local.get $18)
         )
        )
        ;;@ celt/rate.c:276:0
        (br_if $while-in15
         (i32.gt_s
          (local.get $8)
          (local.get $1)
         )
        )
       )
       ;;@ celt/rate.c:273:0
       (local.set $21
        (i32.shr_u
         (i32.add
          ;;@ celt/rate.c:290:0
          (local.tee $25
           (select
            (local.get $21)
            (local.get $25)
            ;;@ celt/rate.c:289:0
            (local.tee $8
             (i32.gt_s
              (local.get $16)
              (local.get $23)
             )
            )
           )
          )
          ;;@ celt/rate.c:290:0
          (local.tee $19
           (select
            (local.get $19)
            (local.get $21)
            (local.get $8)
           )
          )
         )
         (i32.const 1)
        )
       )
       (local.set $16
        (i32.const 0)
       )
       (local.set $17
        (i32.const 0)
       )
       (local.set $8
        (local.get $2)
       )
       (loop $while-in17
        (local.set $17
         (if (result i32)
          ;;@ celt/rate.c:279:0
          (i32.or
           (local.get $17)
           (i32.ge_s
            ;;@ celt/rate.c:278:0
            (local.tee $18
             (i32.add
              (i32.load
               (i32.add
                (i32.shl
                 (local.tee $8
                  (i32.add
                   (local.get $8)
                   (i32.const -1)
                  )
                 )
                 (i32.const 2)
                )
                (local.get $28)
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $8)
                   (i32.const 2)
                  )
                  (local.get $26)
                 )
                )
                (local.get $21)
               )
               (i32.const 6)
              )
             )
            )
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $29)
             )
            )
           )
          )
          (block (result i32)
           ;;@ celt/rate.c:283:0
           (local.set $18
            (select
             (local.get $18)
             (local.tee $17
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
                (local.get $4)
               )
              )
             )
             (i32.lt_s
              (local.get $18)
              (local.get $17)
             )
            )
           )
           (i32.const 1)
          )
          (block (result i32)
           ;;@ celt/rate.c:285:0
           (local.set $18
            (select
             (i32.const 0)
             (local.get $22)
             (i32.lt_s
              (local.get $18)
              (local.get $22)
             )
            )
           )
           (i32.const 0)
          )
         )
        )
        (local.set $16
         (i32.add
          (local.get $16)
          (local.get $18)
         )
        )
        ;;@ celt/rate.c:276:0
        (br_if $while-in17
         (i32.gt_s
          (local.get $8)
          (local.get $1)
         )
        )
       )
       ;;@ celt/rate.c:273:0
       (local.set $21
        (i32.shr_u
         (i32.add
          ;;@ celt/rate.c:290:0
          (local.tee $25
           (select
            (local.get $21)
            (local.get $25)
            ;;@ celt/rate.c:289:0
            (local.tee $8
             (i32.gt_s
              (local.get $16)
              (local.get $23)
             )
            )
           )
          )
          ;;@ celt/rate.c:290:0
          (local.tee $19
           (select
            (local.get $19)
            (local.get $21)
            (local.get $8)
           )
          )
         )
         (i32.const 1)
        )
       )
       (local.set $16
        (i32.const 0)
       )
       (local.set $17
        (i32.const 0)
       )
       (local.set $8
        (local.get $2)
       )
       (loop $while-in19
        (local.set $17
         (if (result i32)
          ;;@ celt/rate.c:279:0
          (i32.or
           (local.get $17)
           (i32.ge_s
            ;;@ celt/rate.c:278:0
            (local.tee $18
             (i32.add
              (i32.load
               (i32.add
                (i32.shl
                 (local.tee $8
                  (i32.add
                   (local.get $8)
                   (i32.const -1)
                  )
                 )
                 (i32.const 2)
                )
                (local.get $28)
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $8)
                   (i32.const 2)
                  )
                  (local.get $26)
                 )
                )
                (local.get $21)
               )
               (i32.const 6)
              )
             )
            )
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $29)
             )
            )
           )
          )
          (block (result i32)
           ;;@ celt/rate.c:283:0
           (local.set $18
            (select
             (local.get $18)
             (local.tee $17
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
                (local.get $4)
               )
              )
             )
             (i32.lt_s
              (local.get $18)
              (local.get $17)
             )
            )
           )
           (i32.const 1)
          )
          (block (result i32)
           ;;@ celt/rate.c:285:0
           (local.set $18
            (select
             (i32.const 0)
             (local.get $22)
             (i32.lt_s
              (local.get $18)
              (local.get $22)
             )
            )
           )
           (i32.const 0)
          )
         )
        )
        (local.set $16
         (i32.add
          (local.get $16)
          (local.get $18)
         )
        )
        ;;@ celt/rate.c:276:0
        (br_if $while-in19
         (i32.gt_s
          (local.get $8)
          (local.get $1)
         )
        )
       )
       ;;@ celt/rate.c:290:0
       (local.set $19
        (select
         (local.get $19)
         (local.get $21)
         ;;@ celt/rate.c:289:0
         (local.tee $8
          (i32.gt_s
           (local.get $16)
           (local.get $23)
          )
         )
        )
       )
       ;;@ celt/rate.c:273:0
       (local.set $21
        (i32.shr_u
         (i32.add
          (local.get $19)
          (select
           (local.get $21)
           (local.get $25)
           (local.get $8)
          )
         )
         (i32.const 1)
        )
       )
       (local.set $16
        (i32.const 0)
       )
       (local.set $17
        (i32.const 0)
       )
       (local.set $8
        (local.get $2)
       )
       (loop $while-in21
        (local.set $17
         (if (result i32)
          ;;@ celt/rate.c:279:0
          (i32.or
           (local.get $17)
           (i32.ge_s
            ;;@ celt/rate.c:278:0
            (local.tee $18
             (i32.add
              (i32.load
               (i32.add
                (i32.shl
                 (local.tee $8
                  (i32.add
                   (local.get $8)
                   (i32.const -1)
                  )
                 )
                 (i32.const 2)
                )
                (local.get $28)
               )
              )
              (i32.shr_s
               (i32.mul
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $8)
                   (i32.const 2)
                  )
                  (local.get $26)
                 )
                )
                (local.get $21)
               )
               (i32.const 6)
              )
             )
            )
            (i32.load
             (i32.add
              (i32.shl
               (local.get $8)
               (i32.const 2)
              )
              (local.get $29)
             )
            )
           )
          )
          (block (result i32)
           ;;@ celt/rate.c:283:0
           (local.set $18
            (select
             (local.get $18)
             (local.tee $17
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $8)
                 (i32.const 2)
                )
                (local.get $4)
               )
              )
             )
             (i32.lt_s
              (local.get $18)
              (local.get $17)
             )
            )
           )
           (i32.const 1)
          )
          (block (result i32)
           ;;@ celt/rate.c:285:0
           (local.set $18
            (select
             (i32.const 0)
             (local.get $22)
             (i32.lt_s
              (local.get $18)
              (local.get $22)
             )
            )
           )
           (i32.const 0)
          )
         )
        )
        (local.set $16
         (i32.add
          (local.get $16)
          (local.get $18)
         )
        )
        ;;@ celt/rate.c:276:0
        (br_if $while-in21
         (i32.gt_s
          (local.get $8)
          (local.get $1)
         )
        )
       )
       ;;@ celt/rate.c:290:0
       (local.set $21
        (select
         (local.get $19)
         (local.get $21)
         (i32.gt_s
          (local.get $16)
          (local.get $23)
         )
        )
       )
       (local.set $18
        (i32.const 0)
       )
       (local.set $17
        (i32.const 0)
       )
       (local.set $8
        (local.get $2)
       )
       (loop $while-in23 (result i32)
        ;;@ celt/rate.c:300:0
        (local.set $17
         (select
          (i32.const 1)
          (local.get $17)
          (local.tee $19
           (i32.or
            (i32.ne
             (local.get $17)
             (i32.const 0)
            )
            (i32.ge_s
             ;;@ celt/rate.c:299:0
             (local.tee $8
              (i32.add
               (i32.load
                (i32.add
                 (i32.shl
                  ;;@ celt/rate.c:297:0
                  (local.tee $16
                   (i32.add
                    (local.get $8)
                    (i32.const -1)
                   )
                  )
                  (i32.const 2)
                 )
                 (local.get $28)
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.load
                  (i32.add
                   (i32.shl
                    (local.get $16)
                    (i32.const 2)
                   )
                   (local.get $26)
                  )
                 )
                 (local.get $21)
                )
                (i32.const 6)
               )
              )
             )
             (i32.load
              (i32.add
               (i32.shl
                (local.get $16)
                (i32.const 2)
               )
               (local.get $29)
              )
             )
            )
           )
          )
         )
        )
        ;;@ celt/rate.c:310:0
        (i32.store
         (i32.add
          (i32.shl
           (local.get $16)
           (i32.const 2)
          )
          (local.get $10)
         )
         ;;@ celt/rate.c:309:0
         (local.tee $8
          (select
           ;;@ celt/rate.c:300:0
           (local.tee $8
            (select
             (local.get $8)
             (select
              (i32.const 0)
              (local.get $22)
              (i32.lt_s
               (local.get $8)
               (local.get $22)
              )
             )
             (local.get $19)
            )
           )
           ;;@ celt/rate.c:309:0
           (local.tee $19
            (i32.load
             (i32.add
              (i32.shl
               (local.get $16)
               (i32.const 2)
              )
              (local.get $4)
             )
            )
           )
           (i32.lt_s
            (local.get $8)
            (local.get $19)
           )
          )
         )
        )
        ;;@ celt/rate.c:311:0
        (local.set $8
         (i32.add
          (local.get $8)
          (local.get $18)
         )
        )
        (if (result i32)
         ;;@ celt/rate.c:297:0
         (i32.gt_s
          (local.get $16)
          (local.get $1)
         )
         (block
          (local.set $18
           (local.get $8)
          )
          (local.set $8
           (local.get $16)
          )
          (br $while-in23)
         )
         (block (result i32)
          (local.set $17
           (local.get $5)
          )
          (local.tee $18
           (local.get $3)
          )
         )
        )
       )
      )
      (block (result i32)
       (local.set $17
        (local.get $5)
       )
       (local.set $8
        (i32.const 0)
       )
       (local.tee $18
        (local.get $3)
       )
      )
     )
    )
   )
   (block
    ;;@ celt/rate.c:268:0
    (local.set $17
     (local.get $1)
    )
    (local.set $8
     (i32.const 0)
    )
    (local.set $31
     (i32.shl
      (local.get $14)
      (i32.const 3)
     )
    )
    (local.set $18
     ;;@ celt/rate.c:266:0
     (local.tee $16
      (i32.gt_s
       (local.get $13)
       (i32.const 1)
      )
     )
    )
   )
  )
  (block $__rjto$3
   (block $__rjti$3
    (local.set $3
     (if (result i32)
      ;;@ celt/rate.c:327:0
      (i32.gt_s
       ;;@ celt/rate.c:320:0
       (local.tee $3
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
       (local.get $17)
      )
      (block $label$break$L97 (result i32)
       (local.set $28
        (i32.add
         (local.get $22)
         (i32.const 8)
        )
       )
       (local.set $5
        (local.get $20)
       )
       (local.set $21
        (local.get $2)
       )
       (loop $while-in25
        ;;@ ./celt/entcode.h:136:0
        (local.set $19
         (i32.div_u
          ;;@ celt/rate.c:335:0
          (local.tee $26
           (i32.sub
            (local.get $23)
            (local.get $8)
           )
          )
          ;;@ celt/rate.c:336:0
          (local.tee $27
           (i32.sub
            (local.tee $25
             (i32.load16_s
              (i32.add
               (local.tee $20
                (i32.load
                 (local.get $24)
                )
               )
               (i32.shl
                (local.get $21)
                (i32.const 1)
               )
              )
             )
            )
            (local.tee $32
             (i32.load16_s
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 1)
               )
               (local.get $20)
              )
             )
            )
           )
          )
         )
        )
        (local.set $19
         (if (result i32)
          ;;@ celt/rate.c:344:0
          (i32.lt_s
           ;;@ celt/rate.c:340:0
           (local.tee $20
            (i32.add
             (select
              ;;@ celt/rate.c:338:0
              (local.tee $26
               (i32.add
                (i32.sub
                 (local.get $26)
                 (i32.mul
                  (local.get $19)
                  (local.get $27)
                 )
                )
                (i32.sub
                 (local.get $32)
                 (local.tee $20
                  (i32.load16_s
                   (i32.add
                    (i32.shl
                     (local.get $3)
                     (i32.const 1)
                    )
                    (local.get $20)
                   )
                  )
                 )
                )
               )
              )
              (i32.const 0)
              (i32.gt_s
               (local.get $26)
               (i32.const 0)
              )
             )
             (i32.add
              ;;@ celt/rate.c:340:0
              (local.tee $32
               (i32.load
                (local.tee $26
                 (i32.add
                  (i32.shl
                   (local.get $3)
                   (i32.const 2)
                  )
                  (local.get $10)
                 )
                )
               )
              )
              (i32.mul
               (i32.sub
                (local.get $25)
                (local.get $20)
               )
               (local.get $19)
              )
             )
            )
           )
           (select
            ;;@ celt/rate.c:344:0
            (local.tee $19
             (i32.load
              (i32.add
               (i32.shl
                (local.get $3)
                (i32.const 2)
               )
               (local.get $29)
              )
             )
            )
            (local.get $28)
            (i32.gt_s
             (local.get $19)
             (local.get $28)
            )
           )
          )
          (block (result i32)
           (local.set $21
            (local.get $20)
           )
           (local.get $32)
          )
          (block (result i32)
           ;;@ celt/rate.c:368:0
           (drop
            (br_if $label$break$L97
             (local.get $21)
             (call $_ec_dec_bit_logp
              (local.get $15)
              (i32.const 1)
             )
            )
           )
           ;;@ celt/rate.c:372:0
           (local.set $8
            (i32.add
             (local.get $8)
             (i32.const 8)
            )
           )
           ;;@ celt/rate.c:373:0
           (local.set $21
            (i32.add
             (local.get $20)
             (i32.const -8)
            )
           )
           ;;@ celt/rate.c:376:0
           (i32.load
            (local.get $26)
           )
          )
         )
        )
        ;;@ celt/rate.c:380:0
        (local.set $8
         (i32.add
          (local.tee $20
           (if (result i32)
            ;;@ celt/rate.c:377:0
            (i32.gt_s
             (local.get $5)
             (i32.const 0)
            )
            ;;@ celt/rate.c:378:0
            (i32.load8_u
             (i32.add
              (i32.sub
               (local.get $3)
               (local.get $1)
              )
              (i32.const 21408)
             )
            )
            (local.get $5)
           )
          )
          (i32.add
           ;;@ celt/rate.c:380:0
           (local.tee $21
            (select
             (i32.const 0)
             (local.get $22)
             (i32.lt_s
              (local.get $21)
              (local.get $22)
             )
            )
           )
           (i32.sub
            (local.get $8)
            (i32.add
             (local.get $5)
             (local.get $19)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $26)
         (local.get $21)
        )
        ;;@ celt/rate.c:327:0
        (br_if $__rjti$3
         (i32.le_s
          ;;@ celt/rate.c:320:0
          (local.tee $19
           (i32.add
            (local.get $3)
            (i32.const -1)
           )
          )
          (local.get $17)
         )
        )
        (local.set $21
         (local.get $3)
        )
        (local.set $5
         (local.get $20)
        )
        (local.set $3
         (local.get $19)
        )
        (br $while-in25)
       )
      )
      (block
       (local.set $3
        (local.get $2)
       )
       (br $__rjti$3)
      )
     )
    )
    (br $__rjto$3)
   )
   ;;@ celt/rate.c:330:0
   (local.set $5
    (local.get $20)
   )
   (local.set $23
    (i32.add
     (local.get $23)
     (local.get $36)
    )
   )
  )
  (if
   ;;@ celt/rate.c:391:0
   (i32.le_s
    (local.get $3)
    (local.get $1)
   )
   (call $_celt_fatal
    (i32.const 42488)
    (i32.const 42525)
    (i32.const 391)
   )
  )
  (if
   ;;@ celt/rate.c:393:0
   (i32.gt_s
    (local.get $5)
    (i32.const 0)
   )
   ;;@ celt/rate.c:401:0
   (i32.store
    (local.get $6)
    (local.tee $5
     (i32.add
      (call $_ec_dec_uint
       (local.get $15)
       (i32.sub
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
        (local.get $1)
       )
      )
      (local.get $1)
     )
    )
   )
   (block
    ;;@ celt/rate.c:404:0
    (i32.store
     (local.get $6)
     (i32.const 0)
    )
    (local.set $5
     (i32.const 0)
    )
   )
  )
  (if
   ;;@ celt/rate.c:410:0
   (i32.and
    ;;@ celt/rate.c:405:0
    (local.tee $17
     (i32.gt_s
      (local.get $5)
      (local.get $1)
     )
    )
    (i32.gt_s
     (local.get $37)
     (i32.const 0)
    )
   )
   ;;@ celt/rate.c:415:0
   (i32.store
    (local.get $7)
    (call $_ec_dec_bit_logp
     (local.get $15)
     (i32.const 1)
    )
   )
   ;;@ celt/rate.c:418:0
   (i32.store
    (local.get $7)
    (i32.const 0)
   )
  )
  ;;@ celt/rate.c:422:0
  (local.set $5
   (i32.load16_s
    (i32.add
     (local.tee $21
      (i32.load
       (local.get $24)
      )
     )
     (i32.shl
      (local.get $1)
      (i32.const 1)
     )
    )
   )
  )
  ;;@ ./celt/entcode.h:136:0
  (local.set $20
   (i32.div_u
    ;;@ celt/rate.c:421:0
    (local.tee $24
     (i32.add
      (i32.sub
       (local.get $23)
       (local.get $8)
      )
      (select
       (i32.const 0)
       (local.get $37)
       (local.get $17)
      )
     )
    )
    ;;@ celt/rate.c:422:0
    (local.tee $8
     (i32.sub
      (i32.load16_s
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 1)
        )
        (local.get $21)
       )
      )
      (local.get $5)
     )
    )
   )
  )
  ;;@ celt/rate.c:423:0
  (local.set $19
   (i32.mul
    (local.get $8)
    (local.get $20)
   )
  )
  (local.set $8
   (local.get $1)
  )
  (local.set $15
   (local.get $5)
  )
  (loop $while-in32
   ;;@ celt/rate.c:425:0
   (i32.store
    (local.tee $23
     (i32.add
      (i32.shl
       (local.get $8)
       (i32.const 2)
      )
      (local.get $10)
     )
    )
    (i32.add
     (i32.load
      (local.get $23)
     )
     (i32.mul
      (i32.sub
       (local.tee $17
        (i32.load16_s
         (i32.add
          (i32.shl
           (local.tee $8
            (i32.add
             (local.get $8)
             (i32.const 1)
            )
           )
           (i32.const 1)
          )
          (local.get $21)
         )
        )
       )
       (i32.shr_s
        (i32.shl
         (local.get $15)
         (i32.const 16)
        )
        (i32.const 16)
       )
      )
      (local.get $20)
     )
    )
   )
   (if
    ;;@ celt/rate.c:424:0
    (i32.ne
     (local.get $3)
     (local.get $8)
    )
    (block
     (local.set $15
      (local.get $17)
     )
     (br $while-in32)
    )
   )
  )
  ;;@ celt/rate.c:423:0
  (local.set $20
   (i32.sub
    (local.get $24)
    (local.get $19)
   )
  )
  (local.set $8
   (local.get $1)
  )
  (local.set $15
   (local.get $5)
  )
  (loop $while-in34
   ;;@ celt/rate.c:429:0
   (i32.store
    (local.tee $24
     (i32.add
      (i32.shl
       (local.get $8)
       (i32.const 2)
      )
      (local.get $10)
     )
    )
    (i32.add
     ;;@ celt/rate.c:428:0
     (local.tee $15
      (select
       (local.get $20)
       (local.tee $15
        (i32.sub
         (local.tee $17
          (i32.load16_s
           (i32.add
            (i32.shl
             (local.tee $8
              (i32.add
               (local.get $8)
               (i32.const 1)
              )
             )
             (i32.const 1)
            )
            (local.get $21)
           )
          )
         )
         (i32.shr_s
          (i32.shl
           (local.get $15)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
       )
       (i32.lt_s
        (local.get $20)
        (local.get $15)
       )
      )
     )
     (i32.load
      (local.get $24)
     )
    )
   )
   ;;@ celt/rate.c:430:0
   (local.set $20
    (i32.sub
     (local.get $20)
     (local.get $15)
    )
   )
   (if
    ;;@ celt/rate.c:426:0
    (i32.ne
     (local.get $3)
     (local.get $8)
    )
    (block
     (local.set $15
      (local.get $17)
     )
     (br $while-in34)
    )
   )
  )
  (local.set $28
   (select
    (i32.const 4)
    (i32.const 3)
    (local.get $16)
   )
  )
  (local.set $15
   (i32.const 0)
  )
  (local.set $8
   (local.get $5)
  )
  (block $folding-inner0
   (block $__rjto$7
    (block $__rjti$7
     (block $__rjti$6
      (block $__rjti$5
       (loop $while-in36
        (if
         (i32.gt_s
          ;;@ celt/rate.c:442:0
          (local.tee $5
           (i32.load
            (local.tee $16
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $10)
             )
            )
           )
          )
          (i32.const -1)
         )
         (block
          ;;@ celt/rate.c:445:0
          (local.set $20
           (i32.add
            (local.get $5)
            (local.get $15)
           )
          )
          (if
           ;;@ celt/rate.c:447:0
           (i32.gt_s
            ;;@ celt/rate.c:444:0
            (local.tee $24
             (i32.shl
              (i32.sub
               ;;@ celt/rate.c:443:0
               (local.tee $17
                (i32.load16_s
                 (i32.add
                  (i32.shl
                   (local.tee $5
                    (i32.add
                     (local.get $1)
                     (i32.const 1)
                    )
                   )
                   (i32.const 1)
                  )
                  (local.get $21)
                 )
                )
               )
               (i32.shr_s
                (i32.shl
                 (local.get $8)
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $14)
             )
            )
            (i32.const 1)
           )
           (block
            ;;@ celt/rate.c:450:0
            (i32.store
             (local.get $16)
             (local.tee $19
              (i32.sub
               (local.get $20)
               ;;@ celt/rate.c:449:0
               (local.tee $8
                (select
                 (local.tee $8
                  (i32.sub
                   (local.get $20)
                   (i32.load
                    (i32.add
                     (i32.shl
                      (local.get $1)
                      (i32.const 2)
                     )
                     (local.get $4)
                    )
                   )
                  )
                 )
                 (i32.const 0)
                 (i32.gt_s
                  (local.get $8)
                  (i32.const 0)
                 )
                )
               )
              )
             )
            )
            ;;@ celt/rate.c:474:0
            (i32.store
             ;;@ celt/rate.c:473:0
             (local.tee $23
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $11)
              )
             )
             ;;@ celt/rate.c:474:0
             (local.tee $20
              (i32.shr_u
               (i32.div_u
                (select
                 ;;@ celt/rate.c:473:0
                 (local.tee $19
                  (i32.add
                   (local.tee $24
                    (i32.add
                     (if (result i32)
                      ;;@ celt/rate.c:467:0
                      (i32.lt_s
                       (local.tee $25
                        (i32.add
                         ;;@ celt/rate.c:462:0
                         (local.tee $24
                          (i32.add
                           (i32.shr_s
                            ;;@ celt/rate.c:455:0
                            (local.tee $29
                             (i32.mul
                              ;;@ celt/rate.c:453:0
                              (local.tee $20
                               (i32.add
                                (i32.mul
                                 (local.get $13)
                                 (local.get $24)
                                )
                                (i32.and
                                 (if (result i32)
                                  (i32.and
                                   (i32.ne
                                    (local.get $24)
                                    (i32.const 2)
                                   )
                                   (local.get $38)
                                  )
                                  (if (result i32)
                                   (i32.load
                                    (local.get $7)
                                   )
                                   (i32.const 0)
                                   (i32.lt_s
                                    (local.get $1)
                                    (i32.load
                                     (local.get $6)
                                    )
                                   )
                                  )
                                  (i32.const 0)
                                 )
                                 (i32.const 1)
                                )
                               )
                              )
                              (i32.add
                               (i32.load16_s
                                (i32.add
                                 (i32.load offset=56
                                  (local.get $0)
                                 )
                                 (i32.shl
                                  (local.get $1)
                                  (i32.const 1)
                                 )
                                )
                               )
                               (local.get $31)
                              )
                             )
                            )
                            (i32.const 1)
                           )
                           (i32.add
                            (i32.mul
                             (local.get $20)
                             (i32.const -21)
                            )
                            (select
                             (i32.shr_s
                              ;;@ celt/rate.c:463:0
                              (local.tee $26
                               (i32.shl
                                (local.get $20)
                                (i32.const 3)
                               )
                              )
                              (i32.const 2)
                             )
                             (i32.const 0)
                             (i32.eq
                              (local.get $24)
                              (i32.const 2)
                             )
                            )
                           )
                          )
                         )
                         (local.get $19)
                        )
                       )
                       (i32.shl
                        (local.get $20)
                        (i32.const 4)
                       )
                      )
                      ;;@ celt/rate.c:468:0
                      (i32.shr_s
                       (local.get $29)
                       (i32.const 2)
                      )
                      ;;@ celt/rate.c:469:0
                      (select
                       (i32.shr_s
                        (local.get $29)
                        (i32.const 3)
                       )
                       (i32.const 0)
                       (i32.lt_s
                        (local.get $25)
                        (i32.mul
                         (local.get $20)
                         (i32.const 24)
                        )
                       )
                      )
                     )
                     (local.get $24)
                    )
                   )
                   (i32.add
                    (i32.shl
                     (local.get $20)
                     (i32.const 2)
                    )
                    (local.get $19)
                   )
                  )
                 )
                 (i32.const 0)
                 (i32.gt_s
                  (local.get $19)
                  (i32.const 0)
                 )
                )
                (local.get $20)
               )
               (i32.const 3)
              )
             )
            )
            ;;@ celt/rate.c:481:0
            (i32.store
             (local.get $23)
             (local.tee $20
              (select
               ;;@ celt/rate.c:477:0
               (local.tee $20
                (select
                 (i32.shr_s
                  (i32.shr_s
                   (local.tee $19
                    (i32.load
                     (local.get $16)
                    )
                   )
                   (local.get $18)
                  )
                  (i32.const 3)
                 )
                 (local.get $20)
                 (i32.gt_s
                  (i32.mul
                   (local.get $13)
                   (local.get $20)
                  )
                  (i32.shr_s
                   (local.get $19)
                   (i32.const 3)
                  )
                 )
                )
               )
               (i32.const 8)
               (i32.lt_s
                (local.get $20)
                (i32.const 8)
               )
              )
             )
            )
            ;;@ celt/rate.c:485:0
            (i32.store
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $12)
             )
             (i32.ge_s
              (i32.mul
               (local.get $20)
               (local.get $26)
              )
              (i32.add
               (i32.load
                (local.get $16)
               )
               (local.get $24)
              )
             )
            )
            ;;@ celt/rate.c:488:0
            (i32.store
             (local.get $16)
             (i32.sub
              (i32.load
               (local.get $16)
              )
              (i32.mul
               (i32.load
                (local.get $23)
               )
               (local.get $22)
              )
             )
            )
           )
           (block
            ;;@ celt/rate.c:493:0
            (i32.store
             (local.get $16)
             (i32.sub
              (local.get $20)
              ;;@ celt/rate.c:492:0
              (local.tee $8
               (select
                (local.tee $8
                 (i32.sub
                  (local.get $20)
                  (local.get $22)
                 )
                )
                (i32.const 0)
                (i32.gt_s
                 (local.get $8)
                 (i32.const 0)
                )
               )
              )
             )
            )
            ;;@ celt/rate.c:494:0
            (i32.store
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $11)
             )
             (i32.const 0)
            )
            ;;@ celt/rate.c:495:0
            (i32.store
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $12)
             )
             (i32.const 1)
            )
           )
          )
          (local.set $15
           (if (result i32)
            ;;@ celt/rate.c:501:0
            (local.get $8)
            (block (result i32)
             ;;@ celt/rate.c:505:0
             (local.set $20
              (select
               (local.tee $20
                (i32.shr_u
                 (local.get $8)
                 (local.get $28)
                )
               )
               (local.tee $23
                (i32.sub
                 (i32.const 8)
                 (local.tee $19
                  (i32.load
                   (local.tee $24
                    (i32.add
                     (i32.shl
                      (local.get $1)
                      (i32.const 2)
                     )
                     (local.get $11)
                    )
                   )
                  )
                 )
                )
               )
               (i32.lt_s
                (local.get $20)
                (local.get $23)
               )
              )
             )
             ;;@ celt/rate.c:506:0
             (i32.store
              (local.get $24)
              (i32.add
               (local.get $19)
               (local.get $20)
              )
             )
             ;;@ celt/rate.c:508:0
             (i32.store
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $12)
              )
              (i32.ge_s
               ;;@ celt/rate.c:507:0
               (local.tee $20
                (i32.mul
                 (local.get $20)
                 (local.get $22)
                )
               )
               (i32.sub
                (local.get $8)
                (local.get $15)
               )
              )
             )
             ;;@ celt/rate.c:509:0
             (i32.sub
              (local.get $8)
              (local.get $20)
             )
            )
            (i32.const 0)
           )
          )
          ;;@ celt/rate.c:513:0
          (br_if $__rjti$5
           (i32.le_s
            (i32.load
             (local.get $16)
            )
            (i32.const -1)
           )
          )
          ;;@ celt/rate.c:514:0
          (br_if $__rjti$6
           (i32.le_s
            (i32.load
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $11)
             )
            )
            (i32.const -1)
           )
          )
          ;;@ celt/rate.c:435:0
          (br_if $__rjti$7
           (i32.ge_s
            (local.get $5)
            (local.get $3)
           )
          )
          (local.set $1
           (local.get $5)
          )
          (local.set $8
           (local.get $17)
          )
          (br $while-in36)
         )
        )
       )
       ;;@ celt/rate.c:442:0
       (call $_celt_fatal
        (i32.const 42537)
        (i32.const 42525)
        (i32.const 442)
       )
       (br $__rjto$7)
      )
      ;;@ celt/rate.c:513:0
      (call $_celt_fatal
       (i32.const 42537)
       (i32.const 42525)
       (i32.const 513)
      )
      (br $__rjto$7)
     )
     ;;@ celt/rate.c:514:0
     (call $_celt_fatal
      (i32.const 42568)
      (i32.const 42525)
      (i32.const 514)
     )
     (br $__rjto$7)
    )
    ;;@ celt/rate.c:518:0
    (i32.store
     (local.get $9)
     (local.get $15)
    )
    ;;@ celt/rate.c:521:0
    (br_if $folding-inner0
     (i32.ge_s
      (local.get $5)
      (local.get $2)
     )
    )
    (loop $while-in38
     (block $__rjti$0
      ;;@ celt/rate.c:523:0
      (i32.store
       (local.tee $1
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (local.get $11)
        )
       )
       (local.tee $4
        (i32.shr_s
         (i32.shr_s
          (i32.load
           (local.tee $0
            (i32.add
             (i32.shl
              (local.get $5)
              (i32.const 2)
             )
             (local.get $10)
            )
           )
          )
          (local.get $18)
         )
         (i32.const 3)
        )
       )
      )
      ;;@ celt/rate.c:524:0
      (br_if $__rjti$0
       (i32.ne
        (i32.load
         (local.get $0)
        )
        (i32.mul
         (local.get $4)
         (local.get $22)
        )
       )
      )
      ;;@ celt/rate.c:525:0
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      ;;@ celt/rate.c:526:0
      (i32.store
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
        (local.get $12)
       )
       (i32.lt_s
        (i32.load
         (local.get $1)
        )
        (i32.const 1)
       )
      )
      ;;@ celt/rate.c:521:0
      (br_if $while-in38
       (i32.lt_s
        (local.tee $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (local.get $2)
       )
      )
      (br $folding-inner0)
     )
    )
    ;;@ celt/rate.c:524:0
    (call $_celt_fatal
     (i32.const 42600)
     (i32.const 42525)
     (i32.const 524)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $39)
  )
  ;;@ celt/rate.c:643:0
  (local.get $3)
 )
 (func $_exp_rotation (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 i32)
  (local $15 f64)
  (local $16 i32)
  (local $17 i32)
  (local $18 f32)
  (local $19 f32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  ;;@ celt/vq.c:83:0
  (local.set $8
   (i32.shl
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $8
   (i32.ge_s
    (local.get $8)
    (local.get $1)
   )
  )
  (local.set $14
   (i32.eqz
    (local.get $5)
   )
  )
  (if
   (i32.or
    (local.get $8)
    (local.get $14)
   )
   ;;@ celt/vq.c:117:0
   (return)
  )
  ;;@ celt/vq.c:85:0
  (local.set $5
   (i32.add
    (local.get $5)
    (i32.const -1)
   )
  )
  (local.set $5
   (i32.add
    (i32.shl
     (local.get $5)
     (i32.const 2)
    )
    (i32.const 36900)
   )
  )
  (local.set $5
   (i32.load
    (local.get $5)
   )
  )
  ;;@ celt/vq.c:87:0
  (local.set $6
   (f32.convert_i32_s
    (local.get $1)
   )
  )
  (local.set $4
   (i32.mul
    (local.get $4)
    (local.get $5)
   )
  )
  (local.set $4
   (i32.add
    (local.get $1)
    (local.get $4)
   )
  )
  (local.set $7
   (f32.convert_i32_s
    (local.get $4)
   )
  )
  (local.set $6
   (f32.div
    (local.get $6)
    (local.get $7)
   )
  )
  ;;@ celt/vq.c:88:0
  (local.set $6
   (f32.mul
    (local.get $6)
    (local.get $6)
   )
  )
  (local.set $6
   (f32.mul
    (local.get $6)
    (f32.const 0.5)
   )
  )
  ;;@ celt/vq.c:90:0
  (local.set $7
   (f32.mul
    (local.get $6)
    (f32.const 1.5707963705062866)
   )
  )
  (local.set $15
   (f64.promote_f32
    (local.get $7)
   )
  )
  (local.set $15
   (call $_cos
    (local.get $15)
   )
  )
  (local.set $12
   (f32.demote_f64
    (local.get $15)
   )
  )
  ;;@ celt/vq.c:91:0
  (local.set $6
   (f32.sub
    (f32.const 1)
    (local.get $6)
   )
  )
  (local.set $6
   (f32.mul
    (local.get $6)
    (f32.const 1.5707963705062866)
   )
  )
  (local.set $15
   (f64.promote_f32
    (local.get $6)
   )
  )
  (local.set $15
   (call $_cos
    (local.get $15)
   )
  )
  (local.set $13
   (f32.demote_f64
    (local.get $15)
   )
  )
  ;;@ celt/vq.c:93:0
  (local.set $4
   (i32.shl
    (local.get $3)
    (i32.const 3)
   )
  )
  (local.set $16
   (if (result i32)
    (i32.gt_s
     (local.get $4)
     (local.get $1)
    )
    (i32.const 0)
    (block (result i32)
     (local.set $8
      (i32.shr_s
       (local.get $3)
       (i32.const 2)
      )
     )
     (local.set $4
      (i32.const 1)
     )
     (loop $while-in (result i32)
      ;;@ celt/vq.c:98:0
      (local.set $5
       (i32.mul
        (local.get $4)
        (local.get $4)
       )
      )
      (local.set $5
       (i32.add
        (local.get $4)
        (local.get $5)
       )
      )
      (local.set $5
       (i32.mul
        (local.get $3)
        (local.get $5)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $8)
       )
      )
      (local.set $14
       (i32.lt_s
        (local.get $5)
        (local.get $1)
       )
      )
      ;;@ celt/vq.c:99:0
      (local.set $5
       (i32.add
        (local.get $4)
        (i32.const 1)
       )
      )
      (if (result i32)
       (local.get $14)
       (block
        (local.set $4
         (local.get $5)
        )
        (br $while-in)
       )
       (local.get $4)
      )
     )
    )
   )
  )
  ;;@ ./celt/entcode.h:136:0
  (local.set $17
   (i32.div_u
    (local.get $1)
    (local.get $3)
   )
  )
  (if
   ;;@ celt/vq.c:104:0
   (i32.le_s
    (local.get $3)
    (i32.const 0)
   )
   ;;@ celt/vq.c:117:0
   (return)
  )
  (local.set $28
   (i32.lt_s
    (local.get $2)
    (i32.const 0)
   )
  )
  (local.set $21
   (i32.eqz
    (local.get $16)
   )
  )
  (local.set $18
   (f32.neg
    (local.get $13)
   )
  )
  (local.set $22
   (i32.add
    (local.get $17)
    (i32.const -1)
   )
  )
  (local.set $23
   (i32.gt_s
    (local.get $17)
    (i32.const 1)
   )
  )
  (local.set $19
   (f32.neg
    (local.get $12)
   )
  )
  (local.set $25
   (i32.gt_s
    (local.tee $24
     (i32.sub
      (local.get $17)
      (local.get $16)
     )
    )
    (i32.const 0)
   )
  )
  (local.set $4
   (i32.add
    (local.get $17)
    (i32.const -3)
   )
  )
  (local.set $26
   (i32.gt_s
    (local.get $17)
    (i32.const 2)
   )
  )
  (local.set $5
   (i32.add
    (local.tee $1
     (i32.sub
      (local.get $17)
      (i32.shl
       (local.get $16)
       (i32.const 1)
      )
     )
    )
    (i32.const -1)
   )
  )
  (local.set $27
   (i32.gt_s
    (local.get $1)
    (i32.const 0)
   )
  )
  (local.set $14
   (i32.const 0)
  )
  (loop $while-in1
   (local.set $1
    (i32.add
     (i32.shl
      (i32.mul
       (local.get $14)
       (local.get $17)
      )
      (i32.const 2)
     )
     (local.get $0)
    )
   )
   (if
    (local.get $28)
    (block
     (if
      (i32.eqz
       (local.get $21)
      )
      (block
       (if
        (local.get $25)
        (block
         (local.set $2
          (local.get $1)
         )
         (local.set $8
          (i32.const 0)
         )
         (loop $while-in3
          ;;@ celt/vq.c:57:0
          (local.set $6
           (f32.load
            (local.get $2)
           )
          )
          ;;@ celt/vq.c:58:0
          (local.set $10
           (i32.add
            (i32.shl
             (local.get $16)
             (i32.const 2)
            )
            (local.get $2)
           )
          )
          (local.set $7
           (f32.load
            (local.get $10)
           )
          )
          ;;@ celt/vq.c:59:0
          (local.set $9
           (f32.mul
            (local.get $7)
            (local.get $13)
           )
          )
          (local.set $11
           (f32.mul
            (local.get $6)
            (local.get $12)
           )
          )
          (local.set $9
           (f32.add
            (local.get $11)
            (local.get $9)
           )
          )
          (f32.store
           (local.get $10)
           (local.get $9)
          )
          ;;@ celt/vq.c:60:0
          (local.set $6
           (f32.mul
            (local.get $6)
            (local.get $13)
           )
          )
          (local.set $7
           (f32.mul
            (local.get $7)
            (local.get $19)
           )
          )
          (local.set $6
           (f32.add
            (local.get $6)
            (local.get $7)
           )
          )
          (local.set $10
           (i32.add
            (local.get $2)
            (i32.const 4)
           )
          )
          (f32.store
           (local.get $2)
           (local.get $6)
          )
          ;;@ celt/vq.c:54:0
          (local.set $8
           (i32.add
            (local.get $8)
            (i32.const 1)
           )
          )
          (if
           (i32.ne
            (local.get $8)
            (local.get $24)
           )
           (block
            (local.set $2
             (local.get $10)
            )
            (br $while-in3)
           )
          )
         )
        )
       )
       (if
        (local.get $27)
        (block
         ;;@ celt/vq.c:62:0
         (local.set $8
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
           (local.get $1)
          )
         )
         (local.set $2
          (local.get $5)
         )
         (loop $while-in5
          ;;@ celt/vq.c:66:0
          (local.set $6
           (f32.load
            (local.get $8)
           )
          )
          ;;@ celt/vq.c:67:0
          (local.set $10
           (i32.add
            (i32.shl
             (local.get $16)
             (i32.const 2)
            )
            (local.get $8)
           )
          )
          (local.set $7
           (f32.load
            (local.get $10)
           )
          )
          ;;@ celt/vq.c:68:0
          (local.set $9
           (f32.mul
            (local.get $7)
            (local.get $13)
           )
          )
          (local.set $11
           (f32.mul
            (local.get $6)
            (local.get $12)
           )
          )
          (local.set $9
           (f32.add
            (local.get $11)
            (local.get $9)
           )
          )
          (f32.store
           (local.get $10)
           (local.get $9)
          )
          ;;@ celt/vq.c:69:0
          (local.set $6
           (f32.mul
            (local.get $6)
            (local.get $13)
           )
          )
          (local.set $7
           (f32.mul
            (local.get $7)
            (local.get $19)
           )
          )
          (local.set $6
           (f32.add
            (local.get $6)
            (local.get $7)
           )
          )
          (local.set $10
           (i32.add
            (local.get $8)
            (i32.const -4)
           )
          )
          (f32.store
           (local.get $8)
           (local.get $6)
          )
          ;;@ celt/vq.c:63:0
          (local.set $20
           (i32.add
            (local.get $2)
            (i32.const -1)
           )
          )
          (if
           (i32.gt_s
            (local.get $2)
            (i32.const 0)
           )
           (block
            (local.set $8
             (local.get $10)
            )
            (local.set $2
             (local.get $20)
            )
            (br $while-in5)
           )
          )
         )
        )
       )
      )
     )
     (if
      (local.get $23)
      (block
       ;;@ celt/vq.c:57:0
       (local.set $10
        (i32.const 0)
       )
       (local.set $6
        (f32.load
         (local.tee $2
          (local.get $1)
         )
        )
       )
       (loop $while-in7
        ;;@ celt/vq.c:58:0
        (local.set $8
         (i32.add
          (local.get $2)
          (i32.const 4)
         )
        )
        (local.set $9
         (f32.load
          (local.get $8)
         )
        )
        ;;@ celt/vq.c:59:0
        (local.set $7
         (f32.mul
          (local.get $9)
          (local.get $12)
         )
        )
        (local.set $11
         (f32.mul
          (local.get $6)
          (local.get $13)
         )
        )
        (local.set $7
         (f32.add
          (local.get $11)
          (local.get $7)
         )
        )
        (f32.store
         (local.get $8)
         (local.get $7)
        )
        ;;@ celt/vq.c:60:0
        (local.set $6
         (f32.mul
          (local.get $6)
          (local.get $12)
         )
        )
        (local.set $9
         (f32.mul
          (local.get $9)
          (local.get $18)
         )
        )
        (local.set $6
         (f32.add
          (local.get $6)
          (local.get $9)
         )
        )
        (f32.store
         (local.get $2)
         (local.get $6)
        )
        ;;@ celt/vq.c:54:0
        (local.set $10
         (i32.add
          (local.get $10)
          (i32.const 1)
         )
        )
        (if
         (i32.ne
          (local.get $10)
          (local.get $22)
         )
         (block
          (local.set $2
           (local.get $8)
          )
          (local.set $6
           (local.get $7)
          )
          (br $while-in7)
         )
        )
       )
      )
     )
     (if
      (local.get $26)
      (block
       ;;@ celt/vq.c:62:0
       (local.set $2
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 2)
         )
         (local.get $1)
        )
       )
       (local.set $1
        (local.get $4)
       )
       (loop $while-in9
        ;;@ celt/vq.c:66:0
        (local.set $6
         (f32.load
          (local.get $2)
         )
        )
        ;;@ celt/vq.c:67:0
        (local.set $7
         (f32.load offset=4
          (local.get $2)
         )
        )
        ;;@ celt/vq.c:68:0
        (local.set $9
         (f32.mul
          (local.get $7)
          (local.get $12)
         )
        )
        (local.set $11
         (f32.mul
          (local.get $6)
          (local.get $13)
         )
        )
        (local.set $9
         (f32.add
          (local.get $11)
          (local.get $9)
         )
        )
        (f32.store offset=4
         (local.get $2)
         (local.get $9)
        )
        ;;@ celt/vq.c:69:0
        (local.set $6
         (f32.mul
          (local.get $6)
          (local.get $12)
         )
        )
        (local.set $7
         (f32.mul
          (local.get $7)
          (local.get $18)
         )
        )
        (local.set $6
         (f32.add
          (local.get $6)
          (local.get $7)
         )
        )
        (local.set $8
         (i32.add
          (local.get $2)
          (i32.const -4)
         )
        )
        (f32.store
         (local.get $2)
         (local.get $6)
        )
        ;;@ celt/vq.c:63:0
        (local.set $10
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
        )
        (if
         (i32.gt_s
          (local.get $1)
          (i32.const 0)
         )
         (block
          (local.set $2
           (local.get $8)
          )
          (local.set $1
           (local.get $10)
          )
          (br $while-in9)
         )
        )
       )
      )
     )
    )
    (block
     (if
      (local.get $23)
      (block
       ;;@ celt/vq.c:57:0
       (local.set $10
        (i32.const 0)
       )
       (local.set $6
        (f32.load
         (local.tee $2
          (local.get $1)
         )
        )
       )
       (loop $while-in11
        ;;@ celt/vq.c:58:0
        (local.set $8
         (i32.add
          (local.get $2)
          (i32.const 4)
         )
        )
        (local.set $9
         (f32.load
          (local.get $8)
         )
        )
        ;;@ celt/vq.c:59:0
        (local.set $7
         (f32.mul
          (local.get $9)
          (local.get $12)
         )
        )
        (local.set $11
         (f32.mul
          (local.get $6)
          (local.get $18)
         )
        )
        (local.set $7
         (f32.add
          (local.get $11)
          (local.get $7)
         )
        )
        (f32.store
         (local.get $8)
         (local.get $7)
        )
        ;;@ celt/vq.c:60:0
        (local.set $6
         (f32.mul
          (local.get $6)
          (local.get $12)
         )
        )
        (local.set $9
         (f32.mul
          (local.get $9)
          (local.get $13)
         )
        )
        (local.set $6
         (f32.add
          (local.get $6)
          (local.get $9)
         )
        )
        (f32.store
         (local.get $2)
         (local.get $6)
        )
        ;;@ celt/vq.c:54:0
        (local.set $10
         (i32.add
          (local.get $10)
          (i32.const 1)
         )
        )
        (if
         (i32.ne
          (local.get $10)
          (local.get $22)
         )
         (block
          (local.set $2
           (local.get $8)
          )
          (local.set $6
           (local.get $7)
          )
          (br $while-in11)
         )
        )
       )
      )
     )
     (if
      (local.get $26)
      (block
       ;;@ celt/vq.c:62:0
       (local.set $8
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 2)
         )
         (local.get $1)
        )
       )
       (local.set $2
        (local.get $4)
       )
       (loop $while-in13
        ;;@ celt/vq.c:66:0
        (local.set $6
         (f32.load
          (local.get $8)
         )
        )
        ;;@ celt/vq.c:67:0
        (local.set $7
         (f32.load offset=4
          (local.get $8)
         )
        )
        ;;@ celt/vq.c:68:0
        (local.set $9
         (f32.mul
          (local.get $7)
          (local.get $12)
         )
        )
        (local.set $11
         (f32.mul
          (local.get $6)
          (local.get $18)
         )
        )
        (local.set $9
         (f32.add
          (local.get $11)
          (local.get $9)
         )
        )
        (f32.store offset=4
         (local.get $8)
         (local.get $9)
        )
        ;;@ celt/vq.c:69:0
        (local.set $6
         (f32.mul
          (local.get $6)
          (local.get $12)
         )
        )
        (local.set $7
         (f32.mul
          (local.get $7)
          (local.get $13)
         )
        )
        (local.set $6
         (f32.add
          (local.get $6)
          (local.get $7)
         )
        )
        (local.set $10
         (i32.add
          (local.get $8)
          (i32.const -4)
         )
        )
        (f32.store
         (local.get $8)
         (local.get $6)
        )
        ;;@ celt/vq.c:63:0
        (local.set $20
         (i32.add
          (local.get $2)
          (i32.const -1)
         )
        )
        (if
         (i32.gt_s
          (local.get $2)
          (i32.const 0)
         )
         (block
          (local.set $8
           (local.get $10)
          )
          (local.set $2
           (local.get $20)
          )
          (br $while-in13)
         )
        )
       )
      )
     )
     (if
      (i32.eqz
       (local.get $21)
      )
      (block
       (if
        (local.get $25)
        (block
         (local.set $2
          (local.get $1)
         )
         (local.set $8
          (i32.const 0)
         )
         (loop $while-in15
          ;;@ celt/vq.c:57:0
          (local.set $6
           (f32.load
            (local.get $2)
           )
          )
          ;;@ celt/vq.c:58:0
          (local.set $10
           (i32.add
            (i32.shl
             (local.get $16)
             (i32.const 2)
            )
            (local.get $2)
           )
          )
          (local.set $7
           (f32.load
            (local.get $10)
           )
          )
          ;;@ celt/vq.c:59:0
          (local.set $9
           (f32.mul
            (local.get $7)
            (local.get $13)
           )
          )
          (local.set $11
           (f32.mul
            (local.get $6)
            (local.get $19)
           )
          )
          (local.set $9
           (f32.add
            (local.get $11)
            (local.get $9)
           )
          )
          (f32.store
           (local.get $10)
           (local.get $9)
          )
          ;;@ celt/vq.c:60:0
          (local.set $6
           (f32.mul
            (local.get $6)
            (local.get $13)
           )
          )
          (local.set $7
           (f32.mul
            (local.get $7)
            (local.get $12)
           )
          )
          (local.set $6
           (f32.add
            (local.get $6)
            (local.get $7)
           )
          )
          (local.set $10
           (i32.add
            (local.get $2)
            (i32.const 4)
           )
          )
          (f32.store
           (local.get $2)
           (local.get $6)
          )
          ;;@ celt/vq.c:54:0
          (local.set $8
           (i32.add
            (local.get $8)
            (i32.const 1)
           )
          )
          (if
           (i32.ne
            (local.get $8)
            (local.get $24)
           )
           (block
            (local.set $2
             (local.get $10)
            )
            (br $while-in15)
           )
          )
         )
        )
       )
       (if
        (local.get $27)
        (block
         ;;@ celt/vq.c:62:0
         (local.set $2
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
           (local.get $1)
          )
         )
         (local.set $1
          (local.get $5)
         )
         (loop $while-in17
          ;;@ celt/vq.c:66:0
          (local.set $6
           (f32.load
            (local.get $2)
           )
          )
          ;;@ celt/vq.c:67:0
          (local.set $8
           (i32.add
            (i32.shl
             (local.get $16)
             (i32.const 2)
            )
            (local.get $2)
           )
          )
          (local.set $7
           (f32.load
            (local.get $8)
           )
          )
          ;;@ celt/vq.c:68:0
          (local.set $9
           (f32.mul
            (local.get $7)
            (local.get $13)
           )
          )
          (local.set $11
           (f32.mul
            (local.get $6)
            (local.get $19)
           )
          )
          (local.set $9
           (f32.add
            (local.get $11)
            (local.get $9)
           )
          )
          (f32.store
           (local.get $8)
           (local.get $9)
          )
          ;;@ celt/vq.c:69:0
          (local.set $6
           (f32.mul
            (local.get $6)
            (local.get $13)
           )
          )
          (local.set $7
           (f32.mul
            (local.get $7)
            (local.get $12)
           )
          )
          (local.set $6
           (f32.add
            (local.get $6)
            (local.get $7)
           )
          )
          (local.set $8
           (i32.add
            (local.get $2)
            (i32.const -4)
           )
          )
          (f32.store
           (local.get $2)
           (local.get $6)
          )
          ;;@ celt/vq.c:63:0
          (local.set $10
           (i32.add
            (local.get $1)
            (i32.const -1)
           )
          )
          (if
           (i32.gt_s
            (local.get $1)
            (i32.const 0)
           )
           (block
            (local.set $2
             (local.get $8)
            )
            (local.set $1
             (local.get $10)
            )
            (br $while-in17)
           )
          )
         )
        )
       )
      )
     )
    )
   )
   ;;@ celt/vq.c:104:0
   (local.set $14
    (i32.add
     (local.get $14)
     (i32.const 1)
    )
   )
   (br_if $while-in1
    (i32.ne
     (local.get $3)
     (local.get $14)
    )
   )
  )
 )
 (func $_op_pvq_search_c (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result f32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f32)
  (local.set $16
   (global.get $STACKTOP)
  )
  (local.set $8
   (global.get $STACKTOP)
  )
  ;;@ celt/vq.c:177:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $3)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $13
   (global.get $STACKTOP)
  )
  ;;@ celt/vq.c:178:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $3)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ celt/vq.c:187:0
  (drop
   (call $_memset
    (local.get $8)
    (i32.const 0)
    (i32.shl
     (select
      (local.get $3)
      (i32.const 1)
      (i32.gt_s
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.const 2)
    )
   )
  )
  (loop $while-in
   ;;@ celt/vq.c:183:0
   (i32.store
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
     (local.get $13)
    )
    (f32.lt
     (local.tee $5
      (f32.load
       (local.tee $7
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 2)
         )
         (local.get $0)
        )
       )
      )
     )
     (f32.const 0)
    )
   )
   ;;@ celt/vq.c:185:0
   (f32.store
    (local.get $7)
    (f32.abs
     (local.get $5)
    )
   )
   ;;@ celt/vq.c:186:0
   (i32.store
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
     (local.get $1)
    )
    (i32.const 0)
   )
   ;;@ celt/vq.c:188:0
   (br_if $while-in
    (i32.lt_s
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.get $3)
    )
   )
  )
  (if
   ;;@ celt/vq.c:195:0
   (i32.lt_s
    (i32.shr_s
     (local.get $3)
     (i32.const 1)
    )
    (local.get $2)
   )
   (block
    (local.set $5
     (f32.const 0)
    )
    (local.set $4
     (i32.const 0)
    )
    (loop $while-in1
     ;;@ celt/vq.c:199:0
     (local.set $5
      (f32.add
       (local.get $5)
       (f32.load
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 2)
         )
         (local.get $0)
        )
       )
      )
     )
     ;;@ celt/vq.c:200:0
     (br_if $while-in1
      (i32.lt_s
       (local.tee $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (local.get $3)
      )
     )
    )
    ;;@ celt/vq.c:221:0
    (local.set $10
     (f32.mul
      (f32.add
       (f32.convert_i32_s
        (local.get $2)
       )
       (f32.const 0.800000011920929)
      )
      (f32.div
       (f32.const 1)
       (if (result f32)
        (i32.and
         (f32.lt
          (local.get $5)
          (f32.const 64)
         )
         (f32.gt
          (local.get $5)
          (f32.const 1.0000000036274937e-15)
         )
        )
        (local.get $5)
        (block (result f32)
         ;;@ celt/vq.c:211:0
         (f32.store
          (local.get $0)
          (f32.const 1)
         )
         ;;@ celt/vq.c:213:0
         (drop
          (call $_memset
           (i32.add
            (local.get $0)
            (i32.const 4)
           )
           (i32.const 0)
           (i32.add
            (i32.shl
             (select
              (local.get $3)
              (i32.const 2)
              (i32.gt_s
               (local.get $3)
               (i32.const 2)
              )
             )
             (i32.const 2)
            )
            (i32.const -4)
           )
          )
         )
         (f32.const 1)
        )
       )
      )
     )
    )
    (local.set $5
     (f32.const 0)
    )
    (local.set $4
     (i32.const 0)
    )
    (loop $while-in3
     ;;@ celt/vq.c:228:0
     (i32.store
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (local.get $1)
      )
      (local.tee $7
       (i32.trunc_f32_s
        (f32.floor
         (f32.mul
          (local.get $10)
          (local.tee $11
           (f32.load
            (i32.add
             (i32.shl
              (local.get $4)
              (i32.const 2)
             )
             (local.get $0)
            )
           )
          )
         )
        )
       )
      )
     )
     ;;@ celt/vq.c:231:0
     (local.set $5
      (f32.add
       (local.get $5)
       (f32.mul
        ;;@ celt/vq.c:230:0
        (local.tee $6
         (f32.convert_i32_s
          (local.get $7)
         )
        )
        (local.get $6)
       )
      )
     )
     ;;@ celt/vq.c:232:0
     (local.set $9
      (f32.add
       (local.get $9)
       (f32.mul
        (local.get $11)
        (local.get $6)
       )
      )
     )
     ;;@ celt/vq.c:233:0
     (f32.store
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (local.get $8)
      )
      (f32.mul
       (local.get $6)
       (f32.const 2)
      )
     )
     ;;@ celt/vq.c:234:0
     (local.set $2
      (i32.sub
       (local.get $2)
       (local.get $7)
      )
     )
     ;;@ celt/vq.c:235:0
     (br_if $while-in3
      (i32.lt_s
       (local.tee $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (local.get $3)
      )
     )
    )
   )
   (local.set $5
    (f32.const 0)
   )
  )
  (if
   ;;@ celt/vq.c:244:0
   (i32.gt_s
    (local.get $2)
    (i32.add
     (local.get $3)
     (i32.const 3)
    )
   )
   (block
    ;;@ celt/vq.c:248:0
    (local.set $5
     (f32.add
      (f32.add
       (local.get $5)
       (f32.mul
        ;;@ celt/vq.c:246:0
        (local.tee $5
         (f32.convert_i32_s
          (local.get $2)
         )
        )
        (local.get $5)
       )
      )
      (f32.mul
       (f32.load
        (local.get $8)
       )
       (local.get $5)
      )
     )
    )
    ;;@ celt/vq.c:249:0
    (i32.store
     (local.get $1)
     (i32.add
      (i32.load
       (local.get $1)
      )
      (local.get $2)
     )
    )
   )
   (if
    ;;@ celt/vq.c:253:0
    (i32.gt_s
     (local.get $2)
     (i32.const 0)
    )
    (block
     (local.set $11
      (f32.load
       (local.get $0)
      )
     )
     (loop $while-in5
      ;;@ celt/vq.c:276:0
      (local.set $5
       (f32.add
        ;;@ celt/vq.c:268:0
        (local.tee $10
         (f32.add
          (local.get $5)
          (f32.const 1)
         )
        )
        (f32.load
         (local.get $8)
        )
       )
      )
      ;;@ celt/vq.c:280:0
      (local.set $6
       (f32.mul
        ;;@ celt/vq.c:274:0
        (local.tee $6
         (f32.add
          (local.get $9)
          (local.get $11)
         )
        )
        (local.get $6)
       )
      )
      (local.set $7
       (i32.const 0)
      )
      (local.set $4
       (i32.const 1)
      )
      (loop $while-in7
       ;;@ celt/vq.c:299:0
       (local.set $7
        (select
         (local.get $4)
         (local.get $7)
         (local.tee $15
          (f32.gt
           (f32.mul
            (local.get $5)
            ;;@ celt/vq.c:292:0
            (local.tee $12
             (f32.mul
              ;;@ celt/vq.c:286:0
              (local.tee $12
               (f32.add
                (local.get $9)
                (f32.load
                 (i32.add
                  (i32.shl
                   (local.get $4)
                   (i32.const 2)
                  )
                  (local.get $0)
                 )
                )
               )
              )
              (local.get $12)
             )
            )
           )
           (f32.mul
            (local.get $6)
            ;;@ celt/vq.c:288:0
            (local.tee $17
             (f32.add
              (local.get $10)
              (f32.load
               (i32.add
                (i32.shl
                 (local.get $4)
                 (i32.const 2)
                )
                (local.get $8)
               )
              )
             )
            )
           )
          )
         )
        )
       )
       ;;@ celt/vq.c:299:0
       (local.set $6
        (select
         (local.get $12)
         (local.get $6)
         (local.get $15)
        )
       )
       (local.set $5
        (select
         (local.get $17)
         (local.get $5)
         (local.get $15)
        )
       )
       ;;@ celt/vq.c:305:0
       (br_if $while-in7
        (i32.lt_s
         (local.tee $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.get $3)
        )
       )
      )
      ;;@ celt/vq.c:308:0
      (local.set $9
       (f32.add
        (local.get $9)
        (f32.load
         (i32.add
          (i32.shl
           (local.get $7)
           (i32.const 2)
          )
          (local.get $0)
         )
        )
       )
      )
      ;;@ celt/vq.c:310:0
      (local.set $5
       (f32.add
        (local.get $10)
        (local.tee $6
         (f32.load
          (local.tee $4
           (i32.add
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
            (local.get $8)
           )
          )
         )
        )
       )
      )
      ;;@ celt/vq.c:314:0
      (f32.store
       (local.get $4)
       (f32.add
        (local.get $6)
        (f32.const 2)
       )
      )
      ;;@ celt/vq.c:315:0
      (i32.store
       (local.tee $4
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 2)
         )
         (local.get $1)
        )
       )
       (i32.add
        (i32.load
         (local.get $4)
        )
        (i32.const 1)
       )
      )
      ;;@ celt/vq.c:253:0
      (br_if $while-in5
       (i32.ne
        (local.tee $14
         (i32.add
          (local.get $14)
          (i32.const 1)
         )
        )
        (local.get $2)
       )
      )
     )
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in9
   ;;@ celt/vq.c:324:0
   (i32.store
    (local.tee $2
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 2)
      )
      (local.get $1)
     )
    )
    (i32.add
     (local.tee $4
      (i32.load
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (local.get $13)
       )
      )
     )
     (i32.xor
      (i32.load
       (local.get $2)
      )
      (i32.sub
       (i32.const 0)
       (local.get $4)
      )
     )
    )
   )
   ;;@ celt/vq.c:325:0
   (br_if $while-in9
    (i32.lt_s
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.get $3)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $16)
  )
  ;;@ celt/vq.c:328:0
  (local.get $5)
 )
 (func $_alg_quant (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 f32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (if
   ;;@ celt/vq.c:338:0
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 42648)
    (i32.const 42707)
    (i32.const 338)
   )
  )
  (if
   ;;@ celt/vq.c:339:0
   (i32.le_s
    (local.get $1)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 42717)
    (i32.const 42707)
    (i32.const 339)
   )
  )
  (local.set $8
   (global.get $STACKTOP)
  )
  ;;@ celt/vq.c:342:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (i32.const 27)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ celt/vq.c:344:0
  (call $_exp_rotation
   (local.get $0)
   (local.get $1)
   (i32.const 1)
   (local.get $4)
   (local.get $2)
   (local.get $3)
  )
  ;;@ celt/vq.c:346:0
  (local.set $10
   (call $_op_pvq_search_c
    (local.get $0)
    (local.get $8)
    (local.get $2)
    (local.get $1)
   )
  )
  ;;@ celt/vq.c:348:0
  (call $_encode_pulses
   (local.get $8)
   (local.get $1)
   (local.get $2)
   (local.get $5)
  )
  (if
   ;;@ celt/vq.c:350:0
   (local.get $7)
   (block
    ;;@ celt/vq.c:135:0
    (local.set $6
     (f32.mul
      (f32.div
       (f32.const 1)
       (f32.sqrt
        (local.get $10)
       )
      )
      (local.get $6)
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (loop $while-in
     ;;@ celt/vq.c:139:0
     (f32.store
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $0)
      )
      (f32.mul
       (local.get $6)
       (f32.convert_i32_s
        (i32.load
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $8)
         )
        )
       )
      )
     )
     ;;@ celt/vq.c:140:0
     (br_if $while-in
      (i32.ne
       (local.tee $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
    ;;@ celt/vq.c:353:0
    (call $_exp_rotation
     (local.get $0)
     (local.get $1)
     (i32.const -1)
     (local.get $4)
     (local.get $2)
     (local.get $3)
    )
   )
  )
  (if
   ;;@ celt/vq.c:148:0
   (i32.lt_s
    (local.get $4)
    (i32.const 2)
   )
   (block
    (global.set $STACKTOP
     (local.get $9)
    )
    ;;@ celt/vq.c:359:0
    (return
     (i32.const 1)
    )
   )
  )
  ;;@ ./celt/entcode.h:136:0
  (local.set $5
   (i32.div_u
    (local.get $1)
    (local.get $4)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in1
   (local.set $7
    (i32.mul
     (local.get $1)
     (local.get $5)
    )
   )
   (local.set $3
    (i32.const 0)
   )
   (local.set $0
    (i32.const 0)
   )
   (loop $while-in3
    ;;@ celt/vq.c:158:0
    (local.set $3
     (i32.or
      (i32.load
       (i32.add
        (i32.shl
         (i32.add
          (local.get $0)
          (local.get $7)
         )
         (i32.const 2)
        )
        (local.get $8)
       )
      )
      (local.get $3)
     )
    )
    ;;@ celt/vq.c:159:0
    (br_if $while-in3
     (i32.lt_s
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (local.get $5)
     )
    )
   )
   ;;@ celt/vq.c:160:0
   (local.set $2
    (i32.or
     (i32.shl
      (i32.ne
       (local.get $3)
       (i32.const 0)
      )
      (local.get $1)
     )
     (local.get $2)
    )
   )
   (br_if $while-in1
    ;;@ celt/vq.c:161:0
    (i32.ne
     (local.get $4)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  ;;@ celt/vq.c:359:0
  (local.get $2)
 )
 (func $_alg_unquant (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 f32) (result i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (if
   ;;@ celt/vq.c:371:0
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 42781)
    (i32.const 42707)
    (i32.const 371)
   )
  )
  (if
   ;;@ celt/vq.c:372:0
   (i32.le_s
    (local.get $1)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 42842)
    (i32.const 42707)
    (i32.const 372)
   )
  )
  ;;@ celt/vq.c:373:0
  (local.set $7
   (i32.shl
    (local.get $1)
    (i32.const 2)
   )
  )
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $7)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ celt/vq.c:374:0
  (local.set $8
   (call $_decode_pulses
    (local.get $10)
    (local.get $1)
    (local.get $2)
    (local.get $5)
   )
  )
  ;;@ celt/vq.c:135:0
  (local.set $8
   (f32.sqrt
    (local.get $8)
   )
  )
  (local.set $8
   (f32.div
    (f32.const 1)
    (local.get $8)
   )
  )
  (local.set $6
   (f32.mul
    (local.get $8)
    (local.get $6)
   )
  )
  (local.set $5
   (i32.const 0)
  )
  (loop $while-in
   ;;@ celt/vq.c:139:0
   (local.set $7
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 2)
     )
     (local.get $10)
    )
   )
   (local.set $7
    (i32.load
     (local.get $7)
    )
   )
   (local.set $8
    (f32.convert_i32_s
     (local.get $7)
    )
   )
   (local.set $8
    (f32.mul
     (local.get $6)
     (local.get $8)
    )
   )
   (local.set $7
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 2)
     )
     (local.get $0)
    )
   )
   (f32.store
    (local.get $7)
    (local.get $8)
   )
   ;;@ celt/vq.c:140:0
   (local.set $5
    (i32.add
     (local.get $5)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $1)
     (local.get $5)
    )
   )
  )
  ;;@ celt/vq.c:376:0
  (call $_exp_rotation
   (local.get $0)
   (local.get $1)
   (i32.const -1)
   (local.get $4)
   (local.get $2)
   (local.get $3)
  )
  (if
   ;;@ celt/vq.c:148:0
   (i32.lt_s
    (local.get $4)
    (i32.const 2)
   )
   (block
    (global.set $STACKTOP
     (local.get $11)
    )
    ;;@ celt/vq.c:380:0
    (return
     (i32.const 1)
    )
   )
  )
  ;;@ ./celt/entcode.h:136:0
  (local.set $5
   (i32.div_u
    (local.get $1)
    (local.get $4)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in1
   (local.set $7
    (i32.mul
     (local.get $1)
     (local.get $5)
    )
   )
   (local.set $3
    (i32.const 0)
   )
   (local.set $0
    (i32.const 0)
   )
   (loop $while-in3
    ;;@ celt/vq.c:158:0
    (local.set $9
     (i32.add
      (local.get $0)
      (local.get $7)
     )
    )
    (local.set $9
     (i32.add
      (i32.shl
       (local.get $9)
       (i32.const 2)
      )
      (local.get $10)
     )
    )
    (local.set $9
     (i32.load
      (local.get $9)
     )
    )
    (local.set $3
     (i32.or
      (local.get $3)
      (local.get $9)
     )
    )
    ;;@ celt/vq.c:159:0
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 1)
     )
    )
    (br_if $while-in3
     (i32.lt_s
      (local.get $0)
      (local.get $5)
     )
    )
   )
   ;;@ celt/vq.c:160:0
   (local.set $0
    (i32.ne
     (local.get $3)
     (i32.const 0)
    )
   )
   (local.set $0
    (i32.shl
     (local.get $0)
     (local.get $1)
    )
   )
   (local.set $0
    (i32.or
     (local.get $0)
     (local.get $2)
    )
   )
   ;;@ celt/vq.c:161:0
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (if
    (i32.ne
     (local.get $1)
     (local.get $4)
    )
    (block
     (local.set $2
      (local.get $0)
     )
     (br $while-in1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $11)
  )
  ;;@ celt/vq.c:380:0
  (local.get $0)
 )
 (func $_renormalise_vector (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (if
   ;;@ ./celt/pitch.h:164:0
   (i32.eqz
    (local.tee $5
     (i32.gt_s
      (local.get $1)
      (i32.const 0)
     )
    )
   )
   ;;@ celt/vq.c:407:0
   (return)
  )
  (loop $while-in
   ;;@ ./celt/pitch.h:165:0
   (local.set $4
    (f32.add
     (local.get $4)
     (f32.mul
      (local.tee $4
       (f32.load
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (local.get $0)
        )
       )
      )
      (local.get $4)
     )
    )
   )
   ;;@ ./celt/pitch.h:164:0
   (br_if $while-in
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.get $1)
    )
   )
  )
  (if
   ;;@ celt/vq.c:398:0
   (i32.eqz
    (local.get $5)
   )
   ;;@ celt/vq.c:407:0
   (return)
  )
  (local.set $2
   (f32.mul
    (f32.div
     (f32.const 1)
     (f32.sqrt
      (f32.add
       (local.get $4)
       (f32.const 1.0000000036274937e-15)
      )
     )
    )
    (local.get $2)
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in1
   ;;@ celt/vq.c:403:0
   (f32.store
    (local.get $0)
    (f32.mul
     (local.get $2)
     (f32.load
      (local.get $0)
     )
    )
   )
   ;;@ celt/vq.c:404:0
   (local.set $0
    (i32.add
     (local.get $0)
     (i32.const 4)
    )
   )
   ;;@ celt/vq.c:401:0
   (br_if $while-in1
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.get $1)
    )
   )
  )
 )
 (func $_stereo_itheta (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  ;;@ celt/vq.c:418:0
  (local.set $8
   (i32.gt_s
    (local.get $3)
    (i32.const 0)
   )
  )
  (if
   (local.get $2)
   (if
    (local.get $8)
    (block
     (local.set $5
      (f32.const 1.0000000036274937e-15)
     )
     (local.set $4
      (f32.const 1.0000000036274937e-15)
     )
     (local.set $2
      (i32.const 0)
     )
     (loop $while-in3
      ;;@ celt/vq.c:425:0
      (local.set $5
       (f32.add
        (local.get $5)
        (f32.mul
         ;;@ celt/vq.c:423:0
         (local.tee $5
          (f32.add
           (local.tee $6
            (f32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $0)
             )
            )
           )
           (local.tee $7
            (f32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $1)
             )
            )
           )
          )
         )
         (local.get $5)
        )
       )
      )
      ;;@ celt/vq.c:426:0
      (local.set $4
       (f32.add
        (local.get $4)
        (f32.mul
         ;;@ celt/vq.c:424:0
         (local.tee $4
          (f32.sub
           (local.get $6)
           (local.get $7)
          )
         )
         (local.get $4)
        )
       )
      )
      ;;@ celt/vq.c:420:0
      (br_if $while-in3
       (i32.ne
        (local.get $3)
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
    (block
     (local.set $5
      (f32.const 1.0000000036274937e-15)
     )
     (local.set $4
      (f32.const 1.0000000036274937e-15)
     )
    )
   )
   (local.set $4
    (if (result f32)
     (local.get $8)
     (block (result f32)
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in
       ;;@ ./celt/pitch.h:165:0
       (local.set $4
        (f32.add
         (local.get $4)
         (f32.mul
          (local.tee $4
           (f32.load
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $0)
            )
           )
          )
          (local.get $4)
         )
        )
       )
       ;;@ ./celt/pitch.h:164:0
       (br_if $while-in
        (i32.ne
         (local.get $3)
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
        )
       )
      )
      ;;@ celt/vq.c:429:0
      (local.set $5
       (f32.add
        (local.get $4)
        (f32.const 1.0000000036274937e-15)
       )
      )
      (local.set $0
       (i32.const 0)
      )
      (local.set $4
       (f32.const 0)
      )
      (loop $while-in1
       ;;@ ./celt/pitch.h:165:0
       (local.set $4
        (f32.add
         (local.get $4)
         (f32.mul
          (local.tee $4
           (f32.load
            (i32.add
             (i32.shl
              (local.get $0)
              (i32.const 2)
             )
             (local.get $1)
            )
           )
          )
          (local.get $4)
         )
        )
       )
       ;;@ ./celt/pitch.h:164:0
       (br_if $while-in1
        (i32.ne
         (local.get $3)
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
      )
      ;;@ celt/vq.c:430:0
      (f32.add
       (local.get $4)
       (f32.const 1.0000000036274937e-15)
      )
     )
     (block (result f32)
      (local.set $5
       (f32.const 1.0000000036274937e-15)
      )
      (f32.const 1.0000000036274937e-15)
     )
    )
   )
  )
  (if
   ;;@ ./celt/mathops.h:60:0
   (f32.lt
    (f32.add
     ;;@ ./celt/mathops.h:57:0
     (local.tee $4
      (f32.mul
       ;;@ celt/vq.c:433:0
       (local.tee $6
        (f32.sqrt
         (local.get $4)
        )
       )
       (local.get $6)
      )
     )
     ;;@ ./celt/mathops.h:56:0
     (local.tee $5
      (f32.mul
       ;;@ celt/vq.c:432:0
       (local.tee $7
        (f32.sqrt
         (local.get $5)
        )
       )
       (local.get $7)
      )
     )
    )
    (f32.const 1.000000045813705e-18)
   )
   ;;@ celt/vq.c:441:0
   (return
    (i32.const 0)
   )
  )
  (i32.trunc_f32_s
   (f32.floor
    (f32.add
     (f32.mul
      (if (result f32)
       ;;@ ./celt/mathops.h:64:0
       (f32.lt
        (local.get $5)
        (local.get $4)
       )
       (f32.add
        (f32.div
         (f32.neg
          (f32.mul
           (f32.mul
            (local.get $6)
            (local.get $7)
           )
           (f32.add
            (local.get $4)
            (f32.mul
             (local.get $5)
             (f32.const 0.43157973885536194)
            )
           )
          )
         )
         (f32.mul
          (f32.add
           (local.get $4)
           (f32.mul
            (local.get $5)
            (f32.const 0.6784840226173401)
           )
          )
          (f32.add
           (local.get $4)
           (f32.mul
            (local.get $5)
            (f32.const 0.0859554186463356)
           )
          )
         )
        )
        (f32.const 1.5707963705062866)
       )
       (f32.add
        (f32.add
         (f32.div
          (f32.mul
           (f32.mul
            (local.get $6)
            (local.get $7)
           )
           (f32.add
            (local.get $5)
            (f32.mul
             (local.get $4)
             (f32.const 0.43157973885536194)
            )
           )
          )
          (f32.mul
           (f32.add
            (local.get $5)
            (f32.mul
             (local.get $4)
             (f32.const 0.6784840226173401)
            )
           )
           (f32.add
            (local.get $5)
            (f32.mul
             (local.get $4)
             (f32.const 0.0859554186463356)
            )
           )
          )
         )
         (f32.const 1.5707963705062866)
        )
        (f32.const -1.5707963705062866)
       )
      )
      (f32.const 10430.3818359375)
     )
     (f32.const 0.5)
    )
   )
  )
 )
 (func $_silk_CNG_Reset (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  ;;@ silk/CNG.c:68:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 2340)
   )
  )
  (local.set $2
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $4
   (i32.div_s
    (i32.const 32767)
    (local.get $1)
   )
  )
  (if
   ;;@ silk/CNG.c:70:0
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
   (block
    (local.set $1
     (i32.const 0)
    )
    (loop $while-in
     ;;@ silk/CNG.c:71:0
     (local.set $3
      (i32.add
       (local.get $3)
       (local.get $4)
      )
     )
     ;;@ silk/CNG.c:72:0
     (local.set $5
      (i32.and
       (local.get $3)
       (i32.const 65535)
      )
     )
     (local.set $6
      (i32.add
       (i32.add
        (local.get $0)
        (i32.const 4052)
       )
       (i32.shl
        (local.get $1)
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (local.get $6)
      (local.get $5)
     )
     ;;@ silk/CNG.c:70:0
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.get $1)
       (local.get $2)
      )
     )
    )
   )
  )
  ;;@ silk/CNG.c:74:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 4148)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 0)
  )
  ;;@ silk/CNG.c:75:0
  (local.set $0
   (i32.add
    (local.get $0)
    (i32.const 4152)
   )
  )
  (i32.store
   (local.get $0)
   (i32.const 3176576)
  )
 )
 (func $_silk_CNG (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $12
   (local.get $4)
  )
  ;;@ silk/CNG.c:89:0
  (local.set $15
   (i32.add
    (local.get $0)
    (i32.const 2772)
   )
  )
  ;;@ silk/CNG.c:92:0
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 2316)
   )
  )
  (local.set $11
   (i32.load
    (local.get $4)
   )
  )
  (local.set $13
   (i32.add
    (local.get $0)
    (i32.const 4156)
   )
  )
  (local.set $4
   (i32.load
    (local.get $13)
   )
  )
  (if
   (i32.ne
    (local.get $4)
    (local.get $11)
   )
   (block
    ;;@ silk/CNG.c:68:0
    (local.set $4
     (i32.add
      (local.get $0)
      (i32.const 2340)
     )
    )
    (local.set $10
     (i32.load
      (local.get $4)
     )
    )
    (local.set $4
     (i32.add
      (local.get $10)
      (i32.const 1)
     )
    )
    (local.set $8
     (i32.div_s
      (i32.const 32767)
      (local.get $4)
     )
    )
    (if
     ;;@ silk/CNG.c:70:0
     (i32.gt_s
      (local.get $10)
      (i32.const 0)
     )
     (block
      (local.set $4
       (i32.const 0)
      )
      (loop $while-in
       ;;@ silk/CNG.c:71:0
       (local.set $5
        (i32.add
         (local.get $5)
         (local.get $8)
        )
       )
       ;;@ silk/CNG.c:72:0
       (local.set $7
        (i32.and
         (local.get $5)
         (i32.const 65535)
        )
       )
       (local.set $6
        (i32.add
         (i32.add
          (local.get $0)
          (i32.const 4052)
         )
         (i32.shl
          (local.get $4)
          (i32.const 1)
         )
        )
       )
       (i32.store16
        (local.get $6)
        (local.get $7)
       )
       ;;@ silk/CNG.c:70:0
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (i32.ne
         (local.get $4)
         (local.get $10)
        )
       )
      )
     )
    )
    ;;@ silk/CNG.c:74:0
    (local.set $4
     (i32.add
      (local.get $0)
      (i32.const 4148)
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    ;;@ silk/CNG.c:75:0
    (local.set $4
     (i32.add
      (local.get $0)
      (i32.const 4152)
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 3176576)
    )
    ;;@ silk/CNG.c:96:0
    (i32.store
     (local.get $13)
     (local.get $11)
    )
   )
  )
  ;;@ silk/CNG.c:98:0
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 4160)
   )
  )
  (local.set $4
   (i32.load
    (local.get $10)
   )
  )
  (if
   (i32.eqz
    (local.get $4)
   )
   (block
    (local.set $4
     (i32.add
      (local.get $0)
      (i32.const 4164)
     )
    )
    (local.set $4
     (i32.load
      (local.get $4)
     )
    )
    (if
     (i32.eqz
      (local.get $4)
     )
     (block
      ;;@ silk/CNG.c:102:0
      (local.set $4
       (i32.add
        (local.get $0)
        (i32.const 2340)
       )
      )
      (local.set $11
       (i32.load
        (local.get $4)
       )
      )
      (if
       (i32.gt_s
        (local.get $11)
        (i32.const 0)
       )
       (block
        (local.set $4
         (i32.const 0)
        )
        (loop $while-in1
         ;;@ silk/CNG.c:103:0
         (local.set $5
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 2344)
           )
           (i32.shl
            (local.get $4)
            (i32.const 1)
           )
          )
         )
         (local.set $6
          (i32.load16_s
           (local.get $5)
          )
         )
         (local.set $13
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 4052)
           )
           (i32.shl
            (local.get $4)
            (i32.const 1)
           )
          )
         )
         (local.set $5
          (i32.load16_s
           (local.get $13)
          )
         )
         (local.set $8
          (i32.sub
           (local.get $6)
           (local.get $5)
          )
         )
         (local.set $6
          (i32.shr_s
           (local.get $8)
           (i32.const 16)
          )
         )
         (local.set $7
          (i32.mul
           (local.get $6)
           (i32.const 16348)
          )
         )
         (local.set $6
          (i32.and
           (local.get $8)
           (i32.const 65535)
          )
         )
         (local.set $6
          (i32.mul
           (local.get $6)
           (i32.const 16348)
          )
         )
         (local.set $6
          (i32.shr_u
           (local.get $6)
           (i32.const 16)
          )
         )
         (local.set $5
          (i32.add
           (local.get $5)
           (local.get $7)
          )
         )
         (local.set $5
          (i32.add
           (local.get $5)
           (local.get $6)
          )
         )
         (local.set $5
          (i32.and
           (local.get $5)
           (i32.const 65535)
          )
         )
         (i32.store16
          (local.get $13)
          (local.get $5)
         )
         ;;@ silk/CNG.c:102:0
         (local.set $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (br_if $while-in1
          (i32.lt_s
           (local.get $4)
           (local.get $11)
          )
         )
        )
       )
      )
      ;;@ silk/CNG.c:108:0
      (local.set $13
       (i32.add
        (local.get $0)
        (i32.const 2324)
       )
      )
      (local.set $11
       (i32.load
        (local.get $13)
       )
      )
      (if
       (i32.gt_s
        (local.get $11)
        (i32.const 0)
       )
       (block
        (local.set $4
         (i32.const 0)
        )
        (local.set $5
         (i32.const 0)
        )
        (local.set $6
         (i32.const 0)
        )
        (loop $while-in3
         ;;@ silk/CNG.c:109:0
         (local.set $7
          (i32.add
           (i32.add
            (local.get $1)
            (i32.const 16)
           )
           (i32.shl
            (local.get $6)
            (i32.const 2)
           )
          )
         )
         (local.set $8
          (i32.load
           (local.get $7)
          )
         )
         (local.set $7
          (i32.gt_s
           (local.get $8)
           (local.get $5)
          )
         )
         (local.set $5
          (select
           (local.get $8)
           (local.get $5)
           (local.get $7)
          )
         )
         (local.set $4
          (select
           (local.get $6)
           (local.get $4)
           (local.get $7)
          )
         )
         ;;@ silk/CNG.c:108:0
         (local.set $6
          (i32.add
           (local.get $6)
           (i32.const 1)
          )
         )
         (br_if $while-in3
          (i32.lt_s
           (local.get $6)
           (local.get $11)
          )
         )
        )
       )
       (local.set $4
        (i32.const 0)
       )
      )
      ;;@ silk/CNG.c:115:0
      (local.set $8
       (i32.add
        (local.get $0)
        (i32.const 2332)
       )
      )
      (local.set $7
       (i32.load
        (local.get $8)
       )
      )
      (local.set $6
       (i32.add
        (i32.add
         (local.get $0)
         (i32.const 2772)
        )
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
       )
      )
      (local.set $5
       (i32.shl
        (local.get $11)
        (i32.const 2)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (i32.const -4)
       )
      )
      (local.set $5
       (i32.mul
        (local.get $5)
        (local.get $7)
       )
      )
      (drop
       (call $_memmove
        (local.get $6)
        (local.get $15)
        (local.get $5)
       )
      )
      ;;@ silk/CNG.c:116:0
      (local.set $6
       (i32.load
        (local.get $8)
       )
      )
      (local.set $4
       (i32.mul
        (local.get $4)
        (local.get $6)
       )
      )
      (local.set $5
       (i32.add
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
       )
      )
      (local.set $4
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
      )
      (drop
       (call $_memcpy
        (local.get $15)
        (local.get $5)
        (local.get $4)
       )
      )
      ;;@ silk/CNG.c:119:0
      (local.set $11
       (i32.load
        (local.get $13)
       )
      )
      (if
       (i32.gt_s
        (local.get $11)
        (i32.const 0)
       )
       (block
        (local.set $13
         (i32.add
          (local.get $0)
          (i32.const 4148)
         )
        )
        ;;@ silk/CNG.c:120:0
        (local.set $4
         (i32.const 0)
        )
        (local.set $5
         (i32.load
          (local.get $13)
         )
        )
        (loop $while-in5
         (local.set $6
          (i32.add
           (i32.add
            (local.get $1)
            (i32.const 16)
           )
           (i32.shl
            (local.get $4)
            (i32.const 2)
           )
          )
         )
         (local.set $6
          (i32.load
           (local.get $6)
          )
         )
         (local.set $8
          (i32.sub
           (local.get $6)
           (local.get $5)
          )
         )
         (local.set $6
          (i32.shr_s
           (local.get $8)
           (i32.const 16)
          )
         )
         (local.set $7
          (i32.mul
           (local.get $6)
           (i32.const 4634)
          )
         )
         (local.set $6
          (i32.and
           (local.get $8)
           (i32.const 65535)
          )
         )
         (local.set $6
          (i32.mul
           (local.get $6)
           (i32.const 4634)
          )
         )
         (local.set $6
          (i32.shr_u
           (local.get $6)
           (i32.const 16)
          )
         )
         (local.set $5
          (i32.add
           (local.get $5)
           (local.get $7)
          )
         )
         (local.set $5
          (i32.add
           (local.get $5)
           (local.get $6)
          )
         )
         (i32.store
          (local.get $13)
          (local.get $5)
         )
         ;;@ silk/CNG.c:119:0
         (local.set $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (br_if $while-in5
          (i32.lt_s
           (local.get $4)
           (local.get $11)
          )
         )
        )
       )
      )
     )
    )
    ;;@ silk/CNG.c:125:0
    (local.set $1
     (i32.load
      (local.get $10)
     )
    )
    (if
     (i32.eqz
      (local.get $1)
     )
     (block
      ;;@ silk/CNG.c:181:0
      (local.set $1
       (i32.add
        (local.get $0)
        (i32.const 4084)
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (i32.const 2340)
       )
      )
      (local.set $0
       (i32.load
        (local.get $0)
       )
      )
      (local.set $0
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
      )
      (drop
       (call $_memset
        (local.get $1)
        (i32.const 0)
        (local.get $0)
       )
      )
      (global.set $STACKTOP
       (local.get $12)
      )
      ;;@ silk/CNG.c:184:0
      (return)
     )
    )
   )
  )
  ;;@ silk/CNG.c:127:0
  (local.set $1
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $41
   (call $_llvm_stacksave)
  )
  (local.set $1
   (i32.shl
    (local.get $1)
    (i32.const 2)
   )
  )
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $1)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ silk/CNG.c:130:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 4228)
   )
  )
  (local.set $1
   (i32.load16_s
    (local.get $1)
   )
  )
  (local.set $5
   (i32.shr_s
    (local.get $1)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 4248)
   )
  )
  (local.set $7
   (i32.load
    (local.get $4)
   )
  )
  (local.set $4
   (i32.shl
    (local.get $7)
    (i32.const 16)
   )
  )
  (local.set $6
   (i32.shr_s
    (local.get $4)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.mul
    (local.get $5)
    (local.get $6)
   )
  )
  (local.set $4
   (i32.and
    (local.get $1)
    (i32.const 65535)
   )
  )
  (local.set $4
   (i32.mul
    (local.get $4)
    (local.get $6)
   )
  )
  (local.set $4
   (i32.shr_s
    (local.get $4)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (local.get $5)
   )
  )
  (local.set $4
   (i32.shr_s
    (local.get $7)
    (i32.const 15)
   )
  )
  (local.set $4
   (i32.add
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $4
   (i32.shr_s
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $1
   (i32.mul
    (local.get $1)
    (local.get $4)
   )
  )
  (local.set $7
   (i32.add
    (local.get $1)
    (local.get $5)
   )
  )
  ;;@ silk/CNG.c:131:0
  (local.set $4
   (i32.gt_s
    (local.get $7)
    (i32.const 2097151)
   )
  )
  (local.set $8
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 4148)
    )
   )
  )
  (local.set $1
   (i32.gt_s
    (local.get $8)
    (i32.const 8388608)
   )
  )
  (local.set $6
   (i32.shr_s
    (local.get $7)
    (i32.const 16)
   )
  )
  (local.set $10
   (if (result i32)
    (i32.or
     (local.get $1)
     (local.get $4)
    )
    (block (result i32)
     ;;@ silk/CNG.c:133:0
     (local.set $1
      (i32.shr_s
       (local.get $8)
       (i32.const 16)
      )
     )
     (local.set $4
      (i32.mul
       (local.get $1)
       (local.get $1)
      )
     )
     ;;@ silk/CNG.c:132:0
     (local.set $1
      (i32.shl
       (local.get $6)
       (i32.const 5)
      )
     )
     ;;@ silk/CNG.c:133:0
     (local.set $1
      (i32.mul
       (local.get $1)
       (local.get $6)
      )
     )
     (local.set $1
      (i32.sub
       (local.get $4)
       (local.get $1)
      )
     )
     (if (result i32)
      ;;@ ./silk/Inlines.h:75:0
      (i32.lt_s
       (local.get $1)
       (i32.const 1)
      )
      (i32.const 0)
      (block (result i32)
       ;;@ ./silk/macros.h:122:0
       (local.set $6
        (i32.clz
         (local.get $1)
        )
       )
       ;;@ ./silk/Inlines.h:65:0
       (local.set $7
        (i32.sub
         (i32.const 24)
         (local.get $6)
        )
       )
       ;;@ ./silk/SigProc_FIX.h:402:0
       (local.set $4
        (i32.sub
         (i32.const 0)
         (local.get $7)
        )
       )
       (if
        ;;@ ./silk/SigProc_FIX.h:403:0
        (local.get $7)
        (local.set $1
         (if (result i32)
          ;;@ ./silk/SigProc_FIX.h:405:0
          (i32.lt_s
           (local.get $7)
           (i32.const 0)
          )
          (block (result i32)
           ;;@ ./silk/SigProc_FIX.h:406:0
           (local.set $5
            (i32.shl
             (local.get $1)
             (local.get $4)
            )
           )
           (local.set $4
            (i32.add
             (local.get $7)
             (i32.const 32)
            )
           )
           (local.set $1
            (i32.shr_u
             (local.get $1)
             (local.get $4)
            )
           )
           (i32.or
            (local.get $1)
            (local.get $5)
           )
          )
          (block (result i32)
           ;;@ ./silk/SigProc_FIX.h:408:0
           (local.set $4
            (i32.sub
             (i32.const 32)
             (local.get $7)
            )
           )
           (local.set $4
            (i32.shl
             (local.get $1)
             (local.get $4)
            )
           )
           (local.set $1
            (i32.shr_u
             (local.get $1)
             (local.get $7)
            )
           )
           (i32.or
            (local.get $1)
            (local.get $4)
           )
          )
         )
        )
       )
       ;;@ ./silk/Inlines.h:81:0
       (local.set $4
        (i32.and
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $5
        (select
         (i32.const 32768)
         (i32.const 46214)
         (local.get $4)
        )
       )
       (local.set $4
        (i32.shr_u
         (local.get $6)
         (i32.const 1)
        )
       )
       ;;@ ./silk/Inlines.h:88:0
       (local.set $7
        (i32.shr_u
         (local.get $5)
         (local.get $4)
        )
       )
       ;;@ ./silk/Inlines.h:91:0
       (local.set $4
        (i32.shr_s
         (local.get $7)
         (i32.const 16)
        )
       )
       (local.set $1
        (i32.and
         (local.get $1)
         (i32.const 127)
        )
       )
       (local.set $1
        (i32.mul
         (local.get $1)
         (i32.const 13959168)
        )
       )
       (local.set $6
        (i32.shr_u
         (local.get $1)
         (i32.const 16)
        )
       )
       (local.set $5
        (i32.mul
         (local.get $4)
         (local.get $6)
        )
       )
       (local.set $1
        (i32.and
         (local.get $7)
         (i32.const 65535)
        )
       )
       (local.set $4
        (i32.mul
         (local.get $1)
         (local.get $6)
        )
       )
       (local.set $1
        (i32.add
         (local.get $5)
         (local.get $7)
        )
       )
       ;;@ ./silk/Inlines.h:93:0
       (local.set $1
        (i32.shl
         (local.get $1)
         (i32.const 16)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (local.get $4)
        )
       )
       (i32.and
        (local.get $1)
        (i32.const -65536)
       )
      )
     )
    )
    (block (result i32)
     ;;@ silk/CNG.c:136:0
     (local.set $1
      (i32.shl
       (local.get $7)
       (i32.const 16)
      )
     )
     (local.set $5
      (i32.shr_s
       (local.get $1)
       (i32.const 16)
      )
     )
     (local.set $4
      (i32.mul
       (local.get $5)
       (local.get $6)
      )
     )
     (local.set $1
      (i32.and
       (local.get $7)
       (i32.const 65535)
      )
     )
     (local.set $1
      (i32.mul
       (local.get $1)
       (local.get $5)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $1)
       (i32.const 16)
      )
     )
     (local.set $4
      (i32.add
       (local.get $1)
       (local.get $4)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $7)
       (i32.const 15)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.mul
       (local.get $1)
       (local.get $7)
      )
     )
     (local.set $7
      (i32.add
       (local.get $1)
       (local.get $4)
      )
     )
     ;;@ silk/CNG.c:137:0
     (local.set $4
      (i32.shr_s
       (local.get $8)
       (i32.const 16)
      )
     )
     (local.set $1
      (i32.shl
       (local.get $8)
       (i32.const 16)
      )
     )
     (local.set $5
      (i32.shr_s
       (local.get $1)
       (i32.const 16)
      )
     )
     (local.set $6
      (i32.mul
       (local.get $4)
       (local.get $5)
      )
     )
     (local.set $1
      (i32.and
       (local.get $8)
       (i32.const 65535)
      )
     )
     (local.set $1
      (i32.mul
       (local.get $1)
       (local.get $5)
      )
     )
     (local.set $5
      (i32.shr_s
       (local.get $1)
       (i32.const 16)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $8)
       (i32.const 15)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $4
      (i32.mul
       (local.get $1)
       (local.get $8)
      )
     )
     (local.set $1
      (i32.shl
       (local.get $7)
       (i32.const 5)
      )
     )
     (local.set $1
      (i32.sub
       (local.get $6)
       (local.get $1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $5)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $4)
      )
     )
     (if (result i32)
      ;;@ ./silk/Inlines.h:75:0
      (i32.lt_s
       (local.get $1)
       (i32.const 1)
      )
      (i32.const 0)
      (block (result i32)
       ;;@ ./silk/macros.h:122:0
       (local.set $6
        (i32.clz
         (local.get $1)
        )
       )
       ;;@ ./silk/Inlines.h:65:0
       (local.set $7
        (i32.sub
         (i32.const 24)
         (local.get $6)
        )
       )
       ;;@ ./silk/SigProc_FIX.h:402:0
       (local.set $4
        (i32.sub
         (i32.const 0)
         (local.get $7)
        )
       )
       (if
        ;;@ ./silk/SigProc_FIX.h:403:0
        (local.get $7)
        (local.set $1
         (if (result i32)
          ;;@ ./silk/SigProc_FIX.h:405:0
          (i32.lt_s
           (local.get $7)
           (i32.const 0)
          )
          (block (result i32)
           ;;@ ./silk/SigProc_FIX.h:406:0
           (local.set $5
            (i32.shl
             (local.get $1)
             (local.get $4)
            )
           )
           (local.set $4
            (i32.add
             (local.get $7)
             (i32.const 32)
            )
           )
           (local.set $1
            (i32.shr_u
             (local.get $1)
             (local.get $4)
            )
           )
           (i32.or
            (local.get $1)
            (local.get $5)
           )
          )
          (block (result i32)
           ;;@ ./silk/SigProc_FIX.h:408:0
           (local.set $4
            (i32.sub
             (i32.const 32)
             (local.get $7)
            )
           )
           (local.set $4
            (i32.shl
             (local.get $1)
             (local.get $4)
            )
           )
           (local.set $1
            (i32.shr_u
             (local.get $1)
             (local.get $7)
            )
           )
           (i32.or
            (local.get $1)
            (local.get $4)
           )
          )
         )
        )
       )
       ;;@ ./silk/Inlines.h:81:0
       (local.set $4
        (i32.and
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $5
        (select
         (i32.const 32768)
         (i32.const 46214)
         (local.get $4)
        )
       )
       (local.set $4
        (i32.shr_u
         (local.get $6)
         (i32.const 1)
        )
       )
       ;;@ ./silk/Inlines.h:88:0
       (local.set $7
        (i32.shr_u
         (local.get $5)
         (local.get $4)
        )
       )
       ;;@ ./silk/Inlines.h:91:0
       (local.set $4
        (i32.shr_s
         (local.get $7)
         (i32.const 16)
        )
       )
       (local.set $1
        (i32.and
         (local.get $1)
         (i32.const 127)
        )
       )
       (local.set $1
        (i32.mul
         (local.get $1)
         (i32.const 13959168)
        )
       )
       (local.set $6
        (i32.shr_u
         (local.get $1)
         (i32.const 16)
        )
       )
       (local.set $5
        (i32.mul
         (local.get $4)
         (local.get $6)
        )
       )
       (local.set $1
        (i32.and
         (local.get $7)
         (i32.const 65535)
        )
       )
       (local.set $1
        (i32.mul
         (local.get $1)
         (local.get $6)
        )
       )
       (local.set $4
        (i32.shr_u
         (local.get $1)
         (i32.const 16)
        )
       )
       (local.set $1
        (i32.add
         (local.get $5)
         (local.get $7)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (local.get $4)
        )
       )
       ;;@ ./silk/Inlines.h:93:0
       (i32.shl
        (local.get $1)
        (i32.const 8)
       )
      )
     )
    )
   )
  )
  ;;@ silk/CNG.c:142:0
  (local.set $13
   (i32.sub
    (local.get $9)
    (i32.const -64)
   )
  )
  (local.set $5
   (i32.const 255)
  )
  (loop $while-in9
   ;;@ silk/CNG.c:47:0
   (local.set $4
    (i32.gt_s
     (local.get $5)
     (local.get $3)
    )
   )
   ;;@ silk/CNG.c:48:0
   (local.set $1
    (i32.shr_s
     (local.get $5)
     (i32.const 1)
    )
   )
   (if
    (local.get $4)
    (block
     (local.set $5
      (local.get $1)
     )
     (br $while-in9)
    )
   )
  )
  ;;@ silk/CNG.c:142:0
  (local.set $11
   (i32.add
    (local.get $0)
    (i32.const 4152)
   )
  )
  ;;@ silk/CNG.c:51:0
  (local.set $1
   (i32.load
    (local.get $11)
   )
  )
  (if
   ;;@ silk/CNG.c:52:0
   (local.tee $8
    (i32.gt_s
     (local.get $3)
     (i32.const 0)
    )
   )
   (block
    (local.set $4
     (i32.const 0)
    )
    (loop $while-in11
     ;;@ silk/CNG.c:53:0
     (local.set $1
      (i32.mul
       (local.get $1)
       (i32.const 196314165)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 907633515)
      )
     )
     ;;@ silk/CNG.c:54:0
     (local.set $6
      (i32.shr_s
       (local.get $1)
       (i32.const 24)
      )
     )
     (local.set $6
      (i32.and
       (local.get $5)
       (local.get $6)
      )
     )
     ;;@ silk/CNG.c:57:0
     (local.set $6
      (i32.add
       (i32.add
        (local.get $0)
        (i32.const 2772)
       )
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
      )
     )
     (local.set $7
      (i32.load
       (local.get $6)
      )
     )
     (local.set $6
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (local.get $13)
      )
     )
     (i32.store
      (local.get $6)
      (local.get $7)
     )
     ;;@ silk/CNG.c:52:0
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (br_if $while-in11
      (i32.ne
       (local.get $3)
       (local.get $4)
      )
     )
    )
   )
  )
  ;;@ silk/CNG.c:59:0
  (i32.store
   (local.get $11)
   (local.get $1)
  )
  ;;@ silk/CNG.c:145:0
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 4052)
   )
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 2340)
   )
  )
  (local.set $4
   (i32.load
    (local.get $6)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 4168)
   )
  )
  (local.set $1
   (i32.load
    (local.get $1)
   )
  )
  (call $_silk_NLSF2A
   (local.get $12)
   (local.get $5)
   (local.get $4)
  )
  ;;@ silk/CNG.c:148:0
  (i64.store align=4
   (local.get $9)
   (i64.load align=4
    (local.tee $14
     (i32.add
      (local.get $0)
      (i32.const 4084)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $9)
   (i64.load offset=8 align=4
    (local.get $14)
   )
  )
  (i64.store offset=16 align=4
   (local.get $9)
   (i64.load offset=16 align=4
    (local.get $14)
   )
  )
  (i64.store offset=24 align=4
   (local.get $9)
   (i64.load offset=24 align=4
    (local.get $14)
   )
  )
  (i64.store offset=32 align=4
   (local.get $9)
   (i64.load offset=32 align=4
    (local.get $14)
   )
  )
  (i64.store offset=40 align=4
   (local.get $9)
   (i64.load offset=40 align=4
    (local.get $14)
   )
  )
  (i64.store offset=48 align=4
   (local.get $9)
   (i64.load offset=48 align=4
    (local.get $14)
   )
  )
  (i64.store offset=56 align=4
   (local.get $9)
   (i64.load offset=56 align=4
    (local.get $14)
   )
  )
  (block $switch
   (block $switch-default
    ;;@ silk/CNG.c:149:0
    (br_table $switch $switch-default $switch-default $switch-default $switch-default $switch-default $switch $switch-default
     (i32.sub
      (local.tee $0
       (i32.load
        (local.get $6)
       )
      )
      (i32.const 10)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 42970)
    (i32.const 42908)
    (i32.const 149)
   )
  )
  (if
   (local.get $8)
   (block
    (local.set $42
     (i32.shr_u
      (local.get $0)
      (i32.const 1)
     )
    )
    (local.set $24
     (i32.load16_s
      (local.get $12)
     )
    )
    (local.set $25
     (i32.load16_s offset=2
      (local.get $12)
     )
    )
    (local.set $26
     (i32.load16_s offset=4
      (local.get $12)
     )
    )
    (local.set $27
     (i32.load16_s offset=6
      (local.get $12)
     )
    )
    (local.set $28
     (i32.load16_s offset=8
      (local.get $12)
     )
    )
    (local.set $29
     (i32.load16_s offset=10
      (local.get $12)
     )
    )
    (local.set $30
     (i32.load16_s offset=12
      (local.get $12)
     )
    )
    (local.set $31
     (i32.load16_s offset=14
      (local.get $12)
     )
    )
    (local.set $32
     (i32.load16_s offset=16
      (local.get $12)
     )
    )
    (local.set $33
     (i32.load16_s offset=18
      (local.get $12)
     )
    )
    (local.set $43
     (i32.eq
      (local.get $0)
      (i32.const 16)
     )
    )
    (local.set $34
     (i32.load16_s offset=20
      (local.get $12)
     )
    )
    (local.set $35
     (i32.load16_s offset=22
      (local.get $12)
     )
    )
    (local.set $36
     (i32.load16_s offset=24
      (local.get $12)
     )
    )
    (local.set $37
     (i32.load16_s offset=26
      (local.get $12)
     )
    )
    (local.set $38
     (i32.load16_s offset=28
      (local.get $12)
     )
    )
    (local.set $39
     (i32.load16_s offset=30
      (local.get $12)
     )
    )
    (local.set $40
     (i32.shr_s
      (i32.shl
       (local.get $10)
       (i32.const 10)
      )
      (i32.const 16)
     )
    )
    (local.set $44
     (i32.shr_s
      (i32.add
       (i32.shr_s
        (local.get $10)
        (i32.const 21)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
    ;;@ silk/CNG.c:153:0
    (local.set $5
     (i32.load offset=60
      (local.get $9)
     )
    )
    ;;@ silk/CNG.c:155:0
    (local.set $4
     (i32.load offset=52
      (local.get $9)
     )
    )
    ;;@ silk/CNG.c:157:0
    (local.set $1
     (i32.load offset=44
      (local.get $9)
     )
    )
    ;;@ silk/CNG.c:159:0
    (local.set $0
     (i32.load offset=36
      (local.get $9)
     )
    )
    ;;@ silk/CNG.c:161:0
    (local.set $10
     (i32.const 0)
    )
    (local.set $11
     (i32.load offset=28
      (local.get $9)
     )
    )
    (loop $while-in14
     ;;@ silk/CNG.c:153:0
     (local.set $45
      (i32.add
       (local.get $10)
       (i32.const 16)
      )
     )
     (local.set $6
      (i32.shr_s
       (local.get $5)
       (i32.const 16)
      )
     )
     (local.set $46
      (i32.mul
       (local.get $6)
       (local.get $24)
      )
     )
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (local.set $5
      (i32.mul
       (local.get $5)
       (local.get $24)
      )
     )
     (local.set $47
      (i32.shr_s
       (local.get $5)
       (i32.const 16)
      )
     )
     ;;@ silk/CNG.c:154:0
     (local.set $5
      (i32.add
       (local.get $10)
       (i32.const 14)
      )
     )
     (local.set $5
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $9)
      )
     )
     (local.set $13
      (i32.load
       (local.get $5)
      )
     )
     (local.set $5
      (i32.shr_s
       (local.get $13)
       (i32.const 16)
      )
     )
     (local.set $48
      (i32.mul
       (local.get $5)
       (local.get $25)
      )
     )
     (local.set $5
      (i32.and
       (local.get $13)
       (i32.const 65535)
      )
     )
     (local.set $5
      (i32.mul
       (local.get $5)
       (local.get $25)
      )
     )
     (local.set $49
      (i32.shr_s
       (local.get $5)
       (i32.const 16)
      )
     )
     ;;@ silk/CNG.c:155:0
     (local.set $5
      (i32.shr_s
       (local.get $4)
       (i32.const 16)
      )
     )
     (local.set $50
      (i32.mul
       (local.get $5)
       (local.get $26)
      )
     )
     (local.set $4
      (i32.and
       (local.get $4)
       (i32.const 65535)
      )
     )
     (local.set $4
      (i32.mul
       (local.get $4)
       (local.get $26)
      )
     )
     (local.set $51
      (i32.shr_s
       (local.get $4)
       (i32.const 16)
      )
     )
     ;;@ silk/CNG.c:156:0
     (local.set $4
      (i32.add
       (local.get $10)
       (i32.const 12)
      )
     )
     (local.set $4
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (local.get $9)
      )
     )
     (local.set $8
      (i32.load
       (local.get $4)
      )
     )
     (local.set $4
      (i32.shr_s
       (local.get $8)
       (i32.const 16)
      )
     )
     (local.set $52
      (i32.mul
       (local.get $4)
       (local.get $27)
      )
     )
     (local.set $4
      (i32.and
       (local.get $8)
       (i32.const 65535)
      )
     )
     (local.set $4
      (i32.mul
       (local.get $4)
       (local.get $27)
      )
     )
     (local.set $53
      (i32.shr_s
       (local.get $4)
       (i32.const 16)
      )
     )
     ;;@ silk/CNG.c:157:0
     (local.set $4
      (i32.shr_s
       (local.get $1)
       (i32.const 16)
      )
     )
     (local.set $17
      (i32.mul
       (local.get $4)
       (local.get $28)
      )
     )
     (local.set $1
      (i32.and
       (local.get $1)
       (i32.const 65535)
      )
     )
     (local.set $1
      (i32.mul
       (local.get $1)
       (local.get $28)
      )
     )
     (local.set $18
      (i32.shr_s
       (local.get $1)
       (i32.const 16)
      )
     )
     ;;@ silk/CNG.c:158:0
     (local.set $1
      (i32.add
       (local.get $10)
       (i32.const 10)
      )
     )
     (local.set $1
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $9)
      )
     )
     (local.set $7
      (i32.load
       (local.get $1)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $7)
       (i32.const 16)
      )
     )
     (local.set $19
      (i32.mul
       (local.get $1)
       (local.get $29)
      )
     )
     (local.set $1
      (i32.and
       (local.get $7)
       (i32.const 65535)
      )
     )
     (local.set $1
      (i32.mul
       (local.get $1)
       (local.get $29)
      )
     )
     (local.set $20
      (i32.shr_s
       (local.get $1)
       (i32.const 16)
      )
     )
     ;;@ silk/CNG.c:159:0
     (local.set $1
      (i32.shr_s
       (local.get $0)
       (i32.const 16)
      )
     )
     (local.set $21
      (i32.mul
       (local.get $1)
       (local.get $30)
      )
     )
     (local.set $0
      (i32.and
       (local.get $0)
       (i32.const 65535)
      )
     )
     (local.set $0
      (i32.mul
       (local.get $0)
       (local.get $30)
      )
     )
     (local.set $22
      (i32.shr_s
       (local.get $0)
       (i32.const 16)
      )
     )
     ;;@ silk/CNG.c:160:0
     (local.set $0
      (i32.add
       (local.get $10)
       (i32.const 8)
      )
     )
     (local.set $0
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $9)
      )
     )
     (local.set $6
      (i32.load
       (local.get $0)
      )
     )
     (local.set $0
      (i32.shr_s
       (local.get $6)
       (i32.const 16)
      )
     )
     (local.set $23
      (i32.mul
       (local.get $0)
       (local.get $31)
      )
     )
     (local.set $0
      (i32.and
       (local.get $6)
       (i32.const 65535)
      )
     )
     (local.set $0
      (i32.mul
       (local.get $0)
       (local.get $31)
      )
     )
     (local.set $16
      (i32.shr_s
       (local.get $0)
       (i32.const 16)
      )
     )
     ;;@ silk/CNG.c:161:0
     (local.set $0
      (i32.shr_s
       (local.get $11)
       (i32.const 16)
      )
     )
     (local.set $15
      (i32.mul
       (local.get $0)
       (local.get $32)
      )
     )
     (local.set $0
      (i32.and
       (local.get $11)
       (i32.const 65535)
      )
     )
     (local.set $0
      (i32.mul
       (local.get $0)
       (local.get $32)
      )
     )
     (local.set $5
      (i32.shr_s
       (local.get $0)
       (i32.const 16)
      )
     )
     ;;@ silk/CNG.c:162:0
     (local.set $0
      (i32.add
       (local.get $10)
       (i32.const 6)
      )
     )
     (local.set $0
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $9)
      )
     )
     (local.set $1
      (i32.load
       (local.get $0)
      )
     )
     (local.set $0
      (i32.shr_s
       (local.get $1)
       (i32.const 16)
      )
     )
     (local.set $4
      (i32.mul
       (local.get $0)
       (local.get $33)
      )
     )
     (local.set $0
      (i32.and
       (local.get $1)
       (i32.const 65535)
      )
     )
     (local.set $0
      (i32.mul
       (local.get $0)
       (local.get $33)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $0)
       (i32.const 16)
      )
     )
     (local.set $0
      (i32.add
       (local.get $42)
       (local.get $46)
      )
     )
     ;;@ silk/CNG.c:161:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $47)
      )
     )
     ;;@ silk/CNG.c:160:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $48)
      )
     )
     ;;@ silk/CNG.c:159:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $49)
      )
     )
     ;;@ silk/CNG.c:158:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $50)
      )
     )
     ;;@ silk/CNG.c:157:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $51)
      )
     )
     ;;@ silk/CNG.c:156:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $52)
      )
     )
     ;;@ silk/CNG.c:155:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $53)
      )
     )
     ;;@ silk/CNG.c:154:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $17)
      )
     )
     ;;@ silk/CNG.c:153:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $18)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $19)
      )
     )
     ;;@ silk/CNG.c:154:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $20)
      )
     )
     ;;@ silk/CNG.c:155:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $21)
      )
     )
     ;;@ silk/CNG.c:156:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $22)
      )
     )
     ;;@ silk/CNG.c:157:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $23)
      )
     )
     ;;@ silk/CNG.c:158:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $16)
      )
     )
     ;;@ silk/CNG.c:159:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $15)
      )
     )
     ;;@ silk/CNG.c:160:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $5)
      )
     )
     ;;@ silk/CNG.c:161:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $4)
      )
     )
     ;;@ silk/CNG.c:162:0
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $1)
      )
     )
     (if
      (local.get $43)
      (block
       ;;@ silk/CNG.c:164:0
       (local.set $1
        (i32.add
         (local.get $10)
         (i32.const 5)
        )
       )
       (local.set $1
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $9)
        )
       )
       (local.set $4
        (i32.load
         (local.get $1)
        )
       )
       (local.set $1
        (i32.shr_s
         (local.get $4)
         (i32.const 16)
        )
       )
       (local.set $18
        (i32.mul
         (local.get $1)
         (local.get $34)
        )
       )
       (local.set $1
        (i32.and
         (local.get $4)
         (i32.const 65535)
        )
       )
       (local.set $1
        (i32.mul
         (local.get $1)
         (local.get $34)
        )
       )
       (local.set $19
        (i32.shr_s
         (local.get $1)
         (i32.const 16)
        )
       )
       ;;@ silk/CNG.c:165:0
       (local.set $1
        (i32.add
         (local.get $10)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $9)
        )
       )
       (local.set $4
        (i32.load
         (local.get $1)
        )
       )
       (local.set $1
        (i32.shr_s
         (local.get $4)
         (i32.const 16)
        )
       )
       (local.set $20
        (i32.mul
         (local.get $1)
         (local.get $35)
        )
       )
       (local.set $1
        (i32.and
         (local.get $4)
         (i32.const 65535)
        )
       )
       (local.set $1
        (i32.mul
         (local.get $1)
         (local.get $35)
        )
       )
       (local.set $21
        (i32.shr_s
         (local.get $1)
         (i32.const 16)
        )
       )
       ;;@ silk/CNG.c:166:0
       (local.set $1
        (i32.add
         (local.get $10)
         (i32.const 3)
        )
       )
       (local.set $1
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $9)
        )
       )
       (local.set $4
        (i32.load
         (local.get $1)
        )
       )
       (local.set $1
        (i32.shr_s
         (local.get $4)
         (i32.const 16)
        )
       )
       (local.set $22
        (i32.mul
         (local.get $1)
         (local.get $36)
        )
       )
       (local.set $1
        (i32.and
         (local.get $4)
         (i32.const 65535)
        )
       )
       (local.set $1
        (i32.mul
         (local.get $1)
         (local.get $36)
        )
       )
       (local.set $23
        (i32.shr_s
         (local.get $1)
         (i32.const 16)
        )
       )
       ;;@ silk/CNG.c:167:0
       (local.set $1
        (i32.add
         (local.get $10)
         (i32.const 2)
        )
       )
       (local.set $1
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $9)
        )
       )
       (local.set $4
        (i32.load
         (local.get $1)
        )
       )
       (local.set $1
        (i32.shr_s
         (local.get $4)
         (i32.const 16)
        )
       )
       (local.set $16
        (i32.mul
         (local.get $1)
         (local.get $37)
        )
       )
       (local.set $1
        (i32.and
         (local.get $4)
         (i32.const 65535)
        )
       )
       (local.set $1
        (i32.mul
         (local.get $1)
         (local.get $37)
        )
       )
       (local.set $15
        (i32.shr_s
         (local.get $1)
         (i32.const 16)
        )
       )
       ;;@ silk/CNG.c:168:0
       (local.set $1
        (i32.add
         (local.get $10)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $9)
        )
       )
       (local.set $4
        (i32.load
         (local.get $1)
        )
       )
       (local.set $1
        (i32.shr_s
         (local.get $4)
         (i32.const 16)
        )
       )
       (local.set $11
        (i32.mul
         (local.get $1)
         (local.get $38)
        )
       )
       (local.set $1
        (i32.and
         (local.get $4)
         (i32.const 65535)
        )
       )
       (local.set $1
        (i32.mul
         (local.get $1)
         (local.get $38)
        )
       )
       (local.set $5
        (i32.shr_s
         (local.get $1)
         (i32.const 16)
        )
       )
       ;;@ silk/CNG.c:169:0
       (local.set $1
        (i32.add
         (i32.shl
          (local.get $10)
          (i32.const 2)
         )
         (local.get $9)
        )
       )
       (local.set $17
        (i32.load
         (local.get $1)
        )
       )
       (local.set $1
        (i32.shr_s
         (local.get $17)
         (i32.const 16)
        )
       )
       (local.set $4
        (i32.mul
         (local.get $1)
         (local.get $39)
        )
       )
       (local.set $1
        (i32.and
         (local.get $17)
         (i32.const 65535)
        )
       )
       (local.set $1
        (i32.mul
         (local.get $1)
         (local.get $39)
        )
       )
       (local.set $1
        (i32.shr_s
         (local.get $1)
         (i32.const 16)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $18)
        )
       )
       ;;@ silk/CNG.c:168:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $19)
        )
       )
       ;;@ silk/CNG.c:167:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $20)
        )
       )
       ;;@ silk/CNG.c:166:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $21)
        )
       )
       ;;@ silk/CNG.c:165:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $22)
        )
       )
       ;;@ silk/CNG.c:164:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $23)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $16)
        )
       )
       ;;@ silk/CNG.c:165:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $15)
        )
       )
       ;;@ silk/CNG.c:166:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $11)
        )
       )
       ;;@ silk/CNG.c:167:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $5)
        )
       )
       ;;@ silk/CNG.c:168:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $4)
        )
       )
       ;;@ silk/CNG.c:169:0
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $1)
        )
       )
      )
     )
     ;;@ silk/CNG.c:173:0
     (local.set $4
      (i32.add
       (i32.shl
        (local.get $45)
        (i32.const 2)
       )
       (local.get $9)
      )
     )
     (local.set $5
      (i32.load
       (local.get $4)
      )
     )
     (local.set $1
      (i32.gt_s
       (local.get $0)
       (i32.const -134217728)
      )
     )
     (local.set $1
      (select
       (local.get $0)
       (i32.const -134217728)
       (local.get $1)
      )
     )
     (local.set $0
      (i32.lt_s
       (local.get $1)
       (i32.const 134217727)
      )
     )
     (local.set $0
      (select
       (local.get $1)
       (i32.const 134217727)
       (local.get $0)
      )
     )
     (local.set $0
      (i32.shl
       (local.get $0)
       (i32.const 4)
      )
     )
     (local.set $1
      (i32.add
       (local.get $0)
       (local.get $5)
      )
     )
     (local.set $5
      (if (result i32)
       (i32.gt_s
        (local.get $1)
        (i32.const -1)
       )
       (block (result i32)
        (local.set $0
         (i32.and
          (local.get $0)
          (local.get $5)
         )
        )
        (local.set $0
         (i32.lt_s
          (local.get $0)
          (i32.const 0)
         )
        )
        (select
         (i32.const -2147483648)
         (local.get $1)
         (local.get $0)
        )
       )
       (block (result i32)
        (local.set $0
         (i32.or
          (local.get $0)
          (local.get $5)
         )
        )
        (local.set $0
         (i32.gt_s
          (local.get $0)
          (i32.const -1)
         )
        )
        (select
         (i32.const 2147483647)
         (local.get $1)
         (local.get $0)
        )
       )
      )
     )
     (i32.store
      (local.get $4)
      (local.get $5)
     )
     ;;@ silk/CNG.c:176:0
     (local.set $15
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 1)
       )
       (local.get $2)
      )
     )
     (local.set $11
      (i32.load16_s
       (local.get $15)
      )
     )
     (local.set $0
      (i32.shr_s
       (local.get $5)
       (i32.const 16)
      )
     )
     (local.set $4
      (i32.mul
       (local.get $0)
       (local.get $40)
      )
     )
     (local.set $0
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (local.set $0
      (i32.mul
       (local.get $0)
       (local.get $40)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $0)
       (i32.const 16)
      )
     )
     (local.set $0
      (i32.mul
       (local.get $5)
       (local.get $44)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $4)
      )
     )
     (local.set $16
      (i32.add
       (local.get $0)
       (local.get $1)
      )
     )
     (local.set $0
      (i32.shr_s
       (local.get $16)
       (i32.const 7)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.set $4
      (i32.shr_s
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.gt_s
       (local.get $16)
       (i32.const 8388479)
      )
     )
     (local.set $0
      (i32.lt_s
       (local.get $16)
       (i32.const -8388736)
      )
     )
     (local.set $0
      (select
       (i32.const -32768)
       (local.get $4)
       (local.get $0)
      )
     )
     (local.set $0
      (select
       (i32.const 32767)
       (local.get $0)
       (local.get $1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $0)
       (local.get $11)
      )
     )
     (local.set $0
      (i32.gt_s
       (local.get $1)
       (i32.const -32768)
      )
     )
     (local.set $1
      (select
       (local.get $1)
       (i32.const -32768)
       (local.get $0)
      )
     )
     (local.set $0
      (i32.lt_s
       (local.get $1)
       (i32.const 32767)
      )
     )
     (local.set $0
      (select
       (local.get $1)
       (i32.const 32767)
       (local.get $0)
      )
     )
     (local.set $0
      (i32.and
       (local.get $0)
       (i32.const 65535)
      )
     )
     (i32.store16
      (local.get $15)
      (local.get $0)
     )
     ;;@ silk/CNG.c:150:0
     (local.set $0
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (if
      (i32.ne
       (local.get $0)
       (local.get $3)
      )
      (block
       (local.set $10
        (local.get $0)
       )
       (local.set $4
        (local.get $13)
       )
       (local.set $1
        (local.get $8)
       )
       (local.set $0
        (local.get $7)
       )
       (local.set $11
        (local.get $6)
       )
       (br $while-in14)
      )
     )
    )
   )
  )
  ;;@ silk/CNG.c:179:0
  (i64.store align=4
   (local.get $14)
   (i64.load align=4
    (local.tee $0
     (i32.add
      (i32.shl
       (local.get $3)
       (i32.const 2)
      )
      (local.get $9)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $14)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $14)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $14)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $14)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $14)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $14)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=56 align=4
   (local.get $14)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  ;;@ silk/CNG.c:180:0
  (call $_llvm_stackrestore
   (local.get $41)
  )
  (global.set $STACKTOP
   (local.get $12)
  )
 )
 (func $_silk_decode_signs (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  ;;@ silk/code_signs.c:89:0
  (i32.store8 offset=1
   (local.get $8)
   (i32.const 0)
  )
  ;;@ silk/code_signs.c:91:0
  (local.set $3
   (i32.shl
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.add
    (local.get $3)
    (local.get $4)
   )
  )
  (local.set $3
   (i32.shl
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.mul
    (local.get $3)
    (i32.const 7)
   )
  )
  ;;@ silk/code_signs.c:92:0
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 26432)
   )
  )
  ;;@ silk/code_signs.c:93:0
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (local.set $9
   (i32.shr_s
    (local.get $3)
    (i32.const 4)
   )
  )
  (if
   ;;@ silk/code_signs.c:94:0
   (i32.le_s
    (local.get $2)
    (i32.const 7)
   )
   (block
    (global.set $STACKTOP
     (local.get $8)
    )
    ;;@ silk/code_signs.c:115:0
    (return)
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in
   ;;@ silk/code_signs.c:95:0
   (local.set $2
    (i32.add
     (i32.shl
      (local.get $3)
      (i32.const 2)
     )
     (local.get $5)
    )
   )
   (local.set $2
    (i32.load
     (local.get $2)
    )
   )
   (if
    ;;@ silk/code_signs.c:96:0
    (i32.gt_s
     (local.get $2)
     (i32.const 0)
    )
    (block
     ;;@ silk/code_signs.c:97:0
     (local.set $2
      (i32.and
       (local.get $2)
       (i32.const 31)
      )
     )
     (local.set $6
      (i32.lt_u
       (local.get $2)
       (i32.const 6)
      )
     )
     (local.set $2
      (select
       (local.get $2)
       (i32.const 6)
       (local.get $6)
      )
     )
     (local.set $2
      (i32.add
       (local.get $2)
       (local.get $4)
      )
     )
     (local.set $2
      (i32.load8_s
       (local.get $2)
      )
     )
     (i32.store8
      (local.get $8)
      (local.get $2)
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $2
      (i32.load16_s
       (local.get $1)
      )
     )
     (if
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $2
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $2
        (i32.shl
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
       (local.set $6
        (i32.load16_s
         (local.get $1)
        )
       )
       (local.set $2
        (i32.mul
         (local.get $2)
         (local.get $6)
        )
       )
       (local.set $2
        (i32.and
         (local.get $2)
         (i32.const 65535)
        )
       )
       (i32.store16
        (local.get $1)
        (local.get $2)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $2
      (local.get $1)
     )
     (local.set $6
      (i32.load16_s offset=2
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=2
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=2
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=4
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=4
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=4
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=6
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=6
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=6
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=8
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=8
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=8
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=10
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=10
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=10
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=12
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=12
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=12
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=14
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=14
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=14
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=16
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=16
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=16
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=18
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=18
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=18
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=20
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=20
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=20
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=22
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=22
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=22
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=24
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=24
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=24
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=26
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=26
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=26
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $6
      (i32.load16_s offset=28
       (local.get $2)
      )
     )
     (if
      (i32.gt_s
       (local.get $6)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $6
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $6
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const -1)
        )
       )
       (local.set $7
        (i32.load16_s offset=28
         (local.get $2)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=28
        (local.get $2)
        (local.get $6)
       )
      )
     )
     ;;@ silk/code_signs.c:99:0
     (local.set $2
      (i32.load16_s offset=30
       (local.get $1)
      )
     )
     (if
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       ;;@ silk/code_signs.c:108:0
       (local.set $2
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $8)
         (i32.const 8)
        )
       )
       (local.set $2
        (i32.shl
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
       (local.set $6
        (i32.load16_s offset=30
         (local.get $1)
        )
       )
       (local.set $2
        (i32.mul
         (local.get $2)
         (local.get $6)
        )
       )
       (local.set $2
        (i32.and
         (local.get $2)
         (i32.const 65535)
        )
       )
       (i32.store16 offset=30
        (local.get $1)
        (local.get $2)
       )
      )
     )
    )
   )
   ;;@ silk/code_signs.c:113:0
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 32)
    )
   )
   ;;@ silk/code_signs.c:94:0
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.lt_s
     (local.get $3)
     (local.get $9)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_silk_init_decoder (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  ;;@ silk/init_decoder.c:42:0
  (drop
   (call $_memset
    (local.get $1)
    (i32.const 0)
    (i32.const 4260)
   )
  )
  ;;@ silk/init_decoder.c:45:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 2376)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 1)
  )
  ;;@ silk/init_decoder.c:46:0
  (i32.store
   (local.get $0)
   (i32.const 65536)
  )
  ;;@ silk/init_decoder.c:47:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 4168)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 0)
  )
  ;;@ silk/init_decoder.c:50:0
  (call $_silk_CNG_Reset
   (local.get $0)
  )
  ;;@ silk/init_decoder.c:53:0
  (call $_silk_PLC_Reset
   (local.get $0)
  )
  ;;@ silk/init_decoder.c:55:0
  (i32.const 0)
 )
 (func $_silk_decode_core (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local.set $14
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  ;;@ silk/decode_core.c:58:0
  (local.set $5
   (i32.load
    (local.tee $22
     (i32.add
      (local.get $0)
      (i32.const 2336)
     )
    )
   )
  )
  (local.set $27
   (call $_llvm_stacksave)
  )
  (local.set $28
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $5)
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $24
   (global.get $STACKTOP)
  )
  ;;@ silk/decode_core.c:59:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.add
        (local.tee $5
         (i32.load
          (local.tee $13
           (i32.add
            (local.get $0)
            (i32.const 2328)
           )
          )
         )
        )
        (i32.load
         (local.get $22)
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $29
   (global.get $STACKTOP)
  )
  ;;@ silk/decode_core.c:60:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.tee $7
        (i32.load
         (local.tee $23
          (i32.add
           (local.get $0)
           (i32.const 2332)
          )
         )
        )
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  ;;@ silk/decode_core.c:61:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $7)
       (i32.const 2)
      )
      (i32.const 79)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ silk/decode_core.c:63:0
  (local.set $30
   (i32.add
    (local.get $0)
    (i32.const 2765)
   )
  )
  ;;@ silk/decode_core.c:65:0
  (local.set $11
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.const 2767)
    )
   )
  )
  (if
   ;;@ silk/decode_core.c:73:0
   (i32.gt_s
    (local.get $5)
    (i32.const 0)
   )
   (block
    ;;@ silk/decode_core.c:72:0
    (local.set $5
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 2770)
      )
     )
    )
    ;;@ silk/decode_core.c:63:0
    (local.set $16
     (i32.shl
      (i32.load16_s
       (i32.add
        (i32.add
         (i32.shl
          (i32.shr_s
           (i32.load8_s
            (local.get $30)
           )
           (i32.const 1)
          )
          (i32.const 2)
         )
         (i32.const 40756)
        )
        (i32.shl
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 2766)
          )
         )
         (i32.const 1)
        )
       )
      )
      (i32.const 4)
     )
    )
    (loop $while-in
     ;;@ silk/decode_core.c:74:0
     (local.set $4
      (i32.add
       (i32.mul
        (local.get $5)
        (i32.const 196314165)
       )
       (i32.const 907633515)
      )
     )
     ;;@ silk/decode_core.c:75:0
     (local.set $7
      (local.tee $5
       (i32.load16_s
        (i32.add
         (i32.shl
          (local.get $18)
          (i32.const 1)
         )
         (local.get $3)
        )
       )
      )
     )
     (i32.store
      (local.tee $20
       (i32.add
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
        (i32.shl
         (local.get $18)
         (i32.const 2)
        )
       )
      )
      (local.tee $5
       (i32.shl
        (local.get $5)
        (i32.const 14)
       )
      )
     )
     (block $__rjto$0
      (block $__rjti$0
       (if
        ;;@ silk/decode_core.c:76:0
        (i32.gt_s
         (local.get $7)
         (i32.const 0)
        )
        (block
         ;;@ silk/decode_core.c:77:0
         (local.set $5
          (i32.add
           (local.get $5)
           (i32.const -1280)
          )
         )
         (br $__rjti$0)
        )
        (if
         ;;@ silk/decode_core.c:79:0
         (i32.lt_s
          (local.get $7)
          (i32.const 0)
         )
         (block
          ;;@ silk/decode_core.c:80:0
          (local.set $5
           (i32.or
            (local.get $5)
            (i32.const 1280)
           )
          )
          (br $__rjti$0)
         )
        )
       )
       (br $__rjto$0)
      )
      (i32.store
       (local.get $20)
       (local.get $5)
      )
     )
     ;;@ silk/decode_core.c:83:0
     (i32.store
      (local.get $20)
      (select
       (i32.sub
        (i32.const 0)
        ;;@ silk/decode_core.c:82:0
        (local.tee $5
         (i32.add
          (local.get $5)
          (local.get $16)
         )
        )
       )
       (local.get $5)
       (i32.lt_s
        (local.get $4)
        (i32.const 0)
       )
      )
     )
     ;;@ silk/decode_core.c:87:0
     (local.set $5
      (i32.add
       (local.get $4)
       (local.get $7)
      )
     )
     ;;@ silk/decode_core.c:73:0
     (br_if $while-in
      (i32.lt_s
       (local.tee $18
        (i32.add
         (local.get $18)
         (i32.const 1)
        )
       )
       (i32.load
        (local.get $13)
       )
      )
     )
    )
   )
  )
  ;;@ silk/decode_core.c:91:0
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.tee $13
     (i32.add
      (local.get $0)
      (i32.const 1284)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $6)
   (i64.load offset=8 align=4
    (local.get $13)
   )
  )
  (i64.store offset=16 align=4
   (local.get $6)
   (i64.load offset=16 align=4
    (local.get $13)
   )
  )
  (i64.store offset=24 align=4
   (local.get $6)
   (i64.load offset=24 align=4
    (local.get $13)
   )
  )
  (i64.store offset=32 align=4
   (local.get $6)
   (i64.load offset=32 align=4
    (local.get $13)
   )
  )
  (i64.store offset=40 align=4
   (local.get $6)
   (i64.load offset=40 align=4
    (local.get $13)
   )
  )
  (i64.store offset=48 align=4
   (local.get $6)
   (i64.load offset=48 align=4
    (local.get $13)
   )
  )
  (i64.store offset=56 align=4
   (local.get $6)
   (i64.load offset=56 align=4
    (local.get $13)
   )
  )
  (if
   ;;@ silk/decode_core.c:97:0
   (i32.le_s
    (i32.load
     (local.tee $32
      (i32.add
       (local.get $0)
       (i32.const 2324)
      )
     )
    )
    (i32.const 0)
   )
   (block
    (i64.store align=4
     (local.get $13)
     (i64.load align=4
      (local.get $6)
     )
    )
    (i64.store offset=8 align=4
     (local.get $13)
     (i64.load offset=8 align=4
      (local.get $6)
     )
    )
    (i64.store offset=16 align=4
     (local.get $13)
     (i64.load offset=16 align=4
      (local.get $6)
     )
    )
    (i64.store offset=24 align=4
     (local.get $13)
     (i64.load offset=24 align=4
      (local.get $6)
     )
    )
    (i64.store offset=32 align=4
     (local.get $13)
     (i64.load offset=32 align=4
      (local.get $6)
     )
    )
    (i64.store offset=40 align=4
     (local.get $13)
     (i64.load offset=40 align=4
      (local.get $6)
     )
    )
    (i64.store offset=48 align=4
     (local.get $13)
     (i64.load offset=48 align=4
      (local.get $6)
     )
    )
    ;;@ silk/decode_core.c:235:0
    (i64.store offset=56 align=4
     (local.get $13)
     (i64.load offset=56 align=4
      (local.get $6)
     )
    )
    ;;@ silk/decode_core.c:237:0
    (call $_llvm_stackrestore
     (local.get $27)
    )
    (global.set $STACKTOP
     (local.get $14)
    )
    (return)
   )
  )
  ;;@ silk/decode_core.c:65:0
  (local.set $33
   (i32.lt_s
    (local.get $11)
    (i32.const 4)
   )
  )
  ;;@ silk/decode_core.c:95:0
  (local.set $3
   (i32.load
    (local.get $22)
   )
  )
  ;;@ silk/decode_core.c:93:0
  (local.set $25
   (i32.add
    (local.get $0)
    (i32.const 2340)
   )
  )
  (local.set $34
   (i32.add
    (local.get $0)
    (i32.const 4160)
   )
  )
  (local.set $35
   (i32.add
    (local.get $0)
    (i32.const 4164)
   )
  )
  (local.set $36
   (i32.add
    (local.get $0)
    (i32.const 2308)
   )
  )
  (local.set $18
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  (local.set $16
   (i32.const 0)
  )
  (local.set $20
   (local.get $2)
  )
  ;;@ silk/decode_core.c:237:0
  (block $__rjto$6
   (block $__rjti$6
    (block $__rjti$5
     (loop $label$continue$L16
      (block $__rjti$4
       ;;@ silk/decode_core.c:102:0
       (drop
        (call $_memcpy
         (local.get $14)
         ;;@ silk/decode_core.c:99:0
         (local.tee $21
          (i32.add
           (i32.add
            (local.get $1)
            (i32.const 32)
           )
           (i32.shl
            (i32.shr_u
             (local.get $16)
             (i32.const 1)
            )
            (i32.const 5)
           )
          )
         )
         (i32.shl
          (i32.load
           (local.get $25)
          )
          (i32.const 1)
         )
        )
       )
       ;;@ silk/decode_core.c:103:0
       (local.set $12
        (i32.add
         (i32.add
          (local.get $1)
          (i32.const 96)
         )
         (i32.shl
          (i32.mul
           (local.get $16)
           (i32.const 5)
          )
          (i32.const 1)
         )
        )
       )
       ;;@ silk/decode_core.c:104:0
       (local.set $15
        (i32.load8_s
         (local.get $30)
        )
       )
       ;;@ silk/decode_core.c:106:0
       (local.set $37
        (i32.shr_u
         (local.tee $10
          (i32.load
           (i32.add
            (i32.add
             (local.get $1)
             (i32.const 16)
            )
            (i32.shl
             (local.get $16)
             (i32.const 2)
            )
           )
          )
         )
         (i32.const 6)
        )
       )
       ;;@ ./silk/Inlines.h:168:0
       (local.set $7
        (i32.add
         (i32.shr_s
          (i32.mul
           ;;@ ./silk/Inlines.h:165:0
           (local.tee $5
            (i32.shr_s
             ;;@ ./silk/Inlines.h:162:0
             (local.tee $8
              (i32.shl
               ;;@ ./silk/Inlines.h:159:0
               (local.tee $4
                (i32.div_s
                 (i32.const 536870911)
                 (local.tee $7
                  (i32.shr_s
                   ;;@ ./silk/Inlines.h:156:0
                   (local.tee $9
                    (i32.shl
                     (local.get $10)
                     (i32.add
                      ;;@ ./silk/macros.h:122:0
                      (local.tee $11
                       (i32.clz
                        (select
                         (local.get $10)
                         (i32.sub
                          (i32.const 0)
                          (local.get $10)
                         )
                         (i32.gt_s
                          (local.get $10)
                          (i32.const 0)
                         )
                        )
                       )
                      )
                      (i32.const -1)
                     )
                    )
                   )
                   (i32.const 16)
                  )
                 )
                )
               )
               (i32.const 16)
              )
             )
             (i32.const 16)
            )
           )
           (i32.and
            ;;@ ./silk/Inlines.h:165:0
            (local.tee $7
             (i32.sub
              (i32.const 0)
              (i32.shl
               (i32.add
                (i32.mul
                 (local.get $5)
                 (local.get $7)
                )
                (i32.shr_s
                 (i32.mul
                  (i32.and
                   (local.get $9)
                   (i32.const 65535)
                  )
                  (local.get $5)
                 )
                 (i32.const 16)
                )
               )
               (i32.const 3)
              )
             )
            )
            (i32.const 65528)
           )
          )
          (i32.const 16)
         )
         (i32.add
          (i32.add
           (i32.mul
            (i32.shr_s
             (i32.add
              (i32.shr_s
               (local.get $4)
               (i32.const 15)
              )
              (i32.const 1)
             )
             (i32.const 1)
            )
            (local.get $7)
           )
           (local.get $8)
          )
          (i32.mul
           (i32.shr_s
            (local.get $7)
            (i32.const 16)
           )
           (local.get $5)
          )
         )
        )
       )
       (local.set $7
        (if (result i32)
         ;;@ ./silk/Inlines.h:172:0
         (i32.lt_s
          ;;@ ./silk/Inlines.h:171:0
          (local.tee $4
           (i32.sub
            (i32.const 62)
            (local.get $11)
           )
          )
          (i32.const 48)
         )
         (block (result i32)
          ;;@ ./silk/Inlines.h:173:0
          (local.set $19
           (i32.gt_s
            (local.tee $8
             (i32.shr_s
              (i32.const -2147483648)
              (local.tee $4
               (i32.sub
                (i32.const 47)
                (local.get $4)
               )
              )
             )
            )
            (local.tee $17
             (i32.shr_u
              (i32.const 2147483647)
              (local.get $4)
             )
            )
           )
          )
          (i32.shl
           (select
            (local.tee $26
             (select
              (local.get $8)
              (local.get $17)
              (local.get $19)
             )
            )
            (select
             (local.tee $8
              (select
               (local.get $17)
               (local.get $8)
               (local.get $19)
              )
             )
             (local.get $7)
             (i32.lt_s
              (local.get $7)
              (local.get $8)
             )
            )
            (i32.gt_s
             (local.get $7)
             (local.get $26)
            )
           )
           (local.get $4)
          )
         )
         ;;@ ./silk/Inlines.h:175:0
         (select
          (i32.shr_s
           (local.get $7)
           (i32.add
            (local.get $4)
            (i32.const -47)
           )
          )
          (i32.const 0)
          (i32.lt_s
           (local.get $4)
           (i32.const 79)
          )
         )
        )
       )
       (local.set $4
        (if (result i32)
         ;;@ silk/decode_core.c:110:0
         (i32.eq
          (local.tee $4
           (i32.load
            (local.get $0)
           )
          )
          (local.get $10)
         )
         (i32.const 65536)
         (block (result i32)
          ;;@ ./silk/Inlines.h:119:0
          (local.set $8
           (i32.add
            (i32.mul
             (i32.shr_s
              ;;@ ./silk/Inlines.h:111:0
              (local.tee $4
               (i32.shl
                (local.get $4)
                (i32.add
                 ;;@ ./silk/macros.h:122:0
                 (local.tee $17
                  (i32.clz
                   (select
                    (local.get $4)
                    (i32.sub
                     (i32.const 0)
                     (local.get $4)
                    )
                    (i32.gt_s
                     (local.get $4)
                     (i32.const 0)
                    )
                   )
                  )
                 )
                 (i32.const -1)
                )
               )
              )
              (i32.const 16)
             )
             (local.get $5)
            )
            (i32.shr_s
             (i32.mul
              (i32.and
               (local.get $4)
               (i32.const 65535)
              )
              (local.get $5)
             )
             (i32.const 16)
            )
           )
          )
          ;;@ ./silk/Inlines.h:126:0
          (local.set $5
           (i32.add
            (i32.shr_s
             (i32.mul
              (i32.and
               ;;@ ./silk/Inlines.h:123:0
               (local.tee $4
                (i32.sub
                 (local.get $4)
                 (i32.and
                  (i32.wrap_i64
                   (i64.shr_u
                    (i64.mul
                     (i64.extend_i32_s
                      (local.get $8)
                     )
                     (i64.extend_i32_s
                      (local.get $9)
                     )
                    )
                    (i64.const 29)
                   )
                  )
                  (i32.const -8)
                 )
                )
               )
               (i32.const 65535)
              )
              (local.get $5)
             )
             (i32.const 16)
            )
            (i32.add
             (i32.mul
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
              (local.get $5)
             )
             (local.get $8)
            )
           )
          )
          ;;@ silk/decode_core.c:115:0
          (i32.store
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $4
               (i32.shr_s
                (local.tee $5
                 (if (result i32)
                  ;;@ ./silk/Inlines.h:130:0
                  (i32.lt_s
                   ;;@ ./silk/Inlines.h:129:0
                   (local.tee $4
                    (i32.add
                     (i32.sub
                      (i32.const 29)
                      (local.get $11)
                     )
                     (local.get $17)
                    )
                   )
                   (i32.const 16)
                  )
                  (block (result i32)
                   ;;@ ./silk/Inlines.h:131:0
                   (local.set $8
                    (i32.gt_s
                     (local.tee $11
                      (i32.shr_s
                       (i32.const -2147483648)
                       (local.tee $4
                        (i32.sub
                         (i32.const 16)
                         (local.get $4)
                        )
                       )
                      )
                     )
                     (local.tee $9
                      (i32.shr_u
                       (i32.const 2147483647)
                       (local.get $4)
                      )
                     )
                    )
                   )
                   (i32.shl
                    (select
                     (local.tee $17
                      (select
                       (local.get $11)
                       (local.get $9)
                       (local.get $8)
                      )
                     )
                     (select
                      (local.tee $11
                       (select
                        (local.get $9)
                        (local.get $11)
                        (local.get $8)
                       )
                      )
                      (local.get $5)
                      (i32.lt_s
                       (local.get $5)
                       (local.get $11)
                      )
                     )
                     (i32.gt_s
                      (local.get $5)
                      (local.get $17)
                     )
                    )
                    (local.get $4)
                   )
                  )
                  ;;@ ./silk/Inlines.h:133:0
                  (select
                   (i32.shr_s
                    (local.get $5)
                    (i32.add
                     (local.get $4)
                     (i32.const -16)
                    )
                   )
                   (i32.const 0)
                   (i32.lt_s
                    (local.get $4)
                    (i32.const 48)
                   )
                  )
                 )
                )
                (i32.const 16)
               )
              )
              ;;@ silk/decode_core.c:115:0
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.tee $11
                (i32.and
                 (local.get $5)
                 (i32.const 65535)
                )
               )
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=4
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=4
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=8
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=8
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=12
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=12
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=16
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=16
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=20
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=20
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=24
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=24
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=28
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=28
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=32
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=32
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=36
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=36
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=40
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=40
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=44
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=44
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=48
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=48
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=52
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=52
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=56
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.tee $8
               (i32.shr_s
                (i32.shl
                 (local.tee $9
                  (i32.load offset=56
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
              (local.get $4)
             )
             (i32.shr_s
              (i32.mul
               (local.get $8)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $9)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (i32.store offset=60
           (local.get $6)
           (i32.add
            (i32.add
             (i32.mul
              (local.get $4)
              (local.tee $9
               (i32.shr_s
                (i32.shl
                 (local.tee $4
                  (i32.load offset=60
                   (local.get $6)
                  )
                 )
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
             )
             (i32.shr_s
              (i32.mul
               (local.get $9)
               (local.get $11)
              )
              (i32.const 16)
             )
            )
            (i32.mul
             (i32.shr_s
              (i32.add
               (i32.shr_s
                (local.get $4)
                (i32.const 15)
               )
               (i32.const 1)
              )
              (i32.const 1)
             )
             (local.get $5)
            )
           )
          )
          (local.get $5)
         )
        )
       )
       ;;@ silk/decode_core.c:123:0
       (i32.store
        (local.get $0)
        (local.get $10)
       )
       (block $label$break$L60
        (block $__rjti$3
         (block $__rjti$2
          (if
           ;;@ silk/decode_core.c:126:0
           (i32.load
            (local.get $34)
           )
           (if
            (i32.eq
             (i32.load
              (local.get $35)
             )
             (i32.const 2)
            )
            (if
             ;;@ silk/decode_core.c:127:0
             (i32.and
              (i32.ne
               (local.get $15)
               (i32.const 2)
              )
              (i32.lt_u
               (local.get $16)
               (i32.const 2)
              )
             )
             (block
              ;;@ silk/decode_core.c:130:0
              (i64.store align=2
               (local.get $12)
               (i64.const 0)
              )
              ;;@ silk/decode_core.c:129:0
              (i32.store16 offset=8
               (local.get $12)
               (i32.const 0)
              )
              ;;@ silk/decode_core.c:130:0
              (i32.store16 offset=4
               (local.get $12)
               (i32.const 4096)
              )
              ;;@ silk/decode_core.c:133:0
              (i32.store
               (i32.add
                (i32.shl
                 (local.get $16)
                 (i32.const 2)
                )
                (local.get $1)
               )
               (local.tee $11
                (i32.load
                 (local.get $36)
                )
               )
              )
              (br $__rjti$2)
             )
            )
           )
          )
          (local.set $11
           (if (result i32)
            ;;@ silk/decode_core.c:136:0
            (i32.eq
             (local.get $15)
             (i32.const 2)
            )
            ;;@ silk/decode_core.c:138:0
            (i32.load
             (i32.add
              (i32.shl
               (local.get $16)
               (i32.const 2)
              )
              (local.get $1)
             )
            )
            (block
             ;;@ silk/decode_core.c:197:0
             (local.set $7
              (local.get $18)
             )
             (local.set $5
              (i32.load
               (local.get $23)
              )
             )
             (br $__rjti$3)
            )
           )
          )
         )
         (if
          ;;@ silk/decode_core.c:141:0
          (i32.or
           (local.tee $9
            (i32.eqz
             (local.get $16)
            )
           )
           (i32.and
            (local.tee $15
             (i32.eq
              (local.get $16)
              (i32.const 2)
             )
            )
            (local.get $33)
           )
          )
          (block
           ;;@ silk/decode_core.c:144:0
           (br_if $__rjti$4
            (i32.le_s
             ;;@ silk/decode_core.c:143:0
             (local.tee $8
              (i32.sub
               (i32.sub
                (local.tee $5
                 (i32.load
                  (local.get $22)
                 )
                )
                (local.get $11)
               )
               (local.tee $4
                (i32.load
                 (local.get $25)
                )
               )
              )
             )
             (i32.const 2)
            )
           )
           (if
            (local.get $15)
            ;;@ silk/decode_core.c:151:0
            (block
             ;;@ silk/decode_core.c:147:0
             (drop
              (call $_memcpy
               (i32.add
                (i32.add
                 (local.get $0)
                 (i32.const 1348)
                )
                (i32.shl
                 (local.get $5)
                 (i32.const 1)
                )
               )
               (local.get $2)
               (i32.shl
                (i32.load
                 (local.get $23)
                )
                (i32.const 2)
               )
              )
             )
             ;;@ silk/decode_core.c:151:0
             (local.set $4
              (i32.load
               (local.get $25)
              )
             )
             (local.set $5
              (i32.load
               (local.get $22)
              )
             )
            )
           )
           ;;@ silk/decode_core.c:150:0
           (call $_silk_LPC_analysis_filter
            (i32.add
             (i32.shl
              ;;@ silk/decode_core.c:143:0
              (local.tee $15
               (i32.add
                (local.get $8)
                (i32.const -2)
               )
              )
              (i32.const 1)
             )
             (local.get $28)
            )
            (i32.add
             (i32.add
              (local.get $0)
              (i32.const 1348)
             )
             (i32.shl
              (i32.add
               (i32.mul
                (i32.load
                 (local.get $23)
                )
                (local.get $16)
               )
               (local.get $15)
              )
              (i32.const 1)
             )
            )
            (local.get $21)
            (i32.sub
             (local.get $5)
             (local.get $15)
            )
            (local.get $4)
           )
           (if
            (local.get $9)
            ;;@ silk/decode_core.c:156:0
            (local.set $7
             (i32.shl
              (i32.add
               (i32.mul
                (local.tee $5
                 (i32.shr_s
                  (i32.shl
                   (i32.load offset=136
                    (local.get $1)
                   )
                   (i32.const 16)
                  )
                  (i32.const 16)
                 )
                )
                (i32.shr_s
                 (local.get $7)
                 (i32.const 16)
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (local.get $7)
                  (i32.const 65535)
                 )
                 (local.get $5)
                )
                (i32.const 16)
               )
              )
              (i32.const 2)
             )
            )
           )
           (if
            ;;@ silk/decode_core.c:158:0
            (i32.gt_s
             (local.get $11)
             (i32.const -2)
            )
            (block
             (local.set $15
              (i32.shr_s
               (local.get $7)
               (i32.const 16)
              )
             )
             (local.set $9
              (i32.load
               (local.get $22)
              )
             )
             (local.set $8
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.set $17
              (i32.add
               (local.get $3)
               (i32.const -1)
              )
             )
             (local.set $19
              (i32.add
               (local.get $11)
               (i32.const 1)
              )
             )
             (local.set $7
              (i32.const 0)
             )
             (local.set $5
              (i32.const 0)
             )
             (loop $while-in1
              ;;@ silk/decode_core.c:159:0
              (i32.store
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $7)
                  (local.get $17)
                 )
                 (i32.const 2)
                )
                (local.get $24)
               )
               (i32.add
                (i32.mul
                 (local.tee $7
                  (i32.load16_s
                   (i32.add
                    (i32.shl
                     (i32.add
                      (i32.add
                       (local.get $7)
                       (i32.const -1)
                      )
                      (local.get $9)
                     )
                     (i32.const 1)
                    )
                    (local.get $28)
                   )
                  )
                 )
                 (local.get $15)
                )
                (i32.shr_s
                 (i32.mul
                  (local.get $7)
                  (local.get $8)
                 )
                 (i32.const 16)
                )
               )
              )
              ;;@ silk/decode_core.c:158:0
              (local.set $4
               (i32.add
                (local.get $5)
                (i32.const 1)
               )
              )
              (local.set $7
               (i32.xor
                (local.get $5)
                (i32.const -1)
               )
              )
              (if
               (i32.ne
                (local.get $5)
                (local.get $19)
               )
               (block
                (local.set $5
                 (local.get $4)
                )
                (br $while-in1)
               )
              )
             )
            )
           )
          )
          (if
           ;;@ silk/decode_core.c:163:0
           (i32.and
            (i32.ne
             (local.get $4)
             (i32.const 65536)
            )
            (i32.gt_s
             (local.get $11)
             (i32.const -2)
            )
           )
           (block
            (local.set $15
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            (local.set $9
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
            )
            (local.set $8
             (i32.and
              (local.get $4)
              (i32.const 65535)
             )
            )
            (local.set $17
             (i32.add
              (local.get $11)
              (i32.const 1)
             )
            )
            (local.set $5
             (i32.const 0)
            )
            (loop $while-in3
             ;;@ silk/decode_core.c:165:0
             (local.set $7
              (i32.shr_s
               (i32.shl
                (local.tee $21
                 (i32.load
                  (local.tee $19
                   (i32.add
                    (i32.shl
                     (i32.sub
                      (local.get $9)
                      (local.get $5)
                     )
                     (i32.const 2)
                    )
                    (local.get $24)
                   )
                  )
                 )
                )
                (i32.const 16)
               )
               (i32.const 16)
              )
             )
             (i32.store
              (local.get $19)
              (i32.add
               (i32.add
                (i32.mul
                 (local.get $7)
                 (local.get $15)
                )
                (i32.shr_s
                 (i32.mul
                  (local.get $7)
                  (local.get $8)
                 )
                 (i32.const 16)
                )
               )
               (i32.mul
                (i32.shr_s
                 (i32.add
                  (i32.shr_s
                   (local.get $21)
                   (i32.const 15)
                  )
                  (i32.const 1)
                 )
                 (i32.const 1)
                )
                (local.get $4)
               )
              )
             )
             ;;@ silk/decode_core.c:164:0
             (local.set $7
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (if
              (i32.ne
               (local.get $5)
               (local.get $17)
              )
              (block
               (local.set $5
                (local.get $7)
               )
               (br $while-in3)
              )
             )
            )
           )
          )
         )
         (if
          ;;@ silk/decode_core.c:175:0
          (i32.gt_s
           (local.tee $5
            (i32.load
             (local.get $23)
            )
           )
           (i32.const 0)
          )
          (block
           ;;@ silk/decode_core.c:174:0
           (local.set $15
            (i32.load16_s
             (local.get $12)
            )
           )
           (local.set $9
            (i32.load16_s offset=2
             (local.get $12)
            )
           )
           (local.set $8
            (i32.load16_s offset=4
             (local.get $12)
            )
           )
           (local.set $17
            (i32.load16_s offset=6
             (local.get $12)
            )
           )
           (local.set $12
            (i32.load16_s offset=8
             (local.get $12)
            )
           )
           (local.set $7
            (i32.add
             (i32.shl
              (i32.sub
               (i32.add
                (local.get $3)
                (i32.const 2)
               )
               (local.get $11)
              )
              (i32.const 2)
             )
             (local.get $24)
            )
           )
           (local.set $4
            (i32.const 0)
           )
           (loop $while-in5
            ;;@ silk/decode_core.c:179:0
            (local.set $11
             (i32.load
              (local.get $7)
             )
            )
            ;;@ silk/decode_core.c:180:0
            (local.set $19
             (i32.load
              (i32.add
               (local.get $7)
               (i32.const -4)
              )
             )
            )
            ;;@ silk/decode_core.c:181:0
            (local.set $21
             (i32.load
              (i32.add
               (local.get $7)
               (i32.const -8)
              )
             )
            )
            ;;@ silk/decode_core.c:182:0
            (local.set $26
             (i32.load
              (i32.add
               (local.get $7)
               (i32.const -12)
              )
             )
            )
            ;;@ silk/decode_core.c:183:0
            (local.set $31
             (i32.load
              (i32.add
               (local.get $7)
               (i32.const -16)
              )
             )
            )
            ;;@ silk/decode_core.c:184:0
            (local.set $7
             (i32.add
              (local.get $7)
              (i32.const 4)
             )
            )
            ;;@ silk/decode_core.c:187:0
            (i32.store
             (i32.add
              (i32.shl
               (local.get $4)
               (i32.const 2)
              )
              (local.get $29)
             )
             (local.tee $11
              (i32.add
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $4)
                  (i32.const 2)
                 )
                 (local.get $18)
                )
               )
               (i32.shl
                (i32.add
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.add
                     (i32.add
                      (i32.add
                       (i32.add
                        (i32.add
                         (i32.add
                          (i32.mul
                           (i32.shr_s
                            (local.get $11)
                            (i32.const 16)
                           )
                           (local.get $15)
                          )
                          (i32.const 2)
                         )
                         (i32.shr_s
                          (i32.mul
                           (i32.and
                            (local.get $11)
                            (i32.const 65535)
                           )
                           (local.get $15)
                          )
                          (i32.const 16)
                         )
                        )
                        (i32.mul
                         (i32.shr_s
                          (local.get $19)
                          (i32.const 16)
                         )
                         (local.get $9)
                        )
                       )
                       (i32.shr_s
                        (i32.mul
                         (i32.and
                          (local.get $19)
                          (i32.const 65535)
                         )
                         (local.get $9)
                        )
                        (i32.const 16)
                       )
                      )
                      (i32.mul
                       (i32.shr_s
                        (local.get $21)
                        (i32.const 16)
                       )
                       (local.get $8)
                      )
                     )
                     (i32.shr_s
                      (i32.mul
                       (i32.and
                        (local.get $21)
                        (i32.const 65535)
                       )
                       (local.get $8)
                      )
                      (i32.const 16)
                     )
                    )
                    (i32.mul
                     (i32.shr_s
                      (local.get $26)
                      (i32.const 16)
                     )
                     (local.get $17)
                    )
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (local.get $26)
                      (i32.const 65535)
                     )
                     (local.get $17)
                    )
                    (i32.const 16)
                   )
                  )
                  (i32.mul
                   (i32.shr_s
                    (local.get $31)
                    (i32.const 16)
                   )
                   (local.get $12)
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (local.get $31)
                    (i32.const 65535)
                   )
                   (local.get $12)
                  )
                  (i32.const 16)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
            ;;@ silk/decode_core.c:190:0
            (i32.store
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 2)
              )
              (local.get $24)
             )
             (i32.shl
              (local.get $11)
              (i32.const 1)
             )
            )
            ;;@ silk/decode_core.c:191:0
            (local.set $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            ;;@ silk/decode_core.c:175:0
            (br_if $while-in5
             (i32.lt_s
              (local.tee $4
               (i32.add
                (local.get $4)
                (i32.const 1)
               )
              )
              (local.get $5)
             )
            )
           )
           (local.set $7
            (local.get $29)
           )
           (br $__rjti$3)
          )
         )
         (br $label$break$L60)
        )
        (if
         ;;@ silk/decode_core.c:197:0
         (i32.gt_s
          (local.get $5)
          (i32.const 0)
         )
         (block
          (local.set $11
           (i32.shr_s
            (i32.shl
             (local.get $37)
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
          (local.set $15
           (i32.shr_s
            (i32.add
             (i32.shr_s
              (local.get $10)
              (i32.const 21)
             )
             (i32.const 1)
            )
            (i32.const 1)
           )
          )
          (local.set $5
           (i32.const 0)
          )
          (local.set $5
           (loop $while-in8 (result i32)
            (block $switch
             ;;@ silk/decode_core.c:199:0
             (br_table $switch $__rjti$5 $__rjti$5 $__rjti$5 $__rjti$5 $__rjti$5 $switch $__rjti$5
              (i32.sub
               (local.tee $12
                (i32.load
                 (local.get $25)
                )
               )
               (i32.const 10)
              )
             )
            )
            ;;@ silk/decode_core.c:211:0
            (local.set $4
             (i32.add
              (i32.shr_s
               (i32.mul
                (local.tee $4
                 (i32.load16_s offset=18
                  (local.get $14)
                 )
                )
                (i32.and
                 (local.tee $10
                  (i32.load
                   (i32.add
                    (i32.shl
                     (i32.add
                      (local.get $5)
                      (i32.const 6)
                     )
                     (i32.const 2)
                    )
                    (local.get $6)
                   )
                  )
                 )
                 (i32.const 65535)
                )
               )
               (i32.const 16)
              )
              (i32.add
               (i32.mul
                (local.get $4)
                (i32.shr_s
                 (local.get $10)
                 (i32.const 16)
                )
               )
               (i32.add
                (i32.shr_s
                 (i32.mul
                  ;;@ silk/decode_core.c:210:0
                  (local.tee $4
                   (i32.load16_s offset=16
                    (local.get $14)
                   )
                  )
                  (i32.and
                   (local.tee $10
                    (i32.load
                     (i32.add
                      (i32.shl
                       (i32.add
                        (local.get $5)
                        (i32.const 7)
                       )
                       (i32.const 2)
                      )
                      (local.get $6)
                     )
                    )
                   )
                   (i32.const 65535)
                  )
                 )
                 (i32.const 16)
                )
                (i32.add
                 (i32.mul
                  (local.get $4)
                  (i32.shr_s
                   (local.get $10)
                   (i32.const 16)
                  )
                 )
                 (i32.add
                  (i32.shr_s
                   (i32.mul
                    ;;@ silk/decode_core.c:209:0
                    (local.tee $4
                     (i32.load16_s offset=14
                      (local.get $14)
                     )
                    )
                    (i32.and
                     (local.tee $10
                      (i32.load
                       (i32.add
                        (i32.shl
                         (i32.add
                          (local.get $5)
                          (i32.const 8)
                         )
                         (i32.const 2)
                        )
                        (local.get $6)
                       )
                      )
                     )
                     (i32.const 65535)
                    )
                   )
                   (i32.const 16)
                  )
                  (i32.add
                   (i32.mul
                    (local.get $4)
                    (i32.shr_s
                     (local.get $10)
                     (i32.const 16)
                    )
                   )
                   (i32.add
                    (i32.shr_s
                     (i32.mul
                      ;;@ silk/decode_core.c:208:0
                      (local.tee $4
                       (i32.load16_s offset=12
                        (local.get $14)
                       )
                      )
                      (i32.and
                       (local.tee $10
                        (i32.load
                         (i32.add
                          (i32.shl
                           (i32.add
                            (local.get $5)
                            (i32.const 9)
                           )
                           (i32.const 2)
                          )
                          (local.get $6)
                         )
                        )
                       )
                       (i32.const 65535)
                      )
                     )
                     (i32.const 16)
                    )
                    (i32.add
                     (i32.mul
                      (local.get $4)
                      (i32.shr_s
                       (local.get $10)
                       (i32.const 16)
                      )
                     )
                     (i32.add
                      (i32.shr_s
                       (i32.mul
                        ;;@ silk/decode_core.c:207:0
                        (local.tee $4
                         (i32.load16_s offset=10
                          (local.get $14)
                         )
                        )
                        (i32.and
                         (local.tee $10
                          (i32.load
                           (i32.add
                            (i32.shl
                             (i32.add
                              (local.get $5)
                              (i32.const 10)
                             )
                             (i32.const 2)
                            )
                            (local.get $6)
                           )
                          )
                         )
                         (i32.const 65535)
                        )
                       )
                       (i32.const 16)
                      )
                      (i32.add
                       (i32.mul
                        (local.get $4)
                        (i32.shr_s
                         (local.get $10)
                         (i32.const 16)
                        )
                       )
                       (i32.add
                        (i32.shr_s
                         (i32.mul
                          ;;@ silk/decode_core.c:206:0
                          (local.tee $4
                           (i32.load16_s offset=8
                            (local.get $14)
                           )
                          )
                          (i32.and
                           (local.tee $10
                            (i32.load
                             (i32.add
                              (i32.shl
                               (i32.add
                                (local.get $5)
                                (i32.const 11)
                               )
                               (i32.const 2)
                              )
                              (local.get $6)
                             )
                            )
                           )
                           (i32.const 65535)
                          )
                         )
                         (i32.const 16)
                        )
                        (i32.add
                         (i32.mul
                          (local.get $4)
                          (i32.shr_s
                           (local.get $10)
                           (i32.const 16)
                          )
                         )
                         (i32.add
                          (i32.shr_s
                           (i32.mul
                            ;;@ silk/decode_core.c:205:0
                            (local.tee $4
                             (i32.load16_s offset=6
                              (local.get $14)
                             )
                            )
                            (i32.and
                             (local.tee $10
                              (i32.load
                               (i32.add
                                (i32.shl
                                 (i32.add
                                  (local.get $5)
                                  (i32.const 12)
                                 )
                                 (i32.const 2)
                                )
                                (local.get $6)
                               )
                              )
                             )
                             (i32.const 65535)
                            )
                           )
                           (i32.const 16)
                          )
                          (i32.add
                           (i32.mul
                            (local.get $4)
                            (i32.shr_s
                             (local.get $10)
                             (i32.const 16)
                            )
                           )
                           (i32.add
                            (i32.shr_s
                             (i32.mul
                              ;;@ silk/decode_core.c:204:0
                              (local.tee $4
                               (i32.load16_s offset=4
                                (local.get $14)
                               )
                              )
                              (i32.and
                               (local.tee $10
                                (i32.load
                                 (i32.add
                                  (i32.shl
                                   (i32.add
                                    (local.get $5)
                                    (i32.const 13)
                                   )
                                   (i32.const 2)
                                  )
                                  (local.get $6)
                                 )
                                )
                               )
                               (i32.const 65535)
                              )
                             )
                             (i32.const 16)
                            )
                            (i32.add
                             (i32.mul
                              (local.get $4)
                              (i32.shr_s
                               (local.get $10)
                               (i32.const 16)
                              )
                             )
                             (i32.add
                              (i32.shr_s
                               (i32.mul
                                ;;@ silk/decode_core.c:203:0
                                (local.tee $4
                                 (i32.load16_s offset=2
                                  (local.get $14)
                                 )
                                )
                                (i32.and
                                 (local.tee $10
                                  (i32.load
                                   (i32.add
                                    (i32.shl
                                     (i32.add
                                      (local.get $5)
                                      (i32.const 14)
                                     )
                                     (i32.const 2)
                                    )
                                    (local.get $6)
                                   )
                                  )
                                 )
                                 (i32.const 65535)
                                )
                               )
                               (i32.const 16)
                              )
                              (i32.add
                               (i32.mul
                                (local.get $4)
                                (i32.shr_s
                                 (local.get $10)
                                 (i32.const 16)
                                )
                               )
                               (i32.add
                                (i32.shr_s
                                 (i32.mul
                                  ;;@ silk/decode_core.c:202:0
                                  (local.tee $4
                                   (i32.load16_s
                                    (local.get $14)
                                   )
                                  )
                                  (i32.and
                                   (local.tee $10
                                    (i32.load
                                     (i32.add
                                      (i32.shl
                                       (i32.add
                                        (local.get $5)
                                        (i32.const 15)
                                       )
                                       (i32.const 2)
                                      )
                                      (local.get $6)
                                     )
                                    )
                                   )
                                   (i32.const 65535)
                                  )
                                 )
                                 (i32.const 16)
                                )
                                (i32.add
                                 (i32.mul
                                  (local.get $4)
                                  (i32.shr_s
                                   (local.get $10)
                                   (i32.const 16)
                                  )
                                 )
                                 (i32.shr_u
                                  (local.get $12)
                                  (i32.const 1)
                                 )
                                )
                               )
                              )
                             )
                            )
                           )
                          )
                         )
                        )
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (if
             ;;@ silk/decode_core.c:212:0
             (i32.eq
              (local.get $12)
              (i32.const 16)
             )
             ;;@ silk/decode_core.c:218:0
             (local.set $4
              (i32.add
               (i32.shr_s
                (i32.mul
                 (local.tee $12
                  (i32.load16_s offset=30
                   (local.get $14)
                  )
                 )
                 (i32.and
                  (local.tee $10
                   (i32.load
                    (i32.add
                     (i32.shl
                      (local.get $5)
                      (i32.const 2)
                     )
                     (local.get $6)
                    )
                   )
                  )
                  (i32.const 65535)
                 )
                )
                (i32.const 16)
               )
               (i32.add
                (i32.mul
                 (local.get $12)
                 (i32.shr_s
                  (local.get $10)
                  (i32.const 16)
                 )
                )
                (i32.add
                 (i32.shr_s
                  (i32.mul
                   ;;@ silk/decode_core.c:217:0
                   (local.tee $12
                    (i32.load16_s offset=28
                     (local.get $14)
                    )
                   )
                   (i32.and
                    (local.tee $10
                     (i32.load
                      (i32.add
                       (i32.shl
                        (i32.add
                         (local.get $5)
                         (i32.const 1)
                        )
                        (i32.const 2)
                       )
                       (local.get $6)
                      )
                     )
                    )
                    (i32.const 65535)
                   )
                  )
                  (i32.const 16)
                 )
                 (i32.add
                  (i32.mul
                   (local.get $12)
                   (i32.shr_s
                    (local.get $10)
                    (i32.const 16)
                   )
                  )
                  (i32.add
                   (i32.shr_s
                    (i32.mul
                     ;;@ silk/decode_core.c:216:0
                     (local.tee $12
                      (i32.load16_s offset=26
                       (local.get $14)
                      )
                     )
                     (i32.and
                      (local.tee $10
                       (i32.load
                        (i32.add
                         (i32.shl
                          (i32.add
                           (local.get $5)
                           (i32.const 2)
                          )
                          (i32.const 2)
                         )
                         (local.get $6)
                        )
                       )
                      )
                      (i32.const 65535)
                     )
                    )
                    (i32.const 16)
                   )
                   (i32.add
                    (i32.mul
                     (local.get $12)
                     (i32.shr_s
                      (local.get $10)
                      (i32.const 16)
                     )
                    )
                    (i32.add
                     (i32.shr_s
                      (i32.mul
                       ;;@ silk/decode_core.c:215:0
                       (local.tee $12
                        (i32.load16_s offset=24
                         (local.get $14)
                        )
                       )
                       (i32.and
                        (local.tee $10
                         (i32.load
                          (i32.add
                           (i32.shl
                            (i32.add
                             (local.get $5)
                             (i32.const 3)
                            )
                            (i32.const 2)
                           )
                           (local.get $6)
                          )
                         )
                        )
                        (i32.const 65535)
                       )
                      )
                      (i32.const 16)
                     )
                     (i32.add
                      (i32.mul
                       (local.get $12)
                       (i32.shr_s
                        (local.get $10)
                        (i32.const 16)
                       )
                      )
                      (i32.add
                       (i32.shr_s
                        (i32.mul
                         ;;@ silk/decode_core.c:214:0
                         (local.tee $12
                          (i32.load16_s offset=22
                           (local.get $14)
                          )
                         )
                         (i32.and
                          (local.tee $10
                           (i32.load
                            (i32.add
                             (i32.shl
                              (i32.add
                               (local.get $5)
                               (i32.const 4)
                              )
                              (i32.const 2)
                             )
                             (local.get $6)
                            )
                           )
                          )
                          (i32.const 65535)
                         )
                        )
                        (i32.const 16)
                       )
                       (i32.add
                        (i32.mul
                         (local.get $12)
                         (i32.shr_s
                          (local.get $10)
                          (i32.const 16)
                         )
                        )
                        (i32.add
                         (i32.shr_s
                          (i32.mul
                           ;;@ silk/decode_core.c:213:0
                           (local.tee $12
                            (i32.load16_s offset=20
                             (local.get $14)
                            )
                           )
                           (i32.and
                            (local.tee $10
                             (i32.load
                              (i32.add
                               (i32.shl
                                (i32.add
                                 (local.get $5)
                                 (i32.const 5)
                                )
                                (i32.const 2)
                               )
                               (local.get $6)
                              )
                             )
                            )
                            (i32.const 65535)
                           )
                          )
                          (i32.const 16)
                         )
                         (i32.add
                          (i32.mul
                           (local.get $12)
                           (i32.shr_s
                            (local.get $10)
                            (i32.const 16)
                           )
                          )
                          (local.get $4)
                         )
                        )
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                )
               )
              )
             )
            )
            ;;@ silk/decode_core.c:222:0
            (i32.store
             (i32.add
              (i32.shl
               (i32.add
                (local.get $5)
                (i32.const 16)
               )
               (i32.const 2)
              )
              (local.get $6)
             )
             (local.tee $4
              (if (result i32)
               (i32.gt_s
                (local.tee $10
                 (i32.add
                  (local.tee $12
                   (i32.load
                    (i32.add
                     (i32.shl
                      (local.get $5)
                      (i32.const 2)
                     )
                     (local.get $7)
                    )
                   )
                  )
                  (local.tee $4
                   (i32.shl
                    (select
                     (local.tee $4
                      (select
                       (local.get $4)
                       (i32.const -134217728)
                       (i32.gt_s
                        (local.get $4)
                        (i32.const -134217728)
                       )
                      )
                     )
                     (i32.const 134217727)
                     (i32.lt_s
                      (local.get $4)
                      (i32.const 134217727)
                     )
                    )
                    (i32.const 4)
                   )
                  )
                 )
                )
                (i32.const -1)
               )
               (select
                (i32.const -2147483648)
                (local.get $10)
                (i32.lt_s
                 (i32.and
                  (local.get $4)
                  (local.get $12)
                 )
                 (i32.const 0)
                )
               )
               (select
                (i32.const 2147483647)
                (local.get $10)
                (i32.gt_s
                 (i32.or
                  (local.get $4)
                  (local.get $12)
                 )
                 (i32.const -1)
                )
               )
              )
             )
            )
            ;;@ silk/decode_core.c:225:0
            (i32.store16
             (i32.add
              (i32.shl
               (local.get $5)
               (i32.const 1)
              )
              (local.get $20)
             )
             (select
              (i32.const 32767)
              (select
               (i32.const -32768)
               (i32.and
                (i32.shr_u
                 (i32.add
                  (i32.shr_u
                   (local.tee $4
                    (i32.add
                     (i32.add
                      (i32.mul
                       (i32.shr_s
                        (local.get $4)
                        (i32.const 16)
                       )
                       (local.get $11)
                      )
                      (i32.mul
                       (local.get $4)
                       (local.get $15)
                      )
                     )
                     (i32.shr_s
                      (i32.mul
                       (i32.and
                        (local.get $4)
                        (i32.const 65535)
                       )
                       (local.get $11)
                      )
                      (i32.const 16)
                     )
                    )
                   )
                   (i32.const 7)
                  )
                  (i32.const 1)
                 )
                 (i32.const 1)
                )
                (i32.const 65535)
               )
               (i32.lt_s
                (local.get $4)
                (i32.const -8388736)
               )
              )
              (i32.gt_s
               (local.get $4)
               (i32.const 8388479)
              )
             )
            )
            ;;@ silk/decode_core.c:197:0
            (br_if $while-in8
             (i32.lt_s
              (local.tee $5
               (i32.add
                (local.get $5)
                (i32.const 1)
               )
              )
              (local.tee $4
               (i32.load
                (local.get $23)
               )
              )
             )
            )
            (local.get $4)
           )
          )
         )
        )
       )
       ;;@ silk/decode_core.c:229:0
       (i64.store align=4
        (local.get $6)
        (i64.load align=4
         (local.tee $7
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
           (local.get $6)
          )
         )
        )
       )
       (i64.store offset=8 align=4
        (local.get $6)
        (i64.load offset=8 align=4
         (local.get $7)
        )
       )
       (i64.store offset=16 align=4
        (local.get $6)
        (i64.load offset=16 align=4
         (local.get $7)
        )
       )
       (i64.store offset=24 align=4
        (local.get $6)
        (i64.load offset=24 align=4
         (local.get $7)
        )
       )
       (i64.store offset=32 align=4
        (local.get $6)
        (i64.load offset=32 align=4
         (local.get $7)
        )
       )
       (i64.store offset=40 align=4
        (local.get $6)
        (i64.load offset=40 align=4
         (local.get $7)
        )
       )
       (i64.store offset=48 align=4
        (local.get $6)
        (i64.load offset=48 align=4
         (local.get $7)
        )
       )
       (i64.store offset=56 align=4
        (local.get $6)
        (i64.load offset=56 align=4
         (local.get $7)
        )
       )
       ;;@ silk/decode_core.c:230:0
       (local.set $18
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (local.get $18)
        )
       )
       ;;@ silk/decode_core.c:231:0
       (local.set $20
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 1)
         )
         (local.get $20)
        )
       )
       ;;@ silk/decode_core.c:97:0
       (br_if $label$continue$L16
        (i32.lt_s
         (local.tee $16
          (i32.add
           (local.get $16)
           (i32.const 1)
          )
         )
         (i32.load
          (local.get $32)
         )
        )
       )
       (br $__rjti$6)
      )
     )
     ;;@ silk/decode_core.c:144:0
     (call $_celt_fatal
      (i32.const 42919)
      (i32.const 42951)
      (i32.const 144)
     )
     (br $__rjto$6)
    )
    ;;@ silk/decode_core.c:199:0
    (call $_celt_fatal
     (i32.const 42970)
     (i32.const 42951)
     (i32.const 199)
    )
    (br $__rjto$6)
   )
   (i64.store align=4
    (local.get $13)
    (i64.load align=4
     (local.get $6)
    )
   )
   (i64.store offset=8 align=4
    (local.get $13)
    (i64.load offset=8 align=4
     (local.get $6)
    )
   )
   (i64.store offset=16 align=4
    (local.get $13)
    (i64.load offset=16 align=4
     (local.get $6)
    )
   )
   (i64.store offset=24 align=4
    (local.get $13)
    (i64.load offset=24 align=4
     (local.get $6)
    )
   )
   (i64.store offset=32 align=4
    (local.get $13)
    (i64.load offset=32 align=4
     (local.get $6)
    )
   )
   (i64.store offset=40 align=4
    (local.get $13)
    (i64.load offset=40 align=4
     (local.get $6)
    )
   )
   (i64.store offset=48 align=4
    (local.get $13)
    (i64.load offset=48 align=4
     (local.get $6)
    )
   )
   ;;@ silk/decode_core.c:235:0
   (i64.store offset=56 align=4
    (local.get $13)
    (i64.load offset=56 align=4
     (local.get $6)
    )
   )
   ;;@ silk/decode_core.c:237:0
   (call $_llvm_stackrestore
    (local.get $27)
   )
   (global.set $STACKTOP
    (local.get $14)
   )
  )
 )
 (func $_silk_decode_frame (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  ;;@ silk/decode_frame.c:53:0
  (local.set $7
   (i32.load
    (local.tee $8
     (i32.add
      (local.get $0)
      (i32.const 2328)
     )
    )
   )
  )
  ;;@ silk/decode_frame.c:55:0
  (i32.store offset=136
   (local.get $6)
   (i32.const 0)
  )
  (if
   ;;@ silk/decode_frame.c:58:0
   (i32.ge_u
    (i32.add
     (local.get $7)
     (i32.const -1)
    )
    (i32.const 320)
   )
   (call $_celt_fatal
    (i32.const 43037)
    (i32.const 43086)
    (i32.const 58)
   )
  )
  (block $do-once
   (block $__rjti$1
    (block $__rjti$0
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case $__rjti$1 $switch-case0 $__rjti$1
        (local.get $4)
       )
      )
      ;;@ silk/decode_frame.c:69:0
      (local.set $9
       (i32.add
        (local.get $0)
        (i32.const 2388)
       )
      )
      (br $__rjti$0)
     )
     ;;@ silk/decode_frame.c:61:0
     (br_if $__rjti$1
      (i32.ne
       (i32.load
        (i32.add
         (i32.add
          (local.get $0)
          (i32.const 2420)
         )
         (i32.shl
          (i32.load
           (local.tee $9
            (i32.add
             (local.get $0)
             (i32.const 2388)
            )
           )
          )
          (i32.const 2)
         )
        )
       )
       (i32.const 1)
      )
     )
    )
    ;;@ silk/decode_frame.c:64:0
    (local.set $11
     (i32.and
      (i32.add
       (local.get $7)
       (i32.const 15)
      )
      (i32.const -16)
     )
    )
    (local.set $12
     (call $_llvm_stacksave)
    )
    (local.set $10
     (global.get $STACKTOP)
    )
    (global.set $STACKTOP
     (i32.add
      (global.get $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (local.get $11)
         (i32.const 1)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    ;;@ silk/decode_frame.c:69:0
    (call $_silk_decode_indices
     (local.get $0)
     (local.get $1)
     (i32.load
      (local.get $9)
     )
     (local.get $4)
     (local.get $5)
    )
    ;;@ silk/decode_frame.c:74:0
    (call $_silk_decode_pulses
     (local.get $1)
     (local.get $10)
     (i32.load8_s
      (local.tee $1
       (i32.add
        (local.get $0)
        (i32.const 2765)
       )
      )
     )
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 2766)
      )
     )
     (i32.load
      (local.get $8)
     )
    )
    ;;@ silk/decode_frame.c:80:0
    (call $_silk_decode_parameters
     (local.get $0)
     (local.get $6)
     (local.get $5)
    )
    ;;@ silk/decode_frame.c:85:0
    (call $_silk_decode_core
     (local.get $0)
     (local.get $6)
     (local.get $2)
     (local.get $10)
    )
    ;;@ silk/decode_frame.c:90:0
    (call $_silk_PLC
     (local.get $0)
     (local.get $6)
     (local.get $2)
     (i32.const 0)
    )
    ;;@ silk/decode_frame.c:92:0
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4160)
     )
     (i32.const 0)
    )
    ;;@ silk/decode_frame.c:93:0
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4164)
     )
     (local.tee $1
      (i32.load8_s
       (local.get $1)
      )
     )
    )
    (if
     ;;@ silk/decode_frame.c:94:0
     (i32.lt_s
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
      (i32.const 3)
     )
     (block
      ;;@ silk/decode_frame.c:97:0
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 2376)
       )
       (i32.const 0)
      )
      ;;@ silk/decode_frame.c:98:0
      (call $_llvm_stackrestore
       (local.get $12)
      )
      (br $do-once)
     )
     ;;@ silk/decode_frame.c:94:0
     (call $_celt_fatal
      (i32.const 43106)
      (i32.const 43086)
      (i32.const 94)
     )
    )
    (br $do-once)
   )
   ;;@ silk/decode_frame.c:100:0
   (i32.store8
    (i32.add
     (local.get $0)
     (i32.const 2765)
    )
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 4164)
     )
    )
   )
   ;;@ silk/decode_frame.c:101:0
   (call $_silk_PLC
    (local.get $0)
    (local.get $6)
    (local.get $2)
    (i32.const 1)
   )
  )
  (if
   ;;@ silk/decode_frame.c:107:0
   (i32.lt_s
    (local.tee $4
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 2336)
      )
     )
    )
    (local.tee $1
     (i32.load
      (local.get $8)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 43181)
    (i32.const 43086)
    (i32.const 107)
   )
   (block
    ;;@ silk/decode_frame.c:109:0
    (drop
     (call $_memmove
      (i32.add
       (local.get $0)
       (i32.const 1348)
      )
      (i32.add
       (i32.add
        (local.get $0)
        (i32.const 1348)
       )
       (i32.shl
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.shl
       ;;@ silk/decode_frame.c:108:0
       (local.tee $1
        (i32.sub
         (local.get $4)
         (local.get $1)
        )
       )
       (i32.const 1)
      )
     )
    )
    ;;@ silk/decode_frame.c:110:0
    (drop
     (call $_memcpy
      (i32.add
       (i32.add
        (local.get $0)
        (i32.const 1348)
       )
       (i32.shl
        (local.get $1)
        (i32.const 1)
       )
      )
      (local.get $2)
      (i32.shl
       (i32.load
        (local.get $8)
       )
       (i32.const 1)
      )
     )
    )
    ;;@ silk/decode_frame.c:115:0
    (call $_silk_CNG
     (local.get $0)
     (local.get $6)
     (local.get $2)
     (local.get $7)
    )
    ;;@ silk/decode_frame.c:120:0
    (call $_silk_PLC_glue_frames
     (local.get $0)
     (local.get $2)
     (local.get $7)
    )
    ;;@ silk/decode_frame.c:123:0
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 2308)
     )
     (i32.load
      (i32.add
       (i32.shl
        (i32.add
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 2324)
          )
         )
         (i32.const -1)
        )
        (i32.const 2)
       )
       (local.get $6)
      )
     )
    )
    ;;@ silk/decode_frame.c:126:0
    (i32.store
     (local.get $3)
     (local.get $7)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    ;;@ silk/decode_frame.c:129:0
    (return
     (i32.const 0)
    )
   )
  )
  (i32.const 0)
 )
 (func $_silk_decode_parameters (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $12
   (i32.add
    (local.get $9)
    (i32.const 32)
   )
  )
  ;;@ silk/decode_parameters.c:46:0
  (local.set $6
   (i32.add
    (local.get $1)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 2736)
   )
  )
  ;;@ silk/decode_parameters.c:47:0
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 2312)
   )
  )
  (local.set $3
   (i32.eq
    (local.get $2)
    (i32.const 2)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 2324)
   )
  )
  (local.set $2
   (i32.load
    (local.get $10)
   )
  )
  ;;@ silk/decode_parameters.c:46:0
  (call $_silk_gains_dequant
   (local.get $6)
   (local.get $5)
   (local.get $4)
   (local.get $3)
   (local.get $2)
  )
  ;;@ silk/decode_parameters.c:52:0
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 2744)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2732)
   )
  )
  (local.set $2
   (i32.load
    (local.get $2)
   )
  )
  (call $_silk_NLSF_decode
   (local.get $12)
   (local.get $3)
   (local.get $2)
  )
  ;;@ silk/decode_parameters.c:55:0
  (local.set $13
   (i32.add
    (local.get $1)
    (i32.const 32)
   )
  )
  (local.set $7
   (i32.sub
    (local.get $1)
    (i32.const -64)
   )
  )
  (local.set $11
   (i32.add
    (local.get $0)
    (i32.const 2340)
   )
  )
  (local.set $3
   (i32.load
    (local.get $11)
   )
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 4168)
   )
  )
  (local.set $2
   (i32.load
    (local.get $6)
   )
  )
  (call $_silk_NLSF2A
   (local.get $7)
   (local.get $12)
   (local.get $3)
  )
  ;;@ silk/decode_parameters.c:59:0
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2376)
   )
  )
  (local.set $2
   (i32.load
    (local.get $2)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 2767)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (i32.eq
      (local.get $2)
      (i32.const 1)
     )
     (block
      ;;@ silk/decode_parameters.c:60:0
      (i32.store8
       (local.get $3)
       (i32.const 4)
      )
      (br $__rjti$0)
     )
     (block
      ;;@ silk/decode_parameters.c:63:0
      (local.set $4
       (i32.load8_s
        (local.get $3)
       )
      )
      (br_if $__rjti$0
       (i32.ge_s
        (local.get $4)
        (i32.const 4)
       )
      )
      ;;@ silk/decode_parameters.c:66:0
      (local.set $8
       (i32.load
        (local.get $11)
       )
      )
      (if
       (i32.gt_s
        (local.get $8)
        (i32.const 0)
       )
       (block
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in
         ;;@ silk/decode_parameters.c:67:0
         (local.set $3
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 2344)
           )
           (i32.shl
            (local.get $2)
            (i32.const 1)
           )
          )
         )
         (local.set $3
          (i32.load16_s
           (local.get $3)
          )
         )
         (local.set $5
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 1)
           )
           (local.get $12)
          )
         )
         (local.set $5
          (i32.load16_s
           (local.get $5)
          )
         )
         (local.set $5
          (i32.sub
           (local.get $5)
           (local.get $3)
          )
         )
         (local.set $5
          (i32.mul
           (local.get $4)
           (local.get $5)
          )
         )
         (local.set $5
          (i32.shr_u
           (local.get $5)
           (i32.const 2)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (local.get $5)
          )
         )
         (local.set $5
          (i32.and
           (local.get $3)
           (i32.const 65535)
          )
         )
         (local.set $3
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 1)
           )
           (local.get $9)
          )
         )
         (i32.store16
          (local.get $3)
          (local.get $5)
         )
         ;;@ silk/decode_parameters.c:66:0
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (br_if $while-in
          (i32.lt_s
           (local.get $2)
           (local.get $8)
          )
         )
        )
       )
      )
      ;;@ silk/decode_parameters.c:72:0
      (local.set $2
       (i32.load
        (local.get $6)
       )
      )
      (call $_silk_NLSF2A
       (local.get $13)
       (local.get $9)
       (local.get $8)
      )
     )
    )
    (br $__rjto$0)
   )
   ;;@ silk/decode_parameters.c:75:0
   (local.set $2
    (i32.load
     (local.get $11)
    )
   )
   (local.set $2
    (i32.shl
     (local.get $2)
     (i32.const 1)
    )
   )
   (drop
    (call $_memcpy
     (local.get $13)
     (local.get $7)
     (local.get $2)
    )
   )
  )
  ;;@ silk/decode_parameters.c:78:0
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 2344)
   )
  )
  (local.set $4
   (i32.load
    (local.get $11)
   )
  )
  (local.set $2
   (i32.shl
    (local.get $4)
    (i32.const 1)
   )
  )
  (drop
   (call $_memcpy
    (local.get $3)
    (local.get $12)
    (local.get $2)
   )
  )
  ;;@ silk/decode_parameters.c:81:0
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 4160)
   )
  )
  (local.set $2
   (i32.load
    (local.get $2)
   )
  )
  (if
   (local.get $2)
   (block
    ;;@ silk/decode_parameters.c:82:0
    (call $_silk_bwexpander
     (local.get $13)
     (local.get $4)
     (i32.const 63570)
    )
    ;;@ silk/decode_parameters.c:83:0
    (local.set $2
     (i32.load
      (local.get $11)
     )
    )
    (call $_silk_bwexpander
     (local.get $7)
     (local.get $2)
     (i32.const 63570)
    )
   )
  )
  ;;@ silk/decode_parameters.c:86:0
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2765)
   )
  )
  (local.set $2
   (i32.load8_s
    (local.get $2)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 2)
   )
   (block
    ;;@ silk/decode_parameters.c:110:0
    (local.set $2
     (i32.load
      (local.get $10)
     )
    )
    (local.set $2
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
    )
    (drop
     (call $_memset
      (local.get $1)
      (i32.const 0)
      (local.get $2)
     )
    )
    ;;@ silk/decode_parameters.c:111:0
    (local.set $3
     (i32.add
      (local.get $1)
      (i32.const 96)
     )
    )
    (local.set $2
     (i32.load
      (local.get $10)
     )
    )
    (local.set $2
     (i32.mul
      (local.get $2)
      (i32.const 10)
     )
    )
    (drop
     (call $_memset
      (local.get $3)
      (i32.const 0)
      (local.get $2)
     )
    )
    ;;@ silk/decode_parameters.c:112:0
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 2768)
     )
    )
    (i32.store8
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=136
     (local.get $1)
     (i32.const 0)
    )
    (global.set $STACKTOP
     (local.get $9)
    )
    ;;@ silk/decode_parameters.c:115:0
    (return)
   )
  )
  ;;@ silk/decode_parameters.c:92:0
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2762)
   )
  )
  (local.set $5
   (i32.load16_s
    (local.get $2)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2764)
   )
  )
  (local.set $4
   (i32.load8_s
    (local.get $2)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2316)
   )
  )
  (local.set $3
   (i32.load
    (local.get $2)
   )
  )
  (local.set $2
   (i32.load
    (local.get $10)
   )
  )
  (call $_silk_decode_pitch
   (local.get $5)
   (local.get $4)
   (local.get $1)
   (local.get $3)
   (local.get $2)
  )
  ;;@ silk/decode_parameters.c:95:0
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2768)
   )
  )
  (local.set $2
   (i32.load8_s
    (local.get $2)
   )
  )
  (local.set $2
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 2)
    )
    (i32.const 36936)
   )
  )
  (local.set $7
   (i32.load
    (local.get $2)
   )
  )
  ;;@ silk/decode_parameters.c:97:0
  (local.set $5
   (i32.load
    (local.get $10)
   )
  )
  (if
   (i32.gt_s
    (local.get $5)
    (i32.const 0)
   )
   (block
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in1
     ;;@ silk/decode_parameters.c:98:0
     (local.set $3
      (i32.add
       (local.get $2)
       (i32.add
        (local.get $0)
        (i32.const 2740)
       )
      )
     )
     (local.set $3
      (i32.load8_s
       (local.get $3)
      )
     )
     (local.set $8
      (i32.mul
       (local.get $3)
       (i32.const 5)
      )
     )
     (local.set $6
      (i32.mul
       (local.get $2)
       (i32.const 5)
      )
     )
     ;;@ silk/decode_parameters.c:100:0
     (local.set $3
      (i32.add
       (local.get $7)
       (local.get $8)
      )
     )
     (local.set $3
      (i32.load8_s
       (local.get $3)
      )
     )
     (local.set $3
      (i32.shl
       (local.get $3)
       (i32.const 7)
      )
     )
     (local.set $4
      (i32.and
       (local.get $3)
       (i32.const 65535)
      )
     )
     (local.set $3
      (i32.add
       (i32.add
        (local.get $1)
        (i32.const 96)
       )
       (i32.shl
        (local.get $6)
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (local.get $3)
      (local.get $4)
     )
     (local.set $3
      (i32.add
       (local.get $8)
       (i32.const 1)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (local.get $7)
      )
     )
     (local.set $3
      (i32.load8_s
       (local.get $3)
      )
     )
     (local.set $3
      (i32.shl
       (local.get $3)
       (i32.const 7)
      )
     )
     (local.set $4
      (i32.and
       (local.get $3)
       (i32.const 65535)
      )
     )
     (local.set $3
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (local.set $3
      (i32.add
       (i32.add
        (local.get $1)
        (i32.const 96)
       )
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (local.get $3)
      (local.get $4)
     )
     (local.set $3
      (i32.add
       (local.get $8)
       (i32.const 2)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (local.get $7)
      )
     )
     (local.set $3
      (i32.load8_s
       (local.get $3)
      )
     )
     (local.set $3
      (i32.shl
       (local.get $3)
       (i32.const 7)
      )
     )
     (local.set $4
      (i32.and
       (local.get $3)
       (i32.const 65535)
      )
     )
     (local.set $3
      (i32.add
       (local.get $6)
       (i32.const 2)
      )
     )
     (local.set $3
      (i32.add
       (i32.add
        (local.get $1)
        (i32.const 96)
       )
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (local.get $3)
      (local.get $4)
     )
     (local.set $3
      (i32.add
       (local.get $8)
       (i32.const 3)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (local.get $7)
      )
     )
     (local.set $3
      (i32.load8_s
       (local.get $3)
      )
     )
     (local.set $3
      (i32.shl
       (local.get $3)
       (i32.const 7)
      )
     )
     (local.set $4
      (i32.and
       (local.get $3)
       (i32.const 65535)
      )
     )
     (local.set $3
      (i32.add
       (local.get $6)
       (i32.const 3)
      )
     )
     (local.set $3
      (i32.add
       (i32.add
        (local.get $1)
        (i32.const 96)
       )
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (local.get $3)
      (local.get $4)
     )
     (local.set $3
      (i32.add
       (local.get $8)
       (i32.const 4)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (local.get $7)
      )
     )
     (local.set $3
      (i32.load8_s
       (local.get $3)
      )
     )
     (local.set $3
      (i32.shl
       (local.get $3)
       (i32.const 7)
      )
     )
     (local.set $4
      (i32.and
       (local.get $3)
       (i32.const 65535)
      )
     )
     (local.set $3
      (i32.add
       (local.get $6)
       (i32.const 4)
      )
     )
     (local.set $3
      (i32.add
       (i32.add
        (local.get $1)
        (i32.const 96)
       )
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
      )
     )
     (i32.store16
      (local.get $3)
      (local.get $4)
     )
     ;;@ silk/decode_parameters.c:97:0
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (br_if $while-in1
      (i32.lt_s
       (local.get $2)
       (local.get $5)
      )
     )
    )
   )
  )
  ;;@ silk/decode_parameters.c:107:0
  (local.set $0
   (i32.add
    (local.get $0)
    (i32.const 2769)
   )
  )
  (local.set $0
   (i32.load8_s
    (local.get $0)
   )
  )
  ;;@ silk/decode_parameters.c:108:0
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 40764)
   )
  )
  (local.set $0
   (i32.load16_s
    (local.get $0)
   )
  )
  (i32.store offset=136
   (local.get $1)
   (local.get $0)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_silk_decode_indices (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $12
   (i32.add
    (local.get $9)
    (i32.const 16)
   )
  )
  (local.set $3
   (block $__rjto$0 (result i32)
    (block $__rjti$0
     ;;@ silk/decode_indices.c:51:0
     (br_if $__rjti$0
      (local.get $3)
     )
     (local.set $2
      (i32.add
       (i32.add
        (local.get $0)
        (i32.const 2404)
       )
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
      )
     )
     (local.set $2
      (i32.load
       (local.get $2)
      )
     )
     (br_if $__rjti$0
      (local.get $2)
     )
     ;;@ silk/decode_indices.c:54:0
     (br $__rjto$0
      (call $_ec_dec_icdf
       (local.get $1)
       (i32.const 43863)
       (i32.const 8)
      )
     )
    )
    ;;@ silk/decode_indices.c:52:0
    (local.set $2
     (call $_ec_dec_icdf
      (local.get $1)
      (i32.const 43859)
      (i32.const 8)
     )
    )
    (i32.add
     (local.get $2)
     (i32.const 2)
    )
   )
  )
  ;;@ silk/decode_indices.c:56:0
  (local.set $5
   (i32.shr_u
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.and
    (local.get $5)
    (i32.const 255)
   )
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 2736)
   )
  )
  (local.set $8
   (i32.add
    (local.get $0)
    (i32.const 2765)
   )
  )
  (i32.store8
   (local.get $8)
   (local.get $2)
  )
  ;;@ silk/decode_indices.c:57:0
  (local.set $3
   (i32.and
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2766)
   )
  )
  (i32.store8
   (local.get $2)
   (local.get $3)
  )
  (if
   ;;@ silk/decode_indices.c:63:0
   (local.tee $10
    (i32.eq
     (local.get $4)
     (i32.const 2)
    )
   )
   ;;@ silk/decode_indices.c:65:0
   (block
    (local.set $2
     (call $_ec_dec_icdf
      (local.get $1)
      (i32.const 21472)
      (i32.const 8)
     )
    )
    (local.set $2
     (i32.and
      (local.get $2)
      (i32.const 255)
     )
    )
   )
   ;;@ silk/decode_indices.c:69:0
   (block
    ;;@ silk/decode_indices.c:68:0
    (local.set $2
     (i32.shl
      (local.get $5)
      (i32.const 24)
     )
    )
    (local.set $2
     (i32.shr_s
      (local.get $2)
      (i32.const 24)
     )
    )
    (local.set $2
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 3)
      )
      (i32.const 21440)
     )
    )
    (local.set $2
     (call $_ec_dec_icdf
      (local.get $1)
      (local.get $2)
      (i32.const 8)
     )
    )
    (local.set $2
     (i32.shl
      (local.get $2)
      (i32.const 3)
     )
    )
    (local.set $2
     (i32.and
      (local.get $2)
      (i32.const 255)
     )
    )
    (i32.store8
     (local.get $6)
     (local.get $2)
    )
    ;;@ silk/decode_indices.c:69:0
    (local.set $3
     (call $_ec_dec_icdf
      (local.get $1)
      (i32.const 43888)
      (i32.const 8)
     )
    )
    (local.set $2
     (i32.load8_u
      (local.get $6)
     )
    )
    (local.set $2
     (i32.and
      (local.get $2)
      (i32.const 255)
     )
    )
    (local.set $2
     (i32.add
      (local.get $2)
      (local.get $3)
     )
    )
    (local.set $2
     (i32.and
      (local.get $2)
      (i32.const 255)
     )
    )
   )
  )
  (i32.store8
   (local.get $6)
   (local.get $2)
  )
  ;;@ silk/decode_indices.c:73:0
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 2324)
   )
  )
  (local.set $2
   (i32.load
    (local.get $7)
   )
  )
  (if
   (i32.gt_s
    (local.get $2)
    (i32.const 1)
   )
   (block
    (local.set $2
     (i32.const 1)
    )
    (loop $while-in
     ;;@ silk/decode_indices.c:74:0
     (local.set $3
      (call $_ec_dec_icdf
       (local.get $1)
       (i32.const 21472)
       (i32.const 8)
      )
     )
     (local.set $5
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
     )
     (local.set $3
      (i32.add
       (local.get $2)
       (i32.add
        (local.get $0)
        (i32.const 2736)
       )
      )
     )
     (i32.store8
      (local.get $3)
      (local.get $5)
     )
     ;;@ silk/decode_indices.c:73:0
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (local.set $3
      (i32.load
       (local.get $7)
      )
     )
     (br_if $while-in
      (i32.lt_s
       (local.get $2)
       (local.get $3)
      )
     )
    )
   )
  )
  ;;@ silk/decode_indices.c:80:0
  (local.set $11
   (i32.add
    (local.get $0)
    (i32.const 2732)
   )
  )
  (local.set $6
   (i32.load
    (local.get $11)
   )
  )
  (local.set $5
   (i32.load offset=16
    (local.get $6)
   )
  )
  (local.set $2
   (i32.load8_s
    (local.get $8)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.load16_s
    (local.get $6)
   )
  )
  (local.set $2
   (i32.mul
    (local.get $2)
    (local.get $3)
   )
  )
  (local.set $2
   (i32.add
    (local.get $2)
    (local.get $5)
   )
  )
  (local.set $5
   (call $_ec_dec_icdf
    (local.get $1)
    (local.get $2)
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.and
    (local.get $5)
    (i32.const 255)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2744)
   )
  )
  (i32.store8
   (local.get $2)
   (local.get $3)
  )
  ;;@ silk/decode_indices.c:81:0
  (local.set $3
   (i32.load
    (local.get $11)
   )
  )
  (local.set $2
   (i32.shl
    (local.get $5)
    (i32.const 24)
   )
  )
  (local.set $2
   (i32.shr_s
    (local.get $2)
    (i32.const 24)
   )
  )
  (call $_silk_NLSF_unpack
   (local.get $12)
   (local.get $9)
   (local.get $3)
   (local.get $2)
  )
  ;;@ silk/decode_indices.c:82:0
  (local.set $2
   (i32.load
    (local.get $11)
   )
  )
  (local.set $5
   (i32.load16_s offset=2
    (local.get $2)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 2340)
   )
  )
  (local.set $3
   (i32.load
    (local.get $3)
   )
  )
  (if
   (i32.ne
    (local.get $3)
    (local.get $5)
   )
   (call $_celt_fatal
    (i32.const 43244)
    (i32.const 43306)
    (i32.const 82)
   )
  )
  (if
   ;;@ silk/decode_indices.c:83:0
   (i32.gt_s
    (local.get $5)
    (i32.const 0)
   )
   (block
    (local.set $3
     (i32.const 0)
    )
    (loop $while-in1
     ;;@ silk/decode_indices.c:84:0
     (local.set $5
      (i32.load offset=28
       (local.get $2)
      )
     )
     (local.set $2
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
       (local.get $12)
      )
     )
     (local.set $2
      (i32.load16_s
       (local.get $2)
      )
     )
     (local.set $2
      (i32.add
       (local.get $2)
       (local.get $5)
      )
     )
     (block $switch
      (block $switch-case2
       (block $switch-case
        (br_table $switch-case $switch $switch $switch $switch $switch $switch $switch $switch-case2 $switch
         (local.tee $2
          (call $_ec_dec_icdf
           (local.get $1)
           (local.get $2)
           (i32.const 8)
          )
         )
        )
       )
       ;;@ silk/decode_indices.c:86:0
       (local.set $2
        (call $_ec_dec_icdf
         (local.get $1)
         (i32.const 43896)
         (i32.const 8)
        )
       )
       (local.set $2
        (i32.sub
         (i32.const 0)
         (local.get $2)
        )
       )
       (br $switch)
      )
      ;;@ silk/decode_indices.c:88:0
      (local.set $2
       (call $_ec_dec_icdf
        (local.get $1)
        (i32.const 43896)
        (i32.const 8)
       )
      )
      (local.set $2
       (i32.add
        (local.get $2)
        (i32.const 8)
       )
      )
     )
     ;;@ silk/decode_indices.c:90:0
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const 252)
      )
     )
     (local.set $5
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $2
      (i32.add
       (local.get $3)
       (i32.add
        (local.get $0)
        (i32.const 2744)
       )
      )
     )
     (i32.store8
      (local.get $2)
      (local.get $5)
     )
     ;;@ silk/decode_indices.c:83:0
     (local.set $2
      (i32.load
       (local.get $11)
      )
     )
     (local.set $5
      (i32.load16_s offset=2
       (local.get $2)
      )
     )
     (br_if $while-in1
      (i32.lt_s
       (local.get $3)
       (local.get $5)
      )
     )
    )
   )
  )
  ;;@ silk/decode_indices.c:94:0
  (local.set $2
   (i32.load
    (local.get $7)
   )
  )
  (local.set $3
   (if (result i32)
    (i32.eq
     (local.get $2)
     (i32.const 4)
    )
    (block (result i32)
     ;;@ silk/decode_indices.c:95:0
     (local.set $2
      (call $_ec_dec_icdf
       (local.get $1)
       (i32.const 43865)
       (i32.const 8)
      )
     )
     (i32.and
      (local.get $2)
      (i32.const 255)
     )
    )
    (i32.const 4)
   )
  )
  ;;@ silk/decode_indices.c:97:0
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2767)
   )
  )
  (i32.store8
   (local.get $2)
   (local.get $3)
  )
  ;;@ silk/decode_indices.c:100:0
  (local.set $2
   (i32.load8_s
    (local.get $8)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 2)
   )
   (block
    ;;@ silk/decode_indices.c:145:0
    (local.set $3
     (i32.load8_s
      (local.get $8)
     )
    )
    (local.set $2
     (i32.add
      (local.get $0)
      (i32.const 2396)
     )
    )
    (i32.store
     (local.get $2)
     (local.get $3)
    )
    ;;@ silk/decode_indices.c:150:0
    (local.set $1
     (call $_ec_dec_icdf
      (local.get $1)
      (i32.const 43873)
      (i32.const 8)
     )
    )
    (local.set $1
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 2770)
     )
    )
    (i32.store8
     (local.get $0)
     (local.get $1)
    )
    (global.set $STACKTOP
     (local.get $9)
    )
    ;;@ silk/decode_indices.c:151:0
    (return)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (br_if $__rjti$1
     (i32.eqz
      (local.get $10)
     )
    )
    ;;@ silk/decode_indices.c:107:0
    (local.set $2
     (i32.add
      (local.get $0)
      (i32.const 2396)
     )
    )
    (local.set $2
     (i32.load
      (local.get $2)
     )
    )
    (br_if $__rjti$1
     (i32.ne
      (local.get $2)
      (i32.const 2)
     )
    )
    ;;@ silk/decode_indices.c:109:0
    (local.set $3
     (call $_ec_dec_icdf
      (local.get $1)
      (i32.const 25456)
      (i32.const 8)
     )
    )
    (local.set $2
     (i32.shl
      (local.get $3)
      (i32.const 16)
     )
    )
    ;;@ silk/decode_indices.c:110:0
    (br_if $__rjti$1
     (i32.le_s
      (local.get $2)
      (i32.const 0)
     )
    )
    ;;@ silk/decode_indices.c:111:0
    (local.set $5
     (i32.add
      (local.get $3)
      (i32.const 65527)
     )
    )
    ;;@ silk/decode_indices.c:112:0
    (local.set $3
     (i32.add
      (local.get $0)
      (i32.const 2400)
     )
    )
    (local.set $2
     (i32.load16_u
      (local.get $3)
     )
    )
    (local.set $2
     (i32.and
      (local.get $2)
      (i32.const 65535)
     )
    )
    (local.set $2
     (i32.add
      (local.get $2)
      (local.get $5)
     )
    )
    (local.set $2
     (i32.and
      (local.get $2)
      (i32.const 65535)
     )
    )
    (local.set $5
     (i32.add
      (local.get $0)
      (i32.const 2762)
     )
    )
    (i32.store16
     (local.get $5)
     (local.get $2)
    )
    (br $__rjto$1)
   )
   ;;@ silk/decode_indices.c:118:0
   (local.set $2
    (call $_ec_dec_icdf
     (local.get $1)
     (i32.const 25424)
     (i32.const 8)
    )
   )
   (local.set $2
    (i32.shl
     (local.get $2)
     (i32.const 16)
    )
   )
   (local.set $3
    (i32.shr_s
     (local.get $2)
     (i32.const 16)
    )
   )
   (local.set $2
    (i32.add
     (local.get $0)
     (i32.const 2316)
    )
   )
   (local.set $2
    (i32.load
     (local.get $2)
    )
   )
   (local.set $2
    (i32.shr_s
     (local.get $2)
     (i32.const 1)
    )
   )
   (local.set $2
    (i32.mul
     (local.get $2)
     (local.get $3)
    )
   )
   (local.set $2
    (i32.and
     (local.get $2)
     (i32.const 65535)
    )
   )
   (local.set $5
    (i32.add
     (local.get $0)
     (i32.const 2762)
    )
   )
   (i32.store16
    (local.get $5)
    (local.get $2)
   )
   ;;@ silk/decode_indices.c:119:0
   (local.set $2
    (i32.add
     (local.get $0)
     (i32.const 2380)
    )
   )
   (local.set $2
    (i32.load
     (local.get $2)
    )
   )
   (local.set $3
    (call $_ec_dec_icdf
     (local.get $1)
     (local.get $2)
     (i32.const 8)
    )
   )
   (local.set $2
    (i32.load16_u
     (local.get $5)
    )
   )
   (local.set $2
    (i32.and
     (local.get $2)
     (i32.const 65535)
    )
   )
   (local.set $2
    (i32.add
     (local.get $2)
     (local.get $3)
    )
   )
   (local.set $2
    (i32.and
     (local.get $2)
     (i32.const 65535)
    )
   )
   (i32.store16
    (local.get $5)
    (local.get $2)
   )
   ;;@ silk/decode_indices.c:121:0
   (local.set $3
    (i32.add
     (local.get $0)
     (i32.const 2400)
    )
   )
  )
  (i32.store16
   (local.get $3)
   (local.get $2)
  )
  ;;@ silk/decode_indices.c:124:0
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2384)
   )
  )
  (local.set $2
   (i32.load
    (local.get $2)
   )
  )
  (local.set $2
   (call $_ec_dec_icdf
    (local.get $1)
    (local.get $2)
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.and
    (local.get $2)
    (i32.const 255)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2764)
   )
  )
  (i32.store8
   (local.get $2)
   (local.get $3)
  )
  ;;@ silk/decode_indices.c:130:0
  (local.set $3
   (call $_ec_dec_icdf
    (local.get $1)
    (i32.const 43831)
    (i32.const 8)
   )
  )
  (local.set $2
   (i32.and
    (local.get $3)
    (i32.const 255)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 2768)
   )
  )
  (i32.store8
   (local.get $10)
   (local.get $2)
  )
  ;;@ silk/decode_indices.c:132:0
  (local.set $2
   (i32.load
    (local.get $7)
   )
  )
  (if
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
   (block
    ;;@ silk/decode_indices.c:133:0
    (local.set $2
     (i32.shl
      (local.get $3)
      (i32.const 24)
     )
    )
    (local.set $2
     (i32.shr_s
      (local.get $2)
      (i32.const 24)
     )
    )
    (local.set $2
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
      (i32.const 36924)
     )
    )
    (local.set $2
     (i32.load
      (local.get $2)
     )
    )
    (local.set $2
     (call $_ec_dec_icdf
      (local.get $1)
      (local.get $2)
      (i32.const 8)
     )
    )
    (local.set $3
     (i32.and
      (local.get $2)
      (i32.const 255)
     )
    )
    (local.set $2
     (i32.add
      (local.get $0)
      (i32.const 2740)
     )
    )
    (i32.store8
     (local.get $2)
     (local.get $3)
    )
    ;;@ silk/decode_indices.c:132:0
    (local.set $2
     (i32.load
      (local.get $7)
     )
    )
    (if
     (i32.gt_s
      (local.get $2)
      (i32.const 1)
     )
     (block
      (local.set $2
       (i32.const 1)
      )
      (loop $while-in4
       ;;@ silk/decode_indices.c:133:0
       (local.set $3
        (i32.load8_s
         (local.get $10)
        )
       )
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (i32.const 36924)
        )
       )
       (local.set $3
        (i32.load
         (local.get $3)
        )
       )
       (local.set $3
        (call $_ec_dec_icdf
         (local.get $1)
         (local.get $3)
         (i32.const 8)
        )
       )
       (local.set $5
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $0)
          (i32.const 2740)
         )
        )
       )
       (i32.store8
        (local.get $3)
        (local.get $5)
       )
       ;;@ silk/decode_indices.c:132:0
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $3
        (i32.load
         (local.get $7)
        )
       )
       (br_if $while-in4
        (i32.lt_s
         (local.get $2)
         (local.get $3)
        )
       )
      )
     )
    )
   )
  )
  ;;@ silk/decode_indices.c:139:0
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.const 2769)
   )
   (if (result i32)
    (local.get $4)
    (i32.const 0)
    (block (result i32)
     ;;@ silk/decode_indices.c:140:0
     (local.set $2
      (call $_ec_dec_icdf
       (local.get $1)
       (i32.const 43856)
       (i32.const 8)
      )
     )
     (i32.and
      (local.get $2)
      (i32.const 255)
     )
    )
   )
  )
  ;;@ silk/decode_indices.c:145:0
  (local.set $3
   (i32.load8_s
    (local.get $8)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 2396)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $3)
  )
  ;;@ silk/decode_indices.c:150:0
  (local.set $1
   (call $_ec_dec_icdf
    (local.get $1)
    (i32.const 43873)
    (i32.const 8)
   )
  )
  (local.set $1
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
  )
  (local.set $0
   (i32.add
    (local.get $0)
    (i32.const 2770)
   )
  )
  (i32.store8
   (local.get $0)
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_silk_decode_pulses (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 160)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 80)
   )
  )
  (local.set $12
   (local.get $5)
  )
  ;;@ silk/decode_pulses.c:53:0
  (local.set $5
   (i32.shr_s
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $5
   (i32.add
    (i32.mul
     (local.get $5)
     (i32.const 9)
    )
    (i32.const 25728)
   )
  )
  (local.set $5
   (call $_ec_dec_icdf
    (local.get $0)
    (local.get $5)
    (i32.const 8)
   )
  )
  ;;@ silk/decode_pulses.c:58:0
  (local.set $9
   (i32.and
    (local.get $4)
    (i32.const -16)
   )
  )
  (if
   (i32.lt_s
    (local.get $9)
    (local.get $4)
   )
   (if
    ;;@ silk/decode_pulses.c:59:0
    (i32.eq
     (local.get $4)
     (i32.const 120)
    )
    (local.set $13
     (i32.const 8)
    )
    (call $_celt_fatal
     (i32.const 43328)
     (i32.const 43370)
     (i32.const 59)
    )
   )
   (block
    ;;@ silk/decode_pulses.c:57:0
    (local.set $13
     (i32.shr_s
      (local.get $4)
      (i32.const 4)
     )
    )
    (if
     ;;@ silk/decode_pulses.c:67:0
     (i32.le_s
      (local.get $4)
      (i32.const 15)
     )
     (block
      ;;@ silk/decode_pulses.c:114:0
      (call $_silk_decode_signs
       (local.get $0)
       (local.get $1)
       (local.get $4)
       (local.get $2)
       (local.get $3)
       (local.get $11)
      )
      (global.set $STACKTOP
       (local.get $12)
      )
      ;;@ silk/decode_pulses.c:115:0
      (return)
     )
    )
   )
  )
  ;;@ silk/decode_pulses.c:66:0
  (local.set $8
   (i32.add
    (i32.mul
     (local.get $5)
     (i32.const 18)
    )
    (i32.const 25536)
   )
  )
  (local.set $5
   (i32.const 0)
  )
  (loop $while-in
   ;;@ silk/decode_pulses.c:68:0
   (local.set $6
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 2)
     )
     (local.get $12)
    )
   )
   (i32.store
    (local.get $6)
    (i32.const 0)
   )
   ;;@ silk/decode_pulses.c:69:0
   (local.set $9
    (call $_ec_dec_icdf
     (local.get $0)
     (local.get $8)
     (i32.const 8)
    )
   )
   (i32.store
    (local.tee $10
     (i32.add
      (i32.shl
       (local.get $5)
       (i32.const 2)
      )
      (local.get $11)
     )
    )
    (local.get $9)
   )
   (if
    ;;@ silk/decode_pulses.c:72:0
    (i32.eq
     (local.get $9)
     (i32.const 17)
    )
    (block
     (local.set $9
      (i32.const 0)
     )
     (loop $while-in1
      ;;@ silk/decode_pulses.c:73:0
      (local.set $9
       (i32.add
        (local.get $9)
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $6)
       (local.get $9)
      )
      ;;@ silk/decode_pulses.c:76:0
      (local.set $7
       (i32.eq
        (local.get $9)
        (i32.const 10)
       )
      )
      (local.set $7
       (i32.add
        (local.get $7)
        (i32.const 25698)
       )
      )
      ;;@ silk/decode_pulses.c:75:0
      (i32.store
       (local.get $10)
       (local.tee $7
        (call $_ec_dec_icdf
         (local.get $0)
         (local.get $7)
         (i32.const 8)
        )
       )
      )
      ;;@ silk/decode_pulses.c:72:0
      (br_if $while-in1
       (i32.eq
        (local.get $7)
        (i32.const 17)
       )
      )
     )
    )
   )
   ;;@ silk/decode_pulses.c:67:0
   (local.set $5
    (i32.add
     (local.get $5)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $5)
     (local.get $13)
    )
   )
  )
  (local.set $5
   (i32.const 0)
  )
  (loop $while-in3
   ;;@ silk/decode_pulses.c:84:0
   (local.set $9
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 2)
     )
     (local.get $11)
    )
   )
   (local.set $6
    (i32.load
     (local.get $9)
    )
   )
   (local.set $9
    (i32.add
     (i32.shl
      (i32.shr_s
       (i32.shl
        (local.get $5)
        (i32.const 16)
       )
       (i32.const 12)
      )
      (i32.const 1)
     )
     (local.get $1)
    )
   )
   (if
    (i32.gt_s
     (local.get $6)
     (i32.const 0)
    )
    ;;@ silk/decode_pulses.c:85:0
    (call $_silk_shell_decoder
     (local.get $9)
     (local.get $0)
     (local.get $6)
    )
    (block
     (i64.store align=2
      (local.get $9)
      (i64.const 0)
     )
     (i64.store offset=8 align=2
      (local.get $9)
      (i64.const 0)
     )
     (i64.store offset=16 align=2
      (local.get $9)
      (i64.const 0)
     )
     ;;@ silk/decode_pulses.c:87:0
     (i64.store offset=24 align=2
      (local.get $9)
      (i64.const 0)
     )
    )
   )
   ;;@ silk/decode_pulses.c:83:0
   (local.set $5
    (i32.add
     (local.get $5)
     (i32.const 1)
    )
   )
   (br_if $while-in3
    (i32.ne
     (local.get $5)
     (local.get $13)
    )
   )
  )
  (local.set $9
   (i32.const 0)
  )
  (loop $while-in5
   ;;@ silk/decode_pulses.c:95:0
   (local.set $5
    (i32.add
     (i32.shl
      (local.get $9)
      (i32.const 2)
     )
     (local.get $12)
    )
   )
   (local.set $10
    (i32.load
     (local.get $5)
    )
   )
   (if
    (i32.gt_s
     (local.get $10)
     (i32.const 0)
    )
    (block
     ;;@ silk/decode_pulses.c:97:0
     (local.set $5
      (i32.shl
       (local.get $9)
       (i32.const 16)
      )
     )
     (local.set $5
      (i32.shr_s
       (local.get $5)
       (i32.const 12)
      )
     )
     (local.set $8
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
       (local.get $1)
      )
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in7
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in7
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=2
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in9
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in9
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=2
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=4
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in11
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in11
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=4
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=6
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in13
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in13
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=6
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=8
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in15
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in15
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=8
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=10
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in17
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in17
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=10
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=12
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in19
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in19
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=12
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=14
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in21
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in21
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=14
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=16
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in23
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in23
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=16
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=18
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in25
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in25
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=18
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=20
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in27
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in27
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=20
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=22
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in29
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in29
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=22
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=24
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in31
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in31
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=24
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=26
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in33
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in33
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=26
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=28
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in35
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in35
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=28
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:99:0
     (local.set $5
      (i32.load16_s offset=30
       (local.get $8)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in37
      ;;@ silk/decode_pulses.c:101:0
      (local.set $5
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
      )
      ;;@ silk/decode_pulses.c:102:0
      (local.set $7
       (call $_ec_dec_icdf
        (local.get $0)
        (i32.const 43854)
        (i32.const 8)
       )
      )
      (local.set $5
       (i32.add
        (local.get $5)
        (local.get $7)
       )
      )
      ;;@ silk/decode_pulses.c:100:0
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (br_if $while-in37
       (i32.ne
        (local.get $6)
        (local.get $10)
       )
      )
     )
     ;;@ silk/decode_pulses.c:104:0
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=30
      (local.get $8)
      (local.get $5)
     )
     ;;@ silk/decode_pulses.c:107:0
     (local.set $6
      (i32.shl
       (local.get $10)
       (i32.const 5)
      )
     )
     (local.set $5
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $11)
      )
     )
     (local.set $8
      (i32.load
       (local.get $5)
      )
     )
     (local.set $6
      (i32.or
       (local.get $6)
       (local.get $8)
      )
     )
     (i32.store
      (local.get $5)
      (local.get $6)
     )
    )
   )
   ;;@ silk/decode_pulses.c:94:0
   (local.set $9
    (i32.add
     (local.get $9)
     (i32.const 1)
    )
   )
   (br_if $while-in5
    (i32.ne
     (local.get $9)
     (local.get $13)
    )
   )
  )
  ;;@ silk/decode_pulses.c:114:0
  (call $_silk_decode_signs
   (local.get $0)
   (local.get $1)
   (local.get $4)
   (local.get $2)
   (local.get $3)
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $12)
  )
 )
 (func $_silk_decoder_set_fs (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  ;;@ silk/decoder_set_fs.c:43:0
  (local.set $12
   (i32.eq
    (local.get $1)
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.or
    (local.get $1)
    (i32.const 4)
   )
  )
  (local.set $8
   (i32.eq
    (local.get $3)
    (i32.const 12)
   )
  )
  (block $switch
   (block $switch-default
    (br_table $switch $switch-default $switch-default $switch-default $switch $switch-default $switch-default $switch-default $switch $switch-default
     (i32.sub
      (local.get $1)
      (i32.const 8)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 43391)
    (i32.const 43453)
    (i32.const 43)
   )
  )
  ;;@ silk/decoder_set_fs.c:44:0
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 2324)
   )
  )
  (block $switch2
   (block $switch-default5
    (br_table $switch2 $switch-default5 $switch2 $switch-default5
     (i32.sub
      (local.tee $3
       (i32.load
        (local.get $6)
       )
      )
      (i32.const 2)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 43475)
    (i32.const 43453)
    (i32.const 44)
   )
  )
  ;;@ silk/decoder_set_fs.c:47:0
  (local.set $4
   (i32.shl
    (local.get $1)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.shr_s
    (local.get $4)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.mul
    (local.get $4)
    (i32.const 5)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 2332)
   )
  )
  (i32.store
   (local.get $7)
   (local.get $5)
  )
  ;;@ silk/decoder_set_fs.c:48:0
  (local.set $3
   (i32.shl
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.mul
    (local.get $4)
    (i32.const 327680)
   )
  )
  (local.set $5
   (i32.shr_s
    (local.get $5)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.mul
    (local.get $3)
    (local.get $5)
   )
  )
  ;;@ silk/decoder_set_fs.c:51:0
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 2316)
   )
  )
  (local.set $3
   (i32.load
    (local.get $7)
   )
  )
  (local.set $9
   (i32.add
    (local.get $0)
    (i32.const 2320)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (local.set $2
     (block $__rjti$1 (result i32)
      (if
       (i32.eq
        (local.get $1)
        (local.get $3)
       )
       (block
        (local.set $3
         (i32.load
          (local.get $9)
         )
        )
        (drop
         (br_if $__rjti$1
          (i32.const 0)
          (i32.eq
           (local.get $2)
           (local.get $3)
          )
         )
        )
       )
      )
      ;;@ silk/decoder_set_fs.c:53:0
      (local.set $3
       (i32.add
        (local.get $0)
        (i32.const 2432)
       )
      )
      (local.set $10
       (i32.mul
        (local.get $4)
        (i32.const 1000)
       )
      )
      (local.set $3
       (call $_silk_resampler_init
        (local.get $3)
        (local.get $10)
        (local.get $2)
       )
      )
      ;;@ silk/decoder_set_fs.c:55:0
      (i32.store
       (local.get $9)
       (local.get $2)
      )
      ;;@ silk/decoder_set_fs.c:58:0
      (local.set $2
       (i32.load
        (local.get $7)
       )
      )
      (if (result i32)
       (i32.eq
        (local.get $1)
        (local.get $2)
       )
       (local.get $3)
       (block
        (local.set $2
         (local.get $3)
        )
        (local.set $3
         (i32.const 0)
        )
        (br $__rjti$2)
       )
      )
     )
    )
    (local.set $3
     (i32.add
      (local.get $0)
      (i32.const 2328)
     )
    )
    (local.set $3
     (i32.load
      (local.get $3)
     )
    )
    (if
     (i32.ne
      (local.get $3)
      (local.get $5)
     )
     (block
      (local.set $3
       (i32.const 1)
      )
      (br $__rjti$2)
     )
    )
    (br $__rjto$2)
   )
   (local.set $6
    (i32.eq
     (i32.load
      (local.get $6)
     )
     (i32.const 4)
    )
   )
   (local.set $9
    (i32.add
     (local.get $0)
     (i32.const 2384)
    )
   )
   ;;@ silk/decoder_set_fs.c:62:0
   (local.set $10
    (select
     (i32.const 43903)
     (i32.const 43926)
     (local.get $6)
    )
   )
   ;;@ silk/decoder_set_fs.c:68:0
   (local.set $6
    (select
     (i32.const 25488)
     (i32.const 43914)
     (local.get $6)
    )
   )
   ;;@ silk/decoder_set_fs.c:59:0
   (i32.store
    (local.get $9)
    (select
     (local.get $10)
     (local.get $6)
     (local.get $12)
    )
   )
   (if
    (i32.eqz
     (local.get $3)
    )
    (block
     ;;@ silk/decoder_set_fs.c:73:0
     (local.set $3
      (i32.mul
       (local.get $4)
       (i32.const 20)
      )
     )
     (local.set $4
      (i32.add
       (local.get $0)
       (i32.const 2336)
      )
     )
     (i32.store
      (local.get $4)
      (local.get $3)
     )
     (local.set $3
      (i32.add
       (local.get $0)
       (i32.const 2340)
      )
     )
     ;;@ silk/decoder_set_fs.c:74:0
     (local.set $4
      (select
       (i32.const 10)
       (i32.const 16)
       (local.get $8)
      )
     )
     (local.set $8
      (select
       (i32.const 36948)
       (i32.const 36988)
       (local.get $8)
      )
     )
     (i32.store
      (local.get $3)
      (local.get $4)
     )
     ;;@ silk/decoder_set_fs.c:79:0
     (local.set $3
      (i32.add
       (local.get $0)
       (i32.const 2732)
      )
     )
     (i32.store
      (local.get $3)
      (local.get $8)
     )
     (block $switch6
      (block $switch-default9
       (block $switch-case8
        (block $switch-case7
         (br_table $switch-case8 $switch-default9 $switch-default9 $switch-default9 $switch-case7 $switch-default9
          (i32.sub
           (local.get $1)
           (i32.const 12)
          )
         )
        )
        (local.set $11
         (i32.const 43888)
        )
        (br $switch6)
       )
       (local.set $11
        (i32.const 43882)
       )
       (br $switch6)
      )
      (if
       (local.get $12)
       (local.set $11
        (i32.const 43873)
       )
       ;;@ silk/decoder_set_fs.c:89:0
       (call $_celt_fatal
        (i32.const 45506)
        (i32.const 43453)
        (i32.const 89)
       )
      )
     )
     (i32.store
      (i32.add
       (local.get $0)
       (i32.const 2380)
      )
      (local.get $11)
     )
     ;;@ silk/decoder_set_fs.c:91:0
     (local.set $3
      (i32.add
       (local.get $0)
       (i32.const 2376)
      )
     )
     (i32.store
      (local.get $3)
      (i32.const 1)
     )
     ;;@ silk/decoder_set_fs.c:92:0
     (local.set $3
      (i32.add
       (local.get $0)
       (i32.const 2308)
      )
     )
     (i32.store
      (local.get $3)
      (i32.const 100)
     )
     ;;@ silk/decoder_set_fs.c:93:0
     (local.set $3
      (i32.add
       (local.get $0)
       (i32.const 2312)
      )
     )
     (i32.store8
      (local.get $3)
      (i32.const 10)
     )
     ;;@ silk/decoder_set_fs.c:94:0
     (local.set $3
      (i32.add
       (local.get $0)
       (i32.const 4164)
      )
     )
     (i32.store
      (local.get $3)
      (i32.const 0)
     )
     ;;@ silk/decoder_set_fs.c:96:0
     (local.set $3
      (i32.add
       (local.get $0)
       (i32.const 1284)
      )
     )
     ;;@ silk/decoder_set_fs.c:95:0
     (drop
      (call $_memset
       (local.get $3)
       (i32.const 0)
       (i32.const 1024)
      )
     )
    )
   )
   ;;@ silk/decoder_set_fs.c:99:0
   (i32.store
    (local.get $7)
    (local.get $1)
   )
   ;;@ silk/decoder_set_fs.c:100:0
   (local.set $0
    (i32.add
     (local.get $0)
     (i32.const 2328)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $5)
   )
  )
  ;;@ silk/decoder_set_fs.c:104:0
  (local.set $0
   (i32.add
    (local.get $5)
    (i32.const -1)
   )
  )
  (if
   (i32.lt_u
    (local.get $0)
    (i32.const 320)
   )
   ;;@ silk/decoder_set_fs.c:106:0
   (return
    (local.get $2)
   )
   ;;@ silk/decoder_set_fs.c:104:0
   (call $_celt_fatal
    (i32.const 43562)
    (i32.const 43453)
    (i32.const 104)
   )
  )
  (i32.const 0)
 )
 (func $_silk_InitDecoder (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  ;;@ silk/dec_API.c:71:0
  (drop
   (call $_silk_init_decoder
    (local.get $0)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 4264)
   )
  )
  (local.set $1
   (call $_silk_init_decoder
    (local.get $1)
   )
  )
  ;;@ silk/dec_API.c:73:0
  (i64.store align=4
   (local.tee $2
    (i32.add
     (local.get $0)
     (i32.const 8528)
    )
   )
   (i64.const 0)
  )
  (i32.store offset=8
   (local.get $2)
   (i32.const 0)
  )
  ;;@ silk/dec_API.c:75:0
  (local.set $0
   (i32.add
    (local.get $0)
    (i32.const 8548)
   )
  )
  (i32.store
   (local.get $0)
   (i32.const 0)
  )
  ;;@ silk/dec_API.c:77:0
  (local.get $1)
 )
 (func $_silk_Decode (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local.set $15
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 672)
   )
  )
  ;;@ silk/dec_API.c:92:0
  (i32.store
   (local.tee $17
    (i32.add
     (local.get $15)
     (i32.const 660)
    )
   )
   (i32.const 0)
  )
  ;;@ silk/dec_API.c:98:0
  (i64.store
   (local.tee $11
    (i32.add
     (local.get $15)
     (i32.const 640)
    )
   )
   (i64.const 0)
  )
  (if
   ;;@ silk/dec_API.c:107:0
   (i32.ge_u
    (i32.add
     (local.tee $8
      (i32.load offset=4
       (local.get $1)
      )
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 43647)
    (i32.const 43738)
    (i32.const 107)
   )
  )
  (if
   ;;@ silk/dec_API.c:112:0
   (local.get $3)
   (block
    (local.set $3
     (i32.const 0)
    )
    (loop $while-in
     ;;@ silk/dec_API.c:114:0
     (i32.store
      (i32.add
       (i32.add
        (i32.mul
         (local.get $3)
         (i32.const 4264)
        )
        (local.get $0)
       )
       (i32.const 2388)
      )
      (i32.const 0)
     )
     ;;@ silk/dec_API.c:113:0
     (br_if $while-in
      (i32.ne
       (local.get $8)
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
  (if
   ;;@ silk/dec_API.c:119:0
   (i32.gt_s
    (local.get $8)
    (i32.load
     (local.tee $20
      (i32.add
       (local.get $0)
       (i32.const 8544)
      )
     )
    )
   )
   (block
    ;;@ silk/dec_API.c:120:0
    (local.set $3
     (call $_silk_init_decoder
      (i32.add
       (local.get $0)
       (i32.const 4264)
      )
     )
    )
    ;;@ silk/dec_API.c:123:0
    (local.set $8
     (i32.load offset=4
      (local.get $1)
     )
    )
   )
   (local.set $3
    (i32.const 0)
   )
  )
  (local.set $22
   (if (result i32)
    (i32.eq
     (local.get $8)
     (i32.const 1)
    )
    (if (result i32)
     (i32.eq
      (i32.load
       (local.get $20)
      )
      (i32.const 2)
     )
     ;;@ silk/dec_API.c:124:0
     (i32.eq
      (i32.load offset=12
       (local.get $1)
      )
      (i32.mul
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 2316)
        )
       )
       (i32.const 1000)
      )
     )
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
  (if
   ;;@ silk/dec_API.c:126:0
   (i32.and
    (i32.eqz
     (i32.load
      (local.tee $14
       (i32.add
        (local.get $0)
        (i32.const 2388)
       )
      )
     )
    )
    (i32.gt_s
     (local.get $8)
     (i32.const 0)
    )
   )
   (block $label$break$L16
    (local.set $8
     (i32.const 0)
    )
    (block $__rjto$1
     (block $__rjti$1
      (loop $label$continue$L18
       (block $__rjti$0
        (local.set $12
         (block $switch (result i32)
          (block $switch-case3
           (block $switch-case2
            (block $switch-case1
             (block $switch-case0
              ;;@ silk/dec_API.c:129:0
              (br_table $switch-case0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $switch-case0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $switch-case1 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $switch-case2 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $switch-case3 $__rjti$0
               (i32.load offset=16
                (local.get $1)
               )
              )
             )
             (local.set $9
              (i32.const 1)
             )
             (br $switch
              (i32.const 2)
             )
            )
            (local.set $9
             (i32.const 1)
            )
            (br $switch
             (i32.const 4)
            )
           )
           (local.set $9
            (i32.const 2)
           )
           (br $switch
            (i32.const 4)
           )
          )
          (local.set $9
           (i32.const 3)
          )
          (i32.const 4)
         )
        )
        (i32.store
         (i32.add
          (i32.add
           (i32.mul
            (local.get $8)
            (i32.const 4264)
           )
           (local.get $0)
          )
          (i32.const 2392)
         )
         (local.get $9)
        )
        (i32.store
         (i32.add
          (i32.add
           (i32.mul
            (local.get $8)
            (i32.const 4264)
           )
           (local.get $0)
          )
          (i32.const 2324)
         )
         (local.get $12)
        )
        (block $switch4
         ;;@ silk/dec_API.c:150:0
         (br_table $switch4 $__rjti$1 $__rjti$1 $__rjti$1 $switch4 $__rjti$1 $__rjti$1 $__rjti$1 $switch4 $__rjti$1
          (i32.sub
           (local.tee $9
            (i32.shr_s
             (i32.load offset=12
              (local.get $1)
             )
             (i32.const 10)
            )
           )
           (i32.const 7)
          )
         )
        )
        ;;@ silk/dec_API.c:156:0
        (local.set $3
         (i32.add
          (call $_silk_decoder_set_fs
           (i32.add
            (i32.mul
             (local.get $8)
             (i32.const 4264)
            )
            (local.get $0)
           )
           (i32.add
            (local.get $9)
            (i32.const 1)
           )
           (i32.load offset=8
            (local.get $1)
           )
          )
          (local.get $3)
         )
        )
        ;;@ silk/dec_API.c:127:0
        (br_if $label$continue$L18
         (i32.lt_s
          (local.tee $8
           (i32.add
            (local.get $8)
            (i32.const 1)
           )
          )
          (local.tee $9
           (i32.load offset=4
            (local.get $1)
           )
          )
         )
        )
        (local.set $10
         (local.get $3)
        )
        (local.set $7
         (local.get $9)
        )
        (br $label$break$L16)
       )
      )
      ;;@ silk/dec_API.c:146:0
      (call $_celt_fatal
       (i32.const 45506)
       (i32.const 43738)
       (i32.const 146)
      )
      (br $__rjto$1)
     )
     ;;@ silk/dec_API.c:152:0
     (call $_celt_fatal
      (i32.const 45506)
      (i32.const 43738)
      (i32.const 152)
     )
    )
   )
   (block
    (local.set $10
     (local.get $3)
    )
    (local.set $7
     (local.get $8)
    )
   )
  )
  (local.set $12
   (i32.add
    (local.get $15)
    (i32.const 656)
   )
  )
  (local.set $13
   (i32.add
    (local.get $15)
    (i32.const 648)
   )
  )
  (local.set $3
   (if (result i32)
    ;;@ silk/dec_API.c:160:0
    (i32.eq
     (local.tee $8
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 2)
    )
    (if (result i32)
     (i32.eq
      (local.get $7)
      (i32.const 2)
     )
     (block $do-once (result i32)
      (if
       (i32.ne
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const 8540)
         )
        )
        (i32.const 1)
       )
       (if
        (i32.ne
         (i32.load
          (local.get $20)
         )
         (i32.const 1)
        )
        (block
         (local.set $8
          (i32.const 2)
         )
         (br $do-once
          (i32.const 2)
         )
        )
       )
      )
      ;;@ silk/dec_API.c:161:0
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 8528)
       )
       (i32.const 0)
      )
      ;;@ silk/dec_API.c:162:0
      (i32.store
       (i32.add
        (local.get $0)
        (i32.const 8536)
       )
       (i32.const 0)
      )
      ;;@ silk/dec_API.c:163:0
      (drop
       (call $_memcpy
        (i32.add
         (local.get $0)
         (i32.const 6696)
        )
        (i32.add
         (local.get $0)
         (i32.const 2432)
        )
        (i32.const 300)
       )
      )
      ;;@ silk/dec_API.c:165:0
      (local.set $8
       (i32.load
        (local.get $1)
       )
      )
      ;;@ silk/dec_API.c:166:0
      (i32.load offset=4
       (local.get $1)
      )
     )
     (block (result i32)
      (local.set $8
       (i32.const 2)
      )
      (local.get $7)
     )
    )
    (local.get $7)
   )
  )
  ;;@ silk/dec_API.c:165:0
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 8540)
   )
   (local.get $8)
  )
  ;;@ silk/dec_API.c:166:0
  (i32.store
   (local.get $20)
   (local.get $3)
  )
  (if
   ;;@ silk/dec_API.c:168:0
   (i32.gt_u
    (i32.add
     (i32.load offset=8
      (local.get $1)
     )
     (i32.const -8000)
    )
    (i32.const 40000)
   )
   (block
    (global.set $STACKTOP
     (local.get $15)
    )
    ;;@ silk/dec_API.c:385:0
    (return
     (i32.const -200)
    )
   )
  )
  (if
   ;;@ silk/dec_API.c:174:0
   (i32.eqz
    (local.tee $23
     (i32.eq
      (local.get $2)
      (i32.const 1)
     )
    )
   )
   (if
    (i32.eqz
     (i32.load
      (local.get $14)
     )
    )
    (block
     (if
      ;;@ silk/dec_API.c:177:0
      (i32.gt_s
       (local.get $3)
       (i32.const 0)
      )
      (block
       (local.set $7
        (i32.const 0)
       )
       (loop $while-in11
        ;;@ silk/dec_API.c:178:0
        (local.set $8
         (i32.gt_s
          (i32.load
           (local.tee $9
            (i32.add
             (i32.add
              (i32.mul
               (local.get $7)
               (i32.const 4264)
              )
              (local.get $0)
             )
             (i32.const 2392)
            )
           )
          )
          (i32.const 0)
         )
        )
        (local.set $3
         (call $_ec_dec_bit_logp
          (local.get $4)
          (i32.const 1)
         )
        )
        (if
         (local.get $8)
         (block
          (local.set $8
           (i32.const 0)
          )
          (loop $while-in13
           ;;@ silk/dec_API.c:179:0
           (i32.store
            (i32.add
             (i32.add
              (i32.add
               (i32.mul
                (local.get $7)
                (i32.const 4264)
               )
               (local.get $0)
              )
              (i32.const 2404)
             )
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
            )
            (local.get $3)
           )
           ;;@ silk/dec_API.c:178:0
           (local.set $18
            (i32.lt_s
             (local.tee $8
              (i32.add
               (local.get $8)
               (i32.const 1)
              )
             )
             (i32.load
              (local.get $9)
             )
            )
           )
           (local.set $3
            (call $_ec_dec_bit_logp
             (local.get $4)
             (i32.const 1)
            )
           )
           (br_if $while-in13
            (local.get $18)
           )
          )
         )
        )
        ;;@ silk/dec_API.c:181:0
        (i32.store
         (i32.add
          (i32.add
           (i32.mul
            (local.get $7)
            (i32.const 4264)
           )
           (local.get $0)
          )
          (i32.const 2416)
         )
         (local.get $3)
        )
        ;;@ silk/dec_API.c:177:0
        (br_if $while-in11
         (i32.lt_s
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (local.tee $3
           (i32.load offset=4
            (local.get $1)
           )
          )
         )
        )
       )
       (local.set $3
        (if (result i32)
         ;;@ silk/dec_API.c:184:0
         (i32.gt_s
          (local.get $3)
          (i32.const 0)
         )
         (block (result i32)
          (local.set $3
           (i32.const 0)
          )
          (loop $while-in15 (result i32)
           ;;@ silk/dec_API.c:185:0
           (i64.store align=4
            (local.tee $7
             (i32.add
              (i32.add
               (i32.mul
                (local.get $3)
                (i32.const 4264)
               )
               (local.get $0)
              )
              (i32.const 2420)
             )
            )
            (i64.const 0)
           )
           (i32.store offset=8
            (local.get $7)
            (i32.const 0)
           )
           (if
            ;;@ silk/dec_API.c:186:0
            (i32.load
             (i32.add
              (i32.add
               (i32.mul
                (local.get $3)
                (i32.const 4264)
               )
               (local.get $0)
              )
              (i32.const 2416)
             )
            )
            (block $do-once16
             (if
              ;;@ silk/dec_API.c:187:0
              (i32.eq
               (local.tee $9
                (i32.load
                 (local.tee $8
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $3)
                     (i32.const 4264)
                    )
                    (local.get $0)
                   )
                   (i32.const 2392)
                  )
                 )
                )
               )
               (i32.const 1)
              )
              (block
               ;;@ silk/dec_API.c:188:0
               (i32.store
                (local.get $7)
                (i32.const 1)
               )
               (br $do-once16)
              )
             )
             ;;@ silk/dec_API.c:190:0
             (local.set $9
              (i32.add
               (call $_ec_dec_icdf
                (local.get $4)
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $9)
                   (i32.const 2)
                  )
                  (i32.const 37020)
                 )
                )
                (i32.const 8)
               )
               (i32.const 1)
              )
             )
             (if
              ;;@ silk/dec_API.c:191:0
              (i32.gt_s
               (local.tee $8
                (i32.load
                 (local.get $8)
                )
               )
               (i32.const 0)
              )
              (block
               (local.set $7
                (i32.const 0)
               )
               (loop $while-in19
                ;;@ silk/dec_API.c:192:0
                (i32.store
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $3)
                     (i32.const 4264)
                    )
                    (local.get $0)
                   )
                   (i32.const 2420)
                  )
                  (i32.shl
                   (local.get $7)
                   (i32.const 2)
                  )
                 )
                 (i32.and
                  (i32.shr_u
                   (local.get $9)
                   (local.get $7)
                  )
                  (i32.const 1)
                 )
                )
                ;;@ silk/dec_API.c:191:0
                (br_if $while-in19
                 (i32.lt_s
                  (local.tee $7
                   (i32.add
                    (local.get $7)
                    (i32.const 1)
                   )
                  )
                  (local.get $8)
                 )
                )
               )
              )
             )
            )
           )
           ;;@ silk/dec_API.c:184:0
           (br_if $while-in15
            (i32.lt_s
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.tee $7
              (i32.load offset=4
               (local.get $1)
              )
             )
            )
           )
           (local.get $7)
          )
         )
         (local.get $3)
        )
       )
      )
     )
     (if
      ;;@ silk/dec_API.c:198:0
      (i32.eqz
       (local.get $2)
      )
      (if
       ;;@ silk/dec_API.c:200:0
       (i32.gt_s
        (i32.load
         (local.tee $18
          (i32.add
           (local.get $0)
           (i32.const 2392)
          )
         )
        )
        (i32.const 0)
       )
       (block
        (local.set $19
         (i32.add
          (local.get $0)
          (i32.const 6684)
         )
        )
        (local.set $8
         (i32.const 0)
        )
        (loop $while-in21
         (if
          ;;@ silk/dec_API.c:201:0
          (i32.gt_s
           (local.get $3)
           (i32.const 0)
          )
          (block
           (local.set $9
            (i32.add
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
             (local.get $19)
            )
           )
           (local.set $16
            (i32.add
             (local.get $8)
             (i32.const -1)
            )
           )
           (if
            (local.get $8)
            (block
             (local.set $7
              (i32.const 0)
             )
             (loop $while-in27
              ;;@ silk/dec_API.c:202:0
              (local.set $21
               (i32.add
                (i32.mul
                 (local.get $7)
                 (i32.const 4264)
                )
                (local.get $0)
               )
              )
              (if
               (i32.load
                (i32.add
                 (i32.add
                  (i32.add
                   (i32.mul
                    (local.get $7)
                    (i32.const 4264)
                   )
                   (local.get $0)
                  )
                  (i32.const 2420)
                 )
                 (i32.shl
                  (local.get $8)
                  (i32.const 2)
                 )
                )
               )
               ;;@ silk/dec_API.c:201:0
               (block
                (if
                 ;;@ silk/dec_API.c:206:0
                 (i32.and
                  (i32.eqz
                   (local.get $7)
                  )
                  (i32.eq
                   (local.get $3)
                   (i32.const 2)
                  )
                 )
                 (block $do-once28
                  ;;@ silk/dec_API.c:207:0
                  (call $_silk_stereo_decode_pred
                   (local.get $4)
                   (local.get $11)
                  )
                  ;;@ silk/dec_API.c:208:0
                  (br_if $do-once28
                   (i32.load
                    (local.get $9)
                   )
                  )
                  ;;@ silk/dec_API.c:209:0
                  (call $_silk_stereo_decode_mid_only
                   (local.get $4)
                   (local.get $17)
                  )
                 )
                )
                ;;@ silk/dec_API.c:218:0
                (call $_silk_decode_indices
                 (local.get $21)
                 (local.get $4)
                 (local.get $8)
                 (i32.const 1)
                 (select
                  (i32.const 2)
                  (i32.const 0)
                  (i32.load
                   (i32.add
                    (i32.add
                     (i32.add
                      (i32.mul
                       (local.get $7)
                       (i32.const 4264)
                      )
                      (local.get $0)
                     )
                     (i32.const 2420)
                    )
                    (i32.shl
                     (local.get $16)
                     (i32.const 2)
                    )
                   )
                  )
                 )
                )
                ;;@ silk/dec_API.c:219:0
                (call $_silk_decode_pulses
                 (local.get $4)
                 (local.get $15)
                 (i32.load8_s
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $7)
                     (i32.const 4264)
                    )
                    (local.get $0)
                   )
                   (i32.const 2765)
                  )
                 )
                 (i32.load8_s
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $7)
                     (i32.const 4264)
                    )
                    (local.get $0)
                   )
                   (i32.const 2766)
                  )
                 )
                 (i32.load
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $7)
                     (i32.const 4264)
                    )
                    (local.get $0)
                   )
                   (i32.const 2328)
                  )
                 )
                )
                (local.set $3
                 (i32.load offset=4
                  (local.get $1)
                 )
                )
               )
              )
              ;;@ silk/dec_API.c:201:0
              (br_if $while-in27
               (i32.lt_s
                (local.tee $7
                 (i32.add
                  (local.get $7)
                  (i32.const 1)
                 )
                )
                (local.get $3)
               )
              )
             )
            )
            (block
             (local.set $7
              (i32.const 0)
             )
             (loop $while-in23
              ;;@ silk/dec_API.c:202:0
              (local.set $16
               (i32.add
                (i32.mul
                 (local.get $7)
                 (i32.const 4264)
                )
                (local.get $0)
               )
              )
              (if
               (i32.load
                (i32.add
                 (i32.add
                  (i32.mul
                   (local.get $7)
                   (i32.const 4264)
                  )
                  (local.get $0)
                 )
                 (i32.const 2420)
                )
               )
               ;;@ silk/dec_API.c:201:0
               (block
                (if
                 ;;@ silk/dec_API.c:206:0
                 (i32.and
                  (i32.eqz
                   (local.get $7)
                  )
                  (i32.eq
                   (local.get $3)
                   (i32.const 2)
                  )
                 )
                 (block $do-once24
                  ;;@ silk/dec_API.c:207:0
                  (call $_silk_stereo_decode_pred
                   (local.get $4)
                   (local.get $11)
                  )
                  ;;@ silk/dec_API.c:208:0
                  (br_if $do-once24
                   (i32.load
                    (local.get $9)
                   )
                  )
                  ;;@ silk/dec_API.c:209:0
                  (call $_silk_stereo_decode_mid_only
                   (local.get $4)
                   (local.get $17)
                  )
                 )
                )
                ;;@ silk/dec_API.c:218:0
                (call $_silk_decode_indices
                 (local.get $16)
                 (local.get $4)
                 (i32.const 0)
                 (i32.const 1)
                 (i32.const 0)
                )
                ;;@ silk/dec_API.c:219:0
                (call $_silk_decode_pulses
                 (local.get $4)
                 (local.get $15)
                 (i32.load8_s
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $7)
                     (i32.const 4264)
                    )
                    (local.get $0)
                   )
                   (i32.const 2765)
                  )
                 )
                 (i32.load8_s
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $7)
                     (i32.const 4264)
                    )
                    (local.get $0)
                   )
                   (i32.const 2766)
                  )
                 )
                 (i32.load
                  (i32.add
                   (i32.add
                    (i32.mul
                     (local.get $7)
                     (i32.const 4264)
                    )
                    (local.get $0)
                   )
                   (i32.const 2328)
                  )
                 )
                )
                (local.set $3
                 (i32.load offset=4
                  (local.get $1)
                 )
                )
               )
              )
              ;;@ silk/dec_API.c:201:0
              (br_if $while-in23
               (i32.lt_s
                (local.tee $7
                 (i32.add
                  (local.get $7)
                  (i32.const 1)
                 )
                )
                (local.get $3)
               )
              )
             )
            )
           )
          )
         )
         ;;@ silk/dec_API.c:200:0
         (br_if $while-in21
          (i32.lt_s
           (local.tee $8
            (i32.add
             (local.get $8)
             (i32.const 1)
            )
           )
           (i32.load
            (local.get $18)
           )
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (if
   ;;@ silk/dec_API.c:228:0
   (i32.eq
    (local.get $3)
    (i32.const 2)
   )
   (block $do-once30
    (block $__rjti$4
     (block $__rjti$3
      (block $__rjti$2
       (block $switch-case34
        (block $switch-case33
         (br_table $switch-case33 $__rjti$4 $switch-case34 $__rjti$4
          (local.get $2)
         )
        )
        ;;@ silk/dec_API.c:232:0
        (call $_silk_stereo_decode_pred
         (local.get $4)
         (local.get $11)
        )
        ;;@ silk/dec_API.c:234:0
        (br_if $__rjti$2
         (i32.eqz
          (i32.load
           (i32.add
            (i32.add
             (local.get $0)
             (i32.const 6668)
            )
            (i32.shl
             (i32.load
              (local.get $14)
             )
             (i32.const 2)
            )
           )
          )
         )
        )
        (br $__rjti$3)
       )
       ;;@ silk/dec_API.c:230:0
       (br_if $__rjti$4
        (i32.ne
         (i32.load
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 2420)
           )
           (i32.shl
            (i32.load
             (local.get $14)
            )
            (i32.const 2)
           )
          )
         )
         (i32.const 1)
        )
       )
       ;;@ silk/dec_API.c:232:0
       (call $_silk_stereo_decode_pred
        (local.get $4)
        (local.get $11)
       )
       ;;@ silk/dec_API.c:235:0
       (br_if $__rjti$2
        (i32.eqz
         (i32.load
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 6684)
           )
           (i32.shl
            (i32.load
             (local.get $14)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (br $__rjti$3)
      )
      ;;@ silk/dec_API.c:237:0
      (call $_silk_stereo_decode_mid_only
       (local.get $4)
       (local.get $17)
      )
      (br $do-once30)
     )
     ;;@ silk/dec_API.c:239:0
     (i32.store
      (local.get $17)
      (i32.const 0)
     )
     (br $do-once30)
    )
    ;;@ silk/dec_API.c:243:0
    (i32.store
     (local.get $11)
     (i32.load16_s
      (i32.add
       (local.get $0)
       (i32.const 8528)
      )
     )
    )
    (i32.store offset=4
     (local.get $11)
     (i32.load16_s
      (i32.add
       (local.get $0)
       (i32.const 8530)
      )
     )
    )
   )
  )
  (local.set $18
   (if (result i32)
    ;;@ silk/dec_API.c:262:0
    (block (result i32)
     (if
      ;;@ silk/dec_API.c:249:0
      (i32.and
       (i32.eqz
        (i32.load
         (local.get $17)
        )
       )
       (i32.eq
        (local.tee $3
         (i32.load offset=4
          (local.get $1)
         )
        )
        (i32.const 2)
       )
      )
      (local.set $3
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 8548)
          )
         )
         (i32.const 1)
        )
        (block (result i32)
         ;;@ silk/dec_API.c:252:0
         (local.set $3
          (i32.add
           (local.get $0)
           (i32.const 6572)
          )
         )
         ;;@ silk/dec_API.c:251:0
         (drop
          (call $_memset
           (i32.add
            (local.get $0)
            (i32.const 5548)
           )
           (i32.const 0)
           (i32.const 1024)
          )
         )
         ;;@ silk/dec_API.c:252:0
         (i32.store
          (local.get $3)
          (i32.const 100)
         )
         ;;@ silk/dec_API.c:253:0
         (i32.store8
          (i32.add
           (local.get $0)
           (i32.const 6576)
          )
          (i32.const 10)
         )
         ;;@ silk/dec_API.c:254:0
         (i32.store
          (i32.add
           (local.get $0)
           (i32.const 8428)
          )
          (i32.const 0)
         )
         ;;@ silk/dec_API.c:255:0
         (i32.store
          (i32.add
           (local.get $0)
           (i32.const 6640)
          )
          (i32.const 1)
         )
         ;;@ silk/dec_API.c:261:0
         (i32.load offset=4
          (local.get $1)
         )
        )
        (i32.const 2)
       )
      )
     )
     (local.tee $21
      (i32.lt_s
       (i32.mul
        (i32.load offset=12
         (local.get $1)
        )
        (local.get $3)
       )
       (i32.mul
        (i32.load offset=8
         (local.get $1)
        )
        (i32.load
         (local.get $1)
        )
       )
      )
     )
    )
    (block (result i32)
     ;;@ silk/dec_API.c:263:0
     (local.set $8
      (call $_llvm_stacksave)
     )
     ;;@ silk/dec_API.c:268:0
     (i32.store
      (local.get $13)
      (local.get $5)
     )
     ;;@ silk/dec_API.c:269:0
     (local.set $3
      (local.get $5)
     )
     (local.set $7
      (i32.add
       (local.get $0)
       (i32.const 2328)
      )
     )
     (local.get $13)
    )
    (block (result i32)
     ;;@ silk/dec_API.c:263:0
     (local.set $9
      (i32.mul
       (i32.add
        (i32.load
         (local.tee $7
          (i32.add
           (local.get $0)
           (i32.const 2328)
          )
         )
        )
        (i32.const 2)
       )
       (local.get $3)
      )
     )
     (local.set $8
      (call $_llvm_stacksave)
     )
     (local.set $3
      (global.get $STACKTOP)
     )
     (global.set $STACKTOP
      (i32.add
       (global.get $STACKTOP)
       (i32.and
        (i32.add
         (i32.shl
          (local.get $9)
          (i32.const 1)
         )
         (i32.const 15)
        )
        (i32.const -16)
       )
      )
     )
     ;;@ silk/dec_API.c:271:0
     (i32.store
      (local.get $13)
      (local.get $3)
     )
     (local.get $13)
    )
   )
  )
  ;;@ silk/dec_API.c:272:0
  (i32.store offset=4
   (local.get $13)
   (local.tee $24
    (i32.add
     (i32.add
      (i32.shl
       (i32.load
        (local.get $7)
       )
       (i32.const 1)
      )
      (local.get $3)
     )
     (i32.const 4)
    )
   )
  )
  (block $__rjto$5
   (block $__rjti$5
    (local.set $9
     (if (result i32)
      ;;@ silk/dec_API.c:275:0
      (local.get $2)
      (if (result i32)
       ;;@ silk/dec_API.c:278:0
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const 8548)
        )
       )
       (if (result i32)
        ;;@ silk/dec_API.c:279:0
        (i32.and
         (i32.eq
          (local.tee $7
           (i32.load offset=4
            (local.get $1)
           )
          )
          (i32.const 2)
         )
         (i32.eq
          (local.get $2)
          (i32.const 2)
         )
        )
        (block
         (local.set $7
          (i32.eq
           (i32.load
            (i32.add
             (i32.add
              (local.get $0)
              (i32.const 6684)
             )
             (i32.shl
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 6652)
               )
              )
              (i32.const 2)
             )
            )
           )
           (i32.const 1)
          )
         )
         (br $__rjti$5)
        )
        (i32.const 0)
       )
       (block
        (local.set $7
         (i32.const 1)
        )
        (br $__rjti$5)
       )
      )
      (block
       ;;@ silk/dec_API.c:276:0
       (local.set $7
        (i32.eqz
         (i32.load
          (local.get $17)
         )
        )
       )
       (br $__rjti$5)
      )
     )
    )
    (br $__rjto$5)
   )
   ;;@ silk/dec_API.c:282:0
   (local.set $9
    (local.get $7)
   )
   (local.set $7
    (i32.load offset=4
     (local.get $1)
    )
   )
  )
  (block $__rjto$6
   (block $__rjti$6
    (local.set $7
     (if (result i32)
      (i32.gt_s
       (local.get $7)
       (i32.const 0)
      )
      (block (result i32)
       (local.set $19
        (i32.eq
         (local.get $2)
         (i32.const 2)
        )
       )
       (local.set $16
        (i32.add
         (local.get $0)
         (i32.const 8548)
        )
       )
       (local.set $2
        (if (result i32)
         (local.get $9)
         (block (result i32)
          (local.set $7
           (i32.const 0)
          )
          (loop $while-in38 (result i32)
           ;;@ silk/dec_API.c:283:0
           (local.set $9
            (i32.eqz
             (local.get $7)
            )
           )
           ;;@ silk/dec_API.c:300:0
           (local.set $10
            (i32.add
             (local.get $10)
             (call $_silk_decode_frame
              (i32.add
               (i32.mul
                (local.get $7)
                (i32.const 4264)
               )
               (local.get $0)
              )
              (local.get $4)
              (i32.add
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $7)
                  (i32.const 2)
                 )
                 (local.get $13)
                )
               )
               (i32.const 4)
              )
              (local.get $12)
              (local.get $2)
              (if (result i32)
               ;;@ silk/dec_API.c:289:0
               (i32.lt_s
                ;;@ silk/dec_API.c:287:0
                (local.tee $10
                 (i32.sub
                  (i32.load
                   (local.get $14)
                  )
                  (local.get $7)
                 )
                )
                (i32.const 1)
               )
               (i32.const 0)
               (block $do-once39 (result i32)
                (if
                 (local.get $19)
                 ;;@ silk/dec_API.c:292:0
                 (br $do-once39
                  (select
                   (i32.const 2)
                   (i32.const 0)
                   (i32.load
                    (i32.add
                     (i32.add
                      (i32.add
                       (i32.mul
                        (local.get $7)
                        (i32.const 4264)
                       )
                       (local.get $0)
                      )
                      (i32.shl
                       (local.get $10)
                       (i32.const 2)
                      )
                     )
                     (i32.const 2416)
                    )
                   )
                  )
                 )
                )
                (if
                 (i32.eqz
                  (local.get $9)
                 )
                 ;;@ silk/dec_API.c:293:0
                 (drop
                  (br_if $do-once39
                   (i32.const 1)
                   (i32.load
                    (local.get $16)
                   )
                  )
                 )
                )
                (i32.const 2)
               )
              )
             )
            )
           )
           ;;@ silk/dec_API.c:304:0
           (i32.store
            (local.tee $9
             (i32.add
              (i32.add
               (i32.mul
                (local.get $7)
                (i32.const 4264)
               )
               (local.get $0)
              )
              (i32.const 2388)
             )
            )
            (i32.add
             (i32.load
              (local.get $9)
             )
             (i32.const 1)
            )
           )
           ;;@ silk/dec_API.c:282:0
           (br_if $while-in38
            (i32.lt_s
             (local.tee $7
              (i32.add
               (local.get $7)
               (i32.const 1)
              )
             )
             (local.tee $9
              (i32.load offset=4
               (local.get $1)
              )
             )
            )
           )
           (local.set $4
            (local.get $9)
           )
           (local.get $10)
          )
         )
         (block $label$break$L124 (result i32)
          (local.set $16
           (i32.add
            (local.get $3)
            (i32.const 4)
           )
          )
          (if
           (i32.eqz
            (local.get $19)
           )
           (block
            (local.set $7
             (i32.const 0)
            )
            (loop $while-in42
             (if
              ;;@ silk/dec_API.c:283:0
              (local.get $7)
              ;;@ silk/dec_API.c:302:0
              (drop
               (call $_memset
                (i32.add
                 (i32.load
                  (i32.add
                   (i32.shl
                    (local.get $7)
                    (i32.const 2)
                   )
                   (local.get $13)
                  )
                 )
                 (i32.const 4)
                )
                (i32.const 0)
                (i32.shl
                 (i32.load
                  (local.get $12)
                 )
                 (i32.const 1)
                )
               )
              )
              ;;@ silk/dec_API.c:300:0
              (local.set $10
               (i32.add
                (call $_silk_decode_frame
                 (local.get $0)
                 (local.get $4)
                 (local.get $16)
                 (local.get $12)
                 (local.get $2)
                 (select
                  (i32.const 2)
                  (i32.const 0)
                  (i32.gt_s
                   (i32.load
                    (local.get $14)
                   )
                   (i32.const 0)
                  )
                 )
                )
                (local.get $10)
               )
              )
             )
             ;;@ silk/dec_API.c:304:0
             (i32.store
              (local.tee $9
               (i32.add
                (i32.add
                 (i32.mul
                  (local.get $7)
                  (i32.const 4264)
                 )
                 (local.get $0)
                )
                (i32.const 2388)
               )
              )
              (i32.add
               (i32.load
                (local.get $9)
               )
               (i32.const 1)
              )
             )
             ;;@ silk/dec_API.c:282:0
             (br_if $while-in42
              (i32.lt_s
               (local.tee $7
                (i32.add
                 (local.get $7)
                 (i32.const 1)
                )
               )
               (local.tee $9
                (i32.load offset=4
                 (local.get $1)
                )
               )
              )
             )
            )
            (local.set $4
             (local.get $9)
            )
            (br $label$break$L124
             (local.get $10)
            )
           )
          )
          (local.set $2
           (i32.const 0)
          )
          (loop $while-in44 (result i32)
           (if
            ;;@ silk/dec_API.c:283:0
            (local.get $2)
            ;;@ silk/dec_API.c:302:0
            (drop
             (call $_memset
              (i32.add
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $2)
                  (i32.const 2)
                 )
                 (local.get $13)
                )
               )
               (i32.const 4)
              )
              (i32.const 0)
              (i32.shl
               (i32.load
                (local.get $12)
               )
               (i32.const 1)
              )
             )
            )
            ;;@ silk/dec_API.c:300:0
            (local.set $10
             (i32.add
              (call $_silk_decode_frame
               (local.get $0)
               (local.get $4)
               (local.get $16)
               (local.get $12)
               (i32.const 2)
               (if (result i32)
                ;;@ silk/dec_API.c:289:0
                (i32.lt_s
                 ;;@ silk/dec_API.c:287:0
                 (local.tee $7
                  (i32.load
                   (local.get $14)
                  )
                 )
                 (i32.const 1)
                )
                (i32.const 0)
                ;;@ silk/dec_API.c:292:0
                (select
                 (i32.const 2)
                 (i32.const 0)
                 (i32.load
                  (i32.add
                   (i32.add
                    (local.get $0)
                    (i32.shl
                     (local.get $7)
                     (i32.const 2)
                    )
                   )
                   (i32.const 2416)
                  )
                 )
                )
               )
              )
              (local.get $10)
             )
            )
           )
           ;;@ silk/dec_API.c:304:0
           (i32.store
            (local.tee $7
             (i32.add
              (i32.add
               (i32.mul
                (local.get $2)
                (i32.const 4264)
               )
               (local.get $0)
              )
              (i32.const 2388)
             )
            )
            (i32.add
             (i32.load
              (local.get $7)
             )
             (i32.const 1)
            )
           )
           ;;@ silk/dec_API.c:282:0
           (br_if $while-in44
            (i32.lt_s
             (local.tee $2
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             (local.tee $7
              (i32.load offset=4
               (local.get $1)
              )
             )
            )
           )
           (local.set $4
            (local.get $7)
           )
           (local.get $10)
          )
         )
        )
       )
       ;;@ silk/dec_API.c:307:0
       (br_if $__rjti$6
        (i32.eqz
         (i32.and
          (i32.eq
           (i32.load
            (local.get $1)
           )
           (i32.const 2)
          )
          (i32.eq
           (local.get $4)
           (i32.const 2)
          )
         )
        )
       )
       ;;@ silk/dec_API.c:309:0
       (call $_silk_stereo_MS_to_LR
        (i32.add
         (local.get $0)
         (i32.const 8528)
        )
        (local.tee $3
         (i32.load
          (local.get $18)
         )
        )
        (local.get $24)
        (local.get $11)
        (i32.load
         (local.tee $9
          (i32.add
           (local.get $0)
           (i32.const 2316)
          )
         )
        )
        (i32.load
         (local.get $12)
        )
       )
       ;;@ silk/dec_API.c:317:0
       (i32.load
        (local.get $12)
       )
      )
      (block
       (local.set $2
        (local.get $10)
       )
       (br $__rjti$6)
      )
     )
    )
    (br $__rjto$6)
   )
   ;;@ silk/dec_API.c:312:0
   (i32.store align=2
    (local.get $3)
    (i32.load align=2
     (local.tee $4
      (i32.add
       (local.get $0)
       (i32.const 8532)
      )
     )
    )
   )
   ;;@ silk/dec_API.c:313:0
   (i32.store align=2
    (local.get $4)
    (i32.load align=2
     (i32.add
      (i32.shl
       (local.tee $7
        (i32.load
         (local.get $12)
        )
       )
       (i32.const 1)
      )
      (local.get $3)
     )
    )
   )
   ;;@ silk/dec_API.c:317:0
   (local.set $9
    (i32.add
     (local.get $0)
     (i32.const 2316)
    )
   )
  )
  (i32.store
   (local.get $6)
   (local.tee $10
    (i32.div_s
     (i32.mul
      (i32.load offset=8
       (local.get $1)
      )
      (local.get $7)
     )
     (i32.mul
      (i32.shr_s
       (i32.shl
        (i32.load
         (local.get $9)
        )
        (i32.const 16)
       )
       (i32.const 16)
      )
      (i32.const 1000)
     )
    )
   )
  )
  (if
   ;;@ silk/dec_API.c:320:0
   (i32.eq
    (local.tee $11
     (i32.load
      (local.get $1)
     )
    )
    (i32.const 2)
   )
   (block
    (local.set $4
     (global.get $STACKTOP)
    )
    (global.set $STACKTOP
     (i32.add
      (global.get $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (local.get $10)
         (i32.const 1)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
   )
   (local.set $4
    (local.get $5)
   )
  )
  (local.set $10
   (i32.load offset=4
    (local.get $1)
   )
  )
  (if
   (local.get $21)
   (block
    (local.set $3
     (global.get $STACKTOP)
    )
    ;;@ silk/dec_API.c:328:0
    (global.set $STACKTOP
     (i32.add
      (global.get $STACKTOP)
      (i32.and
       (i32.add
        (i32.shl
         (i32.mul
          (local.tee $19
           (i32.add
            (local.tee $14
             (i32.load
              (i32.add
               (local.get $0)
               (i32.const 2328)
              )
             )
            )
            (i32.const 2)
           )
          )
          (local.get $10)
         )
         (i32.const 1)
        )
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    ;;@ silk/dec_API.c:333:0
    (drop
     (call $_memcpy
      (local.get $3)
      (local.get $5)
      (i32.mul
       (i32.shl
        (local.get $10)
        (i32.const 1)
       )
       (local.get $19)
      )
     )
    )
    ;;@ silk/dec_API.c:334:0
    (i32.store
     (local.get $18)
     (local.get $3)
    )
    ;;@ silk/dec_API.c:335:0
    (i32.store offset=4
     (local.get $13)
     (i32.add
      (i32.add
       (i32.shl
        (local.get $14)
        (i32.const 1)
       )
       (local.get $3)
      )
      (i32.const 4)
     )
    )
   )
  )
  (if
   ;;@ silk/dec_API.c:337:0
   (i32.gt_s
    (select
     (local.get $11)
     (local.get $10)
     (i32.lt_s
      (local.get $11)
      (local.get $10)
     )
    )
    (i32.const 0)
   )
   (block $label$break$L167
    (local.set $10
     (i32.const 0)
    )
    (loop $while-in47
     ;;@ silk/dec_API.c:340:0
     (local.set $2
      (i32.add
       (call $_silk_resampler
        (i32.add
         (i32.add
          (i32.mul
           (local.get $10)
           (i32.const 4264)
          )
          (local.get $0)
         )
         (i32.const 2432)
        )
        (local.get $4)
        (i32.add
         (local.get $3)
         (i32.const 2)
        )
        (local.get $7)
       )
       (local.get $2)
      )
     )
     (if
      ;;@ silk/dec_API.c:343:0
      (i32.eq
       (local.tee $7
        (i32.load
         (local.get $1)
        )
       )
       (i32.const 2)
      )
      (if
       (i32.gt_s
        ;;@ silk/dec_API.c:344:0
        (local.tee $11
         (i32.load
          (local.get $6)
         )
        )
        (i32.const 0)
       )
       (block
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in51
         ;;@ silk/dec_API.c:345:0
         (i32.store16
          (i32.add
           (i32.shl
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 1)
             )
             (local.get $10)
            )
            (i32.const 1)
           )
           (local.get $5)
          )
          (i32.load16_s
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 1)
            )
            (local.get $4)
           )
          )
         )
         ;;@ silk/dec_API.c:344:0
         (br_if $while-in51
          (i32.lt_s
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (local.get $11)
          )
         )
        )
       )
      )
     )
     ;;@ silk/dec_API.c:337:0
     (br_if $label$break$L167
      (i32.ge_s
       (local.tee $10
        (i32.add
         (local.get $10)
         (i32.const 1)
        )
       )
       (select
        (local.get $7)
        (local.tee $3
         (i32.load offset=4
          (local.get $1)
         )
        )
        (i32.lt_s
         (local.get $7)
         (local.get $3)
        )
       )
      )
     )
     ;;@ silk/dec_API.c:340:0
     (local.set $3
      (i32.load
       (i32.add
        (i32.shl
         (local.get $10)
         (i32.const 2)
        )
        (local.get $13)
       )
      )
     )
     (local.set $7
      (i32.load
       (local.get $12)
      )
     )
     (br $while-in47)
    )
   )
   (block
    (local.set $3
     (local.get $10)
    )
    (local.set $7
     (local.get $11)
    )
   )
  )
  (if
   ;;@ silk/dec_API.c:351:0
   (i32.and
    (i32.eq
     (local.get $7)
     (i32.const 2)
    )
    (i32.eq
     (local.get $3)
     (i32.const 1)
    )
   )
   (block $do-once52
    (if
     (local.get $22)
     (block
      ;;@ silk/dec_API.c:355:0
      (local.set $2
       (i32.add
        (call $_silk_resampler
         (i32.add
          (local.get $0)
          (i32.const 6696)
         )
         (local.get $4)
         (i32.add
          (i32.load
           (local.get $18)
          )
          (i32.const 2)
         )
         (i32.load
          (local.get $12)
         )
        )
        (local.get $2)
       )
      )
      ;;@ silk/dec_API.c:357:0
      (br_if $do-once52
       (i32.le_s
        (local.tee $6
         (i32.load
          (local.get $6)
         )
        )
        (i32.const 0)
       )
      )
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in55
       ;;@ silk/dec_API.c:358:0
       (i32.store16
        (i32.add
         (i32.shl
          (i32.or
           (i32.shl
            (local.get $3)
            (i32.const 1)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
         (local.get $5)
        )
        (i32.load16_s
         (i32.add
          (i32.shl
           (local.get $3)
           (i32.const 1)
          )
          (local.get $4)
         )
        )
       )
       ;;@ silk/dec_API.c:357:0
       (br_if $while-in55
        (i32.lt_s
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.get $6)
        )
       )
      )
     )
     (block
      ;;@ silk/dec_API.c:361:0
      (br_if $do-once52
       (i32.le_s
        (local.tee $4
         (i32.load
          (local.get $6)
         )
        )
        (i32.const 0)
       )
      )
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in57
       ;;@ silk/dec_API.c:362:0
       (i32.store16
        (i32.add
         (i32.shl
          (i32.or
           (local.tee $6
            (i32.shl
             (local.get $3)
             (i32.const 1)
            )
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
         (local.get $5)
        )
        (i32.load16_s
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 1)
          )
          (local.get $5)
         )
        )
       )
       ;;@ silk/dec_API.c:361:0
       (br_if $while-in57
        (i32.lt_s
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.get $4)
        )
       )
      )
     )
    )
   )
  )
  ;;@ silk/dec_API.c:372:0
  (i32.store offset=20
   (local.get $1)
   (if (result i32)
    ;;@ silk/dec_API.c:368:0
    (i32.eq
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 4164)
      )
     )
     (i32.const 2)
    )
    ;;@ silk/dec_API.c:370:0
    (i32.mul
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 2308)
      )
     )
     (i32.load
      (i32.add
       (i32.shl
        (i32.shr_s
         (i32.add
          (i32.load
           (local.get $9)
          )
          (i32.const -8)
         )
         (i32.const 2)
        )
        (i32.const 2)
       )
       (i32.const 36912)
      )
     )
    )
    (i32.const 0)
   )
  )
  (if
   (local.get $23)
   (if
    (i32.gt_s
     ;;@ silk/dec_API.c:378:0
     (local.tee $3
      (i32.load
       (local.get $20)
      )
     )
     (i32.const 0)
    )
    (block
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in61
      ;;@ silk/dec_API.c:379:0
      (i32.store8
       (i32.add
        (i32.add
         (i32.mul
          (local.get $1)
          (i32.const 4264)
         )
         (local.get $0)
        )
        (i32.const 2312)
       )
       (i32.const 10)
      )
      ;;@ silk/dec_API.c:378:0
      (br_if $while-in61
       (i32.lt_s
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
      )
     )
    )
   )
   ;;@ silk/dec_API.c:381:0
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 8548)
    )
    (i32.load
     (local.get $17)
    )
   )
  )
  ;;@ silk/dec_API.c:385:0
  (call $_llvm_stackrestore
   (local.get $8)
  )
  (global.set $STACKTOP
   (local.get $15)
  )
  (local.get $2)
 )
 (func $_silk_gains_dequant (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (if
   ;;@ silk/gain_quant.c:104:0
   (i32.le_s
    (local.get $4)
    (i32.const 0)
   )
   ;;@ silk/gain_quant.c:125:0
   (return)
  )
  (loop $while-in
   ;;@ silk/gain_quant.c:105:0
   (local.set $5
    (i32.or
     (local.get $3)
     (local.get $8)
    )
   )
   (local.set $7
    (i32.load8_s
     (i32.add
      (local.get $1)
      (local.get $8)
     )
    )
   )
   (i32.store8
    (local.get $2)
    (local.tee $5
     (i32.and
      (local.tee $9
       (if (result i32)
        (local.get $5)
        (block (result i32)
         ;;@ silk/gain_quant.c:110:0
         (local.set $7
          (i32.add
           (local.get $7)
           (i32.const -4)
          )
         )
         ;;@ silk/gain_quant.c:113:0
         (local.set $5
          (i32.load8_s
           (local.get $2)
          )
         )
         (local.set $6
          (i32.add
           (local.get $5)
           (i32.const 8)
          )
         )
         (if (result i32)
          ;;@ silk/gain_quant.c:114:0
          (i32.gt_s
           (local.get $7)
           (local.get $6)
          )
          (block (result i32)
           ;;@ silk/gain_quant.c:115:0
           (local.set $5
            (i32.shl
             (local.get $7)
             (i32.const 1)
            )
           )
           (i32.add
            (local.get $5)
            (i32.const 248)
           )
          )
          ;;@ silk/gain_quant.c:117:0
          (i32.add
           (local.get $5)
           (local.get $7)
          )
         )
        )
        (block (result i32)
         ;;@ silk/gain_quant.c:107:0
         (local.set $5
          (i32.load8_s
           (local.get $2)
          )
         )
         (local.set $6
          (i32.add
           (local.get $5)
           (i32.const -16)
          )
         )
         ;;@ ./silk/SigProc_FIX.h:566:0
         (local.set $5
          (i32.lt_s
           (local.get $6)
           (local.get $7)
          )
         )
         (select
          (local.get $7)
          (local.get $6)
          (local.get $5)
         )
        )
       )
      )
      (i32.const 255)
     )
    )
   )
   ;;@ silk/gain_quant.c:120:0
   (local.set $7
    (i32.gt_s
     (i32.shr_s
      (i32.shl
       (local.get $5)
       (i32.const 24)
      )
      (i32.const 24)
     )
     (i32.const 63)
    )
   )
   (local.set $6
    (i32.gt_s
     (i32.shr_s
      (i32.shl
       (local.get $5)
       (i32.const 24)
      )
      (i32.const 24)
     )
     (i32.const 0)
    )
   )
   (local.set $5
    (i32.and
     (local.get $9)
     (i32.const 255)
    )
   )
   (local.set $5
    (select
     (local.get $5)
     (i32.const 0)
     (local.get $6)
    )
   )
   (local.set $6
    (select
     (i32.const 63)
     (local.get $5)
     (local.get $7)
    )
   )
   (local.set $5
    (i32.and
     (local.get $6)
     (i32.const 255)
    )
   )
   (i32.store8
    (local.get $2)
    (local.get $5)
   )
   ;;@ silk/gain_quant.c:123:0
   (local.set $7
    (i32.mul
     (local.get $6)
     (i32.const 29)
    )
   )
   (local.set $5
    (i32.mul
     (local.get $6)
     (i32.const 7281)
    )
   )
   (local.set $6
    (i32.shr_u
     (local.get $5)
     (i32.const 16)
    )
   )
   (local.set $5
    (i32.add
     (local.get $7)
     (i32.const 2090)
    )
   )
   (local.set $6
    (i32.add
     (local.get $5)
     (local.get $6)
    )
   )
   ;;@ ./silk/SigProc_FIX.h:556:0
   (local.set $5
    (i32.lt_u
     (local.get $6)
     (i32.const 3967)
    )
   )
   (local.set $5
    (select
     (local.get $6)
     (i32.const 3967)
     (local.get $5)
    )
   )
   ;;@ silk/gain_quant.c:123:0
   (local.set $6
    (call $_silk_log2lin
     (local.get $5)
    )
   )
   (local.set $5
    (i32.add
     (i32.shl
      (local.get $8)
      (i32.const 2)
     )
     (local.get $0)
    )
   )
   (i32.store
    (local.get $5)
    (local.get $6)
   )
   ;;@ silk/gain_quant.c:104:0
   (local.set $8
    (i32.add
     (local.get $8)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $4)
     (local.get $8)
    )
   )
  )
 )
 (func $_silk_NLSF_decode (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (local.set $10
   (i32.sub
    (local.get $4)
    (i32.const -64)
   )
  )
  (local.set $6
   (i32.add
    (local.get $4)
    (i32.const 32)
   )
  )
  (local.set $8
   (local.get $4)
  )
  ;;@ silk/NLSF_decode.c:78:0
  (local.set $4
   (i32.load8_s
    (local.get $1)
   )
  )
  (call $_silk_NLSF_unpack
   (local.get $6)
   (local.get $10)
   (local.get $2)
   (local.get $4)
  )
  ;;@ silk/NLSF_decode.c:81:0
  (local.set $4
   (i32.load16_s offset=2
    (local.get $2)
   )
  )
  ;;@ silk/NLSF_decode.c:84:0
  (if
   ;;@ silk/NLSF_decode.c:46:0
   (local.tee $12
    (i32.gt_s
     (local.get $4)
     (i32.const 0)
    )
   )
   (block
    ;;@ silk/NLSF_decode.c:81:0
    (local.set $11
     (i32.load16_s offset=4
      (local.get $2)
     )
    )
    ;;@ silk/NLSF_decode.c:46:0
    (local.set $6
     (local.get $4)
    )
    (loop $while-in
     (local.set $7
      (i32.add
       (local.get $6)
       (i32.const -1)
      )
     )
     ;;@ silk/NLSF_decode.c:47:0
     (local.set $3
      (i32.shl
       (local.get $3)
       (i32.const 16)
      )
     )
     (local.set $3
      (i32.shr_s
       (local.get $3)
       (i32.const 16)
      )
     )
     (local.set $5
      (i32.add
       (local.get $7)
       (local.get $10)
      )
     )
     (local.set $5
      (i32.load8_u
       (local.get $5)
      )
     )
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 255)
      )
     )
     (local.set $3
      (i32.mul
       (local.get $3)
       (local.get $5)
      )
     )
     (local.set $9
      (i32.shr_s
       (local.get $3)
       (i32.const 8)
      )
     )
     ;;@ silk/NLSF_decode.c:48:0
     (local.set $3
      (i32.add
       (local.get $1)
       (local.get $6)
      )
     )
     (local.set $3
      (i32.load8_s
       (local.get $3)
      )
     )
     (local.set $5
      (i32.shl
       (local.get $3)
       (i32.const 10)
      )
     )
     (local.set $3
      (if (result i32)
       ;;@ silk/NLSF_decode.c:49:0
       (i32.gt_s
        (local.get $3)
        (i32.const 0)
       )
       ;;@ silk/NLSF_decode.c:50:0
       (i32.add
        (local.get $5)
        (i32.const -102)
       )
       (block (result i32)
        ;;@ silk/NLSF_decode.c:51:0
        (local.set $3
         (i32.eqz
          (local.get $3)
         )
        )
        ;;@ silk/NLSF_decode.c:52:0
        (local.set $13
         (i32.or
          (local.get $5)
          (i32.const 102)
         )
        )
        ;;@ silk/NLSF_decode.c:51:0
        (select
         (local.get $5)
         (local.get $13)
         (local.get $3)
        )
       )
      )
     )
     ;;@ silk/NLSF_decode.c:54:0
     (local.set $5
      (i32.shr_s
       (local.get $3)
       (i32.const 16)
      )
     )
     (local.set $5
      (i32.mul
       (local.get $5)
       (local.get $11)
      )
     )
     (local.set $3
      (i32.and
       (local.get $3)
       (i32.const 65535)
      )
     )
     (local.set $3
      (i32.mul
       (local.get $3)
       (local.get $11)
      )
     )
     (local.set $3
      (i32.shr_s
       (local.get $3)
       (i32.const 16)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (local.get $9)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (local.get $5)
      )
     )
     ;;@ silk/NLSF_decode.c:55:0
     (local.set $5
      (i32.and
       (local.get $3)
       (i32.const 65535)
      )
     )
     (local.set $9
      (i32.add
       (i32.shl
        (local.get $7)
        (i32.const 1)
       )
       (local.get $8)
      )
     )
     (i32.store16
      (local.get $9)
      (local.get $5)
     )
     (if
      ;;@ silk/NLSF_decode.c:46:0
      (i32.gt_s
       (local.get $6)
       (i32.const 1)
      )
      (block
       (local.set $6
        (local.get $7)
       )
       (br $while-in)
      )
     )
    )
   )
  )
  ;;@ silk/NLSF_decode.c:84:0
  (local.set $6
   (i32.load offset=8
    (local.get $2)
   )
  )
  (local.set $1
   (i32.load8_s
    (local.get $1)
   )
  )
  (local.set $1
   (i32.mul
    (local.get $1)
    (local.get $4)
   )
  )
  (local.set $6
   (i32.add
    (local.get $1)
    (local.get $6)
   )
  )
  ;;@ silk/NLSF_decode.c:85:0
  (local.set $7
   (i32.load offset=12
    (local.get $2)
   )
  )
  (if
   (i32.eqz
    (local.get $12)
   )
   (block
    ;;@ silk/NLSF_decode.c:92:0
    (local.set $1
     (i32.load offset=36
      (local.get $2)
     )
    )
    (call $_silk_NLSF_stabilize
     (local.get $0)
     (local.get $1)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $8)
    )
    ;;@ silk/NLSF_decode.c:93:0
    (return)
   )
  )
  (local.set $7
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 1)
    )
    (local.get $7)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in1
   ;;@ silk/NLSF_decode.c:87:0
   (local.set $4
    (i32.add
     (i32.shl
      (local.get $1)
      (i32.const 1)
     )
     (local.get $8)
    )
   )
   (local.set $4
    (i32.load16_s
     (local.get $4)
    )
   )
   (local.set $4
    (i32.shl
     (local.get $4)
     (i32.const 14)
    )
   )
   (local.set $3
    (i32.add
     (i32.shl
      (local.get $1)
      (i32.const 1)
     )
     (local.get $7)
    )
   )
   (local.set $3
    (i32.load16_s
     (local.get $3)
    )
   )
   (local.set $4
    (i32.div_s
     (local.get $4)
     (local.get $3)
    )
   )
   (local.set $3
    (i32.add
     (local.get $1)
     (local.get $6)
    )
   )
   (local.set $3
    (i32.load8_u
     (local.get $3)
    )
   )
   (local.set $3
    (i32.and
     (local.get $3)
     (i32.const 255)
    )
   )
   (local.set $3
    (i32.shl
     (local.get $3)
     (i32.const 7)
    )
   )
   (local.set $4
    (i32.add
     (local.get $3)
     (local.get $4)
    )
   )
   ;;@ silk/NLSF_decode.c:88:0
   (local.set $3
    (i32.gt_s
     (local.get $4)
     (i32.const 0)
    )
   )
   (local.set $4
    (select
     (local.get $4)
     (i32.const 0)
     (local.get $3)
    )
   )
   (local.set $3
    (i32.lt_s
     (local.get $4)
     (i32.const 32767)
    )
   )
   (local.set $4
    (select
     (local.get $4)
     (i32.const 32767)
     (local.get $3)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (i32.const 65535)
    )
   )
   (local.set $3
    (i32.add
     (i32.shl
      (local.get $1)
      (i32.const 1)
     )
     (local.get $0)
    )
   )
   (i32.store16
    (local.get $3)
    (local.get $4)
   )
   ;;@ silk/NLSF_decode.c:86:0
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (local.set $4
    (i32.load16_s offset=2
     (local.get $2)
    )
   )
   (br_if $while-in1
    (i32.lt_s
     (local.get $1)
     (local.get $4)
    )
   )
  )
  ;;@ silk/NLSF_decode.c:92:0
  (local.set $1
   (i32.load offset=36
    (local.get $2)
   )
  )
  (call $_silk_NLSF_stabilize
   (local.get $0)
   (local.get $1)
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_silk_PLC_Reset (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  ;;@ silk/PLC.c:58:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 2328)
   )
  )
  (local.set $1
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.shl
    (local.get $1)
    (i32.const 7)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 4172)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  ;;@ silk/PLC.c:59:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 4244)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 65536)
  )
  ;;@ silk/PLC.c:60:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 4248)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 65536)
  )
  ;;@ silk/PLC.c:61:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 4260)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 20)
  )
  ;;@ silk/PLC.c:62:0
  (local.set $0
   (i32.add
    (local.get $0)
    (i32.const 4256)
   )
  )
  (i32.store
   (local.get $0)
   (i32.const 2)
  )
 )
 (func $_silk_PLC (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (if
   ;;@ silk/PLC.c:74:0
   (i32.ne
    (local.tee $4
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 2316)
      )
     )
    )
    (i32.load
     (local.tee $5
      (i32.add
       (local.get $0)
       (i32.const 4252)
      )
     )
    )
   )
   (block
    ;;@ silk/PLC.c:58:0
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4172)
     )
     (i32.shl
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const 2328)
       )
      )
      (i32.const 7)
     )
    )
    ;;@ silk/PLC.c:59:0
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4244)
     )
     (i32.const 65536)
    )
    ;;@ silk/PLC.c:60:0
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4248)
     )
     (i32.const 65536)
    )
    ;;@ silk/PLC.c:61:0
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4260)
     )
     (i32.const 20)
    )
    ;;@ silk/PLC.c:62:0
    (i32.store
     (i32.add
      (local.get $0)
      (i32.const 4256)
     )
     (i32.const 2)
    )
    ;;@ silk/PLC.c:76:0
    (i32.store
     (local.get $5)
     (local.get $4)
    )
   )
  )
  (if
   ;;@ silk/PLC.c:79:0
   (local.get $3)
   (block
    ;;@ silk/PLC.c:83:0
    (call $_silk_PLC_conceal
     (local.get $0)
     (local.get $1)
     (local.get $2)
    )
    ;;@ silk/PLC.c:85:0
    (i32.store
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 4160)
      )
     )
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    ;;@ silk/PLC.c:92:0
    (return)
   )
  )
  ;;@ silk/PLC.c:106:0
  (local.set $8
   (i32.add
    (local.get $0)
    (i32.const 4172)
   )
  )
  ;;@ silk/PLC.c:109:0
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4164)
   )
   (local.tee $2
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 2765)
     )
    )
   )
  )
  (local.set $2
   (if (result i32)
    ;;@ silk/PLC.c:111:0
    (i32.eq
     (local.get $2)
     (i32.const 2)
    )
    (block $do-once (result i32)
     ;;@ silk/PLC.c:113:0
     (local.set $7
      (i32.add
       (local.get $0)
       (i32.const 2332)
      )
     )
     (if
      (i32.or
       (i32.lt_s
        (local.tee $3
         (i32.load
          (local.tee $11
           (i32.add
            (i32.shl
             (local.tee $10
              (i32.add
               (local.tee $5
                (i32.load
                 (i32.add
                  (local.get $0)
                  (i32.const 2324)
                 )
                )
               )
               (i32.const -1)
              )
             )
             (i32.const 2)
            )
            (local.get $1)
           )
          )
         )
        )
        (i32.const 1)
       )
       (i32.eqz
        (local.get $5)
       )
      )
      (local.set $2
       (i32.const 0)
      )
      (block
       (local.set $9
        (i32.add
         (local.get $0)
         (i32.const 4176)
        )
       )
       (local.set $12
        (i32.add
         (local.get $5)
         (i32.const 65535)
        )
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in
        (if
         ;;@ silk/PLC.c:121:0
         (i32.gt_s
          ;;@ silk/PLC.c:119:0
          (local.tee $4
           (i32.add
            (i32.add
             (i32.add
              (i32.add
               (i32.load16_s
                (i32.add
                 (i32.add
                  (local.get $1)
                  (i32.const 96)
                 )
                 (i32.shl
                  (local.tee $4
                   (i32.mul
                    (local.tee $13
                     (i32.sub
                      (local.get $10)
                      (local.get $6)
                     )
                    )
                    (i32.const 5)
                   )
                  )
                  (i32.const 1)
                 )
                )
               )
               (i32.load16_s
                (i32.add
                 (i32.add
                  (local.get $1)
                  (i32.shl
                   (local.get $4)
                   (i32.const 1)
                  )
                 )
                 (i32.const 98)
                )
               )
              )
              (i32.load16_s
               (i32.add
                (i32.add
                 (local.get $1)
                 (i32.shl
                  (local.get $4)
                  (i32.const 1)
                 )
                )
                (i32.const 100)
               )
              )
             )
             (i32.load16_s
              (i32.add
               (i32.add
                (local.get $1)
                (i32.shl
                 (local.get $4)
                 (i32.const 1)
                )
               )
               (i32.const 102)
              )
             )
            )
            (i32.load16_s
             (i32.add
              (i32.add
               (local.get $1)
               (i32.shl
                (local.get $4)
                (i32.const 1)
               )
              )
              (i32.const 104)
             )
            )
           )
          )
          (local.get $2)
         )
         ;;@ silk/PLC.c:113:0
         (block
          ;;@ silk/PLC.c:123:0
          (i64.store align=2
           (local.get $9)
           (i64.load align=2
            (local.tee $2
             (i32.add
              (i32.add
               (local.get $1)
               (i32.const 96)
              )
              (i32.shl
               (i32.mul
                (i32.shr_s
                 (i32.shl
                  (i32.sub
                   (local.get $12)
                   (local.get $6)
                  )
                  (i32.const 16)
                 )
                 (i32.const 16)
                )
                (i32.const 5)
               )
               (i32.const 1)
              )
             )
            )
           )
          )
          (i32.store16 offset=8
           (local.get $9)
           (i32.load16_s offset=8
            (local.get $2)
           )
          )
          ;;@ silk/PLC.c:127:0
          (i32.store
           (local.get $8)
           (i32.shl
            (i32.load
             (i32.add
              (i32.shl
               (local.get $13)
               (i32.const 2)
              )
              (local.get $1)
             )
            )
            (i32.const 8)
           )
          )
          (local.set $3
           (i32.load
            (local.get $11)
           )
          )
          (local.set $2
           (local.get $4)
          )
         )
        )
        ;;@ silk/PLC.c:113:0
        (br_if $while-in
         (i32.eqz
          (i32.or
           (i32.ge_s
            (i32.mul
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (i32.load
              (local.get $7)
             )
            )
            (local.get $3)
           )
           (i32.eq
            (local.get $5)
            (local.get $6)
           )
          )
         )
        )
       )
      )
     )
     ;;@ silk/PLC.c:131:0
     (i64.store align=4
      (local.tee $3
       (i32.add
        (local.get $0)
        (i32.const 4176)
       )
      )
      (i64.const 0)
     )
     (i32.store16 offset=8
      (local.get $3)
      (i32.const 0)
     )
     ;;@ silk/PLC.c:132:0
     (i32.store16
      (local.tee $3
       (i32.add
        (local.get $0)
        (i32.const 4180)
       )
      )
      (local.get $2)
     )
     (if
      ;;@ silk/PLC.c:135:0
      (i32.lt_s
       (local.get $2)
       (i32.const 11469)
      )
      (block
       ;;@ silk/PLC.c:140:0
       (local.set $4
        (i32.shr_s
         (i32.shl
          (i32.div_u
           (i32.const 11744256)
           (select
            (local.get $2)
            (i32.const 1)
            (i32.gt_s
             (local.get $2)
             (i32.const 1)
            )
           )
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
       ;;@ silk/PLC.c:142:0
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 4176)
        )
        (i32.const 0)
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 4178)
        )
        (i32.const 0)
       )
       (i32.store16
        (local.get $3)
        (i32.shr_u
         (i32.mul
          (i32.shr_s
           (i32.shl
            (local.get $2)
            (i32.const 16)
           )
           (i32.const 16)
          )
          (local.get $4)
         )
         (i32.const 10)
        )
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 4182)
        )
        (i32.const 0)
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 4184)
        )
        (i32.const 0)
       )
       (br $do-once
        (local.get $5)
       )
      )
     )
     (if
      ;;@ silk/PLC.c:144:0
      (i32.gt_s
       (local.get $2)
       (i32.const 15565)
      )
      (block
       (local.set $4
        (i32.shr_s
         (i32.shl
          (i32.div_u
           (i32.const 255016960)
           (local.get $2)
          )
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
       ;;@ silk/PLC.c:151:0
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 4176)
        )
        (i32.const 0)
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 4178)
        )
        (i32.const 0)
       )
       (i32.store16
        (local.get $3)
        (i32.shr_u
         (i32.mul
          (i32.shr_s
           (i32.shl
            (local.get $2)
            (i32.const 16)
           )
           (i32.const 16)
          )
          (local.get $4)
         )
         (i32.const 14)
        )
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 4182)
        )
        (i32.const 0)
       )
       (i32.store16
        (i32.add
         (local.get $0)
         (i32.const 4184)
        )
        (i32.const 0)
       )
      )
     )
     (local.get $5)
    )
    (block (result i32)
     ;;@ silk/PLC.c:155:0
     (i32.store
      (local.get $8)
      (i32.mul
       (i32.shr_s
        (i32.shl
         (local.get $4)
         (i32.const 16)
        )
        (i32.const 16)
       )
       (i32.const 4608)
      )
     )
     ;;@ silk/PLC.c:156:0
     (i64.store align=4
      (local.tee $2
       (i32.add
        (local.get $0)
        (i32.const 4176)
       )
      )
      (i64.const 0)
     )
     (i32.store16 offset=8
      (local.get $2)
      (i32.const 0)
     )
     ;;@ silk/PLC.c:166:0
     (local.set $7
      (i32.add
       (local.get $0)
       (i32.const 2332)
      )
     )
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 2324)
      )
     )
    )
   )
  )
  ;;@ silk/PLC.c:160:0
  (drop
   (call $_memcpy
    (i32.add
     (local.get $0)
     (i32.const 4186)
    )
    (i32.sub
     (local.get $1)
     (i32.const -64)
    )
    (i32.shl
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const 2340)
      )
     )
     (i32.const 1)
    )
   )
  )
  ;;@ silk/PLC.c:161:0
  (i32.store16
   (i32.add
    (local.get $0)
    (i32.const 4240)
   )
   (i32.load offset=136
    (local.get $1)
   )
  )
  ;;@ silk/PLC.c:164:0
  (i64.store align=4
   (i32.add
    (local.get $0)
    (i32.const 4244)
   )
   (i64.load align=4
    (i32.add
     (i32.add
      (local.get $1)
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
     )
     (i32.const 8)
    )
   )
  )
  ;;@ silk/PLC.c:166:0
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4260)
   )
   (i32.load
    (local.get $7)
   )
  )
  ;;@ silk/PLC.c:167:0
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 4256)
   )
   (local.get $2)
  )
 )
 (func $_silk_PLC_conceal (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $13
   (i32.add
    (local.get $10)
    (i32.const 52)
   )
  )
  (local.set $9
   (i32.add
    (local.get $10)
    (i32.const 48)
   )
  )
  (local.set $3
   (i32.add
    (local.get $10)
    (i32.const 44)
   )
  )
  (local.set $11
   (i32.add
    (local.get $10)
    (i32.const 40)
   )
  )
  (local.set $6
   (i32.add
    (local.get $10)
    (i32.const 32)
   )
  )
  ;;@ silk/PLC.c:220:0
  (local.set $4
   (i32.add
    (i32.load
     (local.tee $20
      (i32.add
       (local.get $0)
       (i32.const 2336)
      )
     )
    )
    (i32.load
     (local.tee $25
      (i32.add
       (local.get $0)
       (i32.const 2328)
      )
     )
    )
   )
  )
  (local.set $38
   (call $_llvm_stacksave)
  )
  (local.set $26
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $19
   (global.get $STACKTOP)
  )
  ;;@ silk/PLC.c:225:0
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.load
        (local.get $20)
       )
       (i32.const 1)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ silk/PLC.c:228:0
  (i32.store
   (local.get $6)
   (i32.shr_s
    (i32.load
     (i32.add
      (local.get $0)
      (i32.const 4244)
     )
    )
    (i32.const 6)
   )
  )
  ;;@ silk/PLC.c:229:0
  (i32.store offset=4
   (local.get $6)
   (local.tee $44
    (i32.shr_s
     (local.tee $43
      (i32.load
       (local.tee $5
        (i32.add
         (local.get $0)
         (i32.const 4248)
        )
       )
      )
     )
     (i32.const 6)
    )
   )
  )
  (if
   ;;@ silk/PLC.c:231:0
   (i32.load
    (i32.add
     (local.get $0)
     (i32.const 2376)
    )
   )
   (block
    ;;@ silk/PLC.c:232:0
    (i64.store align=2
     (local.tee $4
      (i32.add
       (local.get $0)
       (i32.const 4186)
      )
     )
     (i64.const 0)
    )
    (i64.store offset=8 align=2
     (local.get $4)
     (i64.const 0)
    )
    (i64.store offset=16 align=2
     (local.get $4)
     (i64.const 0)
    )
    (i64.store offset=24 align=2
     (local.get $4)
     (i64.const 0)
    )
   )
  )
  ;;@ silk/PLC.c:235:0
  (call $_silk_PLC_energy
   (local.get $3)
   (local.get $13)
   (local.get $11)
   (local.get $9)
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
   (local.get $6)
   (i32.load
    (local.tee $16
     (i32.add
      (local.get $0)
      (i32.const 2332)
     )
    )
   )
   (i32.load
    (local.tee $17
     (i32.add
      (local.get $0)
      (i32.const 2324)
     )
    )
   )
  )
  ;;@ ./silk/SigProc_FIX.h:566:0
  (local.set $27
   (i32.add
    (i32.add
     (local.get $0)
     (i32.const 4)
    )
    (i32.shl
     (select
      ;;@ silk/PLC.c:237:0
      (local.tee $4
       (i32.add
        (i32.mul
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const 4260)
          )
         )
         (i32.add
          (i32.load
           (i32.add
            (local.get $0)
            (i32.const 4256)
           )
          )
          (i32.shr_s
           (i32.shl
            (i32.lt_s
             (i32.shr_s
              (i32.load
               (local.get $3)
              )
              (i32.load
               (local.get $9)
              )
             )
             (i32.shr_s
              (i32.load
               (local.get $11)
              )
              (i32.load
               (local.get $13)
              )
             )
            )
            (i32.const 31)
           )
           (i32.const 31)
          )
         )
        )
        (i32.const -128)
       )
      )
      (i32.const 0)
      (i32.gt_s
       (local.get $4)
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
   )
  )
  ;;@ silk/PLC.c:246:0
  (local.set $36
   (i32.add
    (local.get $0)
    (i32.const 4176)
   )
  )
  ;;@ silk/PLC.c:247:0
  (local.set $13
   (i32.load16_s
    (local.tee $39
     (i32.add
      (local.get $0)
      (i32.const 4228)
     )
    )
   )
  )
  ;;@ silk/PLC.c:250:0
  (local.set $24
   (i32.load16_s
    (i32.add
     (i32.shl
      ;;@ ./silk/SigProc_FIX.h:548:0
      (local.tee $4
       (select
        ;;@ silk/PLC.c:250:0
        (local.tee $4
         (i32.load
          (local.tee $9
           (i32.add
            (local.get $0)
            (i32.const 4160)
           )
          )
         )
        )
        (i32.const 1)
        (i32.lt_s
         (local.get $4)
         (i32.const 1)
        )
       )
      )
      (i32.const 1)
     )
     (i32.const 40744)
    )
   )
  )
  ;;@ silk/PLC.c:251:0
  (local.set $11
   (i32.load16_s
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 1)
     )
     (select
      (i32.const 40748)
      (i32.const 40752)
      (i32.eq
       (i32.load
        (local.tee $4
         (i32.add
          (local.get $0)
          (i32.const 4164)
         )
        )
       )
       (i32.const 2)
      )
     )
    )
   )
  )
  ;;@ silk/PLC.c:258:0
  (call $_silk_bwexpander
   (local.tee $6
    (i32.add
     (local.get $0)
     (i32.const 4186)
    )
   )
   (i32.load
    (local.tee $21
     (i32.add
      (local.get $0)
      (i32.const 2340)
     )
    )
   )
   (i32.const 64881)
  )
  ;;@ silk/PLC.c:261:0
  (drop
   (call $_memcpy
    (local.get $10)
    (local.get $6)
    (i32.shl
     (local.tee $3
      (i32.load
       (local.get $21)
      )
     )
     (i32.const 1)
    )
   )
  )
  (if
   ;;@ silk/PLC.c:264:0
   (i32.eqz
    (i32.load
     (local.get $9)
    )
   )
   (local.set $13
    (if (result i32)
     ;;@ silk/PLC.c:268:0
     (i32.eq
      (i32.load
       (local.get $4)
      )
      (i32.const 2)
     )
     ;;@ silk/PLC.c:273:0
     (i32.and
      (i32.shr_u
       (i32.mul
        (i32.load16_s
         (i32.add
          (local.get $0)
          (i32.const 4240)
         )
        )
        (select
         ;;@ ./silk/SigProc_FIX.h:570:0
         (local.tee $4
          (i32.shr_s
           (i32.shl
            (i32.sub
             (i32.sub
              (i32.sub
               (i32.sub
                (i32.and
                 (i32.shr_s
                  (i32.shl
                   (i32.sub
                    (i32.const 16384)
                    (i32.load16_s
                     (local.get $36)
                    )
                   )
                   (i32.const 16)
                  )
                  (i32.const 16)
                 )
                 (i32.const 65535)
                )
                (i32.load16_u
                 (i32.add
                  (local.get $0)
                  (i32.const 4178)
                 )
                )
               )
               (i32.load16_u
                (i32.add
                 (local.get $0)
                 (i32.const 4180)
                )
               )
              )
              (i32.load16_u
               (i32.add
                (local.get $0)
                (i32.const 4182)
               )
              )
             )
             (i32.load16_u
              (i32.add
               (local.get $0)
               (i32.const 4184)
              )
             )
            )
            (i32.const 16)
           )
           (i32.const 16)
          )
         )
         (i32.const 3277)
         (i32.gt_s
          (local.get $4)
          (i32.const 3277)
         )
        )
       )
       (i32.const 14)
      )
      (i32.const 65535)
     )
     (block (result i32)
      ;;@ silk/PLC.c:284:0
      (local.set $11
       (i32.shr_s
        (i32.add
         (i32.mul
          (i32.shr_s
           ;;@ silk/PLC.c:282:0
           (local.tee $4
            (i32.shl
             (select
              ;;@ ./silk/SigProc_FIX.h:556:0
              (local.tee $4
               (select
                ;;@ silk/PLC.c:278:0
                (local.tee $4
                 (call $_silk_LPC_inverse_pred_gain_c
                  (local.get $6)
                  (local.get $3)
                 )
                )
                (i32.const 134217728)
                (i32.lt_s
                 (local.get $4)
                 (i32.const 134217728)
                )
               )
              )
              (i32.const 4194304)
              (i32.gt_s
               (local.get $4)
               (i32.const 4194304)
              )
             )
             (i32.const 3)
            )
           )
           (i32.const 16)
          )
          (local.get $11)
         )
         (i32.shr_s
          (i32.mul
           (i32.and
            (local.get $4)
            (i32.const 65528)
           )
           (local.get $11)
          )
          (i32.const 16)
         )
        )
        (i32.const 14)
       )
      )
      ;;@ silk/PLC.c:293:0
      (local.set $3
       (i32.load
        (local.get $21)
       )
      )
      (i32.const 16384)
     )
    )
   )
  )
  ;;@ silk/PLC.c:288:0
  (local.set $4
   (i32.load
    (local.tee $40
     (i32.add
      (local.get $0)
      (i32.const 4224)
     )
    )
   )
  )
  (if
   ;;@ silk/PLC.c:294:0
   (i32.le_s
    ;;@ silk/PLC.c:293:0
    (local.tee $6
     (i32.sub
      (i32.sub
       ;;@ silk/PLC.c:290:0
       (local.tee $9
        (i32.load
         (local.get $20)
        )
       )
       ;;@ silk/PLC.c:289:0
       (local.tee $14
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (i32.load
            (local.tee $41
             (i32.add
              (local.get $0)
              (i32.const 4172)
             )
            )
           )
           (i32.const 7)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
      )
      (local.get $3)
     )
    )
    (i32.const 2)
   )
   ;;@ silk/PLC.c:294:0
   (call $_celt_fatal
    (i32.const 43753)
    (i32.const 43779)
    (i32.const 294)
   )
  )
  ;;@ silk/PLC.c:295:0
  (call $_silk_LPC_analysis_filter
   (i32.add
    (i32.shl
     ;;@ silk/PLC.c:293:0
     (local.tee $22
      (i32.add
       (local.get $6)
       (i32.const -2)
      )
     )
     (i32.const 1)
    )
    (local.get $19)
   )
   (i32.add
    (i32.add
     (local.get $0)
     (i32.const 1348)
    )
    (i32.shl
     (local.get $22)
     (i32.const 1)
    )
   )
   (local.get $10)
   (i32.sub
    (local.get $9)
    (local.get $22)
   )
   (local.get $3)
  )
  ;;@ ./silk/macros.h:122:0
  (local.set $18
   (i32.clz
    (select
     ;;@ silk/PLC.c:297:0
     (local.tee $3
      (i32.load
       (local.get $5)
      )
     )
     (i32.sub
      (i32.const 0)
      (local.get $3)
     )
     (i32.gt_s
      (local.get $3)
      (i32.const 0)
     )
    )
   )
  )
  ;;@ ./silk/Inlines.h:168:0
  (local.set $15
   (i32.add
    (i32.shr_s
     (i32.mul
      ;;@ ./silk/Inlines.h:165:0
      (local.tee $15
       (i32.shr_s
        ;;@ ./silk/Inlines.h:162:0
        (local.tee $3
         (i32.shl
          ;;@ ./silk/Inlines.h:159:0
          (local.tee $6
           (i32.div_s
            (i32.const 536870911)
            (local.tee $5
             (i32.shr_s
              ;;@ ./silk/Inlines.h:156:0
              (local.tee $12
               (i32.shl
                (local.get $3)
                (i32.add
                 (local.get $18)
                 (i32.const -1)
                )
               )
              )
              (i32.const 16)
             )
            )
           )
          )
          (i32.const 16)
         )
        )
        (i32.const 16)
       )
      )
      (i32.and
       ;;@ ./silk/Inlines.h:165:0
       (local.tee $5
        (i32.sub
         (i32.const 0)
         (i32.shl
          (i32.add
           (i32.mul
            (local.get $5)
            (local.get $15)
           )
           (i32.shr_s
            (i32.mul
             (i32.and
              (local.get $12)
              (i32.const 65535)
             )
             (local.get $15)
            )
            (i32.const 16)
           )
          )
          (i32.const 3)
         )
        )
       )
       (i32.const 65528)
      )
     )
     (i32.const 16)
    )
    (i32.add
     (i32.add
      (i32.mul
       (i32.shr_s
        (i32.add
         (i32.shr_s
          (local.get $6)
          (i32.const 15)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
       (local.get $5)
      )
      (local.get $3)
     )
     (i32.mul
      (i32.shr_s
       (local.get $5)
       (i32.const 16)
      )
      (local.get $15)
     )
    )
   )
  )
  ;;@ silk/PLC.c:298:0
  (local.set $3
   (select
    (local.tee $3
     (if (result i32)
      ;;@ ./silk/Inlines.h:172:0
      (i32.lt_s
       ;;@ ./silk/Inlines.h:171:0
       (local.tee $3
        (i32.sub
         (i32.const 62)
         (local.get $18)
        )
       )
       (i32.const 47)
      )
      (block (result i32)
       ;;@ ./silk/Inlines.h:173:0
       (local.set $3
        (i32.gt_s
         (local.tee $12
          (i32.shr_s
           (i32.const -2147483648)
           (local.tee $18
            (i32.sub
             (i32.const 46)
             (local.get $3)
            )
           )
          )
         )
         (local.tee $5
          (i32.shr_u
           (i32.const 2147483647)
           (local.get $18)
          )
         )
        )
       )
       (i32.shl
        (select
         (local.tee $6
          (select
           (local.get $12)
           (local.get $5)
           (local.get $3)
          )
         )
         (select
          (local.tee $3
           (select
            (local.get $5)
            (local.get $12)
            (local.get $3)
           )
          )
          (local.get $15)
          (i32.lt_s
           (local.get $15)
           (local.get $3)
          )
         )
         (i32.gt_s
          (local.get $15)
          (local.get $6)
         )
        )
        (local.get $18)
       )
      )
      ;;@ ./silk/Inlines.h:175:0
      (select
       (i32.shr_s
        (local.get $15)
        (i32.add
         (local.get $3)
         (i32.const -46)
        )
       )
       (i32.const 0)
       (i32.lt_s
        (local.get $3)
        (i32.const 78)
       )
      )
     )
    )
    (i32.const 1073741823)
    (i32.lt_s
     (local.get $3)
     (i32.const 1073741823)
    )
   )
  )
  (if
   ;;@ silk/PLC.c:299:0
   (i32.lt_s
    (local.tee $5
     (i32.add
      (local.tee $28
       (i32.load
        (local.get $21)
       )
      )
      (local.get $22)
     )
    )
    (local.tee $42
     (i32.load
      (local.get $20)
     )
    )
   )
   (block
    (local.set $12
     (i32.shr_s
      (local.get $3)
      (i32.const 16)
     )
    )
    (local.set $6
     (i32.and
      (local.get $3)
      (i32.const 65535)
     )
    )
    (loop $while-in
     ;;@ silk/PLC.c:300:0
     (i32.store
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $26)
      )
      (i32.add
       (i32.mul
        (local.tee $3
         (i32.load16_s
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 1)
           )
           (local.get $19)
          )
         )
        )
        (local.get $12)
       )
       (i32.shr_s
        (i32.mul
         (local.get $3)
         (local.get $6)
        )
        (i32.const 16)
       )
      )
     )
     ;;@ silk/PLC.c:299:0
     (br_if $while-in
      (i32.lt_s
       (local.tee $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (local.get $42)
      )
     )
    )
   )
  )
  (local.set $3
   (if (result i32)
    ;;@ silk/PLC.c:306:0
    (i32.gt_s
     (local.tee $29
      (i32.load
       (local.get $17)
      )
     )
     (i32.const 0)
    )
    (block (result i32)
     (local.set $30
      (i32.eqz
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 2765)
        )
       )
      )
     )
     (local.set $31
      (i32.shr_s
       (i32.shl
        (local.get $11)
        (i32.const 16)
       )
       (i32.const 16)
      )
     )
     (local.set $32
      (i32.add
       (local.get $0)
       (i32.const 2316)
      )
     )
     ;;@ silk/PLC.c:309:0
     (local.set $34
      (i32.gt_s
       (local.tee $33
        (i32.load
         (local.get $16)
        )
       )
       (i32.const 0)
      )
     )
     ;;@ silk/PLC.c:329:0
     (local.set $3
      (i32.load16_s
       (local.get $36)
      )
     )
     (local.set $5
      (local.get $9)
     )
     (local.set $11
      (local.get $4)
     )
     (local.set $9
      (i32.load16_s
       (local.tee $35
        (i32.add
         (local.get $0)
         (i32.const 4178)
        )
       )
      )
     )
     (local.set $6
      (i32.load16_s
       (local.tee $20
        (i32.add
         (local.get $0)
         (i32.const 4180)
        )
       )
      )
     )
     (local.set $4
      (i32.load16_s
       (local.tee $21
        (i32.add
         (local.get $0)
         (i32.const 4182)
        )
       )
      )
     )
     (local.set $12
      (i32.load16_s
       (local.tee $22
        (i32.add
         (local.get $0)
         (i32.const 4184)
        )
       )
      )
     )
     (loop $while-in1
      (if
       (local.get $34)
       (block
        ;;@ silk/PLC.c:308:0
        (local.set $16
         (i32.sub
          (i32.add
           (local.get $5)
           (i32.const 2)
          )
          (local.get $14)
         )
        )
        (local.set $14
         (i32.shr_s
          (i32.shl
           (local.get $3)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $37
         (i32.shr_s
          (i32.shl
           (local.get $9)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $17
         (i32.shr_s
          (i32.shl
           (local.get $6)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $6
         (i32.shr_s
          (i32.shl
           (local.get $4)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $4
         (i32.shr_s
          (i32.shl
           (local.get $12)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $15
         (i32.shr_s
          (i32.shl
           (local.get $13)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $3
         (i32.add
          (i32.shl
           (local.get $16)
           (i32.const 2)
          )
          (local.get $26)
         )
        )
        (local.set $9
         (i32.const 0)
        )
        (local.set $3
         (loop $while-in3 (result i32)
          ;;@ silk/PLC.c:313:0
          (local.set $8
           (i32.load
            (local.get $3)
           )
          )
          ;;@ silk/PLC.c:314:0
          (local.set $23
           (i32.load
            (i32.add
             (local.get $3)
             (i32.const -4)
            )
           )
          )
          ;;@ silk/PLC.c:315:0
          (local.set $19
           (i32.load
            (i32.add
             (local.get $3)
             (i32.const -8)
            )
           )
          )
          ;;@ silk/PLC.c:316:0
          (local.set $18
           (i32.load
            (i32.add
             (local.get $3)
             (i32.const -12)
            )
           )
          )
          ;;@ silk/PLC.c:317:0
          (local.set $16
           (i32.load
            (i32.add
             (local.get $3)
             (i32.const -16)
            )
           )
          )
          ;;@ silk/PLC.c:318:0
          (local.set $3
           (i32.add
            (local.get $3)
            (i32.const 4)
           )
          )
          ;;@ silk/PLC.c:323:0
          (i32.store
           (i32.add
            (i32.shl
             (local.get $5)
             (i32.const 2)
            )
            (local.get $26)
           )
           (i32.shl
            (i32.add
             (i32.shr_s
              (i32.mul
               (i32.and
                (local.tee $12
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.shr_u
                     ;;@ silk/PLC.c:321:0
                     (local.tee $11
                      (i32.add
                       (i32.mul
                        (local.get $11)
                        (i32.const 196314165)
                       )
                       (i32.const 907633515)
                      )
                     )
                     (i32.const 25)
                    )
                    (i32.const 2)
                   )
                   (local.get $27)
                  )
                 )
                )
                (i32.const 65535)
               )
               (local.get $15)
              )
              (i32.const 16)
             )
             (i32.add
              (i32.add
               (i32.add
                (i32.add
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.add
                     (i32.add
                      (i32.add
                       (i32.add
                        (i32.mul
                         (i32.shr_s
                          (local.get $8)
                          (i32.const 16)
                         )
                         (local.get $14)
                        )
                        (i32.const 2)
                       )
                       (i32.shr_s
                        (i32.mul
                         (i32.and
                          (local.get $8)
                          (i32.const 65535)
                         )
                         (local.get $14)
                        )
                        (i32.const 16)
                       )
                      )
                      (i32.mul
                       (i32.shr_s
                        (local.get $23)
                        (i32.const 16)
                       )
                       (local.get $37)
                      )
                     )
                     (i32.shr_s
                      (i32.mul
                       (i32.and
                        (local.get $23)
                        (i32.const 65535)
                       )
                       (local.get $37)
                      )
                      (i32.const 16)
                     )
                    )
                    (i32.mul
                     (i32.shr_s
                      (local.get $19)
                      (i32.const 16)
                     )
                     (local.get $17)
                    )
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (local.get $19)
                      (i32.const 65535)
                     )
                     (local.get $17)
                    )
                    (i32.const 16)
                   )
                  )
                  (i32.mul
                   (i32.shr_s
                    (local.get $18)
                    (i32.const 16)
                   )
                   (local.get $6)
                  )
                 )
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    (local.get $18)
                    (i32.const 65535)
                   )
                   (local.get $6)
                  )
                  (i32.const 16)
                 )
                )
                (i32.mul
                 (i32.shr_s
                  (local.get $16)
                  (i32.const 16)
                 )
                 (local.get $4)
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (local.get $16)
                  (i32.const 65535)
                 )
                 (local.get $4)
                )
                (i32.const 16)
               )
              )
              (i32.mul
               (i32.shr_s
                (local.get $12)
                (i32.const 16)
               )
               (local.get $15)
              )
             )
            )
            (i32.const 2)
           )
          )
          ;;@ silk/PLC.c:324:0
          (local.set $5
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          ;;@ silk/PLC.c:309:0
          (br_if $while-in3
           (i32.lt_s
            (local.tee $9
             (i32.add
              (local.get $9)
              (i32.const 1)
             )
            )
            (local.get $33)
           )
          )
          (local.set $9
           (local.get $17)
          )
          (local.get $37)
         )
        )
       )
       (block
        ;;@ silk/PLC.c:329:0
        (local.set $14
         (i32.shr_s
          (i32.shl
           (local.get $3)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $3
         (i32.shr_s
          (i32.shl
           (local.get $9)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $9
         (i32.shr_s
          (i32.shl
           (local.get $6)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $6
         (i32.shr_s
          (i32.shl
           (local.get $4)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        (local.set $4
         (i32.shr_s
          (i32.shl
           (local.get $12)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
        ;;@ silk/PLC.c:333:0
        (local.set $15
         (i32.shr_s
          (i32.shl
           (local.get $13)
           (i32.const 16)
          )
          (i32.const 16)
         )
        )
       )
      )
      ;;@ silk/PLC.c:329:0
      (local.set $19
       (i32.and
        (i32.shr_u
         (i32.mul
          (local.get $14)
          (local.get $24)
         )
         (i32.const 15)
        )
        (i32.const 65535)
       )
      )
      (local.set $18
       (i32.and
        (i32.shr_u
         (i32.mul
          (local.get $3)
          (local.get $24)
         )
         (i32.const 15)
        )
        (i32.const 65535)
       )
      )
      (local.set $16
       (i32.and
        (i32.shr_u
         (i32.mul
          (local.get $9)
          (local.get $24)
         )
         (i32.const 15)
        )
        (i32.const 65535)
       )
      )
      (local.set $17
       (i32.and
        (i32.shr_u
         (i32.mul
          (local.get $6)
          (local.get $24)
         )
         (i32.const 15)
        )
        (i32.const 65535)
       )
      )
      (local.set $12
       (i32.and
        (i32.shr_u
         (i32.mul
          (local.get $4)
          (local.get $24)
         )
         (i32.const 15)
        )
        (i32.const 65535)
       )
      )
      ;;@ silk/PLC.c:331:0
      (local.set $13
       (select
        (local.get $13)
        (i32.and
         (i32.shr_u
          (i32.mul
           (local.get $15)
           (local.get $31)
          )
          (i32.const 15)
         )
         (i32.const 65535)
        )
        (local.get $30)
       )
      )
      ;;@ silk/PLC.c:338:0
      (i32.store
       (local.get $41)
       ;;@ ./silk/SigProc_FIX.h:556:0
       (local.tee $4
        (select
         ;;@ silk/PLC.c:337:0
         (local.tee $3
          (i32.add
           (i32.shr_u
            (i32.mul
             (i32.and
              (local.tee $4
               (i32.load
                (local.get $41)
               )
              )
              (i32.const 65535)
             )
             (i32.const 655)
            )
            (i32.const 16)
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
             (i32.const 655)
            )
            (local.get $4)
           )
          )
         )
         ;;@ silk/PLC.c:338:0
         (local.tee $4
          (i32.mul
           (i32.shr_s
            (i32.shl
             (i32.load
              (local.get $32)
             )
             (i32.const 16)
            )
            (i32.const 16)
           )
           (i32.const 4608)
          )
         )
         (i32.lt_s
          (local.get $3)
          (local.get $4)
         )
        )
       )
      )
      ;;@ silk/PLC.c:339:0
      (local.set $14
       (i32.shr_s
        (i32.add
         (i32.shr_s
          (local.get $4)
          (i32.const 7)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
      (if
       ;;@ silk/PLC.c:306:0
       (i32.lt_s
        (local.tee $7
         (i32.add
          (local.get $7)
          (i32.const 1)
         )
        )
        (local.get $29)
       )
       (block
        (local.set $3
         (local.get $19)
        )
        (local.set $9
         (local.get $18)
        )
        (local.set $6
         (local.get $16)
        )
        (local.set $4
         (local.get $17)
        )
        (br $while-in1)
       )
      )
     )
     ;;@ silk/PLC.c:329:0
     (i32.store16
      (local.get $36)
      (local.get $19)
     )
     (i32.store16
      (local.get $35)
      (local.get $18)
     )
     (i32.store16
      (local.get $20)
      (local.get $16)
     )
     (i32.store16
      (local.get $21)
      (local.get $17)
     )
     (i32.store16
      (local.get $22)
      (local.get $12)
     )
     (local.get $11)
    )
    (local.get $4)
   )
  )
  ;;@ silk/PLC.c:348:0
  (i64.store align=4
   ;;@ silk/PLC.c:345:0
   (local.tee $8
    (i32.add
     (i32.shl
      (i32.add
       (local.get $42)
       (i32.const -16)
      )
      (i32.const 2)
     )
     (local.get $26)
    )
   )
   (i64.load align=4
    (local.tee $7
     (i32.add
      (local.get $0)
      (i32.const 1284)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $8)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store offset=16 align=4
   (local.get $8)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store offset=24 align=4
   (local.get $8)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i64.store offset=32 align=4
   (local.get $8)
   (i64.load offset=32 align=4
    (local.get $7)
   )
  )
  (i64.store offset=40 align=4
   (local.get $8)
   (i64.load offset=40 align=4
    (local.get $7)
   )
  )
  (i64.store offset=48 align=4
   (local.get $8)
   (i64.load offset=48 align=4
    (local.get $7)
   )
  )
  ;;@ silk/PLC.c:348:0
  (i64.store offset=56 align=4
   (local.get $8)
   (i64.load offset=56 align=4
    (local.get $7)
   )
  )
  (if
   ;;@ silk/PLC.c:350:0
   (i32.le_s
    (local.get $28)
    (i32.const 9)
   )
   (call $_celt_fatal
    (i32.const 43790)
    (i32.const 43779)
    (i32.const 350)
   )
  )
  (local.set $12
   (local.get $13)
  )
  (if
   ;;@ silk/PLC.c:351:0
   (i32.le_s
    (local.tee $23
     (i32.load
      (local.get $25)
     )
    )
    (i32.const 0)
   )
   (block
    ;;@ silk/PLC.c:378:0
    (i64.store align=4
     (local.get $7)
     (i64.load align=4
      (local.tee $0
       (i32.add
        (i32.shl
         (local.get $23)
         (i32.const 2)
        )
        (local.get $8)
       )
      )
     )
    )
    (i64.store offset=8 align=4
     (local.get $7)
     (i64.load offset=8 align=4
      (local.get $0)
     )
    )
    (i64.store offset=16 align=4
     (local.get $7)
     (i64.load offset=16 align=4
      (local.get $0)
     )
    )
    (i64.store offset=24 align=4
     (local.get $7)
     (i64.load offset=24 align=4
      (local.get $0)
     )
    )
    (i64.store offset=32 align=4
     (local.get $7)
     (i64.load offset=32 align=4
      (local.get $0)
     )
    )
    (i64.store offset=40 align=4
     (local.get $7)
     (i64.load offset=40 align=4
      (local.get $0)
     )
    )
    (i64.store offset=48 align=4
     (local.get $7)
     (i64.load offset=48 align=4
      (local.get $0)
     )
    )
    (i64.store offset=56 align=4
     (local.get $7)
     (i64.load offset=56 align=4
      (local.get $0)
     )
    )
    ;;@ silk/PLC.c:383:0
    (i32.store
     (local.get $40)
     (local.get $3)
    )
    ;;@ silk/PLC.c:384:0
    (i32.store16
     (local.get $39)
     (local.get $12)
    )
    ;;@ silk/PLC.c:386:0
    (i32.store
     (local.get $1)
     (local.get $14)
    )
    (i32.store offset=4
     (local.get $1)
     (local.get $14)
    )
    (i32.store offset=8
     (local.get $1)
     (local.get $14)
    )
    (i32.store offset=12
     (local.get $1)
     (local.get $14)
    )
    ;;@ silk/PLC.c:389:0
    (call $_llvm_stackrestore
     (local.get $38)
    )
    (global.set $STACKTOP
     (local.get $10)
    )
    (return)
   )
  )
  (local.set $22
   (i32.shr_u
    (local.get $28)
    (i32.const 1)
   )
  )
  (local.set $25
   (i32.load16_s
    (local.get $10)
   )
  )
  (local.set $27
   (i32.load16_s offset=2
    (local.get $10)
   )
  )
  (local.set $29
   (i32.load16_s offset=4
    (local.get $10)
   )
  )
  (local.set $30
   (i32.load16_s offset=6
    (local.get $10)
   )
  )
  (local.set $31
   (i32.load16_s offset=8
    (local.get $10)
   )
  )
  (local.set $32
   (i32.load16_s offset=10
    (local.get $10)
   )
  )
  (local.set $33
   (i32.load16_s offset=12
    (local.get $10)
   )
  )
  (local.set $34
   (i32.load16_s offset=14
    (local.get $10)
   )
  )
  (local.set $35
   (i32.load16_s offset=16
    (local.get $10)
   )
  )
  (local.set $20
   (i32.load16_s offset=18
    (local.get $10)
   )
  )
  (local.set $15
   (i32.gt_s
    (local.get $28)
    (i32.const 10)
   )
  )
  (local.set $21
   (i32.shr_s
    (i32.shl
     (local.get $44)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (local.set $19
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (local.get $43)
      (i32.const 21)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  ;;@ silk/PLC.c:355:0
  (local.set $0
   (i32.load offset=60
    (local.get $8)
   )
  )
  ;;@ silk/PLC.c:357:0
  (local.set $5
   (i32.load offset=52
    (local.get $8)
   )
  )
  ;;@ silk/PLC.c:359:0
  (local.set $11
   (i32.load offset=44
    (local.get $8)
   )
  )
  ;;@ silk/PLC.c:361:0
  (local.set $13
   (i32.load offset=36
    (local.get $8)
   )
  )
  ;;@ silk/PLC.c:363:0
  (local.set $6
   (i32.const 0)
  )
  (local.set $4
   (i32.load offset=28
    (local.get $8)
   )
  )
  (loop $while-in5
   ;;@ silk/PLC.c:355:0
   (local.set $18
    (i32.add
     (local.get $6)
     (i32.const 15)
    )
   )
   ;;@ silk/PLC.c:364:0
   (local.set $0
    (i32.add
     (i32.shr_s
      (i32.mul
       (i32.and
        (local.tee $9
         (i32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $6)
             (i32.const 6)
            )
            (i32.const 2)
           )
           (local.get $8)
          )
         )
        )
        (i32.const 65535)
       )
       (local.get $20)
      )
      (i32.const 16)
     )
     (i32.add
      (i32.mul
       (i32.shr_s
        (local.get $9)
        (i32.const 16)
       )
       (local.get $20)
      )
      (i32.add
       (i32.shr_s
        (i32.mul
         (i32.and
          (local.get $4)
          (i32.const 65535)
         )
         (local.get $35)
        )
        (i32.const 16)
       )
       (i32.add
        (i32.mul
         (i32.shr_s
          (local.get $4)
          (i32.const 16)
         )
         (local.get $35)
        )
        (i32.add
         (i32.shr_s
          (i32.mul
           (i32.and
            ;;@ silk/PLC.c:362:0
            (local.tee $9
             (i32.load
              (i32.add
               (i32.shl
                (i32.add
                 (local.get $6)
                 (i32.const 8)
                )
                (i32.const 2)
               )
               (local.get $8)
              )
             )
            )
            (i32.const 65535)
           )
           (local.get $34)
          )
          (i32.const 16)
         )
         (i32.add
          (i32.add
           (i32.shr_s
            (i32.mul
             (i32.and
              (local.get $13)
              (i32.const 65535)
             )
             (local.get $33)
            )
            (i32.const 16)
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (local.get $13)
              (i32.const 16)
             )
             (local.get $33)
            )
            (i32.add
             (i32.shr_s
              (i32.mul
               (i32.and
                ;;@ silk/PLC.c:360:0
                (local.tee $13
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.add
                     (local.get $6)
                     (i32.const 10)
                    )
                    (i32.const 2)
                   )
                   (local.get $8)
                  )
                 )
                )
                (i32.const 65535)
               )
               (local.get $32)
              )
              (i32.const 16)
             )
             (i32.add
              (i32.add
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (local.get $11)
                  (i32.const 65535)
                 )
                 (local.get $31)
                )
                (i32.const 16)
               )
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (local.get $11)
                  (i32.const 16)
                 )
                 (local.get $31)
                )
                (i32.add
                 (i32.shr_s
                  (i32.mul
                   (i32.and
                    ;;@ silk/PLC.c:358:0
                    (local.tee $11
                     (i32.load
                      (i32.add
                       (i32.shl
                        (i32.add
                         (local.get $6)
                         (i32.const 12)
                        )
                        (i32.const 2)
                       )
                       (local.get $8)
                      )
                     )
                    )
                    (i32.const 65535)
                   )
                   (local.get $30)
                  )
                  (i32.const 16)
                 )
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.add
                     (i32.shr_s
                      (i32.mul
                       (i32.and
                        ;;@ silk/PLC.c:356:0
                        (local.tee $4
                         (i32.load
                          (i32.add
                           (i32.shl
                            (i32.add
                             (local.get $6)
                             (i32.const 14)
                            )
                            (i32.const 2)
                           )
                           (local.get $8)
                          )
                         )
                        )
                        (i32.const 65535)
                       )
                       (local.get $27)
                      )
                      (i32.const 16)
                     )
                     (i32.add
                      (i32.add
                       (i32.add
                        (i32.mul
                         (i32.shr_s
                          (local.get $0)
                          (i32.const 16)
                         )
                         (local.get $25)
                        )
                        (local.get $22)
                       )
                       (i32.shr_s
                        (i32.mul
                         (i32.and
                          (local.get $0)
                          (i32.const 65535)
                         )
                         (local.get $25)
                        )
                        (i32.const 16)
                       )
                      )
                      (i32.mul
                       (i32.shr_s
                        (local.get $4)
                        (i32.const 16)
                       )
                       (local.get $27)
                      )
                     )
                    )
                    (i32.mul
                     (i32.shr_s
                      (local.get $5)
                      (i32.const 16)
                     )
                     (local.get $29)
                    )
                   )
                   (i32.shr_s
                    (i32.mul
                     (i32.and
                      (local.get $5)
                      (i32.const 65535)
                     )
                     (local.get $29)
                    )
                    (i32.const 16)
                   )
                  )
                  (i32.mul
                   (i32.shr_s
                    (local.get $11)
                    (i32.const 16)
                   )
                   (local.get $30)
                  )
                 )
                )
               )
              )
              (i32.mul
               (i32.shr_s
                (local.get $13)
                (i32.const 16)
               )
               (local.get $32)
              )
             )
            )
           )
          )
          (i32.mul
           (i32.shr_s
            (local.get $9)
            (i32.const 16)
           )
           (local.get $34)
          )
         )
        )
       )
      )
     )
    )
   )
   (if
    (local.get $15)
    (block
     (local.set $5
      (i32.const 10)
     )
     (loop $while-in7
      ;;@ silk/PLC.c:366:0
      (local.set $0
       (i32.add
        (i32.shr_s
         (i32.mul
          (local.tee $16
           (i32.load16_s
            (i32.add
             (i32.shl
              (local.get $5)
              (i32.const 1)
             )
             (local.get $10)
            )
           )
          )
          (i32.and
           (local.tee $17
            (i32.load
             (i32.add
              (i32.shl
               (i32.sub
                (local.get $18)
                (local.get $5)
               )
               (i32.const 2)
              )
              (local.get $8)
             )
            )
           )
           (i32.const 65535)
          )
         )
         (i32.const 16)
        )
        (i32.add
         (i32.mul
          (local.get $16)
          (i32.shr_s
           (local.get $17)
           (i32.const 16)
          )
         )
         (local.get $0)
        )
       )
      )
      ;;@ silk/PLC.c:365:0
      (br_if $while-in7
       (i32.ne
        (local.get $28)
        (local.tee $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
   (local.set $0
    (if (result i32)
     ;;@ silk/PLC.c:370:0
     (i32.gt_s
      (local.tee $0
       (i32.add
        (local.tee $16
         (i32.load
          (local.tee $5
           (i32.add
            (i32.shl
             (i32.add
              (local.get $6)
              (i32.const 16)
             )
             (i32.const 2)
            )
            (local.get $8)
           )
          )
         )
        )
        (local.tee $17
         (i32.shl
          (select
           (local.tee $0
            (select
             (local.get $0)
             (i32.const -134217728)
             (i32.gt_s
              (local.get $0)
              (i32.const -134217728)
             )
            )
           )
           (i32.const 134217727)
           (i32.lt_s
            (local.get $0)
            (i32.const 134217727)
           )
          )
          (i32.const 4)
         )
        )
       )
      )
      (i32.const -1)
     )
     (select
      (i32.const -2147483648)
      (local.get $0)
      (i32.lt_s
       (i32.and
        (local.get $16)
        (local.get $17)
       )
       (i32.const 0)
      )
     )
     (select
      (i32.const 2147483647)
      (local.get $0)
      (i32.gt_s
       (i32.or
        (local.get $16)
        (local.get $17)
       )
       (i32.const -1)
      )
     )
    )
   )
   (i32.store
    (local.get $5)
    (local.get $0)
   )
   ;;@ silk/PLC.c:374:0
   (i32.store16
    (i32.add
     (i32.shl
      (local.get $6)
      (i32.const 1)
     )
     (local.get $2)
    )
    (select
     (local.tee $5
      (select
       (local.tee $5
        (select
         (i32.const 32767)
         (select
          (i32.const -32768)
          (i32.shr_s
           (i32.add
            (i32.shr_s
             (local.tee $5
              (i32.add
               (i32.add
                (i32.mul
                 (i32.shr_s
                  (local.get $0)
                  (i32.const 16)
                 )
                 (local.get $21)
                )
                (i32.mul
                 (local.get $0)
                 (local.get $19)
                )
               )
               (i32.shr_s
                (i32.mul
                 (i32.and
                  (local.get $0)
                  (i32.const 65535)
                 )
                 (local.get $21)
                )
                (i32.const 16)
               )
              )
             )
             (i32.const 7)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
          (i32.lt_s
           (local.get $5)
           (i32.const -8388736)
          )
         )
         (i32.gt_s
          (local.get $5)
          (i32.const 8388479)
         )
        )
       )
       (i32.const -32768)
       (i32.gt_s
        (local.get $5)
        (i32.const -32768)
       )
      )
     )
     (i32.const 32767)
     (i32.lt_s
      (local.get $5)
      (i32.const 32767)
     )
    )
   )
   (if
    ;;@ silk/PLC.c:351:0
    (i32.lt_s
     (local.tee $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (local.get $23)
    )
    (block
     (local.set $5
      (local.get $4)
     )
     (local.set $4
      (local.get $9)
     )
     (br $while-in5)
    )
   )
  )
  ;;@ silk/PLC.c:378:0
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.tee $0
     (i32.add
      (i32.shl
       (local.get $23)
       (i32.const 2)
      )
      (local.get $8)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $7)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $7)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $7)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $7)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $7)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $7)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=56 align=4
   (local.get $7)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  ;;@ silk/PLC.c:383:0
  (i32.store
   (local.get $40)
   (local.get $3)
  )
  ;;@ silk/PLC.c:384:0
  (i32.store16
   (local.get $39)
   (local.get $12)
  )
  ;;@ silk/PLC.c:386:0
  (i32.store
   (local.get $1)
   (local.get $14)
  )
  (i32.store offset=4
   (local.get $1)
   (local.get $14)
  )
  (i32.store offset=8
   (local.get $1)
   (local.get $14)
  )
  (i32.store offset=12
   (local.get $1)
   (local.get $14)
  )
  ;;@ silk/PLC.c:389:0
  (call $_llvm_stackrestore
   (local.get $38)
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $_silk_PLC_energy (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $16
   (global.get $STACKTOP)
  )
  ;;@ silk/PLC.c:177:0
  (local.set $10
   (i32.shl
    (local.get $6)
    (i32.const 1)
   )
  )
  (local.set $10
   (i32.shl
    (local.get $10)
    (i32.const 1)
   )
  )
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $10)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $6)
    (i32.const 0)
   )
   (block
    ;;@ silk/PLC.c:190:0
    (local.set $4
     (i32.add
      (i32.shl
       (local.get $6)
       (i32.const 1)
      )
      (local.get $13)
     )
    )
    ;;@ silk/PLC.c:189:0
    (call $_silk_sum_sqr_shift
     (local.get $0)
     (local.get $1)
     (local.get $13)
     (local.get $6)
    )
    ;;@ silk/PLC.c:190:0
    (call $_silk_sum_sqr_shift
     (local.get $2)
     (local.get $3)
     (local.get $4)
     (local.get $6)
    )
    (global.set $STACKTOP
     (local.get $16)
    )
    ;;@ silk/PLC.c:192:0
    (return)
   )
  )
  (local.set $15
   (i32.mul
    (local.get $6)
    (i32.add
     (local.get $7)
     (i32.const -2)
    )
   )
  )
  (local.set $14
   (i32.shr_s
    (i32.shl
     (local.tee $10
      (i32.load
       (local.get $5)
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (local.set $11
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (local.get $10)
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in
   ;;@ silk/PLC.c:183:0
   (local.set $8
    (i32.add
     (local.get $10)
     (local.get $15)
    )
   )
   (local.set $8
    (i32.add
     (i32.shl
      (local.get $8)
      (i32.const 2)
     )
     (local.get $4)
    )
   )
   (local.set $8
    (i32.load
     (local.get $8)
    )
   )
   (local.set $9
    (i32.shr_s
     (local.get $8)
     (i32.const 16)
    )
   )
   (local.set $9
    (i32.mul
     (local.get $9)
     (local.get $14)
    )
   )
   (local.set $12
    (i32.and
     (local.get $8)
     (i32.const 65535)
    )
   )
   (local.set $12
    (i32.mul
     (local.get $12)
     (local.get $14)
    )
   )
   (local.set $12
    (i32.shr_s
     (local.get $12)
     (i32.const 16)
    )
   )
   (local.set $9
    (i32.add
     (local.get $9)
     (local.get $12)
    )
   )
   (local.set $8
    (i32.mul
     (local.get $8)
     (local.get $11)
    )
   )
   (local.set $8
    (i32.add
     (local.get $8)
     (local.get $9)
    )
   )
   (local.set $9
    (i32.shr_u
     (local.get $8)
     (i32.const 8)
    )
   )
   (local.set $12
    (i32.gt_s
     (local.get $8)
     (i32.const 8388607)
    )
   )
   (local.set $8
    (i32.lt_s
     (local.get $8)
     (i32.const -8388608)
    )
   )
   (local.set $9
    (i32.and
     (local.get $9)
     (i32.const 65535)
    )
   )
   (local.set $8
    (select
     (i32.const -32768)
     (local.get $9)
     (local.get $8)
    )
   )
   (local.set $8
    (select
     (i32.const 32767)
     (local.get $8)
     (local.get $12)
    )
   )
   (local.set $9
    (i32.add
     (i32.shl
      (local.get $10)
      (i32.const 1)
     )
     (local.get $13)
    )
   )
   (i32.store16
    (local.get $9)
    (local.get $8)
   )
   ;;@ silk/PLC.c:182:0
   (local.set $10
    (i32.add
     (local.get $10)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $6)
     (local.get $10)
    )
   )
  )
  ;;@ silk/PLC.c:186:0
  (local.set $10
   (i32.add
    (i32.shl
     (local.get $6)
     (i32.const 1)
    )
    (local.get $13)
   )
  )
  (local.set $14
   (i32.mul
    (local.get $6)
    (i32.add
     (local.get $7)
     (i32.const -1)
    )
   )
  )
  (local.set $8
   (i32.shr_s
    (i32.shl
     (local.tee $5
      (i32.load offset=4
       (local.get $5)
      )
     )
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (local.set $15
   (i32.shr_s
    (i32.add
     (i32.shr_s
      (local.get $5)
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (local.set $5
   (i32.const 0)
  )
  (loop $while-in1
   ;;@ silk/PLC.c:183:0
   (local.set $7
    (i32.add
     (local.get $5)
     (local.get $14)
    )
   )
   (local.set $7
    (i32.add
     (i32.shl
      (local.get $7)
      (i32.const 2)
     )
     (local.get $4)
    )
   )
   (local.set $7
    (i32.load
     (local.get $7)
    )
   )
   (local.set $11
    (i32.shr_s
     (local.get $7)
     (i32.const 16)
    )
   )
   (local.set $11
    (i32.mul
     (local.get $8)
     (local.get $11)
    )
   )
   (local.set $9
    (i32.and
     (local.get $7)
     (i32.const 65535)
    )
   )
   (local.set $9
    (i32.mul
     (local.get $8)
     (local.get $9)
    )
   )
   (local.set $9
    (i32.shr_s
     (local.get $9)
     (i32.const 16)
    )
   )
   (local.set $11
    (i32.add
     (local.get $9)
     (local.get $11)
    )
   )
   (local.set $7
    (i32.mul
     (local.get $7)
     (local.get $15)
    )
   )
   (local.set $7
    (i32.add
     (local.get $7)
     (local.get $11)
    )
   )
   (local.set $11
    (i32.shr_u
     (local.get $7)
     (i32.const 8)
    )
   )
   (local.set $9
    (i32.gt_s
     (local.get $7)
     (i32.const 8388607)
    )
   )
   (local.set $7
    (i32.lt_s
     (local.get $7)
     (i32.const -8388608)
    )
   )
   (local.set $11
    (i32.and
     (local.get $11)
     (i32.const 65535)
    )
   )
   (local.set $7
    (select
     (i32.const -32768)
     (local.get $11)
     (local.get $7)
    )
   )
   (local.set $7
    (select
     (i32.const 32767)
     (local.get $7)
     (local.get $9)
    )
   )
   (local.set $11
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 1)
     )
     (local.get $10)
    )
   )
   (i32.store16
    (local.get $11)
    (local.get $7)
   )
   ;;@ silk/PLC.c:182:0
   (local.set $5
    (i32.add
     (local.get $5)
     (i32.const 1)
    )
   )
   (br_if $while-in1
    (i32.ne
     (local.get $5)
     (local.get $6)
    )
   )
  )
  ;;@ silk/PLC.c:189:0
  (call $_silk_sum_sqr_shift
   (local.get $0)
   (local.get $1)
   (local.get $13)
   (local.get $6)
  )
  ;;@ silk/PLC.c:190:0
  (call $_silk_sum_sqr_shift
   (local.get $2)
   (local.get $3)
   (local.get $10)
   (local.get $6)
  )
  (global.set $STACKTOP
   (local.get $16)
  )
 )
 (func $_silk_PLC_glue_frames (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  ;;@ silk/PLC.c:403:0
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 4160)
   )
  )
  (local.set $4
   (i32.load
    (local.get $4)
   )
  )
  (if
   (local.get $4)
   (block
    ;;@ silk/PLC.c:405:0
    (local.set $3
     (i32.add
      (local.get $0)
      (i32.const 4232)
     )
    )
    (local.set $4
     (i32.add
      (local.get $0)
      (i32.const 4236)
     )
    )
    (call $_silk_sum_sqr_shift
     (local.get $3)
     (local.get $4)
     (local.get $1)
     (local.get $2)
    )
    ;;@ silk/PLC.c:407:0
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 4220)
     )
    )
    (i32.store
     (local.get $0)
     (i32.const 1)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    ;;@ silk/PLC.c:448:0
    (return)
   )
  )
  ;;@ silk/PLC.c:409:0
  (local.set $9
   (i32.add
    (local.get $0)
    (i32.const 4220)
   )
  )
  (local.set $4
   (i32.load
    (local.get $9)
   )
  )
  (if
   (local.get $4)
   (block
    ;;@ silk/PLC.c:411:0
    (call $_silk_sum_sqr_shift
     (local.get $6)
     (local.get $3)
     (local.get $1)
     (local.get $2)
    )
    ;;@ silk/PLC.c:414:0
    (local.set $3
     (i32.load
      (local.get $3)
     )
    )
    (local.set $4
     (i32.add
      (local.get $0)
      (i32.const 4236)
     )
    )
    (local.set $4
     (i32.load
      (local.get $4)
     )
    )
    (if
     (i32.gt_s
      (local.get $3)
      (local.get $4)
     )
     (block
      ;;@ silk/PLC.c:415:0
      (local.set $5
       (i32.add
        (local.get $0)
        (i32.const 4232)
       )
      )
      (local.set $7
       (i32.load
        (local.get $5)
       )
      )
      (local.set $3
       (i32.sub
        (local.get $3)
        (local.get $4)
       )
      )
      (local.set $3
       (i32.shr_s
        (local.get $7)
        (local.get $3)
       )
      )
      (i32.store
       (local.get $5)
       (local.get $3)
      )
     )
     (if
      ;;@ silk/PLC.c:416:0
      (i32.lt_s
       (local.get $3)
       (local.get $4)
      )
      (block
       ;;@ silk/PLC.c:417:0
       (local.set $3
        (i32.sub
         (local.get $4)
         (local.get $3)
        )
       )
       (local.set $4
        (i32.load
         (local.get $6)
        )
       )
       (local.set $3
        (i32.shr_s
         (local.get $4)
         (local.get $3)
        )
       )
       (i32.store
        (local.get $6)
        (local.get $3)
       )
      )
     )
    )
    ;;@ silk/PLC.c:421:0
    (local.set $3
     (i32.load
      (local.get $6)
     )
    )
    (local.set $4
     (i32.add
      (local.get $0)
      (i32.const 4232)
     )
    )
    (local.set $0
     (i32.load
      (local.get $4)
     )
    )
    (if
     (i32.gt_s
      (local.get $3)
      (local.get $0)
     )
     (block
      ;;@ ./silk/macros.h:122:0
      (local.set $5
       (i32.clz
        (local.get $0)
       )
      )
      ;;@ silk/PLC.c:426:0
      (local.set $7
       (i32.add
        (local.get $5)
        (i32.const -1)
       )
      )
      ;;@ silk/PLC.c:427:0
      (local.set $7
       (i32.shl
        (local.get $0)
        (local.get $7)
       )
      )
      (i32.store
       (local.get $4)
       (local.get $7)
      )
      ;;@ silk/PLC.c:428:0
      (local.set $0
       (i32.sub
        (i32.const 25)
        (local.get $5)
       )
      )
      ;;@ ./silk/SigProc_FIX.h:574:0
      (local.set $4
       (i32.gt_s
        (local.get $0)
        (i32.const 0)
       )
      )
      (local.set $0
       (select
        (local.get $0)
        (i32.const 0)
        (local.get $4)
       )
      )
      ;;@ silk/PLC.c:428:0
      (local.set $0
       (i32.shr_s
        (local.get $3)
        (local.get $0)
       )
      )
      (i32.store
       (local.get $6)
       (local.get $0)
      )
      ;;@ silk/PLC.c:430:0
      (local.set $3
       (i32.gt_s
        (local.get $0)
        (i32.const 1)
       )
      )
      (local.set $0
       (select
        (local.get $0)
        (i32.const 1)
        (local.get $3)
       )
      )
      (local.set $0
       (i32.div_s
        (local.get $7)
        (local.get $0)
       )
      )
      (local.set $0
       (if (result i32)
        ;;@ ./silk/Inlines.h:75:0
        (i32.lt_s
         (local.get $0)
         (i32.const 1)
        )
        (i32.const 0)
        (block (result i32)
         ;;@ ./silk/macros.h:122:0
         (local.set $4
          (i32.clz
           (local.get $0)
          )
         )
         ;;@ ./silk/Inlines.h:65:0
         (local.set $3
          (i32.sub
           (i32.const 24)
           (local.get $4)
          )
         )
         ;;@ ./silk/SigProc_FIX.h:402:0
         (local.set $5
          (i32.sub
           (i32.const 0)
           (local.get $3)
          )
         )
         (if
          ;;@ ./silk/SigProc_FIX.h:403:0
          (local.get $3)
          (block
           (if
            ;;@ ./silk/SigProc_FIX.h:405:0
            (i32.lt_s
             (local.get $3)
             (i32.const 0)
            )
            ;;@ ./silk/SigProc_FIX.h:406:0
            (block
             (local.set $5
              (i32.shl
               (local.get $0)
               (local.get $5)
              )
             )
             (local.set $3
              (i32.add
               (local.get $3)
               (i32.const 32)
              )
             )
             (local.set $0
              (i32.shr_u
               (local.get $0)
               (local.get $3)
              )
             )
            )
            ;;@ ./silk/SigProc_FIX.h:408:0
            (block
             (local.set $5
              (i32.sub
               (i32.const 32)
               (local.get $3)
              )
             )
             (local.set $5
              (i32.shl
               (local.get $0)
               (local.get $5)
              )
             )
             (local.set $0
              (i32.shr_u
               (local.get $0)
               (local.get $3)
              )
             )
            )
           )
           (local.set $0
            (i32.or
             (local.get $0)
             (local.get $5)
            )
           )
          )
         )
         ;;@ ./silk/Inlines.h:81:0
         (local.set $3
          (i32.and
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.set $3
          (select
           (i32.const 32768)
           (i32.const 46214)
           (local.get $3)
          )
         )
         (local.set $4
          (i32.shr_u
           (local.get $4)
           (i32.const 1)
          )
         )
         ;;@ ./silk/Inlines.h:88:0
         (local.set $3
          (i32.shr_u
           (local.get $3)
           (local.get $4)
          )
         )
         ;;@ ./silk/Inlines.h:91:0
         (local.set $4
          (i32.shr_s
           (local.get $3)
           (i32.const 16)
          )
         )
         (local.set $0
          (i32.and
           (local.get $0)
           (i32.const 127)
          )
         )
         (local.set $0
          (i32.mul
           (local.get $0)
           (i32.const 13959168)
          )
         )
         (local.set $0
          (i32.shr_u
           (local.get $0)
           (i32.const 16)
          )
         )
         (local.set $4
          (i32.mul
           (local.get $0)
           (local.get $4)
          )
         )
         (local.set $5
          (i32.and
           (local.get $3)
           (i32.const 65535)
          )
         )
         (local.set $0
          (i32.mul
           (local.get $0)
           (local.get $5)
          )
         )
         (local.set $0
          (i32.shr_u
           (local.get $0)
           (i32.const 16)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (local.get $4)
          )
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (local.get $3)
          )
         )
         ;;@ ./silk/Inlines.h:93:0
         (i32.shl
          (local.get $0)
          (i32.const 4)
         )
        )
       )
      )
      ;;@ silk/PLC.c:433:0
      (local.set $3
       (i32.sub
        (i32.const 65536)
        (local.get $0)
       )
      )
      (local.set $3
       (i32.div_s
        (local.get $3)
        (local.get $2)
       )
      )
      ;;@ silk/PLC.c:435:0
      (local.set $7
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
      )
      (if
       ;;@ silk/PLC.c:437:0
       (i32.gt_s
        (local.get $2)
        (i32.const 0)
       )
       (block
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in
         ;;@ silk/PLC.c:438:0
         (local.set $8
          (i32.shr_s
           (local.get $0)
           (i32.const 16)
          )
         )
         (local.set $5
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 1)
           )
           (local.get $1)
          )
         )
         (local.set $4
          (i32.load16_s
           (local.get $5)
          )
         )
         (local.set $8
          (i32.mul
           (local.get $4)
           (local.get $8)
          )
         )
         (local.set $10
          (i32.and
           (local.get $0)
           (i32.const 65532)
          )
         )
         (local.set $4
          (i32.mul
           (local.get $4)
           (local.get $10)
          )
         )
         (local.set $4
          (i32.shr_u
           (local.get $4)
           (i32.const 16)
          )
         )
         (local.set $4
          (i32.add
           (local.get $4)
           (local.get $8)
          )
         )
         (local.set $4
          (i32.and
           (local.get $4)
           (i32.const 65535)
          )
         )
         (i32.store16
          (local.get $5)
          (local.get $4)
         )
         ;;@ silk/PLC.c:439:0
         (local.set $0
          (i32.add
           (local.get $0)
           (local.get $7)
          )
         )
         ;;@ silk/PLC.c:440:0
         (local.set $4
          (i32.lt_s
           (local.get $0)
           (i32.const 65537)
          )
         )
         ;;@ silk/PLC.c:437:0
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.set $5
          (i32.lt_s
           (local.get $3)
           (local.get $2)
          )
         )
         ;;@ silk/PLC.c:440:0
         (br_if $while-in
          (i32.and
           (local.get $4)
           (local.get $5)
          )
         )
        )
       )
      )
     )
    )
   )
  )
  ;;@ silk/PLC.c:446:0
  (i32.store
   (local.get $9)
   (i32.const 0)
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_silk_shell_decoder (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (block $__rjto$1 (result i32)
    (block $__rjti$1
     (block $__rjti$0
      (br $__rjto$1
       (if (result i32)
        ;;@ silk/shell_coder.c:68:0
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
        (block (result i32)
         ;;@ silk/shell_coder.c:69:0
         (local.set $3
          (i32.add
           (local.get $2)
           (i32.const 26400)
          )
         )
         (local.set $3
          (i32.load8_u
           (local.get $3)
          )
         )
         (local.set $3
          (i32.and
           (local.get $3)
           (i32.const 255)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 26240)
          )
         )
         (local.set $3
          (call $_ec_dec_icdf
           (local.get $1)
           (local.get $3)
           (i32.const 8)
          )
         )
         ;;@ silk/shell_coder.c:70:0
         (local.set $2
          (i32.sub
           (local.get $2)
           (local.get $3)
          )
         )
         ;;@ silk/shell_coder.c:71:0
         (local.set $2
          (i32.shl
           (local.get $2)
           (i32.const 16)
          )
         )
         (local.set $2
          (i32.shr_s
           (local.get $2)
           (i32.const 16)
          )
         )
         ;;@ silk/shell_coder.c:132:0
         (local.set $3
          (i32.shl
           (local.get $3)
           (i32.const 16)
          )
         )
         (local.set $4
          (i32.shr_s
           (local.get $3)
           (i32.const 16)
          )
         )
         (if (result i32)
          ;;@ silk/shell_coder.c:68:0
          (i32.gt_s
           (local.get $3)
           (i32.const 0)
          )
          (block (result i32)
           ;;@ silk/shell_coder.c:69:0
           (local.set $3
            (i32.add
             (local.get $4)
             (i32.const 26400)
            )
           )
           (local.set $3
            (i32.load8_u
             (local.get $3)
            )
           )
           (local.set $3
            (i32.and
             (local.get $3)
             (i32.const 255)
            )
           )
           (local.set $3
            (i32.add
             (local.get $3)
             (i32.const 26080)
            )
           )
           (local.set $5
            (call $_ec_dec_icdf
             (local.get $1)
             (local.get $3)
             (i32.const 8)
            )
           )
           ;;@ silk/shell_coder.c:70:0
           (local.set $3
            (i32.sub
             (local.get $4)
             (local.get $5)
            )
           )
           ;;@ silk/shell_coder.c:71:0
           (local.set $3
            (i32.shl
             (local.get $3)
             (i32.const 16)
            )
           )
           (local.set $3
            (i32.shr_s
             (local.get $3)
             (i32.const 16)
            )
           )
           ;;@ silk/shell_coder.c:134:0
           (local.set $4
            (i32.shl
             (local.get $5)
             (i32.const 16)
            )
           )
           (local.set $5
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/shell_coder.c:68:0
           (br_if $__rjti$0
            (i32.le_s
             (local.get $4)
             (i32.const 0)
            )
           )
           ;;@ silk/shell_coder.c:69:0
           (local.set $4
            (i32.add
             (local.get $5)
             (i32.const 26400)
            )
           )
           (local.set $4
            (i32.load8_u
             (local.get $4)
            )
           )
           (local.set $4
            (i32.and
             (local.get $4)
             (i32.const 255)
            )
           )
           (local.set $4
            (i32.add
             (local.get $4)
             (i32.const 25920)
            )
           )
           (local.set $6
            (call $_ec_dec_icdf
             (local.get $1)
             (local.get $4)
             (i32.const 8)
            )
           )
           ;;@ silk/shell_coder.c:70:0
           (local.set $4
            (i32.sub
             (local.get $5)
             (local.get $6)
            )
           )
           ;;@ silk/shell_coder.c:71:0
           (local.set $4
            (i32.shl
             (local.get $4)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/shell_coder.c:135:0
           (local.set $5
            (i32.add
             (local.get $0)
             (i32.const 2)
            )
           )
           (local.set $6
            (i32.shl
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $7
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           ;;@ silk/shell_coder.c:68:0
           (br_if $__rjti$1
            (i32.le_s
             (local.get $6)
             (i32.const 0)
            )
           )
           ;;@ silk/shell_coder.c:69:0
           (local.set $6
            (i32.add
             (local.get $7)
             (i32.const 26400)
            )
           )
           (local.set $6
            (i32.load8_u
             (local.get $6)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 255)
            )
           )
           (local.set $6
            (i32.add
             (local.get $6)
             (i32.const 25760)
            )
           )
           (local.set $6
            (call $_ec_dec_icdf
             (local.get $1)
             (local.get $6)
             (i32.const 8)
            )
           )
           (local.set $8
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (i32.store16
            (local.get $0)
            (local.get $8)
           )
           ;;@ silk/shell_coder.c:70:0
           (local.set $6
            (i32.sub
             (local.get $7)
             (local.get $6)
            )
           )
           (i32.and
            (local.get $6)
            (i32.const 65535)
           )
          )
          (block
           (local.set $3
            (i32.const 0)
           )
           (br $__rjti$0)
          )
         )
        )
        (block
         (local.set $2
          (i32.const 0)
         )
         (br $__rjti$0)
        )
       )
      )
     )
     ;;@ silk/shell_coder.c:135:0
     (local.set $5
      (i32.add
       (local.get $0)
       (i32.const 2)
      )
     )
     (local.set $4
      (i32.const 0)
     )
    )
    ;;@ silk/shell_coder.c:72:0
    (i32.store16
     (local.get $0)
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
  (i32.store16
   (local.get $5)
   (local.get $6)
  )
  ;;@ silk/shell_coder.c:68:0
  (i32.store16 offset=6
   (local.get $0)
   (if (result i32)
    (i32.gt_s
     (local.get $4)
     (i32.const 0)
    )
    (block (result i32)
     ;;@ silk/shell_coder.c:69:0
     (local.set $5
      (i32.add
       (local.get $4)
       (i32.const 26400)
      )
     )
     (local.set $5
      (i32.load8_u
       (local.get $5)
      )
     )
     (local.set $5
      (i32.and
       (local.get $5)
       (i32.const 255)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 25760)
      )
     )
     (local.set $5
      (call $_ec_dec_icdf
       (local.get $1)
       (local.get $5)
       (i32.const 8)
      )
     )
     (local.set $6
      (i32.and
       (local.get $5)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=4
      (local.get $0)
      (local.get $6)
     )
     ;;@ silk/shell_coder.c:70:0
     (local.set $4
      (i32.sub
       (local.get $4)
       (local.get $5)
      )
     )
     (i32.and
      (local.get $4)
      (i32.const 65535)
     )
    )
    (block (result i32)
     ;;@ silk/shell_coder.c:72:0
     (i32.store16 offset=4
      (local.get $0)
      (i32.const 0)
     )
     (i32.const 0)
    )
   )
  )
  (local.set $5
   (block $__rjto$2 (result i32)
    (block $__rjti$2
     (br $__rjto$2
      (if (result i32)
       ;;@ silk/shell_coder.c:68:0
       (i32.gt_s
        (local.get $3)
        (i32.const 0)
       )
       (block (result i32)
        ;;@ silk/shell_coder.c:69:0
        (local.set $4
         (i32.add
          (local.get $3)
          (i32.const 26400)
         )
        )
        (local.set $4
         (i32.load8_u
          (local.get $4)
         )
        )
        (local.set $4
         (i32.and
          (local.get $4)
          (i32.const 255)
         )
        )
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 25920)
         )
        )
        (local.set $4
         (call $_ec_dec_icdf
          (local.get $1)
          (local.get $4)
          (i32.const 8)
         )
        )
        ;;@ silk/shell_coder.c:70:0
        (local.set $3
         (i32.sub
          (local.get $3)
          (local.get $4)
         )
        )
        ;;@ silk/shell_coder.c:71:0
        (local.set $6
         (i32.shl
          (local.get $4)
          (i32.const 16)
         )
        )
        (local.set $7
         (i32.shr_s
          (local.get $6)
          (i32.const 16)
         )
        )
        (local.set $3
         (i32.shl
          (local.get $3)
          (i32.const 16)
         )
        )
        (local.set $3
         (i32.shr_s
          (local.get $3)
          (i32.const 16)
         )
        )
        ;;@ silk/shell_coder.c:139:0
        (local.set $5
         (i32.add
          (local.get $0)
          (i32.const 8)
         )
        )
        (local.set $4
         (i32.add
          (local.get $0)
          (i32.const 10)
         )
        )
        ;;@ silk/shell_coder.c:68:0
        (br_if $__rjti$2
         (i32.le_s
          (local.get $6)
          (i32.const 0)
         )
        )
        ;;@ silk/shell_coder.c:69:0
        (local.set $6
         (i32.add
          (local.get $7)
          (i32.const 26400)
         )
        )
        (local.set $6
         (i32.load8_u
          (local.get $6)
         )
        )
        (local.set $6
         (i32.and
          (local.get $6)
          (i32.const 255)
         )
        )
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.const 25760)
         )
        )
        (local.set $6
         (call $_ec_dec_icdf
          (local.get $1)
          (local.get $6)
          (i32.const 8)
         )
        )
        (local.set $8
         (i32.and
          (local.get $6)
          (i32.const 65535)
         )
        )
        (i32.store16
         (local.get $5)
         (local.get $8)
        )
        ;;@ silk/shell_coder.c:70:0
        (local.set $5
         (i32.sub
          (local.get $7)
          (local.get $6)
         )
        )
        (i32.and
         (local.get $5)
         (i32.const 65535)
        )
       )
       (block
        ;;@ silk/shell_coder.c:139:0
        (local.set $5
         (i32.add
          (local.get $0)
          (i32.const 8)
         )
        )
        (local.set $4
         (i32.add
          (local.get $0)
          (i32.const 10)
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (br $__rjti$2)
       )
      )
     )
    )
    ;;@ silk/shell_coder.c:72:0
    (i32.store16
     (local.get $5)
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
  (i32.store16
   (local.get $4)
   (local.get $5)
  )
  ;;@ silk/shell_coder.c:68:0
  (i32.store16 offset=14
   (local.get $0)
   (if (result i32)
    (i32.gt_s
     (local.get $3)
     (i32.const 0)
    )
    (block (result i32)
     ;;@ silk/shell_coder.c:69:0
     (local.set $4
      (i32.add
       (local.get $3)
       (i32.const 26400)
      )
     )
     (local.set $4
      (i32.load8_u
       (local.get $4)
      )
     )
     (local.set $4
      (i32.and
       (local.get $4)
       (i32.const 255)
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 25760)
      )
     )
     (local.set $4
      (call $_ec_dec_icdf
       (local.get $1)
       (local.get $4)
       (i32.const 8)
      )
     )
     (local.set $5
      (i32.and
       (local.get $4)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=12
      (local.get $0)
      (local.get $5)
     )
     ;;@ silk/shell_coder.c:70:0
     (local.set $3
      (i32.sub
       (local.get $3)
       (local.get $4)
      )
     )
     (i32.and
      (local.get $3)
      (i32.const 65535)
     )
    )
    (block (result i32)
     ;;@ silk/shell_coder.c:72:0
     (i32.store16 offset=12
      (local.get $0)
      (i32.const 0)
     )
     (i32.const 0)
    )
   )
  )
  (local.set $5
   (block $__rjto$4 (result i32)
    (block $__rjti$4
     (block $__rjti$3
      (br $__rjto$4
       (if (result i32)
        ;;@ silk/shell_coder.c:68:0
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
        (block (result i32)
         ;;@ silk/shell_coder.c:69:0
         (local.set $3
          (i32.add
           (local.get $2)
           (i32.const 26400)
          )
         )
         (local.set $3
          (i32.load8_u
           (local.get $3)
          )
         )
         (local.set $3
          (i32.and
           (local.get $3)
           (i32.const 255)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 26080)
          )
         )
         (local.set $3
          (call $_ec_dec_icdf
           (local.get $1)
           (local.get $3)
           (i32.const 8)
          )
         )
         ;;@ silk/shell_coder.c:70:0
         (local.set $2
          (i32.sub
           (local.get $2)
           (local.get $3)
          )
         )
         ;;@ silk/shell_coder.c:71:0
         (local.set $3
          (i32.shl
           (local.get $3)
           (i32.const 16)
          )
         )
         (local.set $4
          (i32.shr_s
           (local.get $3)
           (i32.const 16)
          )
         )
         (local.set $2
          (i32.shl
           (local.get $2)
           (i32.const 16)
          )
         )
         (local.set $2
          (i32.shr_s
           (local.get $2)
           (i32.const 16)
          )
         )
         ;;@ silk/shell_coder.c:68:0
         (br_if $__rjti$3
          (i32.le_s
           (local.get $3)
           (i32.const 0)
          )
         )
         ;;@ silk/shell_coder.c:69:0
         (local.set $3
          (i32.add
           (local.get $4)
           (i32.const 26400)
          )
         )
         (local.set $3
          (i32.load8_u
           (local.get $3)
          )
         )
         (local.set $3
          (i32.and
           (local.get $3)
           (i32.const 255)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 25920)
          )
         )
         (local.set $3
          (call $_ec_dec_icdf
           (local.get $1)
           (local.get $3)
           (i32.const 8)
          )
         )
         ;;@ silk/shell_coder.c:70:0
         (local.set $4
          (i32.sub
           (local.get $4)
           (local.get $3)
          )
         )
         ;;@ silk/shell_coder.c:71:0
         (local.set $6
          (i32.shl
           (local.get $3)
           (i32.const 16)
          )
         )
         (local.set $7
          (i32.shr_s
           (local.get $6)
           (i32.const 16)
          )
         )
         (local.set $3
          (i32.shl
           (local.get $4)
           (i32.const 16)
          )
         )
         (local.set $3
          (i32.shr_s
           (local.get $3)
           (i32.const 16)
          )
         )
         ;;@ silk/shell_coder.c:145:0
         (local.set $5
          (i32.add
           (local.get $0)
           (i32.const 16)
          )
         )
         (local.set $4
          (i32.add
           (local.get $0)
           (i32.const 18)
          )
         )
         ;;@ silk/shell_coder.c:68:0
         (br_if $__rjti$4
          (i32.le_s
           (local.get $6)
           (i32.const 0)
          )
         )
         ;;@ silk/shell_coder.c:69:0
         (local.set $6
          (i32.add
           (local.get $7)
           (i32.const 26400)
          )
         )
         (local.set $6
          (i32.load8_u
           (local.get $6)
          )
         )
         (local.set $6
          (i32.and
           (local.get $6)
           (i32.const 255)
          )
         )
         (local.set $6
          (i32.add
           (local.get $6)
           (i32.const 25760)
          )
         )
         (local.set $6
          (call $_ec_dec_icdf
           (local.get $1)
           (local.get $6)
           (i32.const 8)
          )
         )
         (local.set $8
          (i32.and
           (local.get $6)
           (i32.const 65535)
          )
         )
         (i32.store16
          (local.get $5)
          (local.get $8)
         )
         ;;@ silk/shell_coder.c:70:0
         (local.set $5
          (i32.sub
           (local.get $7)
           (local.get $6)
          )
         )
         (i32.and
          (local.get $5)
          (i32.const 65535)
         )
        )
        (block
         (local.set $2
          (i32.const 0)
         )
         (br $__rjti$3)
        )
       )
      )
     )
     ;;@ silk/shell_coder.c:145:0
     (local.set $5
      (i32.add
       (local.get $0)
       (i32.const 16)
      )
     )
     (local.set $4
      (i32.add
       (local.get $0)
       (i32.const 18)
      )
     )
     (local.set $3
      (i32.const 0)
     )
    )
    ;;@ silk/shell_coder.c:72:0
    (i32.store16
     (local.get $5)
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
  (i32.store16
   (local.get $4)
   (local.get $5)
  )
  ;;@ silk/shell_coder.c:68:0
  (i32.store16 offset=22
   (local.get $0)
   (if (result i32)
    (i32.gt_s
     (local.get $3)
     (i32.const 0)
    )
    (block (result i32)
     ;;@ silk/shell_coder.c:69:0
     (local.set $4
      (i32.add
       (local.get $3)
       (i32.const 26400)
      )
     )
     (local.set $4
      (i32.load8_u
       (local.get $4)
      )
     )
     (local.set $4
      (i32.and
       (local.get $4)
       (i32.const 255)
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 25760)
      )
     )
     (local.set $4
      (call $_ec_dec_icdf
       (local.get $1)
       (local.get $4)
       (i32.const 8)
      )
     )
     (local.set $5
      (i32.and
       (local.get $4)
       (i32.const 65535)
      )
     )
     (i32.store16 offset=20
      (local.get $0)
      (local.get $5)
     )
     ;;@ silk/shell_coder.c:70:0
     (local.set $3
      (i32.sub
       (local.get $3)
       (local.get $4)
      )
     )
     (i32.and
      (local.get $3)
      (i32.const 65535)
     )
    )
    (block (result i32)
     ;;@ silk/shell_coder.c:72:0
     (i32.store16 offset=20
      (local.get $0)
      (i32.const 0)
     )
     (i32.const 0)
    )
   )
  )
  (local.set $4
   (block $__rjto$5 (result i32)
    (block $__rjti$5
     (br $__rjto$5
      (if (result i32)
       ;;@ silk/shell_coder.c:68:0
       (i32.gt_s
        (local.get $2)
        (i32.const 0)
       )
       (block (result i32)
        ;;@ silk/shell_coder.c:69:0
        (local.set $3
         (i32.add
          (local.get $2)
          (i32.const 26400)
         )
        )
        (local.set $3
         (i32.load8_u
          (local.get $3)
         )
        )
        (local.set $3
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 25920)
         )
        )
        (local.set $3
         (call $_ec_dec_icdf
          (local.get $1)
          (local.get $3)
          (i32.const 8)
         )
        )
        ;;@ silk/shell_coder.c:70:0
        (local.set $2
         (i32.sub
          (local.get $2)
          (local.get $3)
         )
        )
        ;;@ silk/shell_coder.c:71:0
        (local.set $5
         (i32.shl
          (local.get $3)
          (i32.const 16)
         )
        )
        (local.set $6
         (i32.shr_s
          (local.get $5)
          (i32.const 16)
         )
        )
        (local.set $2
         (i32.shl
          (local.get $2)
          (i32.const 16)
         )
        )
        (local.set $2
         (i32.shr_s
          (local.get $2)
          (i32.const 16)
         )
        )
        ;;@ silk/shell_coder.c:149:0
        (local.set $4
         (i32.add
          (local.get $0)
          (i32.const 24)
         )
        )
        (local.set $3
         (i32.add
          (local.get $0)
          (i32.const 26)
         )
        )
        ;;@ silk/shell_coder.c:68:0
        (br_if $__rjti$5
         (i32.le_s
          (local.get $5)
          (i32.const 0)
         )
        )
        ;;@ silk/shell_coder.c:69:0
        (local.set $5
         (i32.add
          (local.get $6)
          (i32.const 26400)
         )
        )
        (local.set $5
         (i32.load8_u
          (local.get $5)
         )
        )
        (local.set $5
         (i32.and
          (local.get $5)
          (i32.const 255)
         )
        )
        (local.set $5
         (i32.add
          (local.get $5)
          (i32.const 25760)
         )
        )
        (local.set $5
         (call $_ec_dec_icdf
          (local.get $1)
          (local.get $5)
          (i32.const 8)
         )
        )
        (local.set $7
         (i32.and
          (local.get $5)
          (i32.const 65535)
         )
        )
        (i32.store16
         (local.get $4)
         (local.get $7)
        )
        ;;@ silk/shell_coder.c:70:0
        (local.set $4
         (i32.sub
          (local.get $6)
          (local.get $5)
         )
        )
        (i32.and
         (local.get $4)
         (i32.const 65535)
        )
       )
       (block
        ;;@ silk/shell_coder.c:149:0
        (local.set $4
         (i32.add
          (local.get $0)
          (i32.const 24)
         )
        )
        (local.set $3
         (i32.add
          (local.get $0)
          (i32.const 26)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (br $__rjti$5)
       )
      )
     )
    )
    ;;@ silk/shell_coder.c:72:0
    (i32.store16
     (local.get $4)
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
  (i32.store16
   (local.get $3)
   (local.get $4)
  )
  (if
   ;;@ silk/shell_coder.c:68:0
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
   (block
    ;;@ silk/shell_coder.c:69:0
    (local.set $3
     (i32.add
      (local.get $2)
      (i32.const 26400)
     )
    )
    (local.set $3
     (i32.load8_u
      (local.get $3)
     )
    )
    (local.set $3
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
    )
    (local.set $3
     (i32.add
      (local.get $3)
      (i32.const 25760)
     )
    )
    (local.set $1
     (call $_ec_dec_icdf
      (local.get $1)
      (local.get $3)
      (i32.const 8)
     )
    )
    (local.set $3
     (i32.and
      (local.get $1)
      (i32.const 65535)
     )
    )
    (i32.store16 offset=28
     (local.get $0)
     (local.get $3)
    )
    ;;@ silk/shell_coder.c:70:0
    (local.set $1
     (i32.sub
      (local.get $2)
      (local.get $1)
     )
    )
    (i32.store16 offset=30
     (local.get $0)
     (local.get $1)
    )
   )
   (block
    ;;@ silk/shell_coder.c:72:0
    (i32.store16 offset=28
     (local.get $0)
     (i32.const 0)
    )
    (i32.store16 offset=30
     (local.get $0)
     (i32.const 0)
    )
   )
  )
 )
 (func $_silk_NLSF_unpack (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  ;;@ silk/NLSF_unpack.c:47:0
  (local.set $4
   (i32.load16_s offset=2
    (local.get $2)
   )
  )
  (if
   (i32.le_s
    (local.get $4)
    (i32.const 0)
   )
   ;;@ silk/NLSF_unpack.c:54:0
   (return)
  )
  ;;@ silk/NLSF_unpack.c:46:0
  (local.set $8
   (i32.load offset=24
    (local.get $2)
   )
  )
  (local.set $3
   (i32.mul
    (local.get $3)
    (local.get $4)
   )
  )
  (local.set $4
   (i32.div_s
    (local.get $3)
    (i32.const 2)
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (local.set $4
   (i32.add
    (local.get $4)
    (local.get $8)
   )
  )
  (loop $while-in
   ;;@ silk/NLSF_unpack.c:48:0
   (local.set $8
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
   (local.set $7
    (i32.load8_u
     (local.get $4)
    )
   )
   ;;@ silk/NLSF_unpack.c:49:0
   (local.set $4
    (i32.and
     (local.get $7)
     (i32.const 255)
    )
   )
   (local.set $5
    (i32.shr_u
     (local.get $4)
     (i32.const 1)
    )
   )
   (local.set $5
    (i32.and
     (local.get $5)
     (i32.const 7)
    )
   )
   (local.set $5
    (i32.mul
     (local.get $5)
     (i32.const 9)
    )
   )
   (local.set $5
    (i32.and
     (local.get $5)
     (i32.const 65535)
    )
   )
   (local.set $6
    (i32.add
     (i32.shl
      (local.get $3)
      (i32.const 1)
     )
     (local.get $0)
    )
   )
   (i32.store16
    (local.get $6)
    (local.get $5)
   )
   ;;@ silk/NLSF_unpack.c:50:0
   (local.set $5
    (i32.load offset=20
     (local.get $2)
    )
   )
   (local.set $6
    (i32.and
     (local.get $4)
     (i32.const 1)
    )
   )
   (local.set $9
    (i32.load16_s offset=2
     (local.get $2)
    )
   )
   (local.set $9
    (i32.add
     (local.get $9)
     (i32.const -1)
    )
   )
   (local.set $6
    (i32.sub
     (i32.const 0)
     (local.get $6)
    )
   )
   (local.set $6
    (i32.and
     (local.get $6)
     (local.get $9)
    )
   )
   (local.set $6
    (i32.add
     (local.get $3)
     (local.get $6)
    )
   )
   (local.set $5
    (i32.add
     (local.get $5)
     (local.get $6)
    )
   )
   (local.set $5
    (i32.load8_s
     (local.get $5)
    )
   )
   (local.set $6
    (i32.add
     (local.get $1)
     (local.get $3)
    )
   )
   (i32.store8
    (local.get $6)
    (local.get $5)
   )
   ;;@ silk/NLSF_unpack.c:51:0
   (local.set $7
    (i32.shr_u
     (i32.and
      (local.get $7)
      (i32.const 255)
     )
     (i32.const 5)
    )
   )
   (local.set $7
    (i32.mul
     (local.get $7)
     (i32.const 9)
    )
   )
   (local.set $5
    (i32.and
     (local.get $7)
     (i32.const 255)
    )
   )
   (local.set $7
    (i32.or
     (local.get $3)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.add
     (i32.shl
      (local.get $7)
      (i32.const 1)
     )
     (local.get $0)
    )
   )
   (i32.store16
    (local.get $6)
    (local.get $5)
   )
   ;;@ silk/NLSF_unpack.c:52:0
   (local.set $5
    (i32.load offset=20
     (local.get $2)
    )
   )
   (local.set $4
    (i32.shr_u
     (local.get $4)
     (i32.const 4)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (i32.const 1)
    )
   )
   (local.set $6
    (i32.load16_s offset=2
     (local.get $2)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (i32.const -1)
    )
   )
   (local.set $4
    (i32.sub
     (i32.const 0)
     (local.get $4)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (local.get $6)
    )
   )
   (local.set $4
    (i32.add
     (local.get $4)
     (local.get $7)
    )
   )
   (local.set $4
    (i32.add
     (local.get $4)
     (local.get $5)
    )
   )
   (local.set $4
    (i32.load8_s
     (local.get $4)
    )
   )
   (local.set $7
    (i32.add
     (local.get $1)
     (local.get $7)
    )
   )
   (i32.store8
    (local.get $7)
    (local.get $4)
   )
   ;;@ silk/NLSF_unpack.c:47:0
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 2)
    )
   )
   (local.set $4
    (i32.load16_s offset=2
     (local.get $2)
    )
   )
   (if
    (i32.lt_s
     (local.get $3)
     (local.get $4)
    )
    (block
     (local.set $4
      (local.get $8)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_silk_stereo_MS_to_LR (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  ;;@ silk/stereo_MS_to_LR.c:48:0
  (local.set $9
   (i32.load offset=4 align=2
    (local.get $0)
   )
  )
  (i32.store align=2
   (local.get $1)
   (local.get $9)
  )
  ;;@ silk/stereo_MS_to_LR.c:49:0
  (local.set $9
   (i32.load offset=8 align=2
    (local.get $0)
   )
  )
  (i32.store align=2
   (local.get $2)
   (local.get $9)
  )
  ;;@ silk/stereo_MS_to_LR.c:50:0
  (local.set $9
   (i32.add
    (i32.shl
     (local.get $5)
     (i32.const 1)
    )
    (local.get $1)
   )
  )
  (local.set $9
   (i32.load align=2
    (local.get $9)
   )
  )
  (i32.store offset=4 align=2
   (local.get $0)
   (local.get $9)
  )
  ;;@ silk/stereo_MS_to_LR.c:51:0
  (local.set $9
   (i32.add
    (i32.shl
     (local.get $5)
     (i32.const 1)
    )
    (local.get $2)
   )
  )
  (local.set $9
   (i32.load align=2
    (local.get $9)
   )
  )
  (i32.store offset=8 align=2
   (local.get $0)
   (local.get $9)
  )
  ;;@ silk/stereo_MS_to_LR.c:54:0
  (local.set $9
   (i32.load16_s
    (local.get $0)
   )
  )
  ;;@ silk/stereo_MS_to_LR.c:55:0
  (local.set $6
   (i32.load16_s offset=2
    (local.get $0)
   )
  )
  ;;@ silk/stereo_MS_to_LR.c:56:0
  (local.set $8
   (i32.shl
    (local.get $4)
    (i32.const 3)
   )
  )
  (local.set $11
   (i32.div_s
    (i32.const 65536)
    (local.get $8)
   )
  )
  ;;@ silk/stereo_MS_to_LR.c:57:0
  (local.set $15
   (i32.load
    (local.get $3)
   )
  )
  (local.set $7
   (i32.sub
    (local.get $15)
    (local.get $9)
   )
  )
  (local.set $7
   (i32.shl
    (local.get $7)
    (i32.const 16)
   )
  )
  (local.set $10
   (i32.shr_s
    (local.get $7)
    (i32.const 16)
   )
  )
  (local.set $11
   (i32.shl
    (local.get $11)
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.shr_s
    (local.get $11)
    (i32.const 16)
   )
  )
  (local.set $11
   (i32.mul
    (local.get $7)
    (local.get $10)
   )
  )
  (local.set $11
   (i32.shr_s
    (local.get $11)
    (i32.const 15)
   )
  )
  (local.set $11
   (i32.add
    (local.get $11)
    (i32.const 1)
   )
  )
  (local.set $14
   (i32.shr_s
    (local.get $11)
    (i32.const 1)
   )
  )
  ;;@ silk/stereo_MS_to_LR.c:58:0
  (local.set $11
   (i32.load offset=4
    (local.get $3)
   )
  )
  (local.set $3
   (i32.sub
    (local.get $11)
    (local.get $6)
   )
  )
  (local.set $3
   (i32.shl
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.mul
    (local.get $3)
    (local.get $7)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $3)
    (i32.const 15)
   )
  )
  (local.set $3
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $13
   (i32.shr_s
    (local.get $3)
    (i32.const 1)
   )
  )
  (if
   ;;@ silk/stereo_MS_to_LR.c:59:0
   (i32.gt_s
    (local.get $4)
    (i32.const 0)
   )
   (block
    (local.set $3
     (local.get $9)
    )
    (local.set $9
     (i32.const 0)
    )
    (local.set $4
     (local.get $6)
    )
    (loop $while-in
     ;;@ silk/stereo_MS_to_LR.c:60:0
     (local.set $3
      (i32.add
       (local.get $3)
       (local.get $14)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:61:0
     (local.set $4
      (i32.add
       (local.get $4)
       (local.get $13)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:62:0
     (local.set $6
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 1)
       )
       (local.get $1)
      )
     )
     (local.set $6
      (i32.load16_s
       (local.get $6)
      )
     )
     (local.set $7
      (i32.add
       (local.get $9)
       (i32.const 2)
      )
     )
     (local.set $7
      (i32.add
       (i32.shl
        (local.get $7)
        (i32.const 1)
       )
       (local.get $1)
      )
     )
     (local.set $7
      (i32.load16_s
       (local.get $7)
      )
     )
     (local.set $7
      (i32.add
       (local.get $6)
       (local.get $7)
      )
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (local.set $6
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 1)
       )
       (local.get $1)
      )
     )
     (local.set $6
      (i32.load16_s
       (local.get $6)
      )
     )
     (local.set $10
      (i32.shl
       (local.get $6)
       (i32.const 1)
      )
     )
     (local.set $7
      (i32.add
       (local.get $7)
       (local.get $10)
      )
     )
     (local.set $12
      (i32.shl
       (local.get $7)
       (i32.const 9)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:63:0
     (local.set $10
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 1)
       )
       (local.get $2)
      )
     )
     (local.set $16
      (i32.load16_s
       (local.get $10)
      )
     )
     (local.set $16
      (i32.shl
       (local.get $16)
       (i32.const 8)
      )
     )
     (local.set $17
      (i32.shr_s
       (local.get $7)
       (i32.const 7)
      )
     )
     (local.set $7
      (i32.shl
       (local.get $3)
       (i32.const 16)
      )
     )
     (local.set $7
      (i32.shr_s
       (local.get $7)
       (i32.const 16)
      )
     )
     (local.set $17
      (i32.mul
       (local.get $7)
       (local.get $17)
      )
     )
     (local.set $12
      (i32.and
       (local.get $12)
       (i32.const 65024)
      )
     )
     (local.set $7
      (i32.mul
       (local.get $7)
       (local.get $12)
      )
     )
     (local.set $7
      (i32.shr_s
       (local.get $7)
       (i32.const 16)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:64:0
     (local.set $12
      (i32.shl
       (local.get $6)
       (i32.const 11)
      )
     )
     (local.set $18
      (i32.shr_s
       (local.get $6)
       (i32.const 5)
      )
     )
     (local.set $6
      (i32.shl
       (local.get $4)
       (i32.const 16)
      )
     )
     (local.set $6
      (i32.shr_s
       (local.get $6)
       (i32.const 16)
      )
     )
     (local.set $18
      (i32.mul
       (local.get $6)
       (local.get $18)
      )
     )
     (local.set $12
      (i32.and
       (local.get $12)
       (i32.const 63488)
      )
     )
     (local.set $6
      (i32.mul
       (local.get $6)
       (local.get $12)
      )
     )
     (local.set $6
      (i32.shr_s
       (local.get $6)
       (i32.const 16)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:63:0
     (local.set $12
      (i32.add
       (local.get $16)
       (local.get $18)
      )
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (local.get $12)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:64:0
     (local.set $6
      (i32.add
       (local.get $6)
       (local.get $17)
      )
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (local.get $7)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:65:0
     (local.set $7
      (i32.shr_u
       (local.get $6)
       (i32.const 7)
      )
     )
     (local.set $7
      (i32.add
       (local.get $7)
       (i32.const 1)
      )
     )
     (local.set $7
      (i32.shr_u
       (local.get $7)
       (i32.const 1)
      )
     )
     (local.set $12
      (i32.gt_s
       (local.get $6)
       (i32.const 8388479)
      )
     )
     (local.set $6
      (i32.lt_s
       (local.get $6)
       (i32.const -8388736)
      )
     )
     (local.set $7
      (i32.and
       (local.get $7)
       (i32.const 65535)
      )
     )
     (local.set $6
      (select
       (i32.const -32768)
       (local.get $7)
       (local.get $6)
      )
     )
     (local.set $6
      (select
       (i32.const 32767)
       (local.get $6)
       (local.get $12)
      )
     )
     (i32.store16
      (local.get $10)
      (local.get $6)
     )
     ;;@ silk/stereo_MS_to_LR.c:59:0
     (br_if $while-in
      (i32.lt_s
       (local.get $9)
       (local.get $8)
      )
     )
    )
   )
  )
  (if
   ;;@ silk/stereo_MS_to_LR.c:69:0
   (i32.lt_s
    (local.get $8)
    (local.get $5)
   )
   (block
    (local.set $9
     (i32.shr_s
      (i32.shl
       (local.get $15)
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
    (local.set $6
     (i32.shr_s
      (i32.shl
       (local.get $11)
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
    (local.set $3
     (local.get $8)
    )
    (loop $while-in1
     ;;@ silk/stereo_MS_to_LR.c:70:0
     (local.set $4
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
       (local.get $1)
      )
     )
     (local.set $4
      (i32.load16_s
       (local.get $4)
      )
     )
     (local.set $8
      (i32.add
       (local.get $3)
       (i32.const 2)
      )
     )
     (local.set $8
      (i32.add
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
       (local.get $1)
      )
     )
     (local.set $8
      (i32.load16_s
       (local.get $8)
      )
     )
     (local.set $8
      (i32.add
       (local.get $4)
       (local.get $8)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $4
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
       (local.get $1)
      )
     )
     (local.set $4
      (i32.load16_s
       (local.get $4)
      )
     )
     (local.set $7
      (i32.shl
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $8
      (i32.add
       (local.get $7)
       (local.get $8)
      )
     )
     (local.set $10
      (i32.shl
       (local.get $8)
       (i32.const 9)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:71:0
     (local.set $7
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 1)
       )
       (local.get $2)
      )
     )
     (local.set $14
      (i32.load16_s
       (local.get $7)
      )
     )
     (local.set $14
      (i32.shl
       (local.get $14)
       (i32.const 8)
      )
     )
     (local.set $8
      (i32.shr_s
       (local.get $8)
       (i32.const 7)
      )
     )
     (local.set $8
      (i32.mul
       (local.get $8)
       (local.get $9)
      )
     )
     (local.set $10
      (i32.and
       (local.get $10)
       (i32.const 65024)
      )
     )
     (local.set $10
      (i32.mul
       (local.get $9)
       (local.get $10)
      )
     )
     (local.set $10
      (i32.shr_s
       (local.get $10)
       (i32.const 16)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:72:0
     (local.set $13
      (i32.shl
       (local.get $4)
       (i32.const 11)
      )
     )
     (local.set $4
      (i32.shr_s
       (local.get $4)
       (i32.const 5)
      )
     )
     (local.set $4
      (i32.mul
       (local.get $4)
       (local.get $6)
      )
     )
     (local.set $13
      (i32.and
       (local.get $13)
       (i32.const 63488)
      )
     )
     (local.set $13
      (i32.mul
       (local.get $6)
       (local.get $13)
      )
     )
     (local.set $13
      (i32.shr_s
       (local.get $13)
       (i32.const 16)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:71:0
     (local.set $4
      (i32.add
       (local.get $4)
       (local.get $14)
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (local.get $13)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:72:0
     (local.set $4
      (i32.add
       (local.get $4)
       (local.get $8)
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (local.get $10)
      )
     )
     ;;@ silk/stereo_MS_to_LR.c:73:0
     (local.set $8
      (i32.shr_u
       (local.get $4)
       (i32.const 7)
      )
     )
     (local.set $8
      (i32.add
       (local.get $8)
       (i32.const 1)
      )
     )
     (local.set $8
      (i32.shr_u
       (local.get $8)
       (i32.const 1)
      )
     )
     (local.set $10
      (i32.gt_s
       (local.get $4)
       (i32.const 8388479)
      )
     )
     (local.set $4
      (i32.lt_s
       (local.get $4)
       (i32.const -8388736)
      )
     )
     (local.set $8
      (i32.and
       (local.get $8)
       (i32.const 65535)
      )
     )
     (local.set $4
      (select
       (i32.const -32768)
       (local.get $8)
       (local.get $4)
      )
     )
     (local.set $4
      (select
       (i32.const 32767)
       (local.get $4)
       (local.get $10)
      )
     )
     (i32.store16
      (local.get $7)
      (local.get $4)
     )
     ;;@ silk/stereo_MS_to_LR.c:69:0
     (br_if $while-in1
      (i32.ne
       (local.get $3)
       (local.get $5)
      )
     )
    )
   )
  )
  ;;@ silk/stereo_MS_to_LR.c:75:0
  (local.set $3
   (i32.and
    (local.get $15)
    (i32.const 65535)
   )
  )
  (i32.store16
   (local.get $0)
   (local.get $3)
  )
  ;;@ silk/stereo_MS_to_LR.c:76:0
  (local.set $3
   (i32.and
    (local.get $11)
    (i32.const 65535)
   )
  )
  (i32.store16 offset=2
   (local.get $0)
   (local.get $3)
  )
  (if
   ;;@ silk/stereo_MS_to_LR.c:79:0
   (i32.le_s
    (local.get $5)
    (i32.const 0)
   )
   ;;@ silk/stereo_MS_to_LR.c:85:0
   (return)
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in3
   ;;@ silk/stereo_MS_to_LR.c:80:0
   (local.set $0
    (i32.add
     (local.get $0)
     (i32.const 1)
    )
   )
   (local.set $9
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 1)
     )
     (local.get $1)
    )
   )
   (local.set $3
    (i32.load16_s
     (local.get $9)
    )
   )
   (local.set $6
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 1)
     )
     (local.get $2)
    )
   )
   (local.set $4
    (i32.load16_s
     (local.get $6)
    )
   )
   (local.set $8
    (i32.add
     (local.get $3)
     (local.get $4)
    )
   )
   ;;@ silk/stereo_MS_to_LR.c:81:0
   (local.set $3
    (i32.sub
     (local.get $3)
     (local.get $4)
    )
   )
   ;;@ silk/stereo_MS_to_LR.c:82:0
   (local.set $4
    (i32.gt_s
     (local.get $8)
     (i32.const -32768)
    )
   )
   (local.set $4
    (select
     (local.get $8)
     (i32.const -32768)
     (local.get $4)
    )
   )
   (local.set $8
    (i32.lt_s
     (local.get $4)
     (i32.const 32767)
    )
   )
   (local.set $4
    (select
     (local.get $4)
     (i32.const 32767)
     (local.get $8)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (i32.const 65535)
    )
   )
   (i32.store16
    (local.get $9)
    (local.get $4)
   )
   ;;@ silk/stereo_MS_to_LR.c:83:0
   (local.set $4
    (i32.gt_s
     (local.get $3)
     (i32.const -32768)
    )
   )
   (local.set $3
    (select
     (local.get $3)
     (i32.const -32768)
     (local.get $4)
    )
   )
   (local.set $4
    (i32.lt_s
     (local.get $3)
     (i32.const 32767)
    )
   )
   (local.set $3
    (select
     (local.get $3)
     (i32.const 32767)
     (local.get $4)
    )
   )
   (local.set $3
    (i32.and
     (local.get $3)
     (i32.const 65535)
    )
   )
   (i32.store16
    (local.get $6)
    (local.get $3)
   )
   ;;@ silk/stereo_MS_to_LR.c:79:0
   (br_if $while-in3
    (i32.ne
     (local.get $0)
     (local.get $5)
    )
   )
  )
 )
 (func $_silk_bwexpander_32 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  ;;@ silk/bwexpander_32.c:42:0
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const -65536)
   )
  )
  ;;@ silk/bwexpander_32.c:44:0
  (local.set $7
   (i32.add
    (local.get $1)
    (i32.const -1)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $2)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 1)
   )
   (block
    (local.set $1
     (local.get $3)
    )
    (loop $while-in
     ;;@ silk/bwexpander_32.c:45:0
     (local.set $3
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (local.get $0)
      )
     )
     (local.set $5
      (i32.load
       (local.get $3)
      )
     )
     (local.set $6
      (i32.shl
       (local.get $5)
       (i32.const 16)
      )
     )
     (local.set $6
      (i32.shr_s
       (local.get $6)
       (i32.const 16)
      )
     )
     (local.set $1
      (i32.mul
       (local.get $1)
       (local.get $6)
      )
     )
     (local.set $9
      (i32.and
       (local.get $2)
       (i32.const 65535)
      )
     )
     (local.set $6
      (i32.mul
       (local.get $6)
       (local.get $9)
      )
     )
     (local.set $6
      (i32.shr_s
       (local.get $6)
       (i32.const 16)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $6)
      )
     )
     (local.set $5
      (i32.shr_s
       (local.get $5)
       (i32.const 15)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.shr_s
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.mul
       (local.get $2)
       (local.get $5)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $5)
      )
     )
     (i32.store
      (local.get $3)
      (local.get $1)
     )
     ;;@ silk/bwexpander_32.c:46:0
     (local.set $1
      (i32.mul
       (local.get $2)
       (local.get $8)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $1)
       (i32.const 15)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $2
      (i32.add
       (local.get $1)
       (local.get $2)
      )
     )
     ;;@ silk/bwexpander_32.c:44:0
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.shr_s
       (local.get $2)
       (i32.const 16)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.get $4)
       (local.get $7)
      )
     )
    )
   )
   (local.set $1
    (local.get $3)
   )
  )
  ;;@ silk/bwexpander_32.c:48:0
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $7)
     (i32.const 2)
    )
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $4
   (i32.shl
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.shr_s
    (local.get $4)
    (i32.const 16)
   )
  )
  (local.set $1
   (i32.mul
    (local.get $1)
    (local.get $4)
   )
  )
  (local.set $7
   (i32.and
    (local.get $2)
    (i32.const 65535)
   )
  )
  (local.set $4
   (i32.mul
    (local.get $4)
    (local.get $7)
   )
  )
  (local.set $4
   (i32.shr_s
    (local.get $4)
    (i32.const 16)
   )
  )
  (local.set $1
   (i32.add
    (local.get $1)
    (local.get $4)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $3)
    (i32.const 15)
   )
  )
  (local.set $3
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.mul
    (local.get $2)
    (local.get $3)
   )
  )
  (local.set $1
   (i32.add
    (local.get $1)
    (local.get $2)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_silk_bwexpander (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  ;;@ silk/bwexpander.c:42:0
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const -65536)
   )
  )
  ;;@ silk/bwexpander.c:46:0
  (local.set $5
   (i32.add
    (local.get $1)
    (i32.const -1)
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 1)
   )
   (block
    (local.set $1
     (i32.const 0)
    )
    (loop $while-in
     ;;@ silk/bwexpander.c:47:0
     (local.set $4
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 1)
       )
       (local.get $0)
      )
     )
     (local.set $3
      (i32.load16_s
       (local.get $4)
      )
     )
     (local.set $3
      (i32.mul
       (local.get $2)
       (local.get $3)
      )
     )
     (local.set $3
      (i32.shr_u
       (local.get $3)
       (i32.const 15)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $3
      (i32.shr_u
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $3
      (i32.and
       (local.get $3)
       (i32.const 65535)
      )
     )
     (i32.store16
      (local.get $4)
      (local.get $3)
     )
     ;;@ silk/bwexpander.c:48:0
     (local.set $4
      (i32.mul
       (local.get $2)
       (local.get $6)
      )
     )
     (local.set $4
      (i32.shr_s
       (local.get $4)
       (i32.const 15)
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $4
      (i32.shr_s
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $2
      (i32.add
       (local.get $2)
       (local.get $4)
      )
     )
     ;;@ silk/bwexpander.c:46:0
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.get $1)
       (local.get $5)
      )
     )
    )
   )
  )
  ;;@ silk/bwexpander.c:50:0
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $5)
     (i32.const 1)
    )
    (local.get $0)
   )
  )
  (local.set $1
   (i32.load16_s
    (local.get $0)
   )
  )
  (local.set $1
   (i32.mul
    (local.get $1)
    (local.get $2)
   )
  )
  (local.set $1
   (i32.shr_u
    (local.get $1)
    (i32.const 15)
   )
  )
  (local.set $1
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (local.set $1
   (i32.shr_u
    (local.get $1)
    (i32.const 1)
   )
  )
  (local.set $1
   (i32.and
    (local.get $1)
    (i32.const 65535)
   )
  )
  (i32.store16
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_silk_decode_pitch (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  ;;@ silk/decode_pitch.c:49:0
  (local.set $5
   (i32.eq
    (local.get $4)
    (i32.const 4)
   )
  )
  (if
   (i32.eq
    (local.get $3)
    (i32.const 8)
   )
   (if
    (local.get $5)
    (block
     (local.set $6
      (i32.const 26800)
     )
     (local.set $7
      (i32.const 11)
     )
    )
    (if
     ;;@ silk/decode_pitch.c:54:0
     (i32.eq
      (local.get $4)
      (i32.const 2)
     )
     (block
      (local.set $6
       (i32.const 44167)
      )
      (local.set $7
       (i32.const 3)
      )
     )
     (call $_celt_fatal
      (i32.const 43929)
      (i32.const 43980)
      (i32.const 54)
     )
    )
   )
   (if
    (local.get $5)
    (block
     (local.set $6
      (i32.const 26848)
     )
     (local.set $7
      (i32.const 34)
     )
    )
    (if
     ;;@ silk/decode_pitch.c:63:0
     (i32.eq
      (local.get $4)
      (i32.const 2)
     )
     (block
      (local.set $6
       (i32.const 26768)
      )
      (local.set $7
       (i32.const 12)
      )
     )
     (call $_celt_fatal
      (i32.const 43929)
      (i32.const 43980)
      (i32.const 63)
     )
    )
   )
  )
  ;;@ silk/decode_pitch.c:69:0
  (local.set $3
   (i32.shl
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.shr_s
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $3)
    (i32.const 15)
   )
  )
  ;;@ silk/decode_pitch.c:70:0
  (local.set $5
   (i32.mul
    (local.get $5)
    (i32.const 18)
   )
  )
  ;;@ silk/decode_pitch.c:71:0
  (local.set $0
   (i32.shr_s
    (i32.shl
     (local.get $0)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (local.set $11
   (i32.add
    (local.get $0)
    (local.get $3)
   )
  )
  (local.set $12
   (i32.shr_s
    (i32.shl
     (local.get $1)
     (i32.const 24)
    )
    (i32.const 24)
   )
  )
  (if
   (i32.gt_s
    (local.get $3)
    (local.get $5)
   )
   (block
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     ;;@ silk/decode_pitch.c:74:0
     (local.set $1
      (i32.mul
       (local.get $0)
       (local.get $7)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $12)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $6)
      )
     )
     (local.set $1
      (i32.load8_s
       (local.get $1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $11)
      )
     )
     (local.set $8
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $2)
      )
     )
     ;;@ silk/decode_pitch.c:75:0
     (local.set $9
      (i32.gt_s
       (local.get $1)
       (local.get $3)
      )
     )
     (local.set $10
      (i32.lt_s
       (local.get $1)
       (local.get $5)
      )
     )
     (local.set $1
      (select
       (local.get $5)
       (local.get $1)
       (local.get $10)
      )
     )
     (local.set $1
      (select
       (local.get $3)
       (local.get $1)
       (local.get $9)
      )
     )
     (i32.store
      (local.get $8)
      (local.get $1)
     )
     ;;@ silk/decode_pitch.c:73:0
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.get $0)
       (local.get $4)
      )
     )
    )
   )
   (block
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in1
     ;;@ silk/decode_pitch.c:74:0
     (local.set $1
      (i32.mul
       (local.get $0)
       (local.get $7)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $12)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $6)
      )
     )
     (local.set $1
      (i32.load8_s
       (local.get $1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $11)
      )
     )
     (local.set $8
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $2)
      )
     )
     ;;@ silk/decode_pitch.c:75:0
     (local.set $9
      (i32.gt_s
       (local.get $1)
       (local.get $5)
      )
     )
     (local.set $10
      (i32.lt_s
       (local.get $1)
       (local.get $3)
      )
     )
     (local.set $1
      (select
       (local.get $3)
       (local.get $1)
       (local.get $10)
      )
     )
     (local.set $1
      (select
       (local.get $5)
       (local.get $1)
       (local.get $9)
      )
     )
     (i32.store
      (local.get $8)
      (local.get $1)
     )
     ;;@ silk/decode_pitch.c:73:0
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br_if $while-in1
      (i32.ne
       (local.get $0)
       (local.get $4)
      )
     )
    )
   )
  )
 )
 (func $_silk_log2lin (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   ;;@ silk/log2lin.c:42:0
   (i32.lt_s
    (local.get $0)
    (i32.const 0)
   )
   ;;@ silk/log2lin.c:58:0
   (return
    (i32.const 0)
   )
  )
  (if
   ;;@ silk/log2lin.c:44:0
   (i32.gt_s
    (local.get $0)
    (i32.const 3966)
   )
   ;;@ silk/log2lin.c:58:0
   (return
    (i32.const 2147483647)
   )
  )
  (local.set $1
   (i32.shr_u
    (local.get $0)
    (i32.const 7)
   )
  )
  ;;@ silk/log2lin.c:48:0
  (local.set $4
   (i32.shl
    (i32.const 1)
    (local.get $1)
   )
  )
  ;;@ silk/log2lin.c:49:0
  (local.set $2
   (i32.and
    (local.get $0)
    (i32.const 127)
   )
  )
  (local.set $0
   (i32.add
    (if (result i32)
     ;;@ silk/log2lin.c:50:0
     (i32.lt_s
      (local.get $0)
      (i32.const 2048)
     )
     (block (result i32)
      ;;@ silk/log2lin.c:52:0
      (local.set $0
       (i32.sub
        (i32.const 128)
        (local.get $2)
       )
      )
      (local.set $3
       (i32.mul
        (local.get $2)
        (i32.const -174)
       )
      )
      (local.set $0
       (i32.mul
        (local.get $0)
        (local.get $3)
       )
      )
      (local.set $0
       (i32.shr_s
        (local.get $0)
        (i32.const 16)
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (local.get $2)
       )
      )
      (local.set $0
       (i32.shl
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.shr_s
       (local.get $0)
       (i32.const 7)
      )
     )
     (block (result i32)
      ;;@ silk/log2lin.c:55:0
      (local.set $0
       (i32.shr_s
        (local.get $4)
        (i32.const 7)
       )
      )
      (local.set $1
       (i32.sub
        (i32.const 128)
        (local.get $2)
       )
      )
      (local.set $3
       (i32.mul
        (local.get $2)
        (i32.const -174)
       )
      )
      (local.set $1
       (i32.mul
        (local.get $1)
        (local.get $3)
       )
      )
      (local.set $1
       (i32.shr_s
        (local.get $1)
        (i32.const 16)
       )
      )
      (local.set $2
       (i32.add
        (local.get $1)
        (local.get $2)
       )
      )
      (i32.mul
       (local.get $0)
       (local.get $2)
      )
     )
    )
    (local.get $4)
   )
  )
  ;;@ silk/log2lin.c:58:0
  (local.get $0)
 )
 (func $_silk_LPC_analysis_filter (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   ;;@ silk/LPC_analysis_filter.c:67:0
   (i32.le_s
    (local.get $4)
    (i32.const 5)
   )
   (call $_celt_fatal
    (i32.const 44000)
    (i32.const 44025)
    (i32.const 67)
   )
  )
  (if
   ;;@ silk/LPC_analysis_filter.c:68:0
   (i32.and
    (local.get $4)
    (i32.const 1)
   )
   (call $_celt_fatal
    (i32.const 44052)
    (i32.const 44025)
    (i32.const 68)
   )
  )
  (if
   ;;@ silk/LPC_analysis_filter.c:69:0
   (i32.gt_s
    (local.get $4)
    (local.get $3)
   )
   (call $_celt_fatal
    (i32.const 44083)
    (i32.const 44025)
    (i32.const 69)
   )
  )
  (block $folding-inner0
   ;;@ silk/LPC_analysis_filter.c:82:0
   (br_if $folding-inner0
    (i32.ge_s
     (local.get $4)
     (local.get $3)
    )
   )
   (if
    (i32.le_s
     (local.get $4)
     (i32.const 6)
    )
    (block
     (local.set $6
      (i32.const 6)
     )
     (loop $while-in
      ;;@ silk/LPC_analysis_filter.c:105:0
      (i32.store16
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 1)
        )
        (local.get $0)
       )
       (select
        (i32.const 32767)
        (i32.and
         (select
          ;;@ silk/LPC_analysis_filter.c:102:0
          (local.tee $7
           (i32.shr_s
            (i32.add
             (i32.shr_s
              ;;@ silk/LPC_analysis_filter.c:99:0
              (local.tee $5
               (i32.sub
                (i32.shl
                 (i32.load16_s
                  (i32.add
                   (i32.shl
                    (local.get $6)
                    (i32.const 1)
                   )
                   (local.get $1)
                  )
                 )
                 (i32.const 12)
                )
                (i32.add
                 (i32.add
                  (i32.add
                   (i32.add
                    (i32.add
                     (i32.mul
                      (i32.load16_s
                       ;;@ silk/LPC_analysis_filter.c:83:0
                       (local.tee $5
                        (i32.add
                         (i32.shl
                          (i32.add
                           (local.get $6)
                           (i32.const -1)
                          )
                          (i32.const 1)
                         )
                         (local.get $1)
                        )
                       )
                      )
                      (i32.load16_s
                       (local.get $2)
                      )
                     )
                     (i32.mul
                      (i32.load16_s
                       (i32.add
                        (local.get $5)
                        (i32.const -2)
                       )
                      )
                      (i32.load16_s offset=2
                       (local.get $2)
                      )
                     )
                    )
                    (i32.mul
                     (i32.load16_s
                      (i32.add
                       (local.get $5)
                       (i32.const -4)
                      )
                     )
                     (i32.load16_s offset=4
                      (local.get $2)
                     )
                    )
                   )
                   (i32.mul
                    (i32.load16_s
                     (i32.add
                      (local.get $5)
                      (i32.const -6)
                     )
                    )
                    (i32.load16_s offset=6
                     (local.get $2)
                    )
                   )
                  )
                  (i32.mul
                   (i32.load16_s
                    (i32.add
                     (local.get $5)
                     (i32.const -8)
                    )
                   )
                   (i32.load16_s offset=8
                    (local.get $2)
                   )
                  )
                 )
                 (i32.mul
                  (i32.load16_s
                   (i32.add
                    (local.get $5)
                    (i32.const -10)
                   )
                  )
                  (i32.load16_s offset=10
                   (local.get $2)
                  )
                 )
                )
               )
              )
              (i32.const 11)
             )
             (i32.const 1)
            )
            (i32.const 1)
           )
          )
          (i32.const -32768)
          (i32.gt_s
           (local.get $7)
           (i32.const -32768)
          )
         )
         (i32.const 65535)
        )
        (i32.gt_s
         (local.get $5)
         (i32.const 134215679)
        )
       )
      )
      ;;@ silk/LPC_analysis_filter.c:82:0
      (br_if $while-in
       (i32.ne
        (local.tee $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
      )
     )
     (br $folding-inner0)
    )
   )
   (local.set $6
    (local.get $4)
   )
   (loop $while-in1
    ;;@ silk/LPC_analysis_filter.c:92:0
    (local.set $8
     (i32.add
      (i32.add
       (i32.add
        (i32.add
         (i32.add
          (i32.mul
           (i32.load16_s
            ;;@ silk/LPC_analysis_filter.c:83:0
            (local.tee $5
             (i32.add
              (i32.shl
               (i32.add
                (local.get $6)
                (i32.const -1)
               )
               (i32.const 1)
              )
              (local.get $1)
             )
            )
           )
           (i32.load16_s
            (local.get $2)
           )
          )
          (i32.mul
           (i32.load16_s
            (i32.add
             (local.get $5)
             (i32.const -2)
            )
           )
           (i32.load16_s offset=2
            (local.get $2)
           )
          )
         )
         (i32.mul
          (i32.load16_s
           (i32.add
            (local.get $5)
            (i32.const -4)
           )
          )
          (i32.load16_s offset=4
           (local.get $2)
          )
         )
        )
        (i32.mul
         (i32.load16_s
          (i32.add
           (local.get $5)
           (i32.const -6)
          )
         )
         (i32.load16_s offset=6
          (local.get $2)
         )
        )
       )
       (i32.mul
        (i32.load16_s
         (i32.add
          (local.get $5)
          (i32.const -8)
         )
        )
        (i32.load16_s offset=8
         (local.get $2)
        )
       )
      )
      (i32.mul
       (i32.load16_s
        (i32.add
         (local.get $5)
         (i32.const -10)
        )
       )
       (i32.load16_s offset=10
        (local.get $2)
       )
      )
     )
    )
    (local.set $7
     (i32.const 6)
    )
    (loop $while-in3
     ;;@ silk/LPC_analysis_filter.c:95:0
     (local.set $8
      (i32.add
       (i32.add
        (i32.mul
         (i32.load16_s
          (i32.add
           (i32.shl
            (i32.sub
             (i32.const 0)
             (local.get $7)
            )
            (i32.const 1)
           )
           (local.get $5)
          )
         )
         (i32.load16_s
          (i32.add
           (i32.shl
            (local.get $7)
            (i32.const 1)
           )
           (local.get $2)
          )
         )
        )
        (local.get $8)
       )
       (i32.mul
        (i32.load16_s
         (i32.add
          (i32.shl
           (i32.xor
            (local.get $7)
            (i32.const -1)
           )
           (i32.const 1)
          )
          (local.get $5)
         )
        )
        (i32.load16_s
         (i32.add
          (i32.shl
           (i32.or
            (local.get $7)
            (i32.const 1)
           )
           (i32.const 1)
          )
          (local.get $2)
         )
        )
       )
      )
     )
     ;;@ silk/LPC_analysis_filter.c:93:0
     (br_if $while-in3
      (i32.lt_s
       (local.tee $7
        (i32.add
         (local.get $7)
         (i32.const 2)
        )
       )
       (local.get $4)
      )
     )
    )
    ;;@ silk/LPC_analysis_filter.c:105:0
    (i32.store16
     (i32.add
      (i32.shl
       (local.get $6)
       (i32.const 1)
      )
      (local.get $0)
     )
     (select
      (i32.const 32767)
      (i32.and
       (select
        ;;@ silk/LPC_analysis_filter.c:102:0
        (local.tee $7
         (i32.shr_s
          (i32.add
           (i32.shr_s
            ;;@ silk/LPC_analysis_filter.c:99:0
            (local.tee $5
             (i32.sub
              (i32.shl
               (i32.load16_s
                (i32.add
                 (i32.shl
                  (local.get $6)
                  (i32.const 1)
                 )
                 (local.get $1)
                )
               )
               (i32.const 12)
              )
              (local.get $8)
             )
            )
            (i32.const 11)
           )
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
        (i32.const -32768)
        (i32.gt_s
         (local.get $7)
         (i32.const -32768)
        )
       )
       (i32.const 65535)
      )
      (i32.gt_s
       (local.get $5)
       (i32.const 134215679)
      )
     )
    )
    ;;@ silk/LPC_analysis_filter.c:82:0
    (br_if $while-in1
     (i32.ne
      (local.tee $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (local.get $3)
     )
    )
   )
   ;;@ silk/LPC_analysis_filter.c:109:0
   (drop
    (call $_memset
     (local.get $0)
     (i32.const 0)
     (i32.shl
      (local.get $4)
      (i32.const 1)
     )
    )
   )
   ;;@ silk/LPC_analysis_filter.c:111:0
   (return)
  )
  ;;@ silk/LPC_analysis_filter.c:109:0
  (drop
   (call $_memset
    (local.get $0)
    (i32.const 0)
    (i32.shl
     (local.get $4)
     (i32.const 1)
    )
   )
  )
 )
 (func $_silk_LPC_inverse_pred_gain_c (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i64)
  (local $16 i32)
  (local $17 i32)
  (local $18 i64)
  (local $19 i32)
  (local $20 i64)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (local.set $9
   (local.get $2)
  )
  (block $folding-inner0
   (if
    ;;@ silk/LPC_inv_pred_gain.c:132:0
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
    (block
     (local.set $2
      (i32.const 0)
     )
     (loop $while-in
      ;;@ silk/LPC_inv_pred_gain.c:133:0
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $2)
         (i32.const 1)
        )
        (local.get $0)
       )
      )
      (local.set $5
       (i32.load16_s
        (local.get $5)
       )
      )
      (local.set $4
       (i32.add
        (local.get $4)
        (local.get $5)
       )
      )
      ;;@ silk/LPC_inv_pred_gain.c:134:0
      (local.set $8
       (i32.shl
        (local.get $5)
        (i32.const 12)
       )
      )
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $2)
         (i32.const 2)
        )
        (local.get $9)
       )
      )
      (i32.store
       (local.get $5)
       (local.get $8)
      )
      ;;@ silk/LPC_inv_pred_gain.c:132:0
      (local.set $2
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (br_if $while-in
       (i32.ne
        (local.get $1)
        (local.get $2)
       )
      )
     )
     ;;@ silk/LPC_inv_pred_gain.c:137:0
     (br_if $folding-inner0
      (i32.gt_s
       (local.get $4)
       (i32.const 4095)
      )
     )
    )
   )
   (local.set $0
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
   ;;@ silk/LPC_inv_pred_gain.c:51:0
   (local.set $2
    (i32.gt_u
     (i32.add
      (local.tee $4
       (i32.load
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
         (local.get $9)
        )
       )
      )
      (i32.const 16773022)
     )
     (i32.const 33546044)
    )
   )
   (if
    (i32.gt_s
     (local.get $1)
     (i32.const 1)
    )
    (block $label$break$L8
     (local.set $3
      (i64.const 1073741824)
     )
     (loop $label$continue$L10
      (block $__rjti$0
       (br_if $__rjti$0
        (local.get $2)
       )
       ;;@ silk/LPC_inv_pred_gain.c:58:0
       (local.set $2
        (i32.shl
         (local.get $4)
         (i32.const 7)
        )
       )
       (local.set $2
        (i32.sub
         (i32.const 0)
         (local.get $2)
        )
       )
       ;;@ silk/LPC_inv_pred_gain.c:61:0
       (local.set $18
        (i64.extend_i32_s
         (local.get $2)
        )
       )
       (local.set $6
        (i64.mul
         (local.get $18)
         (local.get $18)
        )
       )
       (local.set $6
        (i64.shr_u
         (local.get $6)
         (i64.const 32)
        )
       )
       (local.set $2
        (i32.wrap_i64
         (local.get $6)
        )
       )
       (local.set $5
        (i32.sub
         (i32.const 1073741824)
         (local.get $2)
        )
       )
       ;;@ silk/LPC_inv_pred_gain.c:67:0
       (local.set $6
        (i64.extend_i32_s
         (local.get $5)
        )
       )
       (local.set $3
        (i64.mul
         (local.get $3)
         (local.get $6)
        )
       )
       (local.set $3
        (i64.shr_u
         (local.get $3)
         (i64.const 30)
        )
       )
       (local.set $2
        (i32.wrap_i64
         (local.get $3)
        )
       )
       (local.set $19
        (i32.and
         (local.get $2)
         (i32.const -4)
        )
       )
       ;;@ silk/LPC_inv_pred_gain.c:70:0
       (br_if $__rjti$0
        (i32.lt_s
         (local.get $19)
         (i32.const 107374)
        )
       )
       ;;@ silk/LPC_inv_pred_gain.c:75:0
       (local.set $4
        (i32.gt_s
         (local.get $5)
         (i32.const 0)
        )
       )
       (local.set $2
        (i32.sub
         (i32.const 0)
         (local.get $5)
        )
       )
       (local.set $2
        (select
         (local.get $5)
         (local.get $2)
         (local.get $4)
        )
       )
       ;;@ ./silk/macros.h:122:0
       (local.set $7
        (i32.clz
         (local.get $2)
        )
       )
       ;;@ silk/LPC_inv_pred_gain.c:75:0
       (local.set $14
        (i32.sub
         (i32.const 32)
         (local.get $7)
        )
       )
       ;;@ ./silk/Inlines.h:155:0
       (local.set $2
        (i32.add
         (local.get $7)
         (i32.const -1)
        )
       )
       ;;@ ./silk/Inlines.h:156:0
       (local.set $5
        (i32.shl
         (local.get $5)
         (local.get $2)
        )
       )
       ;;@ ./silk/Inlines.h:159:0
       (local.set $2
        (i32.shr_s
         (local.get $5)
         (i32.const 16)
        )
       )
       (local.set $10
        (i32.div_s
         (i32.const 536870911)
         (local.get $2)
        )
       )
       ;;@ ./silk/Inlines.h:162:0
       (local.set $8
        (i32.shl
         (local.get $10)
         (i32.const 16)
        )
       )
       ;;@ ./silk/Inlines.h:165:0
       (local.set $12
        (i32.shr_s
         (local.get $8)
         (i32.const 16)
        )
       )
       (local.set $4
        (i32.mul
         (local.get $2)
         (local.get $12)
        )
       )
       (local.set $2
        (i32.and
         (local.get $5)
         (i32.const 65535)
        )
       )
       (local.set $2
        (i32.mul
         (local.get $2)
         (local.get $12)
        )
       )
       (local.set $2
        (i32.shr_s
         (local.get $2)
         (i32.const 16)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (local.get $4)
        )
       )
       (local.set $2
        (i32.shl
         (local.get $2)
         (i32.const 3)
        )
       )
       (local.set $11
        (i32.sub
         (i32.const 0)
         (local.get $2)
        )
       )
       ;;@ ./silk/Inlines.h:168:0
       (local.set $2
        (i32.shr_s
         (local.get $11)
         (i32.const 16)
        )
       )
       (local.set $5
        (i32.mul
         (local.get $2)
         (local.get $12)
        )
       )
       (local.set $2
        (i32.and
         (local.get $11)
         (i32.const 65528)
        )
       )
       (local.set $2
        (i32.mul
         (local.get $2)
         (local.get $12)
        )
       )
       (local.set $4
        (i32.shr_s
         (local.get $2)
         (i32.const 16)
        )
       )
       (local.set $2
        (i32.shr_s
         (local.get $10)
         (i32.const 15)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.shr_s
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.mul
         (local.get $2)
         (local.get $11)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (local.get $8)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (local.get $5)
        )
       )
       (local.set $11
        (i32.add
         (local.get $2)
         (local.get $4)
        )
       )
       ;;@ ./silk/Inlines.h:171:0
       (local.set $4
        (i32.sub
         (i32.const 62)
         (local.get $7)
        )
       )
       ;;@ silk/LPC_inv_pred_gain.c:76:0
       (local.set $2
        (i32.sub
         (i32.const -30)
         (local.get $14)
        )
       )
       ;;@ ./silk/Inlines.h:171:0
       (local.set $2
        (i32.add
         (local.get $2)
         (local.get $4)
        )
       )
       (local.set $2
        (if (result i32)
         ;;@ ./silk/Inlines.h:172:0
         (i32.lt_s
          (local.get $2)
          (i32.const 1)
         )
         (block (result i32)
          ;;@ ./silk/Inlines.h:173:0
          (local.set $10
           (i32.sub
            (i32.const 0)
            (local.get $2)
           )
          )
          (local.set $5
           (i32.shr_s
            (i32.const -2147483648)
            (local.get $10)
           )
          )
          (local.set $4
           (i32.shr_u
            (i32.const 2147483647)
            (local.get $10)
           )
          )
          (local.set $2
           (i32.gt_s
            (local.get $5)
            (local.get $4)
           )
          )
          (local.set $8
           (select
            (local.get $5)
            (local.get $4)
            (local.get $2)
           )
          )
          (local.set $5
           (select
            (local.get $4)
            (local.get $5)
            (local.get $2)
           )
          )
          (local.set $4
           (i32.gt_s
            (local.get $11)
            (local.get $8)
           )
          )
          (local.set $2
           (i32.lt_s
            (local.get $11)
            (local.get $5)
           )
          )
          (local.set $2
           (select
            (local.get $5)
            (local.get $11)
            (local.get $2)
           )
          )
          (local.set $2
           (select
            (local.get $8)
            (local.get $2)
            (local.get $4)
           )
          )
          (i32.shl
           (local.get $2)
           (local.get $10)
          )
         )
         (block (result i32)
          ;;@ ./silk/Inlines.h:175:0
          (local.set $4
           (i32.lt_s
            (local.get $2)
            (i32.const 32)
           )
          )
          ;;@ ./silk/Inlines.h:176:0
          (local.set $2
           (i32.shr_s
            (local.get $11)
            (local.get $2)
           )
          )
          ;;@ ./silk/Inlines.h:175:0
          (select
           (local.get $2)
           (i32.const 0)
           (local.get $4)
          )
         )
        )
       )
       (local.set $11
        (i32.shr_u
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $5
        (i32.add
         (local.get $0)
         (i32.const -1)
        )
       )
       (local.set $12
        (i32.eq
         (local.get $14)
         (i32.const 1)
        )
       )
       (local.set $15
        (i64.extend_i32_s
         (local.get $2)
        )
       )
       (local.set $20
        (i64.extend_i32_u
         (i32.add
          (local.get $14)
          (i32.const -1)
         )
        )
       )
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in1
        ;;@ silk/LPC_inv_pred_gain.c:81:0
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $9)
         )
        )
        (local.set $16
         (i32.load
          (local.get $7)
         )
        )
        ;;@ silk/LPC_inv_pred_gain.c:82:0
        (local.set $2
         (i32.sub
          (local.get $5)
          (local.get $1)
         )
        )
        (local.set $14
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (local.get $9)
         )
        )
        (local.set $17
         (i32.load
          (local.get $14)
         )
        )
        ;;@ silk/LPC_inv_pred_gain.c:83:0
        (local.set $3
         (i64.extend_i32_s
          (local.get $17)
         )
        )
        (local.set $3
         (i64.mul
          (local.get $3)
          (local.get $18)
         )
        )
        (local.set $3
         (i64.shr_u
          (local.get $3)
          (i64.const 30)
         )
        )
        (local.set $3
         (i64.add
          (local.get $3)
          (i64.const 1)
         )
        )
        (local.set $3
         (i64.shr_u
          (local.get $3)
          (i64.const 1)
         )
        )
        (local.set $4
         (i32.wrap_i64
          (local.get $3)
         )
        )
        (local.set $13
         (i32.sub
          (local.get $16)
          (local.get $4)
         )
        )
        (local.set $2
         (i32.gt_s
          (local.get $13)
          (i32.const -1)
         )
        )
        (local.set $6
         (if (result i64)
          (local.get $12)
          (block (result i64)
           (local.set $2
            (if (result i32)
             (local.get $2)
             (block (result i32)
              (local.set $2
               (i32.xor
                (local.get $4)
                (i32.const -2147483648)
               )
              )
              (local.set $2
               (i32.and
                (local.get $2)
                (local.get $16)
               )
              )
              (local.set $2
               (i32.lt_s
                (local.get $2)
                (i32.const 0)
               )
              )
              (local.set $3
               (i64.extend_i32_s
                (local.get $13)
               )
              )
              (local.set $3
               (select
                (i64.const -2147483648)
                (local.get $3)
                (local.get $2)
               )
              )
              (select
               (i32.const -2147483648)
               (local.get $13)
               (local.get $2)
              )
             )
             (block (result i32)
              (local.set $2
               (i32.xor
                (local.get $16)
                (i32.const -2147483648)
               )
              )
              (local.set $2
               (i32.and
                (local.get $2)
                (local.get $4)
               )
              )
              (local.set $2
               (i32.lt_s
                (local.get $2)
                (i32.const 0)
               )
              )
              (local.set $3
               (i64.extend_i32_s
                (local.get $13)
               )
              )
              (local.set $3
               (select
                (i64.const 2147483647)
                (local.get $3)
                (local.get $2)
               )
              )
              (select
               (i32.const 2147483647)
               (local.get $13)
               (local.get $2)
              )
             )
            )
           )
           (local.set $3
            (i64.mul
             (local.get $3)
             (local.get $15)
            )
           )
           (local.set $6
            (i64.shr_s
             (local.get $3)
             (i64.const 1)
            )
           )
           (local.set $3
            (i64.extend_i32_s
             (local.get $2)
            )
           )
           (local.set $3
            (i64.mul
             (local.get $3)
             (local.get $15)
            )
           )
           (local.set $3
            (i64.and
             (local.get $3)
             (i64.const 1)
            )
           )
           (i64.add
            (local.get $3)
            (local.get $6)
           )
          )
          (block (result i64)
           (local.set $10
            (select
             (local.get $4)
             (local.get $16)
             (local.get $2)
            )
           )
           (local.set $8
            (select
             (local.get $16)
             (local.get $4)
             (local.get $2)
            )
           )
           (local.set $2
            (i32.shr_s
             (local.get $13)
             (i32.const 31)
            )
           )
           (local.set $4
            (i32.xor
             (local.get $2)
             (i32.const -2147483648)
            )
           )
           (local.set $2
            (i32.xor
             (local.get $10)
             (i32.const -2147483648)
            )
           )
           (local.set $2
            (i32.and
             (local.get $2)
             (local.get $8)
            )
           )
           (local.set $2
            (i32.lt_s
             (local.get $2)
             (i32.const 0)
            )
           )
           (local.set $2
            (select
             (local.get $4)
             (local.get $13)
             (local.get $2)
            )
           )
           (local.set $3
            (i64.extend_i32_s
             (local.get $2)
            )
           )
           (local.set $3
            (i64.mul
             (local.get $3)
             (local.get $15)
            )
           )
           (local.set $3
            (i64.shr_s
             (local.get $3)
             (local.get $20)
            )
           )
           (local.set $3
            (i64.add
             (local.get $3)
             (i64.const 1)
            )
           )
           (i64.shr_s
            (local.get $3)
            (i64.const 1)
           )
          )
         )
        )
        ;;@ silk/LPC_inv_pred_gain.c:85:0
        (local.set $3
         (i64.add
          (local.get $6)
          (i64.const 2147483648)
         )
        )
        (br_if $__rjti$0
         (i64.gt_u
          (local.get $3)
          (i64.const 4294967295)
         )
        )
        ;;@ silk/LPC_inv_pred_gain.c:88:0
        (local.set $2
         (i32.wrap_i64
          (local.get $6)
         )
        )
        (i32.store
         (local.get $7)
         (local.get $2)
        )
        ;;@ silk/LPC_inv_pred_gain.c:89:0
        (local.set $3
         (i64.extend_i32_s
          (local.get $16)
         )
        )
        (local.set $3
         (i64.mul
          (local.get $3)
          (local.get $18)
         )
        )
        (local.set $3
         (i64.shr_u
          (local.get $3)
          (i64.const 30)
         )
        )
        (local.set $3
         (i64.add
          (local.get $3)
          (i64.const 1)
         )
        )
        (local.set $3
         (i64.shr_u
          (local.get $3)
          (i64.const 1)
         )
        )
        (local.set $4
         (i32.wrap_i64
          (local.get $3)
         )
        )
        (local.set $7
         (i32.sub
          (local.get $17)
          (local.get $4)
         )
        )
        (local.set $2
         (i32.gt_s
          (local.get $7)
          (i32.const -1)
         )
        )
        (local.set $6
         (if (result i64)
          (local.get $12)
          (block (result i64)
           (local.set $2
            (if (result i32)
             (local.get $2)
             (block (result i32)
              (local.set $2
               (i32.xor
                (local.get $4)
                (i32.const -2147483648)
               )
              )
              (local.set $2
               (i32.and
                (local.get $2)
                (local.get $17)
               )
              )
              (local.set $2
               (i32.lt_s
                (local.get $2)
                (i32.const 0)
               )
              )
              (local.set $3
               (i64.extend_i32_s
                (local.get $7)
               )
              )
              (local.set $3
               (select
                (i64.const -2147483648)
                (local.get $3)
                (local.get $2)
               )
              )
              (select
               (i32.const -2147483648)
               (local.get $7)
               (local.get $2)
              )
             )
             (block (result i32)
              (local.set $2
               (i32.xor
                (local.get $17)
                (i32.const -2147483648)
               )
              )
              (local.set $2
               (i32.and
                (local.get $2)
                (local.get $4)
               )
              )
              (local.set $2
               (i32.lt_s
                (local.get $2)
                (i32.const 0)
               )
              )
              (local.set $3
               (i64.extend_i32_s
                (local.get $7)
               )
              )
              (local.set $3
               (select
                (i64.const 2147483647)
                (local.get $3)
                (local.get $2)
               )
              )
              (select
               (i32.const 2147483647)
               (local.get $7)
               (local.get $2)
              )
             )
            )
           )
           (local.set $3
            (i64.mul
             (local.get $3)
             (local.get $15)
            )
           )
           (local.set $6
            (i64.shr_s
             (local.get $3)
             (i64.const 1)
            )
           )
           (local.set $3
            (i64.extend_i32_s
             (local.get $2)
            )
           )
           (local.set $3
            (i64.mul
             (local.get $3)
             (local.get $15)
            )
           )
           (local.set $3
            (i64.and
             (local.get $3)
             (i64.const 1)
            )
           )
           (i64.add
            (local.get $3)
            (local.get $6)
           )
          )
          (block (result i64)
           (local.set $10
            (select
             (local.get $4)
             (local.get $17)
             (local.get $2)
            )
           )
           (local.set $8
            (select
             (local.get $17)
             (local.get $4)
             (local.get $2)
            )
           )
           (local.set $2
            (i32.shr_s
             (local.get $7)
             (i32.const 31)
            )
           )
           (local.set $4
            (i32.xor
             (local.get $2)
             (i32.const -2147483648)
            )
           )
           (local.set $2
            (i32.xor
             (local.get $10)
             (i32.const -2147483648)
            )
           )
           (local.set $2
            (i32.and
             (local.get $2)
             (local.get $8)
            )
           )
           (local.set $2
            (i32.lt_s
             (local.get $2)
             (i32.const 0)
            )
           )
           (local.set $2
            (select
             (local.get $4)
             (local.get $7)
             (local.get $2)
            )
           )
           (local.set $3
            (i64.extend_i32_s
             (local.get $2)
            )
           )
           (local.set $3
            (i64.mul
             (local.get $3)
             (local.get $15)
            )
           )
           (local.set $3
            (i64.shr_s
             (local.get $3)
             (local.get $20)
            )
           )
           (local.set $3
            (i64.add
             (local.get $3)
             (i64.const 1)
            )
           )
           (i64.shr_s
            (local.get $3)
            (i64.const 1)
           )
          )
         )
        )
        ;;@ silk/LPC_inv_pred_gain.c:91:0
        (local.set $3
         (i64.add
          (local.get $6)
          (i64.const 2147483648)
         )
        )
        (br_if $__rjti$0
         (i64.gt_u
          (local.get $3)
          (i64.const 4294967295)
         )
        )
        ;;@ silk/LPC_inv_pred_gain.c:94:0
        (local.set $2
         (i32.wrap_i64
          (local.get $6)
         )
        )
        (i32.store
         (local.get $14)
         (local.get $2)
        )
        ;;@ silk/LPC_inv_pred_gain.c:79:0
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br_if $while-in1
         (i32.lt_u
          (local.get $1)
          (local.get $11)
         )
        )
       )
       (local.set $4
        (i32.load
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $9)
         )
        )
       )
       ;;@ silk/LPC_inv_pred_gain.c:51:0
       (local.set $3
        (i64.extend_i32_s
         (local.get $19)
        )
       )
       (local.set $2
        (i32.gt_u
         (i32.add
          (local.get $4)
          (i32.const 16773022)
         )
         (i32.const 33546044)
        )
       )
       (br_if $label$break$L8
        (i32.le_s
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.set $1
        (local.get $0)
       )
       (local.set $0
        (local.get $5)
       )
       (br $label$continue$L10)
      )
     )
     (br $folding-inner0)
    )
    (local.set $3
     (i64.const 1073741824)
    )
   )
   (br_if $folding-inner0
    (local.get $2)
   )
   ;;@ silk/LPC_inv_pred_gain.c:104:0
   (local.set $0
    (i32.load
     (local.get $9)
    )
   )
   (local.set $0
    (i32.shl
     (local.get $0)
     (i32.const 7)
    )
   )
   (local.set $0
    (i32.sub
     (i32.const 0)
     (local.get $0)
    )
   )
   ;;@ silk/LPC_inv_pred_gain.c:107:0
   (local.set $6
    (i64.extend_i32_s
     (local.get $0)
    )
   )
   (local.set $6
    (i64.mul
     (local.get $6)
     (local.get $6)
    )
   )
   (local.set $6
    (i64.shr_u
     (local.get $6)
     (i64.const 32)
    )
   )
   (local.set $0
    (i32.wrap_i64
     (local.get $6)
    )
   )
   (local.set $0
    (i32.sub
     (i32.const 1073741824)
     (local.get $0)
    )
   )
   ;;@ silk/LPC_inv_pred_gain.c:111:0
   (local.set $6
    (i64.extend_i32_s
     (local.get $0)
    )
   )
   (local.set $3
    (i64.mul
     (local.get $3)
     (local.get $6)
    )
   )
   (local.set $3
    (i64.shr_u
     (local.get $3)
     (i64.const 30)
    )
   )
   (local.set $0
    (i32.wrap_i64
     (local.get $3)
    )
   )
   (local.set $1
    (i32.and
     (local.get $0)
     (i32.const -4)
    )
   )
   ;;@ silk/LPC_inv_pred_gain.c:114:0
   (local.set $0
    (i32.lt_s
     (local.get $1)
     (i32.const 107374)
    )
   )
   ;;@ silk/LPC_inv_pred_gain.c:115:0
   (local.set $0
    (select
     (i32.const 0)
     (local.get $1)
     (local.get $0)
    )
   )
   (global.set $STACKTOP
    (local.get $9)
   )
   ;;@ silk/LPC_inv_pred_gain.c:141:0
   (return
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  (i32.const 0)
 )
 (func $_silk_NLSF2A (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 320)
   )
  )
  (local.set $11
   (i32.add
    (local.get $3)
    (i32.const 224)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 160)
   )
  )
  (local.set $7
   (i32.add
    (local.get $3)
    (i32.const 96)
   )
  )
  (local.set $9
   (local.get $3)
  )
  (block $switch
   (block $switch-default
    (br_table $switch $switch-default $switch-default $switch-default $switch-default $switch-default $switch $switch-default
     (i32.sub
      (local.get $2)
      (i32.const 10)
     )
    )
   )
   ;;@ silk/NLSF2A.c:89:0
   (call $_celt_fatal
    (i32.const 44110)
    (i32.const 44143)
    (i32.const 89)
   )
  )
  ;;@ silk/NLSF2A.c:92:0
  (local.set $10
   (select
    (i32.const 26752)
    (i32.const 44157)
    (i32.eq
     (local.get $2)
     (i32.const 16)
    )
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in
   ;;@ silk/NLSF2A.c:110:0
   (i32.store
    (i32.add
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $3)
        (local.get $10)
       )
      )
      (i32.const 2)
     )
     (local.get $11)
    )
    (i32.shr_s
     (i32.add
      (i32.shr_s
       (i32.add
        (i32.shl
         ;;@ silk/NLSF2A.c:106:0
         (local.tee $5
          (i32.load16_s
           (i32.add
            (i32.shl
             ;;@ silk/NLSF2A.c:97:0
             (local.tee $4
              (i32.shr_s
               (local.tee $8
                (i32.load16_s
                 (i32.add
                  (i32.shl
                   (local.get $3)
                   (i32.const 1)
                  )
                  (local.get $1)
                 )
                )
               )
               (i32.const 8)
              )
             )
             (i32.const 1)
            )
            (i32.const 26480)
           )
          )
         )
         (i32.const 8)
        )
        (i32.mul
         (i32.sub
          (i32.load16_s
           (i32.add
            (i32.shl
             (local.get $4)
             (i32.const 1)
            )
            (i32.const 26482)
           )
          )
          (local.get $5)
         )
         (i32.and
          (local.get $8)
          (i32.const 255)
         )
        )
       )
       (i32.const 3)
      )
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
   ;;@ silk/NLSF2A.c:93:0
   (br_if $while-in
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.get $2)
    )
   )
  )
  ;;@ silk/NLSF2A.c:113:0
  (local.set $1
   (i32.sub
    (i32.const 0)
    (i32.load
     (local.get $11)
    )
   )
  )
  (local.set $14
   (i32.shr_s
    (local.get $2)
    (i32.const 1)
   )
  )
  ;;@ silk/NLSF2A.c:53:0
  (i32.store
   (local.get $6)
   (i32.const 65536)
  )
  ;;@ silk/NLSF2A.c:54:0
  (i32.store offset=4
   (local.get $6)
   (local.get $1)
  )
  (if
   ;;@ silk/NLSF2A.c:55:0
   (local.tee $16
    (i32.gt_s
     (local.get $2)
     (i32.const 3)
    )
   )
   (block $label$break$L7
    (local.set $3
     (i32.const 1)
    )
    (local.set $4
     (i32.const 65536)
    )
    (local.set $5
     (local.get $1)
    )
    (loop $while-in2
     ;;@ silk/NLSF2A.c:57:0
     (local.set $15
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $6)
      )
     )
     (i32.store
      (local.tee $12
       (i32.add
        (i32.shl
         (local.tee $8
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
        (local.get $6)
       )
      )
      (i32.sub
       (i32.shl
        (local.get $4)
        (i32.const 1)
       )
       (i32.wrap_i64
        (i64.shr_u
         (i64.add
          (i64.shr_u
           (i64.mul
            (local.tee $13
             (i64.extend_i32_s
              ;;@ silk/NLSF2A.c:56:0
              (local.tee $10
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $3)
                  (i32.const 3)
                 )
                 (local.get $11)
                )
               )
              )
             )
            )
            (i64.extend_i32_s
             (local.get $5)
            )
           )
           (i64.const 15)
          )
          (i64.const 1)
         )
         (i64.const 1)
        )
       )
      )
     )
     ;;@ silk/NLSF2A.c:61:0
     (i32.store offset=4
      (local.get $6)
      (local.tee $1
       (i32.sub
        (if (result i32)
         ;;@ silk/NLSF2A.c:58:0
         (i32.gt_u
          (local.get $3)
          (i32.const 1)
         )
         (block (result i32)
          ;;@ silk/NLSF2A.c:59:0
          (i32.store
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
            (local.get $6)
           )
           (i32.sub
            (i32.add
             (local.get $5)
             (local.tee $1
              (i32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $3)
                  (i32.const -2)
                 )
                 (i32.const 2)
                )
                (local.get $6)
               )
              )
             )
            )
            (i32.wrap_i64
             (i64.shr_u
              (i64.add
               (i64.shr_u
                (i64.mul
                 (i64.extend_i32_s
                  (local.get $4)
                 )
                 (local.get $13)
                )
                (i64.const 15)
               )
               (i64.const 1)
              )
              (i64.const 1)
             )
            )
           )
          )
          (if
           ;;@ silk/NLSF2A.c:58:0
           (i32.ne
            (local.get $3)
            (i32.const 2)
           )
           (loop $while-in4
            ;;@ silk/NLSF2A.c:59:0
            (i32.store
             (i32.add
              (i32.shl
               (local.tee $4
                (i32.add
                 (local.get $3)
                 (i32.const -1)
                )
               )
               (i32.const 2)
              )
              (local.get $6)
             )
             (i32.sub
              (i32.add
               (local.tee $5
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $3)
                    (i32.const -3)
                   )
                   (i32.const 2)
                  )
                  (local.get $6)
                 )
                )
               )
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $4)
                  (i32.const 2)
                 )
                 (local.get $6)
                )
               )
              )
              (i32.wrap_i64
               (i64.shr_u
                (i64.add
                 (i64.shr_u
                  (i64.mul
                   (i64.extend_i32_s
                    (local.get $1)
                   )
                   (local.get $13)
                  )
                  (i64.const 15)
                 )
                 (i64.const 1)
                )
                (i64.const 1)
               )
              )
             )
            )
            (if
             ;;@ silk/NLSF2A.c:58:0
             (i32.gt_s
              (local.get $3)
              (i32.const 3)
             )
             (block
              (local.set $3
               (local.get $4)
              )
              (local.set $1
               (local.get $5)
              )
              (br $while-in4)
             )
            )
           )
          )
          (i32.load offset=4
           (local.get $6)
          )
         )
         (local.get $1)
        )
        (local.get $10)
       )
      )
     )
     ;;@ silk/NLSF2A.c:55:0
     (br_if $label$break$L7
      (i32.eq
       (local.get $8)
       (local.get $14)
      )
     )
     ;;@ silk/NLSF2A.c:57:0
     (local.set $4
      (i32.load
       (local.get $15)
      )
     )
     (local.set $3
      (local.get $8)
     )
     (local.set $5
      (i32.load
       (local.get $12)
      )
     )
     (br $while-in2)
    )
   )
  )
  ;;@ silk/NLSF2A.c:53:0
  (i32.store
   (local.get $7)
   (i32.const 65536)
  )
  ;;@ silk/NLSF2A.c:54:0
  (i32.store offset=4
   (local.get $7)
   (local.tee $1
    (i32.sub
     (i32.const 0)
     (i32.load
      ;;@ silk/NLSF2A.c:117:0
      (local.tee $11
       (i32.add
        (local.get $11)
        (i32.const 4)
       )
      )
     )
    )
   )
  )
  (if
   (local.get $16)
   (block $label$break$L21
    (local.set $3
     (i32.const 1)
    )
    (local.set $4
     (i32.const 65536)
    )
    (local.set $5
     (local.get $1)
    )
    (loop $while-in7
     ;;@ silk/NLSF2A.c:57:0
     (local.set $15
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $7)
      )
     )
     (i32.store
      (local.tee $12
       (i32.add
        (i32.shl
         (local.tee $8
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
        (local.get $7)
       )
      )
      (i32.sub
       (i32.shl
        (local.get $4)
        (i32.const 1)
       )
       (i32.wrap_i64
        (i64.shr_u
         (i64.add
          (i64.shr_u
           (i64.mul
            (local.tee $13
             (i64.extend_i32_s
              ;;@ silk/NLSF2A.c:56:0
              (local.tee $10
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $3)
                  (i32.const 3)
                 )
                 (local.get $11)
                )
               )
              )
             )
            )
            (i64.extend_i32_s
             (local.get $5)
            )
           )
           (i64.const 15)
          )
          (i64.const 1)
         )
         (i64.const 1)
        )
       )
      )
     )
     ;;@ silk/NLSF2A.c:61:0
     (i32.store offset=4
      (local.get $7)
      (local.tee $1
       (i32.sub
        (if (result i32)
         ;;@ silk/NLSF2A.c:58:0
         (i32.gt_u
          (local.get $3)
          (i32.const 1)
         )
         (block (result i32)
          ;;@ silk/NLSF2A.c:59:0
          (i32.store
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
            (local.get $7)
           )
           (i32.sub
            (i32.add
             (local.get $5)
             (local.tee $1
              (i32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $3)
                  (i32.const -2)
                 )
                 (i32.const 2)
                )
                (local.get $7)
               )
              )
             )
            )
            (i32.wrap_i64
             (i64.shr_u
              (i64.add
               (i64.shr_u
                (i64.mul
                 (i64.extend_i32_s
                  (local.get $4)
                 )
                 (local.get $13)
                )
                (i64.const 15)
               )
               (i64.const 1)
              )
              (i64.const 1)
             )
            )
           )
          )
          (if
           ;;@ silk/NLSF2A.c:58:0
           (i32.ne
            (local.get $3)
            (i32.const 2)
           )
           (loop $while-in9
            ;;@ silk/NLSF2A.c:59:0
            (i32.store
             (i32.add
              (i32.shl
               (local.tee $4
                (i32.add
                 (local.get $3)
                 (i32.const -1)
                )
               )
               (i32.const 2)
              )
              (local.get $7)
             )
             (i32.sub
              (i32.add
               (local.tee $5
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $3)
                    (i32.const -3)
                   )
                   (i32.const 2)
                  )
                  (local.get $7)
                 )
                )
               )
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $4)
                  (i32.const 2)
                 )
                 (local.get $7)
                )
               )
              )
              (i32.wrap_i64
               (i64.shr_u
                (i64.add
                 (i64.shr_u
                  (i64.mul
                   (i64.extend_i32_s
                    (local.get $1)
                   )
                   (local.get $13)
                  )
                  (i64.const 15)
                 )
                 (i64.const 1)
                )
                (i64.const 1)
               )
              )
             )
            )
            (if
             ;;@ silk/NLSF2A.c:58:0
             (i32.gt_s
              (local.get $3)
              (i32.const 3)
             )
             (block
              (local.set $3
               (local.get $4)
              )
              (local.set $1
               (local.get $5)
              )
              (br $while-in9)
             )
            )
           )
          )
          (i32.load offset=4
           (local.get $7)
          )
         )
         (local.get $1)
        )
        (local.get $10)
       )
      )
     )
     ;;@ silk/NLSF2A.c:55:0
     (br_if $label$break$L21
      (i32.eq
       (local.get $8)
       (local.get $14)
      )
     )
     ;;@ silk/NLSF2A.c:57:0
     (local.set $4
      (i32.load
       (local.get $15)
      )
     )
     (local.set $3
      (local.get $8)
     )
     (local.set $5
      (i32.load
       (local.get $12)
      )
     )
     (br $while-in7)
    )
   )
  )
  (if
   ;;@ silk/NLSF2A.c:120:0
   (i32.gt_s
    (local.get $2)
    (i32.const 1)
   )
   (block
    (local.set $12
     (i32.add
      (local.get $2)
      (i32.const -1)
     )
    )
    ;;@ silk/NLSF2A.c:121:0
    (local.set $1
     (i32.load
      (local.get $6)
     )
    )
    ;;@ silk/NLSF2A.c:122:0
    (local.set $3
     (i32.const 0)
    )
    (local.set $4
     (i32.load
      (local.get $7)
     )
    )
    (loop $while-in11
     ;;@ silk/NLSF2A.c:125:0
     (i32.store
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $9)
      )
      (i32.sub
       (i32.const 0)
       (i32.add
        ;;@ silk/NLSF2A.c:121:0
        (local.tee $10
         (i32.add
          (local.get $1)
          (local.tee $1
           (i32.load
            (i32.add
             (i32.shl
              (local.tee $8
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (local.get $6)
            )
           )
          )
         )
        )
        ;;@ silk/NLSF2A.c:122:0
        (local.tee $4
         (i32.sub
          (local.tee $5
           (i32.load
            (i32.add
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
             (local.get $7)
            )
           )
          )
          (local.get $4)
         )
        )
       )
      )
     )
     ;;@ silk/NLSF2A.c:126:0
     (i32.store
      (i32.add
       (i32.shl
        (i32.sub
         (local.get $12)
         (local.get $3)
        )
        (i32.const 2)
       )
       (local.get $9)
      )
      (i32.sub
       (local.get $4)
       (local.get $10)
      )
     )
     (if
      ;;@ silk/NLSF2A.c:120:0
      (i32.lt_s
       (local.get $8)
       (local.get $14)
      )
      (block
       (local.set $3
        (local.get $8)
       )
       (local.set $4
        (local.get $5)
       )
       (br $while-in11)
      )
     )
    )
   )
  )
  ;;@ silk/NLSF2A.c:130:0
  (call $_silk_LPC_fit
   (local.get $0)
   (local.get $9)
   (local.get $2)
  )
  (if
   ;;@ silk/NLSF2A.c:132:0
   (call $_silk_LPC_inverse_pred_gain_c
    (local.get $0)
    (local.get $2)
   )
   (block
    (global.set $STACKTOP
     (local.get $9)
    )
    ;;@ silk/NLSF2A.c:140:0
    (return)
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in13
   ;;@ silk/NLSF2A.c:135:0
   (call $_silk_bwexpander_32
    (local.get $9)
    (local.get $2)
    (i32.sub
     (i32.const 65536)
     (i32.shl
      (i32.const 2)
      (local.get $3)
     )
    )
   )
   (local.set $1
    (i32.const 0)
   )
   (loop $while-in15
    ;;@ silk/NLSF2A.c:137:0
    (i32.store16
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 1)
      )
      (local.get $0)
     )
     (i32.shr_u
      (i32.add
       (i32.shr_u
        (i32.load
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $9)
         )
        )
        (i32.const 4)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
    ;;@ silk/NLSF2A.c:136:0
    (br_if $while-in15
     (i32.ne
      (local.get $2)
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
   )
   ;;@ silk/NLSF2A.c:132:0
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (br_if $while-in13
    (i32.and
     (i32.eqz
      (call $_silk_LPC_inverse_pred_gain_c
       (local.get $0)
       (local.get $2)
      )
     )
     (i32.lt_u
      (local.get $3)
      (i32.const 16)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_silk_NLSF_stabilize (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $14
   (i32.gt_s
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $13
   (i32.add
    (i32.shl
     (i32.add
      (local.get $2)
      (i32.const -1)
     )
     (i32.const 1)
    )
    (local.get $0)
   )
  )
  (local.set $15
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 1)
    )
    (local.get $1)
   )
  )
  (local.set $16
   (i32.add
    (local.get $2)
    (i32.const -1)
   )
  )
  (block $folding-inner0
   (loop $while-in
    ;;@ silk/NLSF_stabilize.c:65:0
    (local.set $4
     (i32.load16_s
      (local.get $0)
     )
    )
    (local.set $10
     (i32.load16_s
      (local.get $1)
     )
    )
    (local.set $3
     (i32.sub
      (local.get $4)
      (local.get $10)
     )
    )
    (if
     (local.get $14)
     (block
      (local.set $5
       (i32.const 1)
      )
      (local.set $6
       (i32.const 0)
      )
      (loop $while-in1
       ;;@ silk/NLSF_stabilize.c:69:0
       (local.set $7
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 1)
         )
         (local.get $0)
        )
       )
       (local.set $7
        (i32.load16_s
         (local.get $7)
        )
       )
       (local.set $4
        (i32.shr_s
         (i32.shl
          (local.get $4)
          (i32.const 16)
         )
         (i32.const 16)
        )
       )
       (local.set $9
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 1)
         )
         (local.get $1)
        )
       )
       (local.set $9
        (i32.load16_s
         (local.get $9)
        )
       )
       (local.set $4
        (i32.sub
         (local.get $7)
         (local.get $4)
        )
       )
       (local.set $9
        (i32.sub
         (local.get $4)
         (local.get $9)
        )
       )
       ;;@ silk/NLSF_stabilize.c:70:0
       (local.set $12
        (i32.lt_s
         (local.get $9)
         (local.get $3)
        )
       )
       (local.set $4
        (select
         (local.get $5)
         (local.get $6)
         (local.get $12)
        )
       )
       (local.set $3
        (select
         (local.get $9)
         (local.get $3)
         (local.get $12)
        )
       )
       ;;@ silk/NLSF_stabilize.c:68:0
       (local.set $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (if
        (i32.ne
         (local.get $2)
         (local.get $5)
        )
        (block
         (local.set $6
          (local.get $4)
         )
         (local.set $4
          (local.get $7)
         )
         (br $while-in1)
        )
       )
      )
     )
     (local.set $4
      (i32.const 0)
     )
    )
    ;;@ silk/NLSF_stabilize.c:76:0
    (local.set $5
     (i32.load16_s
      (local.get $13)
     )
    )
    (local.set $6
     (i32.load16_s
      (local.get $15)
     )
    )
    (local.set $5
     (i32.sub
      (i32.const 32768)
      (local.get $5)
     )
    )
    (local.set $7
     (i32.sub
      (local.get $5)
      (local.get $6)
     )
    )
    ;;@ silk/NLSF_stabilize.c:77:0
    (local.set $9
     (i32.lt_s
      (local.get $7)
      (local.get $3)
     )
    )
    (local.set $5
     (select
      (local.get $2)
      (local.get $4)
      (local.get $9)
     )
    )
    (local.set $3
     (select
      (local.get $7)
      (local.get $3)
      (local.get $9)
     )
    )
    ;;@ silk/NLSF_stabilize.c:85:0
    (br_if $folding-inner0
     (i32.gt_s
      (local.get $3)
      (i32.const -1)
     )
    )
    (if
     ;;@ silk/NLSF_stabilize.c:89:0
     (local.get $5)
     (block $do-once
      (if
       ;;@ silk/NLSF_stabilize.c:93:0
       (i32.eq
        (local.get $2)
        (local.get $5)
       )
       (block
        ;;@ silk/NLSF_stabilize.c:95:0
        (local.set $3
         (i32.and
          (local.get $6)
          (i32.const 65535)
         )
        )
        (local.set $3
         (i32.sub
          (i32.const 32768)
          (local.get $3)
         )
        )
        (local.set $3
         (i32.and
          (local.get $3)
          (i32.const 65535)
         )
        )
        (i32.store16
         (local.get $13)
         (local.get $3)
        )
        (br $do-once)
       )
      )
      (if
       ;;@ silk/NLSF_stabilize.c:100:0
       (i32.gt_s
        (local.get $5)
        (i32.const 0)
       )
       (block
        ;;@ silk/NLSF_stabilize.c:101:0
        (local.set $3
         (local.get $10)
        )
        (if
         ;;@ silk/NLSF_stabilize.c:100:0
         (i32.ne
          (local.get $5)
          (i32.const 1)
         )
         (block
          (local.set $4
           (i32.const 1)
          )
          (loop $while-in3
           (local.set $7
            (i32.add
             (i32.shl
              (local.get $4)
              (i32.const 1)
             )
             (local.get $1)
            )
           )
           ;;@ silk/NLSF_stabilize.c:101:0
           (local.set $7
            (i32.load16_s
             (local.get $7)
            )
           )
           (local.set $3
            (i32.add
             (local.get $3)
             (local.get $7)
            )
           )
           ;;@ silk/NLSF_stabilize.c:100:0
           (local.set $4
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
           (br_if $while-in3
            (i32.ne
             (local.get $4)
             (local.get $5)
            )
           )
          )
         )
        )
       )
       (local.set $3
        (i32.const 0)
       )
      )
      ;;@ silk/NLSF_stabilize.c:103:0
      (local.set $9
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 1)
        )
        (local.get $1)
       )
      )
      (local.set $4
       (i32.load16_s
        (local.get $9)
       )
      )
      (local.set $7
       (i32.shr_s
        (local.get $4)
        (i32.const 1)
       )
      )
      (local.set $10
       (i32.add
        (local.get $3)
        (local.get $7)
       )
      )
      (if
       ;;@ silk/NLSF_stabilize.c:107:0
       (i32.lt_s
        (local.get $5)
        (local.get $2)
       )
       (block
        ;;@ silk/NLSF_stabilize.c:108:0
        (local.set $4
         (i32.sub
          (i32.const 32768)
          (local.get $6)
         )
        )
        (if
         ;;@ silk/NLSF_stabilize.c:107:0
         (i32.gt_s
          (local.get $16)
          (local.get $5)
         )
         (block
          (local.set $3
           (local.get $16)
          )
          (loop $while-in5
           (local.set $6
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 1)
             )
             (local.get $1)
            )
           )
           ;;@ silk/NLSF_stabilize.c:108:0
           (local.set $6
            (i32.load16_s
             (local.get $6)
            )
           )
           (local.set $4
            (i32.sub
             (local.get $4)
             (local.get $6)
            )
           )
           ;;@ silk/NLSF_stabilize.c:107:0
           (local.set $3
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
           (br_if $while-in5
            (i32.gt_s
             (local.get $3)
             (local.get $5)
            )
           )
          )
         )
        )
       )
       (local.set $4
        (i32.const 32768)
       )
      )
      ;;@ silk/NLSF_stabilize.c:110:0
      (local.set $3
       (i32.sub
        (local.get $4)
        (local.get $7)
       )
      )
      ;;@ silk/NLSF_stabilize.c:113:0
      (local.set $6
       (i32.gt_s
        (local.get $10)
        (local.get $3)
       )
      )
      (local.set $4
       (i32.add
        (local.get $5)
        (i32.const -1)
       )
      )
      (local.set $12
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 1)
        )
        (local.get $0)
       )
      )
      (local.set $4
       (i32.load16_s
        (local.get $12)
       )
      )
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 1)
        )
        (local.get $0)
       )
      )
      (local.set $11
       (i32.load16_s
        (local.get $5)
       )
      )
      (local.set $4
       (i32.add
        (local.get $4)
        (local.get $11)
       )
      )
      (local.set $11
       (i32.shr_s
        (local.get $4)
        (i32.const 1)
       )
      )
      (local.set $4
       (i32.and
        (local.get $4)
        (i32.const 1)
       )
      )
      (local.set $4
       (i32.add
        (local.get $4)
        (local.get $11)
       )
      )
      (local.set $11
       (select
        (local.get $10)
        (local.get $3)
        (local.get $6)
       )
      )
      (local.set $3
       (select
        (local.get $3)
        (local.get $10)
        (local.get $6)
       )
      )
      (local.set $6
       (i32.gt_s
        (local.get $4)
        (local.get $11)
       )
      )
      (local.set $10
       (i32.lt_s
        (local.get $4)
        (local.get $3)
       )
      )
      (local.set $3
       (select
        (local.get $3)
        (local.get $4)
        (local.get $10)
       )
      )
      (local.set $3
       (select
        (local.get $11)
        (local.get $3)
        (local.get $6)
       )
      )
      ;;@ silk/NLSF_stabilize.c:115:0
      (local.set $3
       (i32.sub
        (local.get $3)
        (local.get $7)
       )
      )
      (local.set $4
       (i32.and
        (local.get $3)
        (i32.const 65535)
       )
      )
      (i32.store16
       (local.get $12)
       (local.get $4)
      )
      ;;@ silk/NLSF_stabilize.c:116:0
      (local.set $4
       (i32.load16_u
        (local.get $9)
       )
      )
      (local.set $4
       (i32.and
        (local.get $4)
        (i32.const 65535)
       )
      )
      (local.set $3
       (i32.add
        (local.get $3)
        (local.get $4)
       )
      )
      (local.set $3
       (i32.and
        (local.get $3)
        (i32.const 65535)
       )
      )
      (i32.store16
       (local.get $5)
       (local.get $3)
      )
     )
     ;;@ silk/NLSF_stabilize.c:91:0
     (i32.store16
      (local.get $0)
      (local.get $10)
     )
    )
    ;;@ silk/NLSF_stabilize.c:60:0
    (local.set $3
     (i32.add
      (local.get $8)
      (i32.const 1)
     )
    )
    (if
     (i32.lt_u
      (local.get $3)
      (i32.const 20)
     )
     (block
      (local.set $8
       (local.get $3)
      )
      (br $while-in)
     )
    )
   )
   ;;@ silk/NLSF_stabilize.c:121:0
   (br_if $folding-inner0
    (i32.ne
     (local.get $3)
     (i32.const 20)
    )
   )
   ;;@ silk/NLSF_stabilize.c:126:0
   (call $_silk_insertion_sort_increasing_all_values_int16
    (local.get $0)
    (local.get $2)
   )
   ;;@ silk/NLSF_stabilize.c:129:0
   (local.set $3
    (i32.load16_s
     (local.get $0)
    )
   )
   (local.set $4
    (i32.load16_s
     (local.get $1)
    )
   )
   ;;@ ./silk/SigProc_FIX.h:566:0
   (local.set $5
    (i32.gt_s
     (local.get $3)
     (local.get $4)
    )
   )
   (local.set $3
    (select
     (local.get $3)
     (local.get $4)
     (local.get $5)
    )
   )
   ;;@ silk/NLSF_stabilize.c:129:0
   (local.set $4
    (i32.and
     (local.get $3)
     (i32.const 65535)
    )
   )
   (i32.store16
    (local.get $0)
    (local.get $4)
   )
   (if
    (local.get $14)
    (block
     (local.set $4
      (i32.const 1)
     )
     (loop $while-in7
      ;;@ silk/NLSF_stabilize.c:133:0
      (local.set $8
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 1)
        )
        (local.get $0)
       )
      )
      (local.set $5
       (i32.load16_s
        (local.get $8)
       )
      )
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 1)
        )
        (local.get $1)
       )
      )
      (local.set $6
       (i32.load16_s
        (local.get $6)
       )
      )
      (local.set $3
       (i32.add
        (local.get $3)
        (local.get $6)
       )
      )
      (local.set $6
       (i32.gt_s
        (local.get $3)
        (i32.const -32768)
       )
      )
      (local.set $3
       (select
        (local.get $3)
        (i32.const -32768)
        (local.get $6)
       )
      )
      (local.set $6
       (i32.lt_s
        (local.get $3)
        (i32.const 32767)
       )
      )
      (local.set $3
       (select
        (local.get $3)
        (i32.const 32767)
        (local.get $6)
       )
      )
      (local.set $3
       (i32.shl
        (local.get $3)
        (i32.const 16)
       )
      )
      (local.set $3
       (i32.shr_s
        (local.get $3)
        (i32.const 16)
       )
      )
      ;;@ ./silk/SigProc_FIX.h:566:0
      (local.set $6
       (i32.lt_s
        (local.get $3)
        (local.get $5)
       )
      )
      (local.set $3
       (select
        (local.get $5)
        (local.get $3)
        (local.get $6)
       )
      )
      ;;@ silk/NLSF_stabilize.c:133:0
      (local.set $5
       (i32.and
        (local.get $3)
        (i32.const 65535)
       )
      )
      (i32.store16
       (local.get $8)
       (local.get $5)
      )
      ;;@ silk/NLSF_stabilize.c:132:0
      (local.set $4
       (i32.add
        (local.get $4)
        (i32.const 1)
       )
      )
      (br_if $while-in7
       (i32.ne
        (local.get $2)
        (local.get $4)
       )
      )
     )
    )
   )
   ;;@ silk/NLSF_stabilize.c:136:0
   (local.set $3
    (i32.load16_s
     (local.get $13)
    )
   )
   (local.set $4
    (i32.load16_s
     (local.get $15)
    )
   )
   (local.set $4
    (i32.sub
     (i32.const 32768)
     (local.get $4)
    )
   )
   ;;@ ./silk/SigProc_FIX.h:548:0
   (local.set $5
    (i32.gt_s
     (local.get $4)
     (local.get $3)
    )
   )
   (local.set $4
    (select
     (local.get $3)
     (local.get $4)
     (local.get $5)
    )
   )
   ;;@ silk/NLSF_stabilize.c:136:0
   (local.set $3
    (i32.and
     (local.get $4)
     (i32.const 65535)
    )
   )
   (i32.store16
    (local.get $13)
    (local.get $3)
   )
   (br_if $folding-inner0
    (i32.eqz
     (local.get $14)
    )
   )
   ;;@ silk/NLSF_stabilize.c:139:0
   (local.set $3
    (i32.add
     (local.get $2)
     (i32.const -2)
    )
   )
   (local.set $2
    (local.get $4)
   )
   (loop $while-in9
    ;;@ silk/NLSF_stabilize.c:140:0
    (local.set $5
     (i32.add
      (i32.shl
       (local.get $3)
       (i32.const 1)
      )
      (local.get $0)
     )
    )
    (local.set $4
     (i32.load16_s
      (local.get $5)
     )
    )
    (local.set $8
     (i32.add
      (local.get $3)
      (i32.const 1)
     )
    )
    (local.set $2
     (i32.shl
      (local.get $2)
      (i32.const 16)
     )
    )
    (local.set $2
     (i32.shr_s
      (local.get $2)
      (i32.const 16)
     )
    )
    (local.set $8
     (i32.add
      (i32.shl
       (local.get $8)
       (i32.const 1)
      )
      (local.get $1)
     )
    )
    (local.set $8
     (i32.load16_s
      (local.get $8)
     )
    )
    (local.set $2
     (i32.sub
      (local.get $2)
      (local.get $8)
     )
    )
    ;;@ ./silk/SigProc_FIX.h:548:0
    (local.set $8
     (i32.gt_s
      (local.get $2)
      (local.get $4)
     )
    )
    (local.set $2
     (select
      (local.get $4)
      (local.get $2)
      (local.get $8)
     )
    )
    ;;@ silk/NLSF_stabilize.c:140:0
    (local.set $4
     (i32.and
      (local.get $2)
      (i32.const 65535)
     )
    )
    (i32.store16
     (local.get $5)
     (local.get $4)
    )
    ;;@ silk/NLSF_stabilize.c:139:0
    (local.set $4
     (i32.add
      (local.get $3)
      (i32.const -1)
     )
    )
    (if
     (i32.gt_s
      (local.get $3)
      (i32.const 0)
     )
     (block
      (local.set $3
       (local.get $4)
      )
      (br $while-in9)
     )
    )
   )
   ;;@ silk/NLSF_stabilize.c:142:0
   (return)
  )
 )
 (func $_silk_resampler_init (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  ;;@ silk/resampler.c:88:0
  (drop
   (call $_memset
    (local.get $0)
    (i32.const 0)
    (i32.const 300)
   )
  )
  (block $label$break$L3
   (if
    (i32.lt_s
     (local.get $1)
     (i32.const 12000)
    )
    (br_if $label$break$L3
     (i32.eqz
      (i32.sub
       (local.get $1)
       (i32.const 8000)
      )
     )
    )
    (if
     (i32.lt_s
      (local.get $1)
      (i32.const 16000)
     )
     (br_if $label$break$L3
      (i32.eqz
       (i32.sub
        (local.get $1)
        (i32.const 12000)
       )
      )
     )
     (br_if $label$break$L3
      (i32.eqz
       (i32.sub
        (local.get $1)
        (i32.const 16000)
       )
      )
     )
    )
   )
   ;;@ silk/resampler.c:101:0
   (call $_celt_fatal
    (i32.const 45506)
    (i32.const 44173)
    (i32.const 101)
   )
  )
  (block $label$break$L13
   (if
    (i32.lt_s
     (local.get $2)
     (i32.const 16000)
    )
    (if
     (i32.lt_s
      (local.get $2)
      (i32.const 12000)
     )
     (br_if $label$break$L13
      (i32.eqz
       (i32.sub
        (local.get $2)
        (i32.const 8000)
       )
      )
     )
     (br_if $label$break$L13
      (i32.eqz
       (i32.sub
        (local.get $2)
        (i32.const 12000)
       )
      )
     )
    )
    (block
     (if
      (i32.lt_s
       (local.get $2)
       (i32.const 24000)
      )
      (block
       (br_if $label$break$L13
        (i32.eqz
         (i32.sub
          (local.get $2)
          (i32.const 16000)
         )
        )
       )
       (call $_celt_fatal
        (i32.const 45506)
        (i32.const 44173)
        (i32.const 101)
       )
      )
     )
     (if
      (i32.lt_s
       (local.get $2)
       (i32.const 48000)
      )
      (br_if $label$break$L13
       (i32.eqz
        (i32.sub
         (local.get $2)
         (i32.const 24000)
        )
       )
      )
      (br_if $label$break$L13
       (i32.eqz
        (i32.sub
         (local.get $2)
         (i32.const 48000)
        )
       )
      )
     )
    )
   )
   (call $_celt_fatal
    (i32.const 45506)
    (i32.const 44173)
    (i32.const 101)
   )
  )
  (i32.store offset=292
   (local.get $0)
   (i32.load8_s
    ;;@ silk/resampler.c:104:0
    (i32.add
     (i32.add
      (i32.mul
       (i32.shr_u
        (local.get $1)
        (i32.const 12)
       )
       (i32.const 5)
      )
      (i32.shr_s
       (i32.sub
        (i32.shr_u
         (local.get $2)
         (i32.const 12)
        )
        (i32.gt_s
         (local.get $2)
         (i32.const 16000)
        )
       )
       (i32.gt_s
        (local.get $2)
        (i32.const 24000)
       )
      )
     )
     (i32.const 44199)
    )
   )
  )
  ;;@ silk/resampler.c:107:0
  (i32.store offset=284
   (local.get $0)
   (local.tee $3
    (i32.div_u
     (local.get $1)
     (i32.const 1000)
    )
   )
  )
  ;;@ silk/resampler.c:108:0
  (i32.store offset=288
   (local.get $0)
   (i32.div_u
    (local.get $2)
    (i32.const 1000)
   )
  )
  ;;@ silk/resampler.c:111:0
  (i32.store offset=268
   (local.get $0)
   (i32.mul
    (local.get $3)
    (i32.const 10)
   )
  )
  (if
   ;;@ silk/resampler.c:115:0
   (i32.gt_s
    (local.get $2)
    (local.get $1)
   )
   (local.set $5
    (if (result i32)
     ;;@ silk/resampler.c:117:0
     (i32.eq
      (i32.shl
       (local.get $1)
       (i32.const 1)
      )
      (local.get $2)
     )
     (block (result i32)
      ;;@ silk/resampler.c:119:0
      (i32.store offset=264
       (local.get $0)
       (i32.const 1)
      )
      (i32.const 0)
     )
     (block (result i32)
      ;;@ silk/resampler.c:122:0
      (i32.store offset=264
       (local.get $0)
       (i32.const 2)
      )
      (i32.const 1)
     )
    )
   )
   (block $do-once
    (if
     ;;@ silk/resampler.c:125:0
     (i32.ge_s
      (local.get $2)
      (local.get $1)
     )
     (block
      ;;@ silk/resampler.c:159:0
      (i32.store offset=264
       (local.get $0)
       (i32.const 0)
      )
      (br $do-once)
     )
    )
    ;;@ silk/resampler.c:127:0
    (i32.store offset=264
     (local.get $0)
     (i32.const 3)
    )
    (if
     ;;@ silk/resampler.c:128:0
     (i32.eq
      (local.tee $3
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
      )
      (i32.mul
       (local.get $1)
       (i32.const 3)
      )
     )
     (block
      ;;@ silk/resampler.c:129:0
      (i32.store offset=280
       (local.get $0)
       (i32.const 3)
      )
      ;;@ silk/resampler.c:130:0
      (i32.store offset=276
       (local.get $0)
       (i32.const 18)
      )
      ;;@ silk/resampler.c:131:0
      (i32.store offset=296
       (local.get $0)
       (i32.const 26992)
      )
      (br $do-once)
     )
    )
    (if
     ;;@ silk/resampler.c:132:0
     (i32.eq
      (local.tee $4
       (i32.mul
        (local.get $2)
        (i32.const 3)
       )
      )
      (i32.shl
       (local.get $1)
       (i32.const 1)
      )
     )
     (block
      ;;@ silk/resampler.c:133:0
      (i32.store offset=280
       (local.get $0)
       (i32.const 2)
      )
      ;;@ silk/resampler.c:134:0
      (i32.store offset=276
       (local.get $0)
       (i32.const 18)
      )
      ;;@ silk/resampler.c:135:0
      (i32.store offset=296
       (local.get $0)
       (i32.const 27056)
      )
      (br $do-once)
     )
    )
    (if
     ;;@ silk/resampler.c:136:0
     (i32.eq
      (i32.shl
       (local.get $2)
       (i32.const 1)
      )
      (local.get $1)
     )
     (block
      ;;@ silk/resampler.c:137:0
      (i32.store offset=280
       (local.get $0)
       (i32.const 1)
      )
      ;;@ silk/resampler.c:138:0
      (i32.store offset=276
       (local.get $0)
       (i32.const 24)
      )
      ;;@ silk/resampler.c:139:0
      (i32.store offset=296
       (local.get $0)
       (i32.const 27104)
      )
      (br $do-once)
     )
    )
    (if
     ;;@ silk/resampler.c:140:0
     (i32.eq
      (local.get $1)
      (local.get $4)
     )
     (block
      ;;@ silk/resampler.c:141:0
      (i32.store offset=280
       (local.get $0)
       (i32.const 1)
      )
      ;;@ silk/resampler.c:142:0
      (i32.store offset=276
       (local.get $0)
       (i32.const 36)
      )
      ;;@ silk/resampler.c:143:0
      (i32.store offset=296
       (local.get $0)
       (i32.const 27136)
      )
      (br $do-once)
     )
    )
    (if
     ;;@ silk/resampler.c:144:0
     (i32.eq
      (local.get $1)
      (local.get $3)
     )
     (block
      ;;@ silk/resampler.c:145:0
      (i32.store offset=280
       (local.get $0)
       (i32.const 1)
      )
      ;;@ silk/resampler.c:146:0
      (i32.store offset=276
       (local.get $0)
       (i32.const 36)
      )
      ;;@ silk/resampler.c:147:0
      (i32.store offset=296
       (local.get $0)
       (i32.const 27184)
      )
      (br $do-once)
     )
    )
    (if
     ;;@ silk/resampler.c:148:0
     (i32.eq
      (i32.mul
       (local.get $2)
       (i32.const 6)
      )
      (local.get $1)
     )
     (block
      ;;@ silk/resampler.c:149:0
      (i32.store offset=280
       (local.get $0)
       (i32.const 1)
      )
      ;;@ silk/resampler.c:150:0
      (i32.store offset=276
       (local.get $0)
       (i32.const 36)
      )
      ;;@ silk/resampler.c:151:0
      (i32.store offset=296
       (local.get $0)
       (i32.const 27232)
      )
     )
     ;;@ silk/resampler.c:154:0
     (call $_celt_fatal
      (i32.const 45506)
      (i32.const 44173)
      (i32.const 154)
     )
    )
   )
  )
  ;;@ silk/resampler.c:163:0
  (local.set $3
   (i32.shr_s
    (i32.shl
     (local.get $2)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.shr_u
    (i32.add
     (i32.shr_u
      (local.get $2)
      (i32.const 15)
     )
     (i32.const 1)
    )
    (i32.const 1)
   )
  )
  (local.set $6
   (i32.shl
    (local.get $1)
    (local.get $5)
   )
  )
  (local.set $1
   (i32.shl
    (i32.div_s
     (i32.shl
      (local.get $1)
      (i32.or
       (local.get $5)
       (i32.const 14)
      )
     )
     (local.get $2)
    )
    (i32.const 2)
   )
  )
  (loop $while-in
   ;;@ silk/resampler.c:166:0
   (local.set $2
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (i32.add
      (i32.add
       (i32.mul
        (local.get $1)
        (local.get $4)
       )
       (i32.mul
        (i32.shr_s
         (local.get $1)
         (i32.const 16)
        )
        (local.get $3)
       )
      )
      (i32.shr_s
       (i32.mul
        (i32.and
         (local.get $1)
         (i32.const 65535)
        )
        (local.get $3)
       )
       (i32.const 16)
      )
     )
     (local.get $6)
    )
    (block
     (local.set $1
      (local.get $2)
     )
     (br $while-in)
    )
   )
  )
  ;;@ silk/resampler.c:163:0
  (i32.store offset=272
   (local.get $0)
   (local.get $1)
  )
  ;;@ silk/resampler.c:169:0
  (i32.const 0)
 )
 (func $_silk_resampler (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  ;;@ silk/resampler.c:184:0
  (local.set $5
   (i32.load offset=284
    (local.get $0)
   )
  )
  (if
   (i32.gt_s
    (local.get $5)
    (local.get $3)
   )
   (call $_celt_fatal
    (i32.const 44220)
    (i32.const 44173)
    (i32.const 184)
   )
  )
  ;;@ silk/resampler.c:186:0
  (local.set $4
   (i32.load offset=292
    (local.get $0)
   )
  )
  (if
   (i32.lt_s
    (local.get $5)
    (local.get $4)
   )
   (call $_celt_fatal
    (i32.const 44260)
    (i32.const 44173)
    (i32.const 186)
   )
  )
  ;;@ silk/resampler.c:188:0
  (local.set $5
   (i32.sub
    (local.get $5)
    (local.get $4)
   )
  )
  ;;@ silk/resampler.c:191:0
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 168)
   )
  )
  (local.set $4
   (i32.add
    (i32.add
     (local.get $0)
     (i32.const 168)
    )
    (i32.shl
     (local.get $4)
     (i32.const 1)
    )
   )
  )
  (local.set $7
   (i32.shl
    (local.get $5)
    (i32.const 1)
   )
  )
  (drop
   (call $_memcpy
    (local.get $4)
    (local.get $2)
    (local.get $7)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case1
     (block $switch-case0
      (block $switch-case
       ;;@ silk/resampler.c:193:0
       (br_table $switch-case $switch-case0 $switch-case1 $switch-default
        (i32.sub
         (i32.load offset=264
          (local.get $0)
         )
         (i32.const 1)
        )
       )
      )
      ;;@ silk/resampler.c:195:0
      (local.set $4
       (i32.load offset=284
        (local.get $0)
       )
      )
      (call $_silk_resampler_private_up2_HQ_wrapper
       (local.get $0)
       (local.get $1)
       (local.get $6)
       (local.get $4)
      )
      ;;@ silk/resampler.c:196:0
      (local.set $4
       (i32.load offset=288
        (local.get $0)
       )
      )
      (local.set $1
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 1)
        )
        (local.get $1)
       )
      )
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 1)
        )
        (local.get $2)
       )
      )
      (local.set $4
       (i32.load offset=284
        (local.get $0)
       )
      )
      (local.set $4
       (i32.sub
        (local.get $3)
        (local.get $4)
       )
      )
      (call $_silk_resampler_private_up2_HQ_wrapper
       (local.get $0)
       (local.get $1)
       (local.get $5)
       (local.get $4)
      )
      (br $switch)
     )
     ;;@ silk/resampler.c:199:0
     (local.set $4
      (i32.load offset=284
       (local.get $0)
      )
     )
     (call $_silk_resampler_private_IIR_FIR
      (local.get $0)
      (local.get $1)
      (local.get $6)
      (local.get $4)
     )
     ;;@ silk/resampler.c:200:0
     (local.set $4
      (i32.load offset=288
       (local.get $0)
      )
     )
     (local.set $1
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 1)
       )
       (local.get $1)
      )
     )
     (local.set $5
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 1)
       )
       (local.get $2)
      )
     )
     (local.set $4
      (i32.load offset=284
       (local.get $0)
      )
     )
     (local.set $4
      (i32.sub
       (local.get $3)
       (local.get $4)
      )
     )
     (call $_silk_resampler_private_IIR_FIR
      (local.get $0)
      (local.get $1)
      (local.get $5)
      (local.get $4)
     )
     (br $switch)
    )
    ;;@ silk/resampler.c:203:0
    (local.set $4
     (i32.load offset=284
      (local.get $0)
     )
    )
    (call $_silk_resampler_private_down_FIR
     (local.get $0)
     (local.get $1)
     (local.get $6)
     (local.get $4)
    )
    ;;@ silk/resampler.c:204:0
    (local.set $4
     (i32.load offset=288
      (local.get $0)
     )
    )
    (local.set $1
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 1)
      )
      (local.get $1)
     )
    )
    (local.set $5
     (i32.add
      (i32.shl
       (local.get $5)
       (i32.const 1)
      )
      (local.get $2)
     )
    )
    (local.set $4
     (i32.load offset=284
      (local.get $0)
     )
    )
    (local.set $4
     (i32.sub
      (local.get $3)
      (local.get $4)
     )
    )
    (call $_silk_resampler_private_down_FIR
     (local.get $0)
     (local.get $1)
     (local.get $5)
     (local.get $4)
    )
    (br $switch)
   )
   ;;@ silk/resampler.c:207:0
   (local.set $4
    (i32.load offset=284
     (local.get $0)
    )
   )
   (local.set $4
    (i32.shl
     (local.get $4)
     (i32.const 1)
    )
   )
   (drop
    (call $_memcpy
     (local.get $1)
     (local.get $6)
     (local.get $4)
    )
   )
   ;;@ silk/resampler.c:208:0
   (local.set $4
    (i32.load offset=288
     (local.get $0)
    )
   )
   (local.set $1
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 1)
     )
     (local.get $1)
    )
   )
   (local.set $5
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 1)
     )
     (local.get $2)
    )
   )
   (local.set $4
    (i32.load offset=284
     (local.get $0)
    )
   )
   (local.set $4
    (i32.sub
     (local.get $3)
     (local.get $4)
    )
   )
   (local.set $4
    (i32.shl
     (local.get $4)
     (i32.const 1)
    )
   )
   (drop
    (call $_memcpy
     (local.get $1)
     (local.get $5)
     (local.get $4)
    )
   )
  )
  ;;@ silk/resampler.c:212:0
  (local.set $0
   (i32.load offset=292
    (local.get $0)
   )
  )
  (local.set $1
   (i32.sub
    (local.get $3)
    (local.get $0)
   )
  )
  (local.set $1
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 1)
    )
    (local.get $2)
   )
  )
  (local.set $0
   (i32.shl
    (local.get $0)
    (i32.const 1)
   )
  )
  (drop
   (call $_memcpy
    (local.get $6)
    (local.get $1)
    (local.get $0)
   )
  )
  ;;@ silk/resampler.c:214:0
  (i32.const 0)
 )
 (func $_silk_resampler_private_AR2 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (if
   ;;@ silk/resampler_private_AR2.c:47:0
   (i32.le_s
    (local.get $4)
    (i32.const 0)
   )
   ;;@ silk/resampler_private_AR2.c:54:0
   (return)
  )
  (local.set $9
   (i32.load16_s
    (local.get $3)
   )
  )
  (local.set $10
   (i32.load16_s offset=2
    (local.get $3)
   )
  )
  ;;@ silk/resampler_private_AR2.c:48:0
  (local.set $3
   (i32.const 0)
  )
  (local.set $6
   (i32.load
    (local.get $0)
   )
  )
  (loop $while-in
   (local.set $5
    (i32.add
     (i32.shl
      (local.get $3)
      (i32.const 1)
     )
     (local.get $2)
    )
   )
   (local.set $5
    (i32.load16_s
     (local.get $5)
    )
   )
   (local.set $5
    (i32.shl
     (local.get $5)
     (i32.const 8)
    )
   )
   (local.set $6
    (i32.add
     (local.get $5)
     (local.get $6)
    )
   )
   ;;@ silk/resampler_private_AR2.c:49:0
   (local.set $5
    (i32.add
     (i32.shl
      (local.get $3)
      (i32.const 2)
     )
     (local.get $1)
    )
   )
   (i32.store
    (local.get $5)
    (local.get $6)
   )
   ;;@ silk/resampler_private_AR2.c:50:0
   (local.set $6
    (i32.shl
     (local.get $6)
     (i32.const 2)
    )
   )
   ;;@ silk/resampler_private_AR2.c:51:0
   (local.set $8
    (i32.load offset=4
     (local.get $0)
    )
   )
   (local.set $5
    (i32.shr_s
     (local.get $6)
     (i32.const 16)
    )
   )
   (local.set $11
    (i32.mul
     (local.get $5)
     (local.get $9)
    )
   )
   (local.set $7
    (i32.and
     (local.get $6)
     (i32.const 65532)
    )
   )
   (local.set $6
    (i32.mul
     (local.get $7)
     (local.get $9)
    )
   )
   (local.set $6
    (i32.shr_s
     (local.get $6)
     (i32.const 16)
    )
   )
   (local.set $8
    (i32.add
     (local.get $8)
     (local.get $11)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (local.get $8)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $6)
   )
   ;;@ silk/resampler_private_AR2.c:52:0
   (local.set $5
    (i32.mul
     (local.get $5)
     (local.get $10)
    )
   )
   (local.set $7
    (i32.mul
     (local.get $7)
     (local.get $10)
    )
   )
   (local.set $7
    (i32.shr_s
     (local.get $7)
     (i32.const 16)
    )
   )
   (local.set $5
    (i32.add
     (local.get $5)
     (local.get $7)
    )
   )
   (i32.store offset=4
    (local.get $0)
    (local.get $5)
   )
   ;;@ silk/resampler_private_AR2.c:47:0
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $3)
     (local.get $4)
    )
   )
  )
 )
 (func $_silk_resampler_private_down_FIR (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local.set $51
   (global.get $STACKTOP)
  )
  ;;@ silk/resampler_private_down_FIR.c:159:0
  (local.set $4
   (i32.load offset=268
    (local.get $0)
   )
  )
  (local.set $10
   (i32.load offset=276
    (local.get $0)
   )
  )
  (local.set $9
   (i32.add
    (local.get $4)
    (local.get $10)
   )
  )
  (local.set $9
   (i32.shl
    (local.get $9)
    (i32.const 2)
   )
  )
  (local.set $22
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $9)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ silk/resampler_private_down_FIR.c:162:0
  (local.set $50
   (i32.add
    (local.get $0)
    (i32.const 24)
   )
  )
  (local.set $9
   (i32.shl
    (local.get $10)
    (i32.const 2)
   )
  )
  (drop
   (call $_memcpy
    (local.get $22)
    (local.get $50)
    (local.get $9)
   )
  )
  ;;@ silk/resampler_private_down_FIR.c:164:0
  (local.set $9
   (i32.load offset=296
    (local.get $0)
   )
  )
  (local.set $46
   (i32.add
    (local.get $9)
    (i32.const 4)
   )
  )
  ;;@ silk/resampler_private_down_FIR.c:167:0
  (local.set $47
   (i32.load offset=272
    (local.get $0)
   )
  )
  (local.set $5
   (local.get $9)
  )
  ;;@ silk/resampler_private_down_FIR.c:194:0
  (block $__rjto$1
   (block $__rjti$1
    (loop $label$continue$L1
     (block $__rjti$0
      ;;@ silk/resampler_private_down_FIR.c:169:0
      (local.set $6
       (i32.lt_s
        (local.get $3)
        (local.get $4)
       )
      )
      (local.set $24
       (select
        (local.get $3)
        (local.get $4)
        (local.get $6)
       )
      )
      ;;@ silk/resampler_private_down_FIR.c:172:0
      (local.set $4
       (i32.add
        (i32.shl
         (local.get $10)
         (i32.const 2)
        )
        (local.get $22)
       )
      )
      (call $_silk_resampler_private_AR2
       (local.get $0)
       (local.get $4)
       (local.get $2)
       (local.get $5)
       (local.get $24)
      )
      ;;@ silk/resampler_private_down_FIR.c:174:0
      (local.set $25
       (i32.shl
        (local.get $24)
        (i32.const 16)
       )
      )
      ;;@ silk/resampler_private_down_FIR.c:177:0
      (local.set $48
       (i32.load offset=276
        (local.get $0)
       )
      )
      ;;@ silk/resampler_private_down_FIR.c:178:0
      (local.set $4
       (i32.load offset=280
        (local.get $0)
       )
      )
      (block $switch
       (block $switch-case5
        (block $switch-case2
         (block $switch-case
          (br_table $switch-case $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $switch-case2 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $switch-case5 $__rjti$0
           (i32.sub
            (local.get $48)
            (i32.const 18)
           )
          )
         )
         (if
          ;;@ silk/resampler_private_down_FIR.c:53:0
          (i32.gt_s
           (local.get $25)
           (i32.const 0)
          )
          (block
           (local.set $20
            (i32.shr_s
             (i32.shl
              (local.get $4)
              (i32.const 16)
             )
             (i32.const 16)
            )
           )
           (local.set $26
            (i32.add
             (local.get $4)
             (i32.const -1)
            )
           )
           (local.set $10
            (i32.const 0)
           )
           (local.set $1
            (loop $while-in (result i32)
             ;;@ silk/resampler_private_down_FIR.c:55:0
             (local.set $4
              (i32.shr_s
               (local.get $10)
               (i32.const 16)
              )
             )
             (local.set $5
              (i32.add
               (i32.shl
                (local.get $4)
                (i32.const 2)
               )
               (local.get $22)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:58:0
             (local.set $4
              (i32.and
               (local.get $10)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $20)
              )
             )
             (local.set $7
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:61:0
             (local.set $4
              (i32.mul
               (local.get $7)
               (i32.const 9)
              )
             )
             (local.set $6
              (i32.add
               (i32.shl
                (local.get $4)
                (i32.const 1)
               )
               (local.get $46)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:62:0
             (local.set $8
              (i32.load
               (local.get $5)
              )
             )
             (local.set $11
              (i32.shr_s
               (local.get $8)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s
               (local.get $6)
              )
             )
             (local.set $11
              (i32.mul
               (local.get $4)
               (local.get $11)
              )
             )
             (local.set $8
              (i32.and
               (local.get $8)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
             (local.set $27
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:63:0
             (local.set $8
              (i32.load offset=4
               (local.get $5)
              )
             )
             (local.set $12
              (i32.shr_s
               (local.get $8)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=2
               (local.get $6)
              )
             )
             (local.set $12
              (i32.mul
               (local.get $4)
               (local.get $12)
              )
             )
             (local.set $8
              (i32.and
               (local.get $8)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
             (local.set $28
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:64:0
             (local.set $8
              (i32.load offset=8
               (local.get $5)
              )
             )
             (local.set $13
              (i32.shr_s
               (local.get $8)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=4
               (local.get $6)
              )
             )
             (local.set $13
              (i32.mul
               (local.get $4)
               (local.get $13)
              )
             )
             (local.set $8
              (i32.and
               (local.get $8)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
             (local.set $29
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:65:0
             (local.set $8
              (i32.load offset=12
               (local.get $5)
              )
             )
             (local.set $14
              (i32.shr_s
               (local.get $8)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=6
               (local.get $6)
              )
             )
             (local.set $14
              (i32.mul
               (local.get $4)
               (local.get $14)
              )
             )
             (local.set $8
              (i32.and
               (local.get $8)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
             (local.set $30
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:66:0
             (local.set $8
              (i32.load offset=16
               (local.get $5)
              )
             )
             (local.set $15
              (i32.shr_s
               (local.get $8)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=8
               (local.get $6)
              )
             )
             (local.set $15
              (i32.mul
               (local.get $4)
               (local.get $15)
              )
             )
             (local.set $8
              (i32.and
               (local.get $8)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
             (local.set $31
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:67:0
             (local.set $8
              (i32.load offset=20
               (local.get $5)
              )
             )
             (local.set $16
              (i32.shr_s
               (local.get $8)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=10
               (local.get $6)
              )
             )
             (local.set $16
              (i32.mul
               (local.get $4)
               (local.get $16)
              )
             )
             (local.set $8
              (i32.and
               (local.get $8)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
             (local.set $32
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:68:0
             (local.set $8
              (i32.load offset=24
               (local.get $5)
              )
             )
             (local.set $17
              (i32.shr_s
               (local.get $8)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=12
               (local.get $6)
              )
             )
             (local.set $17
              (i32.mul
               (local.get $4)
               (local.get $17)
              )
             )
             (local.set $8
              (i32.and
               (local.get $8)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
             (local.set $33
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:69:0
             (local.set $8
              (i32.load offset=28
               (local.get $5)
              )
             )
             (local.set $18
              (i32.shr_s
               (local.get $8)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=14
               (local.get $6)
              )
             )
             (local.set $18
              (i32.mul
               (local.get $4)
               (local.get $18)
              )
             )
             (local.set $8
              (i32.and
               (local.get $8)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
             (local.set $34
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:70:0
             (local.set $8
              (i32.load offset=32
               (local.get $5)
              )
             )
             (local.set $19
              (i32.shr_s
               (local.get $8)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=16
               (local.get $6)
              )
             )
             (local.set $19
              (i32.mul
               (local.get $4)
               (local.get $19)
              )
             )
             (local.set $6
              (i32.and
               (local.get $8)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $6)
              )
             )
             (local.set $8
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:71:0
             (local.set $4
              (i32.sub
               (local.get $26)
               (local.get $7)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (i32.const 9)
              )
             )
             (local.set $6
              (i32.add
               (i32.shl
                (local.get $4)
                (i32.const 1)
               )
               (local.get $46)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:72:0
             (local.set $7
              (i32.load offset=68
               (local.get $5)
              )
             )
             (local.set $21
              (i32.shr_s
               (local.get $7)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s
               (local.get $6)
              )
             )
             (local.set $21
              (i32.mul
               (local.get $4)
               (local.get $21)
              )
             )
             (local.set $7
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $7)
              )
             )
             (local.set $35
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:73:0
             (local.set $4
              (i32.sub
               (local.get $5)
               (i32.const -64)
              )
             )
             (local.set $7
              (i32.load
               (local.get $4)
              )
             )
             (local.set $36
              (i32.shr_s
               (local.get $7)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=2
               (local.get $6)
              )
             )
             (local.set $36
              (i32.mul
               (local.get $4)
               (local.get $36)
              )
             )
             (local.set $7
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $7)
              )
             )
             (local.set $37
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:74:0
             (local.set $7
              (i32.load offset=60
               (local.get $5)
              )
             )
             (local.set $38
              (i32.shr_s
               (local.get $7)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=4
               (local.get $6)
              )
             )
             (local.set $38
              (i32.mul
               (local.get $4)
               (local.get $38)
              )
             )
             (local.set $7
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $7)
              )
             )
             (local.set $39
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:75:0
             (local.set $7
              (i32.load offset=56
               (local.get $5)
              )
             )
             (local.set $40
              (i32.shr_s
               (local.get $7)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=6
               (local.get $6)
              )
             )
             (local.set $40
              (i32.mul
               (local.get $4)
               (local.get $40)
              )
             )
             (local.set $7
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $7)
              )
             )
             (local.set $41
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:76:0
             (local.set $7
              (i32.load offset=52
               (local.get $5)
              )
             )
             (local.set $42
              (i32.shr_s
               (local.get $7)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=8
               (local.get $6)
              )
             )
             (local.set $42
              (i32.mul
               (local.get $4)
               (local.get $42)
              )
             )
             (local.set $7
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $7)
              )
             )
             (local.set $43
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:77:0
             (local.set $7
              (i32.load offset=48
               (local.get $5)
              )
             )
             (local.set $44
              (i32.shr_s
               (local.get $7)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=10
               (local.get $6)
              )
             )
             (local.set $44
              (i32.mul
               (local.get $4)
               (local.get $44)
              )
             )
             (local.set $7
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $7)
              )
             )
             (local.set $45
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:78:0
             (local.set $7
              (i32.load offset=44
               (local.get $5)
              )
             )
             (local.set $23
              (i32.shr_s
               (local.get $7)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=12
               (local.get $6)
              )
             )
             (local.set $23
              (i32.mul
               (local.get $4)
               (local.get $23)
              )
             )
             (local.set $7
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $7)
              )
             )
             (local.set $52
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:79:0
             (local.set $7
              (i32.load offset=40
               (local.get $5)
              )
             )
             (local.set $49
              (i32.shr_s
               (local.get $7)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=14
               (local.get $6)
              )
             )
             (local.set $49
              (i32.mul
               (local.get $4)
               (local.get $49)
              )
             )
             (local.set $7
              (i32.and
               (local.get $7)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $7)
              )
             )
             (local.set $7
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:80:0
             (local.set $5
              (i32.load offset=36
               (local.get $5)
              )
             )
             (local.set $53
              (i32.shr_s
               (local.get $5)
               (i32.const 16)
              )
             )
             (local.set $4
              (i32.load16_s offset=16
               (local.get $6)
              )
             )
             (local.set $6
              (i32.mul
               (local.get $4)
               (local.get $53)
              )
             )
             (local.set $5
              (i32.and
               (local.get $5)
               (i32.const 65535)
              )
             )
             (local.set $4
              (i32.mul
               (local.get $4)
               (local.get $5)
              )
             )
             (local.set $4
              (i32.shr_s
               (local.get $4)
               (i32.const 16)
              )
             )
             (local.set $5
              (i32.add
               (local.get $11)
               (local.get $27)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:79:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $12)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:78:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $28)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:77:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $13)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:76:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $29)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:75:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $14)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:74:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $30)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:73:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $15)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:72:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $31)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:70:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $16)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:69:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $32)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:68:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $17)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:67:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $33)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:66:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $18)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:65:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $34)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:64:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $19)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:63:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $8)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:62:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $21)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:63:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $35)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:64:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $36)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:65:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $37)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:66:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $38)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:67:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $39)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:68:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $40)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:69:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $41)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:70:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $42)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:72:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $43)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:73:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $44)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:74:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $45)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:75:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $23)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:76:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $52)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:77:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $49)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:78:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $7)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:79:0
             (local.set $5
              (i32.add
               (local.get $5)
               (local.get $6)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:80:0
             (local.set $4
              (i32.add
               (local.get $4)
               (local.get $5)
              )
             )
             ;;@ silk/resampler_private_down_FIR.c:83:0
             (local.set $5
              (i32.shr_u
               (local.get $4)
               (i32.const 5)
              )
             )
             (local.set $5
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (local.set $5
              (i32.shr_u
               (local.get $5)
               (i32.const 1)
              )
             )
             (local.set $6
              (i32.gt_s
               (local.get $4)
               (i32.const 2097119)
              )
             )
             (local.set $4
              (i32.lt_s
               (local.get $4)
               (i32.const -2097184)
              )
             )
             (local.set $5
              (i32.and
               (local.get $5)
               (i32.const 65535)
              )
             )
             (local.set $4
              (select
               (i32.const -32768)
               (local.get $5)
               (local.get $4)
              )
             )
             (local.set $5
              (select
               (i32.const 32767)
               (local.get $4)
               (local.get $6)
              )
             )
             (local.set $4
              (i32.add
               (local.get $1)
               (i32.const 2)
              )
             )
             (i32.store16
              (local.get $1)
              (local.get $5)
             )
             ;;@ silk/resampler_private_down_FIR.c:53:0
             (local.set $10
              (i32.add
               (local.get $10)
               (local.get $47)
              )
             )
             (if (result i32)
              (i32.lt_s
               (local.get $10)
               (local.get $25)
              )
              (block
               (local.set $1
                (local.get $4)
               )
               (br $while-in)
              )
              (local.get $4)
             )
            )
           )
          )
         )
         (br $switch)
        )
        (if
         ;;@ silk/resampler_private_down_FIR.c:87:0
         (i32.gt_s
          (local.get $25)
          (i32.const 0)
         )
         (block
          (local.set $10
           (i32.const 0)
          )
          (local.set $1
           (loop $while-in1 (result i32)
            ;;@ silk/resampler_private_down_FIR.c:89:0
            (local.set $4
             (i32.shr_s
              (local.get $10)
              (i32.const 16)
             )
            )
            (local.set $5
             (i32.add
              (i32.shl
               (local.get $4)
               (i32.const 2)
              )
              (local.get $22)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:92:0
            (local.set $4
             (i32.load
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=92
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $7
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s
              (local.get $46)
             )
            )
            (local.set $7
             (i32.mul
              (local.get $4)
              (local.get $7)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $8
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:93:0
            (local.set $4
             (i32.load offset=4
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=88
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $20
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=6
              (local.get $9)
             )
            )
            (local.set $20
             (i32.mul
              (local.get $4)
              (local.get $20)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $26
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:94:0
            (local.set $4
             (i32.load offset=8
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=84
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $11
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=8
              (local.get $9)
             )
            )
            (local.set $11
             (i32.mul
              (local.get $4)
              (local.get $11)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $27
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:95:0
            (local.set $4
             (i32.load offset=12
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=80
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $12
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=10
              (local.get $9)
             )
            )
            (local.set $12
             (i32.mul
              (local.get $4)
              (local.get $12)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $28
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:96:0
            (local.set $4
             (i32.load offset=16
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=76
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $13
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=12
              (local.get $9)
             )
            )
            (local.set $13
             (i32.mul
              (local.get $4)
              (local.get $13)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $29
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:97:0
            (local.set $4
             (i32.load offset=20
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=72
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $14
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=14
              (local.get $9)
             )
            )
            (local.set $14
             (i32.mul
              (local.get $4)
              (local.get $14)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $30
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:98:0
            (local.set $4
             (i32.load offset=24
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=68
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $15
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=16
              (local.get $9)
             )
            )
            (local.set $15
             (i32.mul
              (local.get $4)
              (local.get $15)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $31
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:99:0
            (local.set $4
             (i32.load offset=28
              (local.get $5)
             )
            )
            (local.set $6
             (i32.sub
              (local.get $5)
              (i32.const -64)
             )
            )
            (local.set $6
             (i32.load
              (local.get $6)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $16
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=18
              (local.get $9)
             )
            )
            (local.set $16
             (i32.mul
              (local.get $4)
              (local.get $16)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $32
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:100:0
            (local.set $4
             (i32.load offset=32
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=60
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $17
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=20
              (local.get $9)
             )
            )
            (local.set $17
             (i32.mul
              (local.get $4)
              (local.get $17)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $33
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:101:0
            (local.set $4
             (i32.load offset=36
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=56
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $18
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=22
              (local.get $9)
             )
            )
            (local.set $18
             (i32.mul
              (local.get $4)
              (local.get $18)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $34
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:102:0
            (local.set $4
             (i32.load offset=40
              (local.get $5)
             )
            )
            (local.set $6
             (i32.load offset=52
              (local.get $5)
             )
            )
            (local.set $6
             (i32.add
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $19
             (i32.shr_s
              (local.get $6)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=24
              (local.get $9)
             )
            )
            (local.set $19
             (i32.mul
              (local.get $4)
              (local.get $19)
             )
            )
            (local.set $6
             (i32.and
              (local.get $6)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $6
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:103:0
            (local.set $4
             (i32.load offset=44
              (local.get $5)
             )
            )
            (local.set $5
             (i32.load offset=48
              (local.get $5)
             )
            )
            (local.set $5
             (i32.add
              (local.get $4)
              (local.get $5)
             )
            )
            (local.set $21
             (i32.shr_s
              (local.get $5)
              (i32.const 16)
             )
            )
            (local.set $4
             (i32.load16_s offset=26
              (local.get $9)
             )
            )
            (local.set $21
             (i32.mul
              (local.get $4)
              (local.get $21)
             )
            )
            (local.set $5
             (i32.and
              (local.get $5)
              (i32.const 65535)
             )
            )
            (local.set $4
             (i32.mul
              (local.get $4)
              (local.get $5)
             )
            )
            (local.set $4
             (i32.shr_s
              (local.get $4)
              (i32.const 16)
             )
            )
            (local.set $5
             (i32.add
              (local.get $7)
              (local.get $8)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:102:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $20)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:101:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $26)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:100:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $11)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:99:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $27)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:98:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $12)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:97:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $28)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:96:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $13)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:95:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $29)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:94:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $14)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:93:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $30)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:92:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $15)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:93:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $31)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:94:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $16)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:95:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $32)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:96:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $17)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:97:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $33)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:98:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $18)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:99:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $34)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:100:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $19)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:101:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $6)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:102:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $21)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:103:0
            (local.set $4
             (i32.add
              (local.get $4)
              (local.get $5)
             )
            )
            ;;@ silk/resampler_private_down_FIR.c:106:0
            (local.set $5
             (i32.shr_u
              (local.get $4)
              (i32.const 5)
             )
            )
            (local.set $5
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.set $5
             (i32.shr_u
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.set $6
             (i32.gt_s
              (local.get $4)
              (i32.const 2097119)
             )
            )
            (local.set $4
             (i32.lt_s
              (local.get $4)
              (i32.const -2097184)
             )
            )
            (local.set $5
             (i32.and
              (local.get $5)
              (i32.const 65535)
             )
            )
            (local.set $4
             (select
              (i32.const -32768)
              (local.get $5)
              (local.get $4)
             )
            )
            (local.set $5
             (select
              (i32.const 32767)
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $4
             (i32.add
              (local.get $1)
              (i32.const 2)
             )
            )
            (i32.store16
             (local.get $1)
             (local.get $5)
            )
            ;;@ silk/resampler_private_down_FIR.c:87:0
            (local.set $10
             (i32.add
              (local.get $10)
              (local.get $47)
             )
            )
            (if (result i32)
             (i32.lt_s
              (local.get $10)
              (local.get $25)
             )
             (block
              (local.set $1
               (local.get $4)
              )
              (br $while-in1)
             )
             (local.get $4)
            )
           )
          )
         )
        )
        (br $switch)
       )
       (if
        ;;@ silk/resampler_private_down_FIR.c:110:0
        (i32.gt_s
         (local.get $25)
         (i32.const 0)
        )
        (block
         (local.set $10
          (i32.const 0)
         )
         (local.set $1
          (loop $while-in4 (result i32)
           ;;@ silk/resampler_private_down_FIR.c:112:0
           (local.set $4
            (i32.shr_s
             (local.get $10)
             (i32.const 16)
            )
           )
           (local.set $5
            (i32.add
             (i32.shl
              (local.get $4)
              (i32.const 2)
             )
             (local.get $22)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:115:0
           (local.set $4
            (i32.load
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=140
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $7
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s
             (local.get $46)
            )
           )
           (local.set $7
            (i32.mul
             (local.get $4)
             (local.get $7)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $8
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:116:0
           (local.set $4
            (i32.load offset=4
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=136
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $20
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=6
             (local.get $9)
            )
           )
           (local.set $20
            (i32.mul
             (local.get $4)
             (local.get $20)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $26
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:117:0
           (local.set $4
            (i32.load offset=8
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=132
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $11
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=8
             (local.get $9)
            )
           )
           (local.set $11
            (i32.mul
             (local.get $4)
             (local.get $11)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $27
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:118:0
           (local.set $4
            (i32.load offset=12
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=128
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $12
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=10
             (local.get $9)
            )
           )
           (local.set $12
            (i32.mul
             (local.get $4)
             (local.get $12)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $28
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:119:0
           (local.set $4
            (i32.load offset=16
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=124
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $13
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=12
             (local.get $9)
            )
           )
           (local.set $13
            (i32.mul
             (local.get $4)
             (local.get $13)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $29
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:120:0
           (local.set $4
            (i32.load offset=20
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=120
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $14
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=14
             (local.get $9)
            )
           )
           (local.set $14
            (i32.mul
             (local.get $4)
             (local.get $14)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $30
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:121:0
           (local.set $4
            (i32.load offset=24
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=116
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $15
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=16
             (local.get $9)
            )
           )
           (local.set $15
            (i32.mul
             (local.get $4)
             (local.get $15)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $31
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:122:0
           (local.set $4
            (i32.load offset=28
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=112
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $16
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=18
             (local.get $9)
            )
           )
           (local.set $16
            (i32.mul
             (local.get $4)
             (local.get $16)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $32
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:123:0
           (local.set $4
            (i32.load offset=32
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=108
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $17
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=20
             (local.get $9)
            )
           )
           (local.set $17
            (i32.mul
             (local.get $4)
             (local.get $17)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $33
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:124:0
           (local.set $4
            (i32.load offset=36
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=104
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $18
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=22
             (local.get $9)
            )
           )
           (local.set $18
            (i32.mul
             (local.get $4)
             (local.get $18)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $34
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:125:0
           (local.set $4
            (i32.load offset=40
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=100
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $19
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=24
             (local.get $9)
            )
           )
           (local.set $19
            (i32.mul
             (local.get $4)
             (local.get $19)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $21
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:126:0
           (local.set $4
            (i32.load offset=44
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=96
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $35
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=26
             (local.get $9)
            )
           )
           (local.set $35
            (i32.mul
             (local.get $4)
             (local.get $35)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $36
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:127:0
           (local.set $4
            (i32.load offset=48
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=92
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $37
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=28
             (local.get $9)
            )
           )
           (local.set $37
            (i32.mul
             (local.get $4)
             (local.get $37)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $38
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:128:0
           (local.set $4
            (i32.load offset=52
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=88
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $39
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=30
             (local.get $9)
            )
           )
           (local.set $39
            (i32.mul
             (local.get $4)
             (local.get $39)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $40
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:129:0
           (local.set $4
            (i32.load offset=56
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=84
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $41
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=32
             (local.get $9)
            )
           )
           (local.set $41
            (i32.mul
             (local.get $4)
             (local.get $41)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $42
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:130:0
           (local.set $4
            (i32.load offset=60
             (local.get $5)
            )
           )
           (local.set $6
            (i32.load offset=80
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $43
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=34
             (local.get $9)
            )
           )
           (local.set $43
            (i32.mul
             (local.get $4)
             (local.get $43)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $44
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:131:0
           (local.set $4
            (i32.sub
             (local.get $5)
             (i32.const -64)
            )
           )
           (local.set $4
            (i32.load
             (local.get $4)
            )
           )
           (local.set $6
            (i32.load offset=76
             (local.get $5)
            )
           )
           (local.set $6
            (i32.add
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $45
            (i32.shr_s
             (local.get $6)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=36
             (local.get $9)
            )
           )
           (local.set $45
            (i32.mul
             (local.get $4)
             (local.get $45)
            )
           )
           (local.set $6
            (i32.and
             (local.get $6)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $6
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:132:0
           (local.set $4
            (i32.load offset=68
             (local.get $5)
            )
           )
           (local.set $5
            (i32.load offset=72
             (local.get $5)
            )
           )
           (local.set $5
            (i32.add
             (local.get $4)
             (local.get $5)
            )
           )
           (local.set $23
            (i32.shr_s
             (local.get $5)
             (i32.const 16)
            )
           )
           (local.set $4
            (i32.load16_s offset=38
             (local.get $9)
            )
           )
           (local.set $23
            (i32.mul
             (local.get $4)
             (local.get $23)
            )
           )
           (local.set $5
            (i32.and
             (local.get $5)
             (i32.const 65535)
            )
           )
           (local.set $4
            (i32.mul
             (local.get $4)
             (local.get $5)
            )
           )
           (local.set $4
            (i32.shr_s
             (local.get $4)
             (i32.const 16)
            )
           )
           (local.set $5
            (i32.add
             (local.get $7)
             (local.get $8)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:131:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $20)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:130:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $26)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:129:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $11)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:128:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $27)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:127:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $12)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:126:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $28)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:125:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $13)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:124:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $29)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:123:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $14)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:122:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $30)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:121:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $15)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:120:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $31)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:119:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $16)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:118:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $32)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:117:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $17)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:116:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $33)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:115:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $18)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:116:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $34)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:117:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $19)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:118:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $21)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:119:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $35)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:120:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $36)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:121:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $37)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:122:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $38)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:123:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $39)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:124:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $40)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:125:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $41)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:126:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $42)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:127:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $43)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:128:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $44)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:129:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $45)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:130:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $6)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:131:0
           (local.set $5
            (i32.add
             (local.get $5)
             (local.get $23)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:132:0
           (local.set $4
            (i32.add
             (local.get $4)
             (local.get $5)
            )
           )
           ;;@ silk/resampler_private_down_FIR.c:135:0
           (local.set $5
            (i32.shr_u
             (local.get $4)
             (i32.const 5)
            )
           )
           (local.set $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.set $5
            (i32.shr_u
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.set $6
            (i32.gt_s
             (local.get $4)
             (i32.const 2097119)
            )
           )
           (local.set $4
            (i32.lt_s
             (local.get $4)
             (i32.const -2097184)
            )
           )
           (local.set $5
            (i32.and
             (local.get $5)
             (i32.const 65535)
            )
           )
           (local.set $4
            (select
             (i32.const -32768)
             (local.get $5)
             (local.get $4)
            )
           )
           (local.set $5
            (select
             (i32.const 32767)
             (local.get $4)
             (local.get $6)
            )
           )
           (local.set $4
            (i32.add
             (local.get $1)
             (i32.const 2)
            )
           )
           (i32.store16
            (local.get $1)
            (local.get $5)
           )
           ;;@ silk/resampler_private_down_FIR.c:110:0
           (local.set $10
            (i32.add
             (local.get $10)
             (local.get $47)
            )
           )
           (if (result i32)
            (i32.lt_s
             (local.get $10)
             (local.get $25)
            )
            (block
             (local.set $1
              (local.get $4)
             )
             (br $while-in4)
            )
            (local.get $4)
           )
          )
         )
        )
       )
      )
      ;;@ silk/resampler_private_down_FIR.c:181:0
      (local.set $3
       (i32.sub
        (local.get $3)
        (local.get $24)
       )
      )
      ;;@ silk/resampler_private_down_FIR.c:183:0
      (br_if $__rjti$1
       (i32.le_s
        (local.get $3)
        (i32.const 1)
       )
      )
      ;;@ silk/resampler_private_down_FIR.c:180:0
      (local.set $2
       (i32.add
        (i32.shl
         (local.get $24)
         (i32.const 1)
        )
        (local.get $2)
       )
      )
      ;;@ silk/resampler_private_down_FIR.c:185:0
      (local.set $4
       (i32.add
        (i32.shl
         (local.get $24)
         (i32.const 2)
        )
        (local.get $22)
       )
      )
      (local.set $10
       (i32.shl
        (local.get $48)
        (i32.const 2)
       )
      )
      (drop
       (call $_memcpy
        (local.get $22)
        (local.get $4)
        (local.get $10)
       )
      )
      ;;@ silk/resampler_private_down_FIR.c:169:0
      (local.set $4
       (i32.load offset=268
        (local.get $0)
       )
      )
      ;;@ silk/resampler_private_down_FIR.c:172:0
      (local.set $10
       (i32.load offset=276
        (local.get $0)
       )
      )
      (local.set $5
       (i32.load offset=296
        (local.get $0)
       )
      )
      (br $label$continue$L1)
     )
    )
    ;;@ silk/resampler_private_down_FIR.c:139:0
    (call $_celt_fatal
     (i32.const 45506)
     (i32.const 44308)
     (i32.const 139)
    )
    (br $__rjto$1)
   )
   ;;@ silk/resampler_private_down_FIR.c:192:0
   (local.set $0
    (i32.add
     (i32.shl
      (local.get $24)
      (i32.const 2)
     )
     (local.get $22)
    )
   )
   (local.set $1
    (i32.shl
     (local.get $48)
     (i32.const 2)
    )
   )
   (drop
    (call $_memcpy
     (local.get $50)
     (local.get $0)
     (local.get $1)
    )
   )
   (global.set $STACKTOP
    (local.get $51)
   )
  )
 )
 (func $_silk_resampler_private_IIR_FIR (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  ;;@ silk/resampler_private_IIR_FIR.c:78:0
  (local.set $4
   (i32.load offset=268
    (local.get $0)
   )
  )
  (local.set $9
   (i32.shl
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $9
   (i32.add
    (local.get $9)
    (i32.const 8)
   )
  )
  (local.set $9
   (i32.shl
    (local.get $9)
    (i32.const 1)
   )
  )
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $9)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  ;;@ silk/resampler_private_IIR_FIR.c:81:0
  (i64.store align=4
   (local.get $10)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $10)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  ;;@ silk/resampler_private_IIR_FIR.c:84:0
  (local.set $14
   (i32.load offset=272
    (local.get $0)
   )
  )
  (local.set $15
   (i32.add
    (local.get $10)
    (i32.const 16)
   )
  )
  (loop $while-in
   (block $while-out
    ;;@ silk/resampler_private_IIR_FIR.c:86:0
    (local.set $9
     (i32.lt_s
      (local.get $3)
      (local.get $4)
     )
    )
    (local.set $11
     (select
      (local.get $3)
      (local.get $4)
      (local.get $9)
     )
    )
    ;;@ silk/resampler_private_IIR_FIR.c:89:0
    (call $_silk_resampler_private_up2_HQ
     (local.get $0)
     (local.get $15)
     (local.get $2)
     (local.get $11)
    )
    ;;@ silk/resampler_private_IIR_FIR.c:91:0
    (local.set $12
     (i32.shl
      (local.get $11)
      (i32.const 17)
     )
    )
    (if
     ;;@ silk/resampler_private_IIR_FIR.c:48:0
     (i32.gt_s
      (local.get $12)
      (i32.const 0)
     )
     (block
      (local.set $9
       (i32.const 0)
      )
      (local.set $1
       (loop $while-in1 (result i32)
        ;;@ silk/resampler_private_IIR_FIR.c:49:0
        (local.set $4
         (i32.and
          (local.get $9)
          (i32.const 65535)
         )
        )
        (local.set $4
         (i32.mul
          (local.get $4)
          (i32.const 12)
         )
        )
        (local.set $6
         (i32.shr_u
          (local.get $4)
          (i32.const 16)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:50:0
        (local.set $4
         (i32.shr_s
          (local.get $9)
          (i32.const 16)
         )
        )
        (local.set $4
         (i32.add
          (i32.shl
           (local.get $4)
           (i32.const 1)
          )
          (local.get $10)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:52:0
        (local.set $8
         (i32.load16_s
          (local.get $4)
         )
        )
        (local.set $5
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 3)
          )
          (i32.const 27280)
         )
        )
        (local.set $5
         (i32.load16_s
          (local.get $5)
         )
        )
        (local.set $8
         (i32.mul
          (local.get $5)
          (local.get $8)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:53:0
        (local.set $5
         (i32.load16_s offset=2
          (local.get $4)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 3)
          )
          (i32.const 27282)
         )
        )
        (local.set $7
         (i32.load16_s
          (local.get $7)
         )
        )
        (local.set $5
         (i32.mul
          (local.get $5)
          (local.get $7)
         )
        )
        (local.set $8
         (i32.add
          (local.get $5)
          (local.get $8)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:54:0
        (local.set $5
         (i32.load16_s offset=4
          (local.get $4)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 3)
          )
          (i32.const 27284)
         )
        )
        (local.set $7
         (i32.load16_s
          (local.get $7)
         )
        )
        (local.set $5
         (i32.mul
          (local.get $5)
          (local.get $7)
         )
        )
        (local.set $8
         (i32.add
          (local.get $5)
          (local.get $8)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:55:0
        (local.set $5
         (i32.load16_s offset=6
          (local.get $4)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 3)
          )
          (i32.const 27286)
         )
        )
        (local.set $7
         (i32.load16_s
          (local.get $7)
         )
        )
        (local.set $5
         (i32.mul
          (local.get $5)
          (local.get $7)
         )
        )
        (local.set $8
         (i32.add
          (local.get $5)
          (local.get $8)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:56:0
        (local.set $5
         (i32.load16_s offset=8
          (local.get $4)
         )
        )
        (local.set $6
         (i32.sub
          (i32.const 11)
          (local.get $6)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 3)
          )
          (i32.const 27286)
         )
        )
        (local.set $7
         (i32.load16_s
          (local.get $7)
         )
        )
        (local.set $5
         (i32.mul
          (local.get $5)
          (local.get $7)
         )
        )
        (local.set $8
         (i32.add
          (local.get $5)
          (local.get $8)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:57:0
        (local.set $5
         (i32.load16_s offset=10
          (local.get $4)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 3)
          )
          (i32.const 27284)
         )
        )
        (local.set $7
         (i32.load16_s
          (local.get $7)
         )
        )
        (local.set $5
         (i32.mul
          (local.get $5)
          (local.get $7)
         )
        )
        (local.set $8
         (i32.add
          (local.get $5)
          (local.get $8)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:58:0
        (local.set $5
         (i32.load16_s offset=12
          (local.get $4)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 3)
          )
          (i32.const 27282)
         )
        )
        (local.set $7
         (i32.load16_s
          (local.get $7)
         )
        )
        (local.set $5
         (i32.mul
          (local.get $5)
          (local.get $7)
         )
        )
        (local.set $8
         (i32.add
          (local.get $5)
          (local.get $8)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:59:0
        (local.set $4
         (i32.load16_s offset=14
          (local.get $4)
         )
        )
        (local.set $6
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 3)
          )
          (i32.const 27280)
         )
        )
        (local.set $6
         (i32.load16_s
          (local.get $6)
         )
        )
        (local.set $4
         (i32.mul
          (local.get $4)
          (local.get $6)
         )
        )
        (local.set $4
         (i32.add
          (local.get $4)
          (local.get $8)
         )
        )
        ;;@ silk/resampler_private_IIR_FIR.c:60:0
        (local.set $6
         (i32.shr_u
          (local.get $4)
          (i32.const 14)
         )
        )
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.set $6
         (i32.shr_u
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.set $8
         (i32.gt_s
          (local.get $4)
          (i32.const 1073725439)
         )
        )
        (local.set $4
         (i32.lt_s
          (local.get $4)
          (i32.const -1073758208)
         )
        )
        (local.set $6
         (i32.and
          (local.get $6)
          (i32.const 65535)
         )
        )
        (local.set $4
         (select
          (i32.const -32768)
          (local.get $6)
          (local.get $4)
         )
        )
        (local.set $6
         (select
          (i32.const 32767)
          (local.get $4)
          (local.get $8)
         )
        )
        (local.set $4
         (i32.add
          (local.get $1)
          (i32.const 2)
         )
        )
        (i32.store16
         (local.get $1)
         (local.get $6)
        )
        ;;@ silk/resampler_private_IIR_FIR.c:48:0
        (local.set $9
         (i32.add
          (local.get $9)
          (local.get $14)
         )
        )
        (if (result i32)
         (i32.lt_s
          (local.get $9)
          (local.get $12)
         )
         (block
          (local.set $1
           (local.get $4)
          )
          (br $while-in1)
         )
         (local.get $4)
        )
       )
      )
     )
    )
    ;;@ silk/resampler_private_IIR_FIR.c:94:0
    (local.set $3
     (i32.sub
      (local.get $3)
      (local.get $11)
     )
    )
    ;;@ silk/resampler_private_IIR_FIR.c:96:0
    (br_if $while-out
     (i32.le_s
      (local.get $3)
      (i32.const 0)
     )
    )
    ;;@ silk/resampler_private_IIR_FIR.c:93:0
    (local.set $2
     (i32.add
      (i32.shl
       (local.get $11)
       (i32.const 1)
      )
      (local.get $2)
     )
    )
    ;;@ silk/resampler_private_IIR_FIR.c:98:0
    (local.set $4
     (i32.shl
      (local.get $11)
      (i32.const 1)
     )
    )
    (i64.store align=4
     (local.get $10)
     (i64.load align=4
      (local.tee $4
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 1)
        )
        (local.get $10)
       )
      )
     )
    )
    (i64.store offset=8 align=4
     (local.get $10)
     (i64.load offset=8 align=4
      (local.get $4)
     )
    )
    ;;@ silk/resampler_private_IIR_FIR.c:86:0
    (local.set $4
     (i32.load offset=268
      (local.get $0)
     )
    )
    (br $while-in)
   )
  )
  ;;@ silk/resampler_private_IIR_FIR.c:105:0
  (local.set $1
   (i32.shl
    (local.get $11)
    (i32.const 1)
   )
  )
  (i64.store offset=24 align=2
   (local.get $0)
   (i64.load align=2
    (local.tee $1
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 1)
      )
      (local.get $10)
     )
    )
   )
  )
  (i64.store offset=32 align=2
   (local.get $0)
   (i64.load offset=8 align=2
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $13)
  )
 )
 (func $_silk_resampler_private_up2_HQ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (if
   ;;@ silk/resampler_private_up2_HQ.c:56:0
   (i32.le_s
    (local.get $3)
    (i32.const 0)
   )
   ;;@ silk/resampler_private_up2_HQ.c:102:0
   (return)
  )
  ;;@ silk/resampler_private_up2_HQ.c:64:0
  (local.set $11
   (i32.load
    (local.get $0)
   )
  )
  ;;@ silk/resampler_private_up2_HQ.c:70:0
  (local.set $12
   (i32.load offset=4
    (local.get $0)
   )
  )
  ;;@ silk/resampler_private_up2_HQ.c:76:0
  (local.set $8
   (i32.load offset=8
    (local.get $0)
   )
  )
  ;;@ silk/resampler_private_up2_HQ.c:85:0
  (local.set $13
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ silk/resampler_private_up2_HQ.c:91:0
  (local.set $14
   (i32.load offset=16
    (local.get $0)
   )
  )
  ;;@ silk/resampler_private_up2_HQ.c:97:0
  (local.set $9
   (i32.load offset=20
    (local.get $0)
   )
  )
  (loop $while-in
   ;;@ silk/resampler_private_up2_HQ.c:58:0
   (local.set $6
    (i32.add
     (i32.shl
      (local.get $10)
      (i32.const 1)
     )
     (local.get $2)
    )
   )
   (local.set $6
    (i32.load16_s
     (local.get $6)
    )
   )
   (local.set $6
    (i32.shl
     (local.get $6)
     (i32.const 10)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:61:0
   (local.set $5
    (i32.sub
     (local.get $6)
     (local.get $11)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:62:0
   (local.set $4
    (i32.shr_s
     (local.get $5)
     (i32.const 16)
    )
   )
   (local.set $4
    (i32.mul
     (local.get $4)
     (i32.const 1746)
    )
   )
   (local.set $5
    (i32.and
     (local.get $5)
     (i32.const 65535)
    )
   )
   (local.set $5
    (i32.mul
     (local.get $5)
     (i32.const 1746)
    )
   )
   (local.set $5
    (i32.shr_u
     (local.get $5)
     (i32.const 16)
    )
   )
   (local.set $5
    (i32.add
     (local.get $4)
     (local.get $5)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:63:0
   (local.set $4
    (i32.add
     (local.get $5)
     (local.get $11)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:64:0
   (local.set $11
    (i32.add
     (local.get $5)
     (local.get $6)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:67:0
   (local.set $5
    (i32.sub
     (local.get $4)
     (local.get $12)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:68:0
   (local.set $7
    (i32.shr_s
     (local.get $5)
     (i32.const 16)
    )
   )
   (local.set $7
    (i32.mul
     (local.get $7)
     (i32.const 14986)
    )
   )
   (local.set $5
    (i32.and
     (local.get $5)
     (i32.const 65535)
    )
   )
   (local.set $5
    (i32.mul
     (local.get $5)
     (i32.const 14986)
    )
   )
   (local.set $5
    (i32.shr_u
     (local.get $5)
     (i32.const 16)
    )
   )
   (local.set $5
    (i32.add
     (local.get $5)
     (local.get $7)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:69:0
   (local.set $7
    (i32.add
     (local.get $5)
     (local.get $12)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:70:0
   (local.set $12
    (i32.add
     (local.get $4)
     (local.get $5)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:73:0
   (local.set $8
    (i32.sub
     (local.get $7)
     (local.get $8)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:74:0
   (local.set $5
    (i32.shr_s
     (local.get $8)
     (i32.const 16)
    )
   )
   (local.set $5
    (i32.mul
     (local.get $5)
     (i32.const -26453)
    )
   )
   (local.set $4
    (i32.and
     (local.get $8)
     (i32.const 65535)
    )
   )
   (local.set $4
    (i32.mul
     (local.get $4)
     (i32.const -26453)
    )
   )
   (local.set $4
    (i32.shr_s
     (local.get $4)
     (i32.const 16)
    )
   )
   (local.set $5
    (i32.add
     (local.get $4)
     (local.get $5)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:75:0
   (local.set $5
    (i32.add
     (local.get $5)
     (local.get $7)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:76:0
   (local.set $8
    (i32.add
     (local.get $5)
     (local.get $8)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:79:0
   (local.set $4
    (i32.shr_u
     (local.get $5)
     (i32.const 9)
    )
   )
   (local.set $4
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
   (local.set $4
    (i32.shr_u
     (local.get $4)
     (i32.const 1)
    )
   )
   (local.set $7
    (i32.gt_s
     (local.get $5)
     (i32.const 33553919)
    )
   )
   (local.set $5
    (i32.lt_s
     (local.get $5)
     (i32.const -33554944)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (i32.const 65535)
    )
   )
   (local.set $5
    (select
     (i32.const -32768)
     (local.get $4)
     (local.get $5)
    )
   )
   (local.set $4
    (select
     (i32.const 32767)
     (local.get $5)
     (local.get $7)
    )
   )
   (local.set $5
    (i32.shl
     (local.get $10)
     (i32.const 1)
    )
   )
   (local.set $7
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 1)
     )
     (local.get $1)
    )
   )
   (i32.store16
    (local.get $7)
    (local.get $4)
   )
   ;;@ silk/resampler_private_up2_HQ.c:82:0
   (local.set $4
    (i32.sub
     (local.get $6)
     (local.get $13)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:83:0
   (local.set $7
    (i32.shr_s
     (local.get $4)
     (i32.const 16)
    )
   )
   (local.set $7
    (i32.mul
     (local.get $7)
     (i32.const 6854)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (i32.const 65535)
    )
   )
   (local.set $4
    (i32.mul
     (local.get $4)
     (i32.const 6854)
    )
   )
   (local.set $4
    (i32.shr_u
     (local.get $4)
     (i32.const 16)
    )
   )
   (local.set $4
    (i32.add
     (local.get $4)
     (local.get $7)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:84:0
   (local.set $7
    (i32.add
     (local.get $4)
     (local.get $13)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:85:0
   (local.set $13
    (i32.add
     (local.get $4)
     (local.get $6)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:88:0
   (local.set $6
    (i32.sub
     (local.get $7)
     (local.get $14)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:89:0
   (local.set $4
    (i32.shr_s
     (local.get $6)
     (i32.const 16)
    )
   )
   (local.set $4
    (i32.mul
     (local.get $4)
     (i32.const 25769)
    )
   )
   (local.set $6
    (i32.and
     (local.get $6)
     (i32.const 65535)
    )
   )
   (local.set $6
    (i32.mul
     (local.get $6)
     (i32.const 25769)
    )
   )
   (local.set $6
    (i32.shr_u
     (local.get $6)
     (i32.const 16)
    )
   )
   (local.set $6
    (i32.add
     (local.get $4)
     (local.get $6)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:90:0
   (local.set $4
    (i32.add
     (local.get $6)
     (local.get $14)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:91:0
   (local.set $14
    (i32.add
     (local.get $6)
     (local.get $7)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:94:0
   (local.set $9
    (i32.sub
     (local.get $4)
     (local.get $9)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:95:0
   (local.set $6
    (i32.shr_s
     (local.get $9)
     (i32.const 16)
    )
   )
   (local.set $6
    (i32.mul
     (local.get $6)
     (i32.const -9994)
    )
   )
   (local.set $7
    (i32.and
     (local.get $9)
     (i32.const 65535)
    )
   )
   (local.set $7
    (i32.mul
     (local.get $7)
     (i32.const -9994)
    )
   )
   (local.set $7
    (i32.shr_s
     (local.get $7)
     (i32.const 16)
    )
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (local.get $7)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:96:0
   (local.set $6
    (i32.add
     (local.get $4)
     (local.get $6)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:97:0
   (local.set $9
    (i32.add
     (local.get $6)
     (local.get $9)
    )
   )
   ;;@ silk/resampler_private_up2_HQ.c:100:0
   (local.set $4
    (i32.shr_u
     (local.get $6)
     (i32.const 9)
    )
   )
   (local.set $4
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
   (local.set $4
    (i32.shr_u
     (local.get $4)
     (i32.const 1)
    )
   )
   (local.set $7
    (i32.gt_s
     (local.get $6)
     (i32.const 33553919)
    )
   )
   (local.set $6
    (i32.lt_s
     (local.get $6)
     (i32.const -33554944)
    )
   )
   (local.set $4
    (i32.and
     (local.get $4)
     (i32.const 65535)
    )
   )
   (local.set $6
    (select
     (i32.const -32768)
     (local.get $4)
     (local.get $6)
    )
   )
   (local.set $6
    (select
     (i32.const 32767)
     (local.get $6)
     (local.get $7)
    )
   )
   (local.set $5
    (i32.or
     (local.get $5)
     (i32.const 1)
    )
   )
   (local.set $5
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 1)
     )
     (local.get $1)
    )
   )
   (i32.store16
    (local.get $5)
    (local.get $6)
   )
   ;;@ silk/resampler_private_up2_HQ.c:56:0
   (local.set $10
    (i32.add
     (local.get $10)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $3)
     (local.get $10)
    )
   )
  )
  ;;@ silk/resampler_private_up2_HQ.c:64:0
  (i32.store
   (local.get $0)
   (local.get $11)
  )
  ;;@ silk/resampler_private_up2_HQ.c:70:0
  (i32.store offset=4
   (local.get $0)
   (local.get $12)
  )
  ;;@ silk/resampler_private_up2_HQ.c:76:0
  (i32.store offset=8
   (local.get $0)
   (local.get $8)
  )
  ;;@ silk/resampler_private_up2_HQ.c:85:0
  (i32.store offset=12
   (local.get $0)
   (local.get $13)
  )
  ;;@ silk/resampler_private_up2_HQ.c:91:0
  (i32.store offset=16
   (local.get $0)
   (local.get $14)
  )
  ;;@ silk/resampler_private_up2_HQ.c:97:0
  (i32.store offset=20
   (local.get $0)
   (local.get $9)
  )
 )
 (func $_silk_resampler_private_up2_HQ_wrapper (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  ;;@ silk/resampler_private_up2_HQ.c:113:0
  (call $_silk_resampler_private_up2_HQ
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
 )
 (func $_silk_insertion_sort_increasing_all_values_int16 (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   ;;@ silk/sort.c:144:0
   (i32.le_s
    (local.get $1)
    (i32.const 0)
   )
   (call $_celt_fatal
    (i32.const 44354)
    (i32.const 44342)
    (i32.const 144)
   )
  )
  (if
   ;;@ silk/sort.c:147:0
   (i32.eq
    (local.get $1)
    (i32.const 1)
   )
   ;;@ silk/sort.c:154:0
   (return)
  )
  (local.set $3
   (i32.const 1)
  )
  (loop $while-in
   ;;@ silk/sort.c:148:0
   (local.set $2
    (i32.add
     (i32.shl
      (local.get $3)
      (i32.const 1)
     )
     (local.get $0)
    )
   )
   (local.set $4
    (i32.load16_s
     (local.get $2)
    )
   )
   (local.set $2
    (local.get $3)
   )
   (local.set $2
    (loop $while-in1 (result i32)
     (block $while-out0 (result i32)
      (local.set $5
       (i32.add
        (local.get $2)
        (i32.const -1)
       )
      )
      ;;@ silk/sort.c:149:0
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 1)
        )
        (local.get $0)
       )
      )
      (local.set $7
       (i32.load16_s
        (local.get $6)
       )
      )
      (local.set $8
       (i32.add
        (i32.shl
         (local.get $2)
         (i32.const 1)
        )
        (local.get $0)
       )
      )
      (drop
       (br_if $while-out0
        (local.get $8)
        (i32.ge_s
         (local.get $4)
         (local.get $7)
        )
       )
      )
      ;;@ silk/sort.c:150:0
      (i32.store16
       (local.get $8)
       (local.get $7)
      )
      (if (result i32)
       ;;@ silk/sort.c:149:0
       (i32.gt_s
        (local.get $2)
        (i32.const 1)
       )
       (block
        (local.set $2
         (local.get $5)
        )
        (br $while-in1)
       )
       (local.get $6)
      )
     )
    )
   )
   ;;@ silk/sort.c:152:0
   (i32.store16
    (local.get $2)
    (local.get $4)
   )
   ;;@ silk/sort.c:147:0
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.lt_s
     (local.get $3)
     (local.get $1)
    )
   )
  )
 )
 (func $_silk_sum_sqr_shift (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  ;;@ ./silk/macros.h:122:0
  (local.set $6
   (i32.clz
    (local.get $3)
   )
  )
  ;;@ silk/sum_sqr_shift.c:48:0
  (local.set $7
   (i32.sub
    (i32.const 31)
    (local.get $6)
   )
  )
  ;;@ silk/sum_sqr_shift.c:51:0
  (local.set $9
   (i32.add
    (local.get $3)
    (i32.const -1)
   )
  )
  (local.set $5
   (if (result i32)
    (local.tee $8
     (i32.gt_s
      (local.get $3)
      (i32.const 1)
     )
    )
    (block (result i32)
     (local.set $6
      (local.get $3)
     )
     (loop $while-in
      ;;@ silk/sum_sqr_shift.c:52:0
      (local.set $4
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 1)
        )
        (local.get $2)
       )
      )
      (local.set $4
       (i32.load16_s
        (local.get $4)
       )
      )
      (local.set $10
       (i32.mul
        (local.get $4)
        (local.get $4)
       )
      )
      ;;@ silk/sum_sqr_shift.c:53:0
      (local.set $4
       (i32.or
        (local.get $5)
        (i32.const 1)
       )
      )
      (local.set $4
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 1)
        )
        (local.get $2)
       )
      )
      (local.set $4
       (i32.load16_s
        (local.get $4)
       )
      )
      (local.set $4
       (i32.mul
        (local.get $4)
        (local.get $4)
       )
      )
      (local.set $4
       (i32.add
        (local.get $4)
        (local.get $10)
       )
      )
      ;;@ silk/sum_sqr_shift.c:54:0
      (local.set $4
       (i32.shr_u
        (local.get $4)
        (local.get $7)
       )
      )
      (local.set $6
       (i32.add
        (local.get $4)
        (local.get $6)
       )
      )
      ;;@ silk/sum_sqr_shift.c:51:0
      (local.set $5
       (i32.add
        (local.get $5)
        (i32.const 2)
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.get $5)
        (local.get $9)
       )
      )
     )
     (i32.and
      (local.get $3)
      (i32.const -2)
     )
    )
    (block (result i32)
     (local.set $6
      (local.get $3)
     )
     (i32.const 0)
    )
   )
  )
  (if
   ;;@ silk/sum_sqr_shift.c:56:0
   (i32.lt_s
    (local.get $5)
    (local.get $3)
   )
   (block
    ;;@ silk/sum_sqr_shift.c:58:0
    (local.set $5
     (i32.add
      (i32.shl
       (local.get $5)
       (i32.const 1)
      )
      (local.get $2)
     )
    )
    (local.set $5
     (i32.load16_s
      (local.get $5)
     )
    )
    (local.set $5
     (i32.mul
      (local.get $5)
      (local.get $5)
     )
    )
    ;;@ silk/sum_sqr_shift.c:59:0
    (local.set $5
     (i32.shr_u
      (local.get $5)
      (local.get $7)
     )
    )
    (local.set $6
     (i32.add
      (local.get $5)
      (local.get $6)
     )
    )
   )
  )
  ;;@ silk/sum_sqr_shift.c:64:0
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 3)
   )
  )
  ;;@ ./silk/macros.h:122:0
  (local.set $6
   (i32.clz
    (local.get $6)
   )
  )
  ;;@ silk/sum_sqr_shift.c:64:0
  (local.set $6
   (i32.sub
    (local.get $5)
    (local.get $6)
   )
  )
  ;;@ ./silk/SigProc_FIX.h:574:0
  (local.set $5
   (i32.gt_s
    (local.get $6)
    (i32.const 0)
   )
  )
  (local.set $7
   (select
    (local.get $6)
    (i32.const 0)
    (local.get $5)
   )
  )
  (local.set $5
   (if (result i32)
    (local.get $8)
    (block (result i32)
     (local.set $5
      (i32.const 0)
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in1
      ;;@ silk/sum_sqr_shift.c:67:0
      (local.set $4
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 1)
        )
        (local.get $2)
       )
      )
      (local.set $4
       (i32.load16_s
        (local.get $4)
       )
      )
      (local.set $8
       (i32.mul
        (local.get $4)
        (local.get $4)
       )
      )
      ;;@ silk/sum_sqr_shift.c:68:0
      (local.set $4
       (i32.or
        (local.get $5)
        (i32.const 1)
       )
      )
      (local.set $4
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 1)
        )
        (local.get $2)
       )
      )
      (local.set $4
       (i32.load16_s
        (local.get $4)
       )
      )
      (local.set $4
       (i32.mul
        (local.get $4)
        (local.get $4)
       )
      )
      (local.set $4
       (i32.add
        (local.get $4)
        (local.get $8)
       )
      )
      ;;@ silk/sum_sqr_shift.c:69:0
      (local.set $4
       (i32.shr_u
        (local.get $4)
        (local.get $7)
       )
      )
      (local.set $6
       (i32.add
        (local.get $4)
        (local.get $6)
       )
      )
      ;;@ silk/sum_sqr_shift.c:66:0
      (local.set $5
       (i32.add
        (local.get $5)
        (i32.const 2)
       )
      )
      (br_if $while-in1
       (i32.lt_s
        (local.get $5)
        (local.get $9)
       )
      )
     )
     (i32.and
      (local.get $3)
      (i32.const -2)
     )
    )
    (block (result i32)
     (local.set $6
      (i32.const 0)
     )
     (i32.const 0)
    )
   )
  )
  (if
   ;;@ silk/sum_sqr_shift.c:71:0
   (i32.ge_s
    (local.get $5)
    (local.get $3)
   )
   (block
    ;;@ silk/sum_sqr_shift.c:80:0
    (i32.store
     (local.get $1)
     (local.get $7)
    )
    ;;@ silk/sum_sqr_shift.c:81:0
    (i32.store
     (local.get $0)
     (local.get $6)
    )
    ;;@ silk/sum_sqr_shift.c:82:0
    (return)
   )
  )
  ;;@ silk/sum_sqr_shift.c:73:0
  (local.set $2
   (i32.add
    (i32.shl
     (local.get $5)
     (i32.const 1)
    )
    (local.get $2)
   )
  )
  (local.set $2
   (i32.load16_s
    (local.get $2)
   )
  )
  (local.set $2
   (i32.mul
    (local.get $2)
    (local.get $2)
   )
  )
  ;;@ silk/sum_sqr_shift.c:74:0
  (local.set $2
   (i32.shr_u
    (local.get $2)
    (local.get $7)
   )
  )
  (local.set $2
   (i32.add
    (local.get $2)
    (local.get $6)
   )
  )
  ;;@ silk/sum_sqr_shift.c:80:0
  (i32.store
   (local.get $1)
   (local.get $7)
  )
  ;;@ silk/sum_sqr_shift.c:81:0
  (i32.store
   (local.get $0)
   (local.get $2)
  )
 )
 (func $_silk_stereo_decode_pred (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  ;;@ silk/stereo_decode_pred.c:44:0
  (local.set $2
   (call $_ec_dec_icdf
    (local.get $0)
    (i32.const 25392)
    (i32.const 8)
   )
  )
  ;;@ silk/stereo_decode_pred.c:45:0
  (local.set $3
   (i32.div_s
    (local.get $2)
    (i32.const 5)
   )
  )
  ;;@ silk/stereo_decode_pred.c:46:0
  (local.set $4
   (i32.mul
    (local.get $3)
    (i32.const -5)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (local.get $4)
   )
  )
  ;;@ silk/stereo_decode_pred.c:48:0
  (local.set $2
   (call $_ec_dec_icdf
    (local.get $0)
    (i32.const 43870)
    (i32.const 8)
   )
  )
  ;;@ silk/stereo_decode_pred.c:49:0
  (local.set $5
   (call $_ec_dec_icdf
    (local.get $0)
    (i32.const 43877)
    (i32.const 8)
   )
  )
  ;;@ silk/stereo_decode_pred.c:48:0
  (local.set $6
   (call $_ec_dec_icdf
    (local.get $0)
    (i32.const 43870)
    (i32.const 8)
   )
  )
  ;;@ silk/stereo_decode_pred.c:49:0
  (local.set $7
   (call $_ec_dec_icdf
    (local.get $0)
    (i32.const 43877)
    (i32.const 8)
   )
  )
  ;;@ silk/stereo_decode_pred.c:54:0
  (local.set $0
   (i32.mul
    (local.get $3)
    (i32.const 3)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  ;;@ silk/stereo_decode_pred.c:55:0
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 1)
    )
    (i32.const 25360)
   )
  )
  (local.set $0
   (i32.load16_s
    (local.get $0)
   )
  )
  ;;@ silk/stereo_decode_pred.c:56:0
  (local.set $2
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 1)
    )
    (i32.const 25360)
   )
  )
  (local.set $2
   (i32.load16_s
    (local.get $2)
   )
  )
  (local.set $2
   (i32.sub
    (local.get $2)
    (local.get $0)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.mul
    (local.get $3)
    (i32.const 6554)
   )
  )
  (local.set $2
   (i32.and
    (local.get $2)
    (i32.const 65535)
   )
  )
  (local.set $2
   (i32.mul
    (local.get $2)
    (i32.const 6554)
   )
  )
  (local.set $2
   (i32.shr_u
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $2)
    (local.get $3)
   )
  )
  ;;@ silk/stereo_decode_pred.c:58:0
  (local.set $3
   (i32.shl
    (local.get $5)
    (i32.const 17)
   )
  )
  (local.set $3
   (i32.shr_s
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.or
    (local.get $3)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.mul
    (local.get $2)
    (local.get $3)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  ;;@ silk/stereo_decode_pred.c:54:0
  (local.set $0
   (i32.mul
    (local.get $4)
    (i32.const 3)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (local.get $6)
   )
  )
  ;;@ silk/stereo_decode_pred.c:55:0
  (local.set $0
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 1)
    )
    (i32.const 25360)
   )
  )
  (local.set $0
   (i32.load16_s
    (local.get $0)
   )
  )
  ;;@ silk/stereo_decode_pred.c:56:0
  (local.set $2
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 1)
    )
    (i32.const 25360)
   )
  )
  (local.set $2
   (i32.load16_s
    (local.get $2)
   )
  )
  (local.set $2
   (i32.sub
    (local.get $2)
    (local.get $0)
   )
  )
  (local.set $4
   (i32.shr_s
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.mul
    (local.get $4)
    (i32.const 6554)
   )
  )
  (local.set $2
   (i32.and
    (local.get $2)
    (i32.const 65535)
   )
  )
  (local.set $2
   (i32.mul
    (local.get $2)
    (i32.const 6554)
   )
  )
  (local.set $2
   (i32.shr_u
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $2)
    (local.get $4)
   )
  )
  ;;@ silk/stereo_decode_pred.c:58:0
  (local.set $4
   (i32.shl
    (local.get $7)
    (i32.const 17)
   )
  )
  (local.set $4
   (i32.shr_s
    (local.get $4)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.or
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $2
   (i32.mul
    (local.get $2)
    (local.get $4)
   )
  )
  (local.set $0
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (i32.store offset=4
   (local.get $1)
   (local.get $0)
  )
  ;;@ silk/stereo_decode_pred.c:62:0
  (local.set $0
   (i32.sub
    (local.get $3)
    (local.get $0)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
 )
 (func $_silk_stereo_decode_mid_only (; has Stack IR ;) (param $0 i32) (param $1 i32)
  ;;@ silk/stereo_decode_pred.c:72:0
  (local.set $0
   (call $_ec_dec_icdf
    (local.get $0)
    (i32.const 43842)
    (i32.const 8)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
 )
 (func $_silk_LPC_fit (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  ;;@ silk/LPC_fit.c:81:0
  (block $folding-inner0
   (br_if $folding-inner0
    (i32.eqz
     (local.tee $7
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
     )
    )
   )
   (loop $while-in
    (block $while-out
     (local.set $4
      (i32.const 0)
     )
     (local.set $5
      (i32.const 0)
     )
     (loop $while-in1
      ;;@ silk/LPC_fit.c:52:0
      (local.set $3
       (select
        (local.get $4)
        (local.get $3)
        (local.tee $9
         (i32.gt_s
          ;;@ silk/LPC_fit.c:51:0
          (local.tee $8
           (select
            (local.tee $3
             (i32.load
              (i32.add
               (i32.shl
                (local.get $4)
                (i32.const 2)
               )
               (local.get $1)
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $3)
            )
            (i32.gt_s
             (local.get $3)
             (i32.const 0)
            )
           )
          )
          (local.get $5)
         )
        )
       )
      )
      ;;@ silk/LPC_fit.c:52:0
      (local.set $5
       (select
        (local.get $8)
        (local.get $5)
        (local.get $9)
       )
      )
      ;;@ silk/LPC_fit.c:50:0
      (br_if $while-in1
       (i32.ne
        (local.tee $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (local.get $2)
       )
      )
     )
     ;;@ silk/LPC_fit.c:59:0
     (br_if $while-out
      (i32.le_s
       (local.tee $4
        ;;@ silk/LPC_fit.c:57:0
        (i32.shr_s
         (i32.add
          (i32.shr_s
           (local.get $5)
           (i32.const 4)
          )
          (i32.const 1)
         )
         (i32.const 1)
        )
       )
       (i32.const 32767)
      )
     )
     ;;@ silk/LPC_fit.c:64:0
     (call $_silk_bwexpander_32
      (local.get $1)
      (local.get $2)
      (i32.sub
       (i32.const 65470)
       (i32.div_s
        (i32.add
         (i32.shl
          ;;@ silk/LPC_fit.c:61:0
          (local.tee $4
           (select
            (local.get $4)
            (i32.const 163838)
            (i32.lt_s
             (local.get $4)
             (i32.const 163838)
            )
           )
          )
          (i32.const 14)
         )
         (i32.const -536854528)
        )
        (i32.shr_s
         (i32.mul
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
          (local.get $4)
         )
         (i32.const 2)
        )
       )
      )
     )
     ;;@ silk/LPC_fit.c:47:0
     (br_if $while-in
      (i32.lt_u
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (i32.const 10)
      )
     )
    )
   )
   (if
    ;;@ silk/LPC_fit.c:70:0
    (i32.ne
     (local.get $6)
     (i32.const 10)
    )
    (block
     (br_if $folding-inner0
      (i32.eqz
       (local.get $7)
      )
     )
     (local.set $3
      (i32.const 0)
     )
     (loop $while-in5
      ;;@ silk/LPC_fit.c:78:0
      (i32.store16
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 1)
        )
        (local.get $0)
       )
       (i32.shr_u
        (i32.add
         (i32.shr_s
          (i32.load
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
            (local.get $1)
           )
          )
          (i32.const 4)
         )
         (i32.const 1)
        )
        (i32.const 1)
       )
      )
      ;;@ silk/LPC_fit.c:77:0
      (br_if $while-in5
       (i32.ne
        (local.tee $3
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (local.get $2)
       )
      )
     )
     ;;@ silk/LPC_fit.c:81:0
     (return)
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (local.get $7)
    )
   )
   (local.set $3
    (i32.const 0)
   )
   (loop $while-in9
    ;;@ silk/LPC_fit.c:73:0
    (i32.store16
     (i32.add
      (i32.shl
       (local.get $3)
       (i32.const 1)
      )
      (local.get $0)
     )
     (local.tee $4
      (if (result i32)
       (i32.gt_s
        (local.tee $4
         (i32.shr_s
          (i32.load
           (local.tee $5
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
             (local.get $1)
            )
           )
          )
          (i32.const 4)
         )
        )
        (i32.const 65534)
       )
       (i32.const 32767)
       (select
        (i32.const -32768)
        (i32.shr_s
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
         (i32.const 1)
        )
        (i32.lt_s
         (local.get $4)
         (i32.const -65537)
        )
       )
      )
     )
    )
    ;;@ silk/LPC_fit.c:74:0
    (i32.store
     (local.get $5)
     (i32.shl
      (i32.shr_s
       (i32.shl
        (local.get $4)
        (i32.const 16)
       )
       (i32.const 16)
      )
      (i32.const 5)
     )
    )
    ;;@ silk/LPC_fit.c:72:0
    (br_if $while-in9
     (i32.ne
      (local.tee $3
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (local.get $2)
     )
    )
   )
  )
 )
 (func $_opus_pcm_soft_clip (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (local $16 f32)
  (local $17 i32)
  (local $18 f32)
  ;;@ src/opus.c:42:0
  (local.set $5
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
  )
  (local.set $9
   (i32.gt_s
    (local.get $1)
    (i32.const 0)
   )
  )
  (local.set $5
   (i32.and
    (local.get $5)
    (local.get $9)
   )
  )
  (local.set $9
   (i32.ne
    (local.get $0)
    (i32.const 0)
   )
  )
  (local.set $5
   (i32.and
    (local.get $5)
    (local.get $9)
   )
  )
  (local.set $9
   (i32.ne
    (local.get $3)
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $5)
     (local.get $9)
    )
   )
   ;;@ src/opus.c:137:0
   (return)
  )
  ;;@ src/opus.c:48:0
  (local.set $9
   (i32.mul
    (local.get $1)
    (local.get $2)
   )
  )
  (if
   (i32.gt_s
    (local.get $9)
    (i32.const 0)
   )
   (block
    (local.set $5
     (i32.const 0)
    )
    (loop $while-in
     ;;@ src/opus.c:49:0
     (local.set $7
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $0)
      )
     )
     (local.set $4
      (f32.load
       (local.get $7)
      )
     )
     (local.set $8
      (f32.gt
       (local.get $4)
       (f32.const 2)
      )
     )
     (local.set $11
      (select
       (f32.const 2)
       (local.get $4)
       (local.get $8)
      )
     )
     (local.set $10
      (f32.lt
       (local.get $11)
       (f32.const -2)
      )
     )
     (local.set $8
      (i32.or
       (local.get $8)
       (local.get $10)
      )
     )
     (local.set $11
      (select
       (f32.const -2)
       (f32.const 2)
       (local.get $10)
      )
     )
     (local.set $4
      (select
       (local.get $11)
       (local.get $4)
       (local.get $8)
      )
     )
     (f32.store
      (local.get $7)
      (local.get $4)
     )
     ;;@ src/opus.c:48:0
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.get $5)
       (local.get $9)
      )
     )
    )
   )
  )
  (loop $while-in1
   ;;@ src/opus.c:56:0
   (local.set $12
    (i32.add
     (i32.shl
      (local.get $14)
      (i32.const 2)
     )
     (local.get $0)
    )
   )
   ;;@ src/opus.c:57:0
   (local.set $17
    (i32.add
     (i32.shl
      (local.get $14)
      (i32.const 2)
     )
     (local.get $3)
    )
   )
   (local.set $6
    (f32.load
     (local.get $17)
    )
   )
   (local.set $5
    (i32.const 0)
   )
   (loop $while-in3
    (block $while-out2
     ;;@ src/opus.c:62:0
     (local.set $9
      (i32.mul
       (local.get $2)
       (local.get $5)
      )
     )
     (local.set $9
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $12)
      )
     )
     (local.set $4
      (f32.load
       (local.get $9)
      )
     )
     (local.set $11
      (f32.mul
       (local.get $6)
       (local.get $4)
      )
     )
     (br_if $while-out2
      (f32.ge
       (local.get $11)
       (f32.const 0)
      )
     )
     ;;@ src/opus.c:64:0
     (local.set $11
      (f32.mul
       (local.get $4)
       (local.get $11)
      )
     )
     (local.set $4
      (f32.add
       (local.get $4)
       (local.get $11)
      )
     )
     (f32.store
      (local.get $9)
      (local.get $4)
     )
     ;;@ src/opus.c:60:0
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br_if $while-in3
      (i32.lt_s
       (local.get $5)
       (local.get $1)
      )
     )
    )
   )
   ;;@ src/opus.c:68:0
   (local.set $18
    (f32.load
     (local.get $12)
    )
   )
   (local.set $9
    (i32.const 0)
   )
   (local.set $4
    (loop $while-in5 (result f32)
     (block $while-out4 (result f32)
      (if
       ;;@ src/opus.c:75:0
       (i32.lt_s
        (local.get $9)
        (local.get $1)
       )
       (block $label$break$L17
        (local.set $5
         (local.get $9)
        )
        (loop $while-in7
         ;;@ src/opus.c:77:0
         (local.set $7
          (i32.mul
           (local.get $2)
           (local.get $5)
          )
         )
         (local.set $7
          (i32.add
           (i32.shl
            (local.get $7)
            (i32.const 2)
           )
           (local.get $12)
          )
         )
         (local.set $4
          (f32.load
           (local.get $7)
          )
         )
         (local.set $7
          (f32.gt
           (local.get $4)
           (f32.const 1)
          )
         )
         (local.set $8
          (f32.lt
           (local.get $4)
           (f32.const -1)
          )
         )
         (br_if $label$break$L17
          (i32.or
           (local.get $7)
           (local.get $8)
          )
         )
         ;;@ src/opus.c:75:0
         (local.set $5
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (br_if $while-in7
          (i32.lt_s
           (local.get $5)
           (local.get $1)
          )
         )
        )
       )
       (local.set $5
        (local.get $9)
       )
      )
      ;;@ src/opus.c:80:0
      (drop
       (br_if $while-out4
        (f32.const 0)
        (i32.eq
         (local.get $1)
         (local.get $5)
        )
       )
      )
      ;;@ src/opus.c:87:0
      (local.set $7
       (i32.mul
        (local.get $2)
        (local.get $5)
       )
      )
      (local.set $7
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $12)
       )
      )
      (local.set $11
       (f32.load
        (local.get $7)
       )
      )
      (local.set $4
       (f32.abs
        (local.get $11)
       )
      )
      (if
       ;;@ src/opus.c:89:0
       (i32.gt_s
        (local.get $5)
        (i32.const 0)
       )
       (block $label$break$L24
        (local.set $8
         (local.get $5)
        )
        (local.set $8
         (loop $while-in10 (result i32)
          (local.set $7
           (i32.add
            (local.get $8)
            (i32.const -1)
           )
          )
          (local.set $10
           (i32.mul
            (local.get $2)
            (local.get $7)
           )
          )
          (local.set $10
           (i32.add
            (i32.shl
             (local.get $10)
             (i32.const 2)
            )
            (local.get $12)
           )
          )
          (local.set $6
           (f32.load
            (local.get $10)
           )
          )
          (local.set $6
           (f32.mul
            (local.get $11)
            (local.get $6)
           )
          )
          (br_if $label$break$L24
           (i32.eqz
            (f32.ge
             (local.get $6)
             (f32.const 0)
            )
           )
          )
          (if (result i32)
           (i32.gt_s
            (local.get $8)
            (i32.const 1)
           )
           (block
            (local.set $8
             (local.get $7)
            )
            (br $while-in10)
           )
           (local.get $7)
          )
         )
        )
       )
       (local.set $8
        (local.get $5)
       )
      )
      (local.set $5
       (if (result i32)
        ;;@ src/opus.c:92:0
        (i32.lt_s
         (local.get $5)
         (local.get $1)
        )
        (block $label$break$L30 (result i32)
         (local.set $10
          (local.get $5)
         )
         (loop $while-in13 (result i32)
          (local.set $7
           (i32.mul
            (local.get $2)
            (local.get $10)
           )
          )
          (local.set $7
           (i32.add
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
            (local.get $12)
           )
          )
          (local.set $6
           (f32.load
            (local.get $7)
           )
          )
          (local.set $15
           (f32.mul
            (local.get $11)
            (local.get $6)
           )
          )
          (if
           (i32.eqz
            (f32.ge
             (local.get $15)
             (f32.const 0)
            )
           )
           (block
            (local.set $7
             (local.get $5)
            )
            (br $label$break$L30
             (local.get $10)
            )
           )
          )
          ;;@ src/opus.c:95:0
          (local.set $6
           (f32.abs
            (local.get $6)
           )
          )
          (local.set $7
           (f32.gt
            (local.get $6)
            (local.get $4)
           )
          )
          (local.set $4
           (select
            (local.get $6)
            (local.get $4)
            (local.get $7)
           )
          )
          (local.set $5
           (select
            (local.get $10)
            (local.get $5)
            (local.get $7)
           )
          )
          ;;@ src/opus.c:100:0
          (local.set $10
           (i32.add
            (local.get $10)
            (i32.const 1)
           )
          )
          ;;@ src/opus.c:92:0
          (br_if $while-in13
           (i32.lt_s
            (local.get $10)
            (local.get $1)
           )
          )
          (local.set $7
           (local.get $5)
          )
          (local.get $10)
         )
        )
        (local.tee $7
         (local.get $5)
        )
       )
      )
      (local.set $10
       (if (result i32)
        ;;@ src/opus.c:103:0
        (local.get $8)
        (i32.const 0)
        (block (result i32)
         (local.set $6
          (f32.load
           (local.get $12)
          )
         )
         (local.set $6
          (f32.mul
           (local.get $11)
           (local.get $6)
          )
         )
         (f32.ge
          (local.get $6)
          (f32.const 0)
         )
        )
       )
      )
      ;;@ src/opus.c:106:0
      (local.set $6
       (f32.add
        (local.get $4)
        (f32.const -1)
       )
      )
      (local.set $4
       (f32.mul
        (local.get $4)
        (local.get $4)
       )
      )
      (local.set $4
       (f32.div
        (local.get $6)
        (local.get $4)
       )
      )
      ;;@ src/opus.c:110:0
      (local.set $6
       (f32.mul
        (local.get $4)
        (f32.const 2.399999914359796e-07)
       )
      )
      (local.set $4
       (f32.add
        (local.get $4)
        (local.get $6)
       )
      )
      ;;@ src/opus.c:111:0
      (local.set $13
       (f32.gt
        (local.get $11)
        (f32.const 0)
       )
      )
      ;;@ src/opus.c:112:0
      (local.set $11
       (f32.neg
        (local.get $4)
       )
      )
      ;;@ src/opus.c:111:0
      (local.set $11
       (select
        (local.get $11)
        (local.get $4)
        (local.get $13)
       )
      )
      (if
       ;;@ src/opus.c:114:0
       (i32.lt_s
        (local.get $8)
        (local.get $5)
       )
       (loop $while-in15
        ;;@ src/opus.c:115:0
        (local.set $13
         (i32.mul
          (local.get $2)
          (local.get $8)
         )
        )
        (local.set $13
         (i32.add
          (i32.shl
           (local.get $13)
           (i32.const 2)
          )
          (local.get $12)
         )
        )
        (local.set $4
         (f32.load
          (local.get $13)
         )
        )
        (local.set $6
         (f32.mul
          (local.get $11)
          (local.get $4)
         )
        )
        (local.set $6
         (f32.mul
          (local.get $4)
          (local.get $6)
         )
        )
        (local.set $4
         (f32.add
          (local.get $4)
          (local.get $6)
         )
        )
        (f32.store
         (local.get $13)
         (local.get $4)
        )
        ;;@ src/opus.c:114:0
        (local.set $8
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
        )
        (br_if $while-in15
         (i32.ne
          (local.get $5)
          (local.get $8)
         )
        )
       )
      )
      ;;@ src/opus.c:117:0
      (local.set $8
       (i32.gt_s
        (local.get $7)
        (i32.const 1)
       )
      )
      (if
       (i32.and
        (local.get $8)
        (local.get $10)
       )
       (block
        ;;@ src/opus.c:122:0
        (local.set $4
         (f32.load
          (local.get $12)
         )
        )
        (local.set $4
         (f32.sub
          (local.get $18)
          (local.get $4)
         )
        )
        ;;@ src/opus.c:123:0
        (local.set $6
         (f32.convert_i32_s
          (local.get $7)
         )
        )
        (local.set $15
         (f32.div
          (local.get $4)
          (local.get $6)
         )
        )
        (if
         ;;@ src/opus.c:124:0
         (i32.lt_s
          (local.get $9)
          (local.get $7)
         )
         (loop $while-in17
          ;;@ src/opus.c:126:0
          (local.set $4
           (f32.sub
            (local.get $4)
            (local.get $15)
           )
          )
          ;;@ src/opus.c:127:0
          (local.set $8
           (i32.mul
            (local.get $2)
            (local.get $9)
           )
          )
          (local.set $8
           (i32.add
            (i32.shl
             (local.get $8)
             (i32.const 2)
            )
            (local.get $12)
           )
          )
          (local.set $6
           (f32.load
            (local.get $8)
           )
          )
          (local.set $6
           (f32.add
            (local.get $4)
            (local.get $6)
           )
          )
          ;;@ src/opus.c:128:0
          (local.set $10
           (f32.gt
            (local.get $6)
            (f32.const 1)
           )
          )
          (local.set $16
           (select
            (f32.const 1)
            (local.get $6)
            (local.get $10)
           )
          )
          (local.set $13
           (f32.lt
            (local.get $16)
            (f32.const -1)
           )
          )
          (local.set $10
           (i32.or
            (local.get $10)
            (local.get $13)
           )
          )
          (local.set $16
           (select
            (f32.const -1)
            (f32.const 1)
            (local.get $13)
           )
          )
          (local.set $6
           (select
            (local.get $16)
            (local.get $6)
            (local.get $10)
           )
          )
          (f32.store
           (local.get $8)
           (local.get $6)
          )
          ;;@ src/opus.c:124:0
          (local.set $9
           (i32.add
            (local.get $9)
            (i32.const 1)
           )
          )
          (br_if $while-in17
           (i32.ne
            (local.get $7)
            (local.get $9)
           )
          )
         )
        )
       )
      )
      (if (result f32)
       ;;@ src/opus.c:132:0
       (i32.eq
        (local.get $1)
        (local.get $5)
       )
       (local.get $11)
       (block
        (local.set $9
         (local.get $5)
        )
        (br $while-in5)
       )
      )
     )
    )
   )
   ;;@ src/opus.c:135:0
   (f32.store
    (local.get $17)
    (local.get $4)
   )
   ;;@ src/opus.c:50:0
   (local.set $14
    (i32.add
     (local.get $14)
     (i32.const 1)
    )
   )
   (br_if $while-in1
    (i32.ne
     (local.get $2)
     (local.get $14)
    )
   )
  )
 )
 (func $_opus_packet_get_samples_per_frame (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  ;;@ src/opus.c:177:0
  (local.set $0
   (i32.load8_u
    (local.get $0)
   )
  )
  (local.set $0
   (i32.and
    (local.get $0)
    (i32.const 255)
   )
  )
  (local.set $2
   (i32.and
    (local.get $0)
    (i32.const 128)
   )
  )
  (if
   (local.get $2)
   (block
    ;;@ src/opus.c:179:0
    (local.set $0
     (i32.shr_u
      (local.get $0)
      (i32.const 3)
     )
    )
    (local.set $0
     (i32.and
      (local.get $0)
      (i32.const 3)
     )
    )
    ;;@ src/opus.c:180:0
    (local.set $0
     (i32.shl
      (local.get $1)
      (local.get $0)
     )
    )
    (local.set $0
     (i32.div_s
      (local.get $0)
      (i32.const 400)
     )
    )
    ;;@ src/opus.c:191:0
    (return
     (local.get $0)
    )
   )
  )
  ;;@ src/opus.c:181:0
  (local.set $2
   (i32.and
    (local.get $0)
    (i32.const 96)
   )
  )
  (if (result i32)
   (i32.eq
    (local.get $2)
    (i32.const 96)
   )
   (block (result i32)
    ;;@ src/opus.c:183:0
    (local.set $0
     (i32.and
      (local.get $0)
      (i32.const 8)
     )
    )
    (if
     (local.get $0)
     (local.set $0
      (i32.div_s
       (local.get $1)
       (i32.const 50)
      )
     )
     (local.set $0
      (i32.div_s
       (local.get $1)
       (i32.const 100)
      )
     )
    )
    ;;@ src/opus.c:191:0
    (local.get $0)
   )
   (block (result i32)
    ;;@ src/opus.c:185:0
    (local.set $0
     (i32.shr_u
      (local.get $0)
      (i32.const 3)
     )
    )
    (local.set $0
     (i32.and
      (local.get $0)
      (i32.const 3)
     )
    )
    (if
     ;;@ src/opus.c:186:0
     (i32.eq
      (local.get $0)
      (i32.const 3)
     )
     (block
      ;;@ src/opus.c:187:0
      (local.set $0
       (i32.mul
        (local.get $1)
        (i32.const 60)
       )
      )
      (local.set $0
       (i32.div_s
        (local.get $0)
        (i32.const 1000)
       )
      )
     )
     (block
      ;;@ src/opus.c:189:0
      (local.set $0
       (i32.shl
        (local.get $1)
        (local.get $0)
       )
      )
      (local.set $0
       (i32.div_s
        (local.get $0)
        (i32.const 100)
       )
      )
     )
    )
    ;;@ src/opus.c:191:0
    (local.get $0)
   )
  )
 )
 (func $_opus_packet_parse_impl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (if
   ;;@ src/opus.c:208:0
   (i32.or
    (i32.eqz
     (local.get $3)
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 0)
    )
   )
   ;;@ src/opus.c:347:0
   (return
    (i32.const -1)
   )
  )
  (block $folding-inner2
   ;;@ src/opus.c:210:0
   (br_if $folding-inner2
    (i32.eqz
     (local.get $1)
    )
   )
   (local.set $9
    (if (result i32)
     ;;@ src/opus.c:177:0
     (i32.and
      (local.tee $5
       (i32.and
        (local.tee $17
         (i32.load8_s
          (local.get $0)
         )
        )
        (i32.const 255)
       )
      )
      (i32.const 128)
     )
     ;;@ src/opus.c:180:0
     (i32.div_u
      (i32.shl
       (i32.const 48000)
       (i32.and
        (i32.shr_u
         (local.get $5)
         (i32.const 3)
        )
        (i32.const 3)
       )
      )
      (i32.const 400)
     )
     (if (result i32)
      ;;@ src/opus.c:181:0
      (i32.eq
       (i32.and
        (local.get $5)
        (i32.const 96)
       )
       (i32.const 96)
      )
      (select
       (i32.const 960)
       (i32.const 480)
       (i32.and
        (local.get $5)
        (i32.const 8)
       )
      )
      (if (result i32)
       ;;@ src/opus.c:186:0
       (i32.eq
        ;;@ src/opus.c:185:0
        (local.tee $5
         (i32.and
          (i32.shr_u
           (local.get $5)
           (i32.const 3)
          )
          (i32.const 3)
         )
        )
        (i32.const 3)
       )
       (i32.const 2880)
       ;;@ src/opus.c:189:0
       (i32.div_u
        (i32.shl
         (i32.const 48000)
         (local.get $5)
        )
        (i32.const 100)
       )
      )
     )
    )
   )
   ;;@ src/opus.c:216:0
   (local.set $5
    (i32.add
     (local.get $0)
     (i32.const 1)
    )
   )
   ;;@ src/opus.c:217:0
   (local.set $6
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
   (block $folding-inner1
    (block $folding-inner0
     (block $do-once9
      (block $__rjti$2
       (i32.add
        (i32.add
         (local.get $3)
         (i32.shl
          (block
           (block $switch-default
            (block $switch-case4
             (block $switch-case1
              (block $switch-case
               ;;@ src/opus.c:219:0
               (br_table $switch-case $switch-case1 $switch-case4 $switch-default
                (i32.and
                 (local.get $17)
                 (i32.const 3)
                )
               )
              )
              (local.set $7
               (i32.const 1)
              )
              (local.set $1
               (local.get $6)
              )
              (br $__rjti$2)
             )
             ;;@ src/opus.c:231:0
             (br_if $folding-inner2
              (i32.and
               (local.get $6)
               (i32.const 1)
              )
             )
             ;;@ src/opus.c:235:0
             (i32.store16
              (local.get $3)
              (local.tee $1
               (i32.shr_u
                (local.get $6)
                (i32.const 1)
               )
              )
             )
             (local.set $7
              (i32.const 2)
             )
             (br $__rjti$2)
            )
            ;;@ src/opus.c:157:0
            (br_if $folding-inner0
             ;;@ src/opus.c:155:0
             (i32.lt_s
              (local.get $1)
              (i32.const 2)
             )
            )
            ;;@ src/opus.c:159:0
            (local.set $7
             (local.tee $8
              (i32.load8_u
               (local.get $5)
              )
             )
            )
            (if
             (i32.lt_s
              (local.get $8)
              (i32.const 252)
             )
             (block
              ;;@ src/opus.c:161:0
              (local.set $9
               (i32.const 1)
              )
              (local.set $1
               (local.get $8)
              )
             )
             (block $do-once2
              (if
               ;;@ src/opus.c:163:0
               (i32.ge_s
                (local.get $1)
                (i32.const 3)
               )
               (block
                ;;@ src/opus.c:168:0
                (local.set $9
                 (i32.const 2)
                )
                (local.set $1
                 (i32.and
                  (i32.add
                   (i32.shl
                    (i32.load8_u offset=2
                     (local.get $0)
                    )
                    (i32.const 2)
                   )
                   (local.get $7)
                  )
                  (i32.const 65535)
                 )
                )
                (br $do-once2)
               )
              )
              ;;@ src/opus.c:165:0
              (br $folding-inner0)
             )
            )
            (i32.store16
             (local.get $3)
             (local.get $1)
            )
            ;;@ src/opus.c:243:0
            (br_if $folding-inner2
             (i32.lt_s
              ;;@ src/opus.c:242:0
              (local.tee $8
               (i32.sub
                (local.get $6)
                (local.get $9)
               )
              )
              ;;@ src/opus.c:243:0
              (local.tee $1
               (i32.shr_s
                (i32.shl
                 (local.get $1)
                 (i32.const 16)
                )
                (i32.const 16)
               )
              )
             )
            )
            ;;@ src/opus.c:245:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $9)
             )
            )
            ;;@ src/opus.c:246:0
            (local.set $7
             (i32.const 2)
            )
            (local.set $1
             (i32.sub
              (local.get $8)
              (local.get $1)
             )
            )
            (br $__rjti$2)
           )
           ;;@ src/opus.c:250:0
           (br_if $folding-inner2
            (i32.lt_s
             (local.get $1)
             (i32.const 2)
            )
           )
           ;;@ src/opus.c:255:0
           (br_if $folding-inner2
            (i32.or
             (i32.eqz
              ;;@ src/opus.c:254:0
              (local.tee $6
               (i32.and
                (local.tee $13
                 (i32.load8_u
                  (local.get $5)
                 )
                )
                (i32.const 63)
               )
              )
             )
             (i32.gt_u
              (i32.mul
               (local.get $6)
               (local.get $9)
              )
              (i32.const 5760)
             )
            )
           )
           ;;@ src/opus.c:253:0
           (local.set $5
            (i32.add
             (local.get $0)
             (i32.const 2)
            )
           )
           ;;@ src/opus.c:257:0
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const -2)
            )
           )
           (local.set $8
            (if (result i32)
             ;;@ src/opus.c:259:0
             (i32.and
              (local.get $13)
              (i32.const 64)
             )
             (block (result i32)
              (local.set $9
               (i32.const 0)
              )
              (loop $while-in
               (block $while-out
                (if
                 ;;@ src/opus.c:264:0
                 (i32.lt_s
                  (local.get $1)
                  (i32.const 1)
                 )
                 (block
                  (local.set $15
                   (i32.const -4)
                  )
                  (local.set $11
                   (i32.const 75)
                  )
                  (br $while-out)
                 )
                )
                ;;@ src/opus.c:266:0
                (local.set $8
                 (i32.add
                  (local.get $5)
                  (i32.const 1)
                 )
                )
                ;;@ src/opus.c:268:0
                (local.set $5
                 (i32.eq
                  ;;@ src/opus.c:266:0
                  (local.tee $10
                   (i32.load8_s
                    (local.get $5)
                   )
                  )
                  (i32.const -1)
                 )
                )
                ;;@ src/opus.c:269:0
                (local.set $10
                 (i32.sub
                  (i32.add
                   (local.get $1)
                   (i32.const -1)
                  )
                  ;;@ src/opus.c:268:0
                  (local.tee $1
                   (select
                    (i32.const 254)
                    (i32.and
                     (local.get $10)
                     (i32.const 255)
                    )
                    (local.get $5)
                   )
                  )
                 )
                )
                ;;@ src/opus.c:270:0
                (local.set $9
                 (i32.add
                  (local.get $1)
                  (local.get $9)
                 )
                )
                (if
                 (local.get $5)
                 (block
                  (local.set $5
                   (local.get $8)
                  )
                  (local.set $1
                   (local.get $10)
                  )
                  (br $while-in)
                 )
                )
               )
              )
              (if
               (i32.eq
                (local.get $11)
                (i32.const 75)
               )
               ;;@ src/opus.c:347:0
               (return
                (local.get $15)
               )
              )
              ;;@ src/opus.c:273:0
              (br_if $folding-inner2
               (i32.lt_s
                (local.get $10)
                (i32.const 0)
               )
              )
              (local.set $5
               (local.get $8)
              )
              (local.get $10)
             )
             (local.get $1)
            )
           )
           (if
            (i32.eqz
             (i32.and
              (local.get $13)
              (i32.const 128)
             )
            )
            (block
             ;;@ src/opus.c:296:0
             (br_if $folding-inner2
              (i32.ne
               (i32.mul
                ;;@ src/opus.c:295:0
                (local.tee $1
                 (i32.div_s
                  (local.get $8)
                  (local.get $6)
                 )
                )
                (local.get $6)
               )
               (local.get $8)
              )
             )
             (if
              ;;@ src/opus.c:298:0
              (i32.le_u
               (local.get $6)
               (i32.const 1)
              )
              (block
               (local.set $7
                (local.get $6)
               )
               (br $__rjti$2)
              )
             )
             (local.set $8
              (i32.add
               (local.get $6)
               (i32.const -1)
              )
             )
             (local.set $12
              (i32.and
               (local.get $1)
               (i32.const 65535)
              )
             )
             (loop $while-in6
              ;;@ src/opus.c:299:0
              (i32.store16
               (i32.add
                (i32.shl
                 (local.get $7)
                 (i32.const 1)
                )
                (local.get $3)
               )
               (local.get $12)
              )
              ;;@ src/opus.c:298:0
              (br_if $while-in6
               (i32.ne
                (local.get $8)
                (local.tee $7
                 (i32.add
                  (local.get $7)
                  (i32.const 1)
                 )
                )
               )
              )
             )
             (local.set $7
              (local.get $6)
             )
             (br $__rjti$2)
            )
           )
           ;;@ src/opus.c:281:0
           (local.set $13
            (i32.add
             (local.get $6)
             (i32.const -1)
            )
           )
           (if
            (i32.gt_u
             (local.get $6)
             (i32.const 1)
            )
            (block
             (local.set $10
              (i32.const 0)
             )
             (local.set $1
              (local.get $8)
             )
             ;;@ src/opus.c:157:0
             (br_if $folding-inner1
              (i32.eq
               (local.tee $1
                (loop $while-in8 (result i32)
                 (block $while-out7 (result i32)
                  ;;@ src/opus.c:283:0
                  (local.set $7
                   (i32.add
                    (i32.shl
                     (local.get $10)
                     (i32.const 1)
                    )
                    (local.get $3)
                   )
                  )
                  ;;@ src/opus.c:155:0
                  (drop
                   (br_if $while-out7
                    (i32.const 33)
                    (i32.lt_s
                     (local.get $1)
                     (i32.const 1)
                    )
                   )
                  )
                  ;;@ src/opus.c:159:0
                  (local.set $19
                   (local.tee $9
                    (i32.load8_u
                     (local.get $5)
                    )
                   )
                  )
                  (i32.store16
                   (local.get $7)
                   (local.tee $9
                    (if (result i32)
                     (i32.lt_s
                      (local.get $9)
                      (i32.const 252)
                     )
                     (block (result i32)
                      ;;@ src/opus.c:161:0
                      (local.set $11
                       (i32.const 1)
                      )
                      (local.get $9)
                     )
                     (block (result i32)
                      ;;@ src/opus.c:163:0
                      (drop
                       (br_if $while-out7
                        (i32.const 37)
                        (i32.lt_s
                         (local.get $1)
                         (i32.const 2)
                        )
                       )
                      )
                      ;;@ src/opus.c:168:0
                      (local.set $11
                       (i32.const 2)
                      )
                      (i32.and
                       (i32.add
                        (i32.shl
                         (i32.load8_u offset=1
                          (local.get $5)
                         )
                         (i32.const 2)
                        )
                        (local.get $19)
                       )
                       (i32.const 65535)
                      )
                     )
                    )
                   )
                  )
                  (if
                   ;;@ src/opus.c:285:0
                   (i32.lt_s
                    ;;@ src/opus.c:284:0
                    (local.tee $1
                     (i32.sub
                      (local.get $1)
                      (local.get $11)
                     )
                    )
                    ;;@ src/opus.c:285:0
                    (local.tee $9
                     (i32.shr_s
                      (i32.shl
                       (local.get $9)
                       (i32.const 16)
                      )
                      (i32.const 16)
                     )
                    )
                   )
                   (block
                    (local.set $15
                     (i32.const -4)
                    )
                    (br $while-out7
                     (i32.const 75)
                    )
                   )
                  )
                  ;;@ src/opus.c:287:0
                  (local.set $18
                   (i32.add
                    (local.get $5)
                    (local.get $11)
                   )
                  )
                  ;;@ src/opus.c:288:0
                  (local.set $12
                   (i32.sub
                    (i32.sub
                     (local.get $8)
                     (local.get $11)
                    )
                    (local.get $9)
                   )
                  )
                  (if (result i32)
                   ;;@ src/opus.c:281:0
                   (i32.lt_s
                    (local.tee $10
                     (i32.add
                      (local.get $10)
                      (i32.const 1)
                     )
                    )
                    (local.get $13)
                   )
                   (block
                    (local.set $8
                     (local.get $12)
                    )
                    (local.set $5
                     (local.get $18)
                    )
                    (br $while-in8)
                   )
                   (i32.const 41)
                  )
                 )
                )
               )
               (i32.const 33)
              )
             )
             ;;@ src/opus.c:165:0
             (br_if $folding-inner1
              (i32.eq
               (local.get $1)
               (i32.const 37)
              )
             )
             (if
              (i32.eq
               (local.get $1)
               (i32.const 41)
              )
              (block
               (if
                ;;@ src/opus.c:290:0
                (i32.ge_s
                 (local.get $12)
                 (i32.const 0)
                )
                (block
                 (local.set $7
                  (local.get $6)
                 )
                 (local.set $1
                  (local.get $12)
                 )
                 (local.set $5
                  (local.get $18)
                 )
                 (br $__rjti$2)
                )
               )
               (br $folding-inner2)
              )
              (if
               (i32.eq
                (local.get $1)
                (i32.const 75)
               )
               ;;@ src/opus.c:347:0
               (return
                (local.get $15)
               )
              )
             )
            )
            (block
             (local.set $7
              (local.get $6)
             )
             (local.set $1
              (local.get $8)
             )
             (br $__rjti$2)
            )
           )
           (br $do-once9)
          )
          (i32.const 1)
         )
        )
        (i32.const -2)
       )
      )
      ;;@ src/opus.c:325:0
      (br_if $folding-inner2
       (i32.gt_s
        (local.get $1)
        (i32.const 1275)
       )
      )
      ;;@ src/opus.c:327:0
      (i32.store16
       (i32.add
        (i32.shl
         (i32.add
          (local.get $7)
          (i32.const -1)
         )
         (i32.const 1)
        )
        (local.get $3)
       )
       (local.get $1)
      )
      (local.set $14
       (local.get $7)
      )
      (local.set $16
       (local.get $5)
      )
     )
     (if
      ;;@ src/opus.c:330:0
      (local.get $4)
      ;;@ src/opus.c:331:0
      (i32.store
       (local.get $4)
       (i32.sub
        (local.get $16)
        (local.get $0)
       )
      )
     )
     (if
      ;;@ src/opus.c:333:0
      (local.get $14)
      (block
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in16
        ;;@ src/opus.c:337:0
        (local.set $16
         (i32.add
          (i32.load16_s
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 1)
            )
            (local.get $3)
           )
          )
          (local.get $16)
         )
        )
        ;;@ src/opus.c:333:0
        (br_if $while-in16
         (i32.ne
          (local.get $14)
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (if
      ;;@ src/opus.c:343:0
      (i32.eqz
       (local.get $2)
      )
      ;;@ src/opus.c:347:0
      (return
       (local.get $14)
      )
     )
     ;;@ src/opus.c:344:0
     (i32.store8
      (local.get $2)
      (local.get $17)
     )
     ;;@ src/opus.c:347:0
     (return
      (local.get $14)
     )
    )
    (i32.store16
     (local.get $3)
     (i32.const -1)
    )
    (br $folding-inner2)
   )
   (i32.store16
    (local.get $7)
    (i32.const -1)
   )
  )
  (i32.const -4)
 )
 (func $_opus_decoder_init (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (block $folding-inner2
   (block $folding-inner1
    (block $label$break$L1
     (if
      (i32.lt_s
       (local.get $1)
       (i32.const 16000)
      )
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 12000)
       )
       (br_if $label$break$L1
        (i32.eqz
         (i32.sub
          (local.get $1)
          (i32.const 8000)
         )
        )
       )
       (br_if $label$break$L1
        (i32.eqz
         (i32.sub
          (local.get $1)
          (i32.const 12000)
         )
        )
       )
      )
      (block
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 24000)
        )
        (block
         (br_if $label$break$L1
          (i32.eqz
           (i32.sub
            (local.get $1)
            (i32.const 16000)
           )
          )
         )
         (br $folding-inner1)
        )
       )
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 48000)
        )
        (br_if $label$break$L1
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 24000)
          )
         )
        )
        (br_if $label$break$L1
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 48000)
          )
         )
        )
       )
      )
     )
     (br $folding-inner1)
    )
    ;;@ src/opus_decoder.c:123:0
    (br_if $folding-inner1
     (i32.gt_u
      (i32.add
       (local.get $2)
       (i32.const -1)
      )
      (i32.const 1)
     )
    )
    ;;@ src/opus_decoder.c:108:0
    (i32.store offset=8
     (local.get $3)
     (i32.const 8552)
    )
    ;;@ src/opus_decoder.c:126:0
    (drop
     (call $_memset
      (local.get $0)
      (i32.const 0)
      (block (result i32)
       ;;@ src/opus_decoder.c:111:0
       (i32.store offset=8
        (local.get $3)
        (i32.and
         (i32.add
          (i32.load offset=8
           (local.get $3)
          )
          (i32.const 3)
         )
         (i32.const -4)
        )
       )
       ;;@ src/opus_decoder.c:113:0
       (i32.add
        (i32.load offset=8
         (local.get $3)
        )
        (i32.add
         ;;@ celt/celt_decoder.c:147:0
         (i32.add
          (i32.shl
           (i32.load
            (i32.const 36576)
           )
           (i32.const 5)
          )
          (i32.mul
           (local.get $2)
           (i32.add
            (i32.shl
             (i32.load
              (i32.const 36572)
             )
             (i32.const 2)
            )
            (i32.const 8288)
           )
          )
         )
         (i32.const 180)
        )
       )
      )
     )
    )
    ;;@ src/opus_decoder.c:128:0
    (i32.store offset=4
     (local.get $3)
     (i32.const 8552)
    )
    ;;@ src/opus_decoder.c:132:0
    (i32.store offset=4
     (local.get $3)
     ;;@ src/opus_private.h:162:0
     (local.tee $4
      (i32.and
       (i32.add
        (i32.load offset=4
         (local.get $3)
        )
        (i32.const 3)
       )
       (i32.const -4)
      )
     )
    )
    ;;@ src/opus_decoder.c:133:0
    (i32.store offset=4
     (local.get $0)
     (i32.const 88)
    )
    ;;@ src/opus_decoder.c:134:0
    (i32.store
     (local.get $0)
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 88)
      )
     )
    )
    ;;@ src/opus_decoder.c:137:0
    (i32.store offset=8
     (local.get $0)
     (local.get $2)
    )
    (i32.store offset=48
     (local.get $0)
     (local.get $2)
    )
    ;;@ src/opus_decoder.c:139:0
    (i32.store offset=12
     (local.get $0)
     (local.get $1)
    )
    ;;@ src/opus_decoder.c:140:0
    (i32.store offset=24
     (local.get $0)
     (local.get $1)
    )
    ;;@ src/opus_decoder.c:141:0
    (i32.store offset=16
     (local.get $0)
     (local.get $2)
    )
    ;;@ src/opus_decoder.c:145:0
    (br_if $folding-inner2
     (call $_silk_InitDecoder
      (i32.add
       (local.get $0)
       (i32.const 88)
      )
     )
    )
    ;;@ src/opus_decoder.c:149:0
    (br_if $folding-inner2
     (call $_celt_decoder_init
      ;;@ src/opus_decoder.c:136:0
      (local.tee $4
       (i32.add
        (local.get $0)
        (local.get $4)
       )
      )
      (local.get $1)
      (local.get $2)
     )
    )
    ;;@ src/opus_decoder.c:151:0
    (i32.store
     (local.get $3)
     (i32.const 0)
    )
    (drop
     (call $_opus_custom_decoder_ctl
      (local.get $4)
      (i32.const 10016)
      (local.get $3)
     )
    )
    ;;@ src/opus_decoder.c:153:0
    (i32.store offset=60
     (local.get $0)
     (i32.const 0)
    )
    ;;@ src/opus_decoder.c:154:0
    (i32.store
     (i32.sub
      (local.get $0)
      (i32.const -64)
     )
     (i32.div_u
      (local.get $1)
      (i32.const 400)
     )
    )
    ;;@ src/opus_decoder.c:155:0
    (i32.store offset=44
     (local.get $0)
     (i32.const 0)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    ;;@ src/opus_decoder.c:157:0
    (return
     (i32.const 0)
    )
   )
   (global.set $STACKTOP
    (local.get $3)
   )
   (return
    (i32.const -1)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const -3)
 )
 (func $_opus_decoder_create (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (block $__rjto$1 (result i32)
    (block $__rjti$1
     (if
      (i32.lt_s
       (local.get $0)
       (i32.const 16000)
      )
      (if
       (i32.lt_s
        (local.get $0)
        (i32.const 12000)
       )
       (br_if $__rjti$1
        (i32.sub
         (local.get $0)
         (i32.const 8000)
        )
       )
       (br_if $__rjti$1
        (i32.sub
         (local.get $0)
         (i32.const 12000)
        )
       )
      )
      (block $__rjti$0
       (if
        (i32.lt_s
         (local.get $0)
         (i32.const 24000)
        )
        (block
         (br_if $__rjti$1
          (i32.sub
           (local.get $0)
           (i32.const 16000)
          )
         )
         (br $__rjti$0)
        )
       )
       (if
        (i32.lt_s
         (local.get $0)
         (i32.const 48000)
        )
        (br_if $__rjti$1
         (i32.sub
          (local.get $0)
          (i32.const 24000)
         )
        )
        (br_if $__rjti$1
         (i32.sub
          (local.get $0)
          (i32.const 48000)
         )
        )
       )
      )
     )
     ;;@ src/opus_decoder.c:164:0
     (br_if $__rjti$1
      (i32.gt_u
       (i32.add
        (local.get $1)
        (i32.const -1)
       )
       (i32.const 1)
      )
     )
     ;;@ src/opus_decoder.c:108:0
     (i32.store
      (local.get $3)
      (i32.const 8552)
     )
     (if
      ;;@ src/opus_decoder.c:171:0
      (i32.eqz
       ;;@ ./celt/os_support.h:49:0
       (local.tee $4
        (call $_malloc
         (block (result i32)
          ;;@ src/opus_decoder.c:111:0
          (i32.store
           (local.get $3)
           (i32.and
            (i32.add
             (i32.load
              (local.get $3)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
          ;;@ src/opus_decoder.c:113:0
          (i32.add
           (i32.load
            (local.get $3)
           )
           (i32.add
            ;;@ celt/celt_decoder.c:147:0
            (i32.add
             (i32.shl
              (i32.load
               (i32.const 36576)
              )
              (i32.const 5)
             )
             (i32.mul
              (local.get $1)
              (i32.add
               (i32.shl
                (i32.load
                 (i32.const 36572)
                )
                (i32.const 2)
               )
               (i32.const 8288)
              )
             )
            )
            (i32.const 180)
           )
          )
         )
        )
       )
      )
      (block
       ;;@ src/opus_decoder.c:173:0
       (drop
        (br_if $__rjto$1
         (i32.const 0)
         (i32.eqz
          (local.get $2)
         )
        )
       )
       ;;@ src/opus_decoder.c:174:0
       (i32.store
        (local.get $2)
        (i32.const -7)
       )
       (br $__rjto$1
        (i32.const 0)
       )
      )
     )
     ;;@ src/opus_decoder.c:177:0
     (local.set $0
      (call $_opus_decoder_init
       (local.get $4)
       (local.get $0)
       (local.get $1)
      )
     )
     (if
      ;;@ src/opus_decoder.c:178:0
      (local.get $2)
      ;;@ src/opus_decoder.c:179:0
      (i32.store
       (local.get $2)
       (local.get $0)
      )
     )
     (br $__rjto$1
      (if (result i32)
       ;;@ src/opus_decoder.c:180:0
       (local.get $0)
       (block (result i32)
        ;;@ ./celt/os_support.h:66:0
        (call $_free
         (local.get $4)
        )
        (i32.const 0)
       )
       (local.get $4)
      )
     )
    )
    (if
     ;;@ src/opus_decoder.c:166:0
     (local.get $2)
     ;;@ src/opus_decoder.c:167:0
     (i32.store
      (local.get $2)
      (i32.const -1)
     )
    )
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  ;;@ src/opus_decoder.c:186:0
  (local.get $0)
 )
 (func $_opus_decode_native (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   ;;@ src/opus_decoder.c:84:0
   (i32.ge_u
    (i32.add
     (local.tee $9
      (i32.load offset=8
       (local.get $0)
      )
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 44378)
    (i32.const 44435)
    (i32.const 84)
   )
  )
  (local.set $16
   (i32.add
    (local.get $8)
    (i32.const 96)
   )
  )
  (local.set $13
   (i32.add
    (local.get $8)
    (i32.const 100)
   )
  )
  (block $label$break$L4
   (if
    ;;@ src/opus_decoder.c:85:0
    (i32.lt_s
     (local.tee $7
      (i32.load offset=12
       (local.get $0)
      )
     )
     (i32.const 16000)
    )
    (if
     (i32.lt_s
      (local.get $7)
      (i32.const 12000)
     )
     (br_if $label$break$L4
      (i32.eqz
       (i32.sub
        (local.get $7)
        (i32.const 8000)
       )
      )
     )
     (br_if $label$break$L4
      (i32.eqz
       (i32.sub
        (local.get $7)
        (i32.const 12000)
       )
      )
     )
    )
    (block
     (if
      (i32.lt_s
       (local.get $7)
       (i32.const 24000)
      )
      (block
       (br_if $label$break$L4
        (i32.eqz
         (i32.sub
          (local.get $7)
          (i32.const 16000)
         )
        )
       )
       (call $_celt_fatal
        (i32.const 44454)
        (i32.const 44435)
        (i32.const 85)
       )
      )
     )
     (if
      (i32.lt_s
       (local.get $7)
       (i32.const 48000)
      )
      (br_if $label$break$L4
       (i32.eqz
        (i32.sub
         (local.get $7)
         (i32.const 24000)
        )
       )
      )
      (br_if $label$break$L4
       (i32.eqz
        (i32.sub
         (local.get $7)
         (i32.const 48000)
        )
       )
      )
     )
    )
   )
   (call $_celt_fatal
    (i32.const 44454)
    (i32.const 44435)
    (i32.const 85)
   )
  )
  (if
   ;;@ src/opus_decoder.c:86:0
   (i32.ne
    (i32.load offset=24
     (local.get $0)
    )
    (local.get $7)
   )
   (call $_celt_fatal
    (i32.const 44563)
    (i32.const 44435)
    (i32.const 86)
   )
  )
  (block $label$break$L25
   (if
    ;;@ src/opus_decoder.c:87:0
    (i32.lt_s
     (local.tee $11
      (i32.load offset=28
       (local.get $0)
      )
     )
     (i32.const 12000)
    )
    (if
     (i32.lt_s
      (local.get $11)
      (i32.const 8000)
     )
     (br_if $label$break$L25
      (i32.eqz
       (local.get $11)
      )
     )
     (br_if $label$break$L25
      (i32.eqz
       (i32.sub
        (local.get $11)
        (i32.const 8000)
       )
      )
     )
    )
    (if
     (i32.lt_s
      (local.get $11)
      (i32.const 16000)
     )
     (br_if $label$break$L25
      (i32.eqz
       (i32.sub
        (local.get $11)
        (i32.const 12000)
       )
      )
     )
     (br_if $label$break$L25
      (i32.eqz
       (i32.sub
        (local.get $11)
        (i32.const 16000)
       )
      )
     )
    )
   )
   (call $_celt_fatal
    (i32.const 44621)
    (i32.const 44435)
    (i32.const 87)
   )
  )
  (if
   ;;@ src/opus_decoder.c:88:0
   (i32.ne
    (i32.load offset=16
     (local.get $0)
    )
    (local.get $9)
   )
   (call $_celt_fatal
    (i32.const 44815)
    (i32.const 44435)
    (i32.const 88)
   )
  )
  (if
   ;;@ src/opus_decoder.c:89:0
   (i32.ge_u
    (i32.load offset=20
     (local.get $0)
    )
    (i32.const 3)
   )
   (call $_celt_fatal
    (i32.const 44877)
    (i32.const 44435)
    (i32.const 89)
   )
  )
  (block $switch25
   (block $switch-default31
    ;;@ src/opus_decoder.c:90:0
    (br_table $switch25 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch25 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch25 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch25 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch-default31 $switch25 $switch-default31
     (i32.load offset=32
      (local.get $0)
     )
    )
   )
   (call $_celt_fatal
    (i32.const 45015)
    (i32.const 44435)
    (i32.const 90)
   )
  )
  (if
   ;;@ src/opus_decoder.c:92:0
   (i32.le_s
    (local.tee $9
     (i32.load offset=44
      (local.get $0)
     )
    )
    (i32.const -1)
   )
   (call $_celt_fatal
    (i32.const 45224)
    (i32.const 44435)
    (i32.const 92)
   )
  )
  (if
   ;;@ src/opus_decoder.c:93:0
   (local.get $9)
   (call $_celt_fatal
    (i32.const 45256)
    (i32.const 44435)
    (i32.const 93)
   )
  )
  (if
   ;;@ src/opus_decoder.c:95:0
   (i32.ge_u
    (i32.add
     (i32.load offset=48
      (local.get $0)
     )
     (i32.const -1)
    )
    (i32.const 2)
   )
   (call $_celt_fatal
    (i32.const 45300)
    (i32.const 44435)
    (i32.const 95)
   )
  )
  (block $folding-inner3
   (block $folding-inner2
    (block $folding-inner1
     (block $folding-inner0
      ;;@ src/opus_decoder.c:637:0
      (br_if $folding-inner0
       (i32.gt_u
        (local.get $5)
        (i32.const 1)
       )
      )
      (if
       ;;@ src/opus_decoder.c:640:0
       (i32.or
        (i32.or
         (local.tee $11
          (i32.ne
           (local.get $5)
           (i32.const 0)
          )
         )
         (local.tee $9
          (i32.eqz
           (local.get $2)
          )
         )
        )
        (local.tee $5
         (i32.eqz
          (local.get $1)
         )
        )
       )
       (br_if $folding-inner0
        (i32.rem_s
         (local.get $4)
         (i32.div_u
          (local.get $7)
          (i32.const 400)
         )
        )
       )
      )
      (if
       ;;@ src/opus_decoder.c:642:0
       (i32.or
        (local.get $5)
        (local.get $9)
       )
       (block
        ;;@ src/opus_decoder.c:648:0
        (br_if $folding-inner1
         (i32.lt_s
          ;;@ src/opus_decoder.c:647:0
          (local.tee $1
           (call $_opus_decode_frame
            (local.get $0)
            (i32.const 0)
            (i32.const 0)
            (local.get $3)
            (local.get $4)
            (i32.const 0)
           )
          )
          (i32.const 0)
         )
        )
        (local.set $12
         (loop $while-in (result i32)
          (if (result i32)
           (i32.lt_s
            (local.get $1)
            (local.get $4)
           )
           (block (result i32)
            ;;@ src/opus_decoder.c:648:0
            (local.set $5
             (i32.lt_s
              ;;@ src/opus_decoder.c:647:0
              (local.tee $6
               (call $_opus_decode_frame
                (local.get $0)
                (i32.const 0)
                (i32.const 0)
                (i32.add
                 (i32.shl
                  (i32.mul
                   (i32.load offset=8
                    (local.get $0)
                   )
                   (local.get $1)
                  )
                  (i32.const 2)
                 )
                 (local.get $3)
                )
                (i32.sub
                 (local.get $4)
                 (local.get $1)
                )
                (i32.const 0)
               )
              )
              (i32.const 0)
             )
            )
            ;;@ src/opus_decoder.c:648:0
            (local.set $2
             (i32.add
              (select
               (i32.const 0)
               (local.get $6)
               (local.get $5)
              )
              (local.get $1)
             )
            )
            (if (result i32)
             (local.get $5)
             (block (result i32)
              (local.set $10
               (i32.const 60)
              )
              (local.get $6)
             )
             (block
              (local.set $1
               (local.get $2)
              )
              (br $while-in)
             )
            )
           )
           (i32.const 0)
          )
         )
        )
        (br_if $folding-inner2
         (i32.eq
          (local.get $10)
          (i32.const 60)
         )
        )
        (if
         ;;@ src/opus_decoder.c:652:0
         (i32.ne
          (local.get $1)
          (local.get $4)
         )
         (call $_celt_fatal
          (i32.const 45371)
          (i32.const 44435)
          (i32.const 652)
         )
        )
        ;;@ src/opus_decoder.c:655:0
        (br $folding-inner3)
       )
      )
      ;;@ src/opus_decoder.c:657:0
      (br_if $folding-inner0
       (i32.lt_s
        (local.get $2)
        (i32.const 0)
       )
      )
      ;;@ src/opus_decoder.c:208:0
      (local.set $14
       (i32.eqz
        (i32.and
         (local.tee $10
          (i32.load8_u
           (local.get $1)
          )
         )
         (i32.const 128)
        )
       )
      )
      ;;@ src/opus_decoder.c:214:0
      (local.set $9
       (select
        (i32.const 1001)
        (i32.const 1000)
        ;;@ src/opus_decoder.c:211:0
        (local.tee $5
         (i32.eq
          (i32.and
           (local.get $10)
           (i32.const 96)
          )
          (i32.const 96)
         )
        )
       )
      )
      (local.set $10
       (if (result i32)
        ;;@ src/opus_decoder.c:208:0
        (local.get $14)
        (if (result i32)
         (local.get $5)
         ;;@ src/opus_decoder.c:982:0
         (i32.or
          (i32.and
           (i32.shr_u
            (local.get $10)
            (i32.const 4)
           )
           (i32.const 1)
          )
          (i32.const 1104)
         )
         ;;@ src/opus_decoder.c:985:0
         (i32.add
          (i32.and
           (i32.shr_u
            (local.get $10)
            (i32.const 5)
           )
           (i32.const 3)
          )
          (i32.const 1101)
         )
        )
        ;;@ src/opus_decoder.c:978:0
        (select
         (i32.add
          ;;@ src/opus_decoder.c:977:0
          (local.tee $5
           (i32.and
            (i32.shr_u
             (local.get $10)
             (i32.const 5)
            )
            (i32.const 3)
           )
          )
          (i32.const 1102)
         )
         (i32.const 1101)
         (local.get $5)
        )
       )
      )
      (local.set $14
       (select
        (local.get $9)
        (i32.const 1002)
        (local.get $14)
       )
      )
      ;;@ src/opus_decoder.c:662:0
      (local.set $7
       (call $_opus_packet_get_samples_per_frame
        (local.get $1)
        (local.get $7)
       )
      )
      ;;@ src/opus_decoder.c:992:0
      (local.set $9
       (i32.and
        (i32.shr_s
         (i32.shl
          (i32.add
           (i32.and
            (i32.shr_u
             (i32.load8_u
              (local.get $1)
             )
             (i32.const 2)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
          (i32.const 24)
         )
         (i32.const 24)
        )
        (i32.const 255)
       )
      )
      (if
       ;;@ src/opus_decoder.c:667:0
       (i32.lt_s
        ;;@ src/opus_decoder.c:665:0
        (local.tee $13
         (call $_opus_packet_parse_impl
          (local.get $1)
          (local.get $2)
          (local.get $13)
          (local.get $8)
          (local.get $16)
         )
        )
        (i32.const 0)
       )
       (block
        (global.set $STACKTOP
         (local.get $8)
        )
        ;;@ src/opus_decoder.c:738:0
        (return
         (local.get $13)
        )
       )
      )
      ;;@ src/opus_decoder.c:670:0
      (local.set $1
       (i32.add
        (i32.load
         (local.get $16)
        )
        (local.get $1)
       )
      )
      (return
       (if (result i32)
        (local.get $11)
        (block (result i32)
         (if
          ;;@ src/opus_decoder.c:677:0
          (i32.eqz
           (i32.or
            (i32.eq
             (local.get $14)
             (i32.const 1002)
            )
            (i32.gt_s
             (local.get $7)
             (local.get $4)
            )
           )
          )
          (if
           (i32.ne
            (i32.load offset=56
             (local.get $0)
            )
            (i32.const 1002)
           )
           (block
            ;;@ src/opus_decoder.c:680:0
            (local.set $2
             (i32.load offset=72
              (local.get $0)
             )
            )
            (if
             ;;@ src/opus_decoder.c:681:0
             (local.tee $12
              (i32.sub
               (local.get $4)
               (local.get $7)
              )
             )
             (if
              ;;@ src/opus_decoder.c:684:0
              (i32.lt_s
               ;;@ src/opus_decoder.c:683:0
               (local.tee $5
                (call $_opus_decode_native
                 (local.get $0)
                 (i32.const 0)
                 (i32.const 0)
                 (local.get $3)
                 (local.get $12)
                 (i32.const 0)
                 (local.get $6)
                )
               )
               (i32.const 0)
              )
              (block
               ;;@ src/opus_decoder.c:686:0
               (i32.store offset=72
                (local.get $0)
                (local.get $2)
               )
               (global.set $STACKTOP
                (local.get $8)
               )
               ;;@ src/opus_decoder.c:738:0
               (return
                (local.get $5)
               )
              )
              (if
               (i32.ne
                (local.get $5)
                (local.get $12)
               )
               ;;@ src/opus_decoder.c:689:0
               (call $_celt_fatal
                (i32.const 45413)
                (i32.const 44435)
                (i32.const 689)
               )
              )
             )
            )
            ;;@ src/opus_decoder.c:692:0
            (i32.store offset=56
             (local.get $0)
             (local.get $14)
            )
            ;;@ src/opus_decoder.c:693:0
            (i32.store offset=52
             (local.get $0)
             (local.get $10)
            )
            ;;@ src/opus_decoder.c:694:0
            (i32.store
             (i32.sub
              (local.get $0)
              (i32.const -64)
             )
             (local.get $7)
            )
            ;;@ src/opus_decoder.c:695:0
            (i32.store offset=48
             (local.get $0)
             (local.get $9)
            )
            ;;@ src/opus_decoder.c:698:0
            (br_if $folding-inner1
             (i32.lt_s
              ;;@ src/opus_decoder.c:696:0
              (local.tee $1
               (call $_opus_decode_frame
                (local.get $0)
                (local.get $1)
                (i32.load16_s
                 (local.get $8)
                )
                (i32.add
                 (i32.shl
                  (i32.mul
                   (i32.load offset=8
                    (local.get $0)
                   )
                   (local.get $12)
                  )
                  (i32.const 2)
                 )
                 (local.get $3)
                )
                (local.get $7)
                (i32.const 1)
               )
              )
              (i32.const 0)
             )
            )
            ;;@ src/opus_decoder.c:703:0
            (br $folding-inner3)
           )
          )
         )
         ;;@ src/opus_decoder.c:678:0
         (local.set $0
          (call $_opus_decode_native
           (local.get $0)
           (i32.const 0)
           (i32.const 0)
           (local.get $3)
           (local.get $4)
           (i32.const 0)
           (local.get $6)
          )
         )
         (global.set $STACKTOP
          (local.get $8)
         )
         ;;@ src/opus_decoder.c:738:0
         (local.get $0)
        )
        (block (result i32)
         (if
          ;;@ src/opus_decoder.c:708:0
          (i32.gt_s
           (i32.mul
            (local.get $7)
            (local.get $13)
           )
           (local.get $4)
          )
          (block
           (global.set $STACKTOP
            (local.get $8)
           )
           ;;@ src/opus_decoder.c:738:0
           (return
            (i32.const -2)
           )
          )
         )
         ;;@ src/opus_decoder.c:712:0
         (i32.store offset=56
          (local.get $0)
          (local.get $14)
         )
         ;;@ src/opus_decoder.c:713:0
         (i32.store offset=52
          (local.get $0)
          (local.get $10)
         )
         ;;@ src/opus_decoder.c:714:0
         (i32.store
          (i32.sub
           (local.get $0)
           (i32.const -64)
          )
          (local.get $7)
         )
         ;;@ src/opus_decoder.c:715:0
         (i32.store offset=48
          (local.get $0)
          (local.get $9)
         )
         (if
          ;;@ src/opus_decoder.c:718:0
          (i32.gt_s
           (local.get $13)
           (i32.const 0)
          )
          (block $label$break$L116
           (local.set $5
            (i32.const 0)
           )
           (local.set $2
            (i32.const 0)
           )
           (loop $while-in37
            (block $while-out36
             (if
              ;;@ src/opus_decoder.c:722:0
              (i32.lt_s
               ;;@ src/opus_decoder.c:721:0
               (local.tee $9
                (call $_opus_decode_frame
                 (local.get $0)
                 (local.get $1)
                 (i32.load16_s
                  (local.tee $11
                   (i32.add
                    (i32.shl
                     (local.get $5)
                     (i32.const 1)
                    )
                    (local.get $8)
                   )
                  )
                 )
                 (i32.add
                  (i32.shl
                   (i32.mul
                    (i32.load offset=8
                     (local.get $0)
                    )
                    (local.get $2)
                   )
                   (i32.const 2)
                  )
                  (local.get $3)
                 )
                 (i32.sub
                  (local.get $4)
                  (local.get $2)
                 )
                 (i32.const 0)
                )
               )
               (i32.const 0)
              )
              (block
               (local.set $12
                (local.get $9)
               )
               (local.set $10
                (i32.const 60)
               )
               (br $while-out36)
              )
             )
             (if
              ;;@ src/opus_decoder.c:724:0
              (i32.ne
               (local.get $7)
               (local.get $9)
              )
              (block
               (local.set $10
                (i32.const 55)
               )
               (br $while-out36)
              )
             )
             ;;@ src/opus_decoder.c:725:0
             (local.set $1
              (i32.add
               (i32.load16_s
                (local.get $11)
               )
               (local.get $1)
              )
             )
             ;;@ src/opus_decoder.c:726:0
             (local.set $2
              (i32.add
               (local.get $2)
               (local.get $7)
              )
             )
             ;;@ src/opus_decoder.c:718:0
             (br_if $while-in37
              (i32.lt_s
               (local.tee $5
                (i32.add
                 (local.get $5)
                 (i32.const 1)
                )
               )
               (local.get $13)
              )
             )
             (local.set $15
              (local.get $2)
             )
             (br $label$break$L116)
            )
           )
           (if
            (i32.eq
             (local.get $10)
             (i32.const 55)
            )
            ;;@ src/opus_decoder.c:724:0
            (call $_celt_fatal
             (i32.const 45465)
             (i32.const 44435)
             (i32.const 724)
            )
            (br_if $folding-inner2
             (i32.eq
              (local.get $10)
              (i32.const 60)
             )
            )
           )
          )
         )
         ;;@ src/opus_decoder.c:728:0
         (i32.store offset=72
          (local.get $0)
          (local.get $15)
         )
         (if
          ;;@ src/opus_decoder.c:732:0
          (local.get $6)
          ;;@ src/opus_decoder.c:733:0
          (call $_opus_pcm_soft_clip
           (local.get $3)
           (local.get $15)
           (i32.load offset=8
            (local.get $0)
           )
           (i32.add
            (local.get $0)
            (i32.const 76)
           )
          )
          (block
           ;;@ src/opus_decoder.c:735:0
           (f32.store offset=80
            (local.get $0)
            (f32.const 0)
           )
           (f32.store offset=76
            (local.get $0)
            (f32.const 0)
           )
          )
         )
         (global.set $STACKTOP
          (local.get $8)
         )
         ;;@ src/opus_decoder.c:738:0
         (local.get $15)
        )
       )
      )
     )
     (global.set $STACKTOP
      (local.get $8)
     )
     (return
      (i32.const -1)
     )
    )
    (global.set $STACKTOP
     (local.get $8)
    )
    (return
     (local.get $1)
    )
   )
   (global.set $STACKTOP
    (local.get $8)
   )
   (return
    (local.get $12)
   )
  )
  (i32.store offset=72
   (local.get $0)
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $8)
  )
  (local.get $4)
 )
 (func $_opus_decode_frame (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 f32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 f32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 f64)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (local.set $37
   (i32.add
    (local.get $11)
    (i32.const 80)
   )
  )
  (local.set $38
   (i32.add
    (local.get $11)
    (i32.const 72)
   )
  )
  (local.set $46
   (i32.sub
    (local.get $11)
    (i32.const -64)
   )
  )
  (local.set $39
   (i32.add
    (local.get $11)
    (i32.const 56)
   )
  )
  (local.set $40
   (i32.add
    (local.get $11)
    (i32.const 48)
   )
  )
  (local.set $47
   (i32.add
    (local.get $11)
    (i32.const 40)
   )
  )
  (local.set $31
   (i32.add
    (local.get $11)
    (i32.const 32)
   )
  )
  (local.set $41
   (i32.add
    (local.get $11)
    (i32.const 24)
   )
  )
  (local.set $42
   (i32.add
    (local.get $11)
    (i32.const 16)
   )
  )
  (local.set $43
   (i32.add
    (local.get $11)
    (i32.const 8)
   )
  )
  (local.set $19
   (i32.add
    (local.tee $26
     (local.get $11)
    )
    (i32.const 96)
   )
  )
  (local.set $13
   (i32.add
    (local.get $11)
    (i32.const 88)
   )
  )
  (local.set $44
   (i32.add
    (local.get $11)
    (i32.const 84)
   )
  )
  ;;@ src/opus_decoder.c:249:0
  (i32.store offset=84
   (local.get $11)
   (i32.const 0)
  )
  ;;@ src/opus_decoder.c:253:0
  (local.set $11
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $27
   (i32.add
    (local.get $0)
    (local.get $11)
   )
  )
  ;;@ src/opus_decoder.c:254:0
  (local.set $11
   (i32.load
    (local.get $0)
   )
  )
  (local.set $20
   (i32.add
    (local.get $0)
    (local.get $11)
   )
  )
  ;;@ src/opus_decoder.c:255:0
  (local.set $28
   (i32.load offset=12
    (local.get $0)
   )
  )
  (local.set $25
   (i32.div_s
    (local.get $28)
    (i32.const 50)
   )
  )
  ;;@ src/opus_decoder.c:256:0
  (local.set $12
   (i32.shr_s
    (local.get $25)
    (i32.const 1)
   )
  )
  ;;@ src/opus_decoder.c:257:0
  (local.set $23
   (i32.shr_s
    (local.get $25)
    (i32.const 2)
   )
  )
  ;;@ src/opus_decoder.c:258:0
  (local.set $24
   (i32.shr_s
    (local.get $25)
    (i32.const 3)
   )
  )
  (if
   ;;@ src/opus_decoder.c:259:0
   (i32.gt_s
    (local.get $24)
    (local.get $4)
   )
   (block
    (global.set $STACKTOP
     (local.get $26)
    )
    ;;@ src/opus_decoder.c:624:0
    (return
     (i32.const -2)
    )
   )
  )
  ;;@ src/opus_decoder.c:265:0
  (local.set $11
   (i32.div_s
    (local.get $28)
    (i32.const 25)
   )
  )
  (local.set $11
   (i32.mul
    (local.get $11)
    (i32.const 3)
   )
  )
  (local.set $6
   (i32.gt_s
    (local.get $11)
    (local.get $4)
   )
  )
  (local.set $4
   (select
    (local.get $4)
    (local.get $11)
    (local.get $6)
   )
  )
  (block $folding-inner0
   (block $__rjto$4
    (block $__rjti$4
     (block $__rjti$3
      (local.set $1
       (if (result i32)
        ;;@ src/opus_decoder.c:267:0
        (i32.lt_s
         (local.get $2)
         (i32.const 2)
        )
        (block
         ;;@ src/opus_decoder.c:271:0
         (local.set $1
          (i32.sub
           (local.get $0)
           (i32.const -64)
          )
         )
         (local.set $1
          (i32.load
           (local.get $1)
          )
         )
         (local.set $11
          (i32.lt_s
           (local.get $4)
           (local.get $1)
          )
         )
         (local.set $1
          (select
           (local.get $4)
           (local.get $1)
           (local.get $11)
          )
         )
         (br $__rjti$3)
        )
        (if (result i32)
         ;;@ src/opus_decoder.c:273:0
         (local.get $1)
         (block (result i32)
          ;;@ src/opus_decoder.c:275:0
          (local.set $11
           (i32.sub
            (local.get $0)
            (i32.const -64)
           )
          )
          (local.set $11
           (i32.load
            (local.get $11)
           )
          )
          ;;@ src/opus_decoder.c:276:0
          (local.set $8
           (i32.load offset=56
            (local.get $0)
           )
          )
          ;;@ src/opus_decoder.c:277:0
          (local.set $6
           (i32.load offset=52
            (local.get $0)
           )
          )
          ;;@ src/opus_decoder.c:278:0
          (call $_ec_dec_init
           (local.get $19)
           (local.get $1)
           (local.get $2)
          )
          ;;@ src/opus_decoder.c:328:0
          (local.set $7
           (i32.load offset=60
            (local.get $0)
           )
          )
          (if (result i32)
           (i32.gt_s
            (local.get $7)
            (i32.const 0)
           )
           (block (result i32)
            ;;@ src/opus_decoder.c:329:0
            (local.set $10
             (i32.eq
              (local.get $8)
              (i32.const 1002)
             )
            )
            (local.set $15
             (i32.xor
              (local.get $10)
              (i32.const 1)
             )
            )
            (local.set $7
             (i32.eq
              (local.get $7)
              (i32.const 1002)
             )
            )
            (block $__rjto$0
             (block $__rjti$0
              (br_if $__rjti$0
               (i32.or
                (local.get $7)
                (local.get $15)
               )
              )
              (local.set $15
               (i32.load offset=68
                (local.get $0)
               )
              )
              (br_if $__rjti$0
               (local.get $15)
              )
              (br $__rjto$0)
             )
             (if
              (local.get $10)
              (block
               (local.set $10
                (local.get $1)
               )
               (local.set $1
                (local.get $4)
               )
               (local.set $4
                (i32.const 1002)
               )
               (local.set $8
                (i32.const 1)
               )
               (br $__rjti$4)
              )
             )
             (if
              (i32.eqz
               (local.get $7)
              )
              (block
               (local.set $10
                (local.get $1)
               )
               (local.set $1
                (local.get $4)
               )
               (local.set $4
                (local.get $8)
               )
               (local.set $8
                (i32.const 1)
               )
               (br $__rjti$4)
              )
             )
            )
            (local.set $7
             (i32.mul
              (local.get $23)
              (i32.load offset=8
               (local.get $0)
              )
             )
            )
            ;;@ src/opus_decoder.c:336:0
            (local.set $15
             (select
              (local.get $7)
              (i32.const 1)
              (local.get $10)
             )
            )
            (local.set $21
             (select
              (i32.const 1)
              (local.get $7)
              (local.get $10)
             )
            )
            ;;@ src/opus_decoder.c:340:0
            (local.set $45
             (call $_llvm_stacksave)
            )
            (local.set $10
             (i32.shl
              (local.get $15)
              (i32.const 2)
             )
            )
            (local.set $14
             (global.get $STACKTOP)
            )
            (global.set $STACKTOP
             (i32.add
              (global.get $STACKTOP)
              (i32.and
               (i32.add
                (local.get $10)
                (i32.const 15)
               )
               (i32.const -16)
              )
             )
            )
            (if (result i32)
             ;;@ src/opus_decoder.c:341:0
             (local.tee $22
              (i32.eq
               (local.get $8)
               (i32.const 1002)
              )
             )
             (block (result i32)
              ;;@ src/opus_decoder.c:344:0
              (local.set $10
               (i32.lt_s
                (local.get $23)
                (local.get $11)
               )
              )
              (local.set $10
               (select
                (local.get $23)
                (local.get $11)
                (local.get $10)
               )
              )
              (drop
               (call $_opus_decode_frame
                (local.get $0)
                (i32.const 0)
                (i32.const 0)
                (local.get $14)
                (local.get $10)
                (i32.const 0)
               )
              )
              (local.set $10
               (local.get $1)
              )
              (local.set $7
               (local.get $4)
              )
              (local.set $32
               (i32.const 1)
              )
              (local.set $15
               (i32.const 1)
              )
              (i32.const 1002)
             )
             (block (result i32)
              (local.set $10
               (local.get $1)
              )
              (local.set $7
               (local.get $4)
              )
              (local.set $14
               (i32.const 0)
              )
              (local.set $32
               (i32.const 1)
              )
              (local.set $15
               (i32.const 1)
              )
              (local.get $8)
             )
            )
           )
           (block
            (local.set $10
             (local.get $1)
            )
            (local.set $1
             (local.get $4)
            )
            (local.set $4
             (local.get $8)
            )
            (local.set $8
             (i32.const 1)
            )
            (br $__rjti$4)
           )
          )
         )
         (block
          (local.set $1
           (local.get $4)
          )
          (br $__rjti$3)
         )
        )
       )
      )
      (br $__rjto$4)
     )
     ;;@ src/opus_decoder.c:281:0
     (local.set $4
      (i32.load offset=60
       (local.get $0)
      )
     )
     (if
      ;;@ src/opus_decoder.c:284:0
      (i32.eqz
       (local.get $4)
      )
      (block
       ;;@ src/opus_decoder.c:287:0
       (local.set $0
        (i32.load offset=8
         (local.get $0)
        )
       )
       (local.set $0
        (i32.mul
         (local.get $0)
         (local.get $1)
        )
       )
       (br_if $folding-inner0
        (i32.le_s
         (local.get $0)
         (i32.const 0)
        )
       )
       (local.set $0
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
       )
       ;;@ src/opus_decoder.c:288:0
       (drop
        (call $_memset
         (local.get $3)
         (i32.const 0)
         (local.get $0)
        )
       )
       (br $folding-inner0)
      )
     )
     (if
      ;;@ src/opus_decoder.c:295:0
      (i32.le_s
       (local.get $1)
       (local.get $25)
      )
      (block
       (if
        ;;@ src/opus_decoder.c:309:0
        (i32.ge_s
         (local.get $1)
         (local.get $25)
        )
        (block
         (local.set $6
          (i32.const 0)
         )
         (local.set $11
          (local.get $1)
         )
         (br $__rjti$4)
        )
       )
       ;;@ src/opus_decoder.c:311:0
       (local.set $11
        (i32.gt_s
         (local.get $1)
         (local.get $12)
        )
       )
       ;;@ src/opus_decoder.c:313:0
       (local.set $6
        (i32.ne
         (local.get $4)
         (i32.const 1000)
        )
       )
       (local.set $10
        (i32.gt_s
         (local.get $1)
         (local.get $23)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (local.get $10)
        )
       )
       (local.set $10
        (i32.lt_s
         (local.get $1)
         (local.get $12)
        )
       )
       (local.set $6
        (i32.and
         (local.get $6)
         (local.get $10)
        )
       )
       (local.set $8
        (select
         (local.get $23)
         (local.get $1)
         (local.get $6)
        )
       )
       ;;@ src/opus_decoder.c:311:0
       (local.set $10
        (i32.const 0)
       )
       (local.set $6
        (i32.const 0)
       )
       (local.set $11
        (select
         (local.get $12)
         (local.get $8)
         (local.get $11)
        )
       )
       (local.set $8
        (i32.const 0)
       )
       (br $__rjti$4)
      )
     )
     ;;@ src/opus_decoder.c:304:0
     (local.set $2
      (local.get $1)
     )
     (loop $while-in
      (block $__rjti$1
       ;;@ src/opus_decoder.c:298:0
       (local.set $4
        (i32.lt_s
         (local.get $2)
         (local.get $25)
        )
       )
       (local.set $4
        (select
         (local.get $2)
         (local.get $25)
         (local.get $4)
        )
       )
       (local.set $4
        (call $_opus_decode_frame
         (local.get $0)
         (i32.const 0)
         (i32.const 0)
         (local.get $3)
         (local.get $4)
         (i32.const 0)
        )
       )
       ;;@ src/opus_decoder.c:299:0
       (local.set $5
        (i32.lt_s
         (local.get $4)
         (i32.const 0)
        )
       )
       (if
        ;;@ src/opus_decoder.c:305:0
        (local.get $5)
        (block
         (local.set $1
          (local.get $4)
         )
         (br $__rjti$1)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $2)
         (local.get $4)
        )
       )
       ;;@ src/opus_decoder.c:304:0
       (local.set $5
        (i32.load offset=8
         (local.get $0)
        )
       )
       (local.set $4
        (i32.mul
         (local.get $4)
         (local.get $5)
        )
       )
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 2)
         )
         (local.get $3)
        )
       )
       ;;@ src/opus_decoder.c:306:0
       (br_if $while-in
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
       )
      )
     )
     (br $folding-inner0)
    )
    ;;@ src/opus_decoder.c:340:0
    (local.set $45
     (call $_llvm_stacksave)
    )
    ;;@ src/opus_decoder.c:341:0
    (local.set $7
     (local.get $1)
    )
    (local.set $21
     (i32.const 1)
    )
    (local.set $15
     (local.get $8)
    )
    (local.set $22
     (i32.eq
      (local.tee $1
       (local.get $4)
      )
      (i32.const 1002)
     )
    )
   )
   (local.set $0
    (if (result i32)
     ;;@ src/opus_decoder.c:346:0
     (i32.gt_s
      (local.get $11)
      (local.get $7)
     )
     (i32.const -1)
     (block $label$break$L38 (result i32)
      (local.set $5
       (if (result i32)
        (local.get $22)
        (block (result i32)
         (local.set $4
          (global.get $STACKTOP)
         )
         ;;@ src/opus_decoder.c:357:0
         (global.set $STACKTOP
          (i32.add
           (global.get $STACKTOP)
           (i32.const 16)
          )
         )
         ;;@ src/opus_decoder.c:421:0
         (local.set $21
          (i32.const 1002)
         )
         (local.set $8
          (i32.const 0)
         )
         (local.set $1
          (local.get $14)
         )
         (local.set $7
          (i32.const 0)
         )
         (local.set $14
          (i32.const 0)
         )
         (local.set $12
          (i32.eqz
           (local.get $5)
          )
         )
         (local.set $15
          (i32.const 0)
         )
         (local.get $32)
        )
        (block (result i32)
         ;;@ src/opus_decoder.c:356:0
         (local.set $4
          (i32.gt_s
           (local.get $12)
           (local.get $11)
          )
         )
         (local.set $4
          (select
           (local.get $12)
           (local.get $11)
           (local.get $4)
          )
         )
         (local.set $8
          (i32.load offset=8
           (local.get $0)
          )
         )
         (local.set $4
          (i32.mul
           (local.get $4)
           (local.get $8)
          )
         )
         ;;@ src/opus_decoder.c:357:0
         (local.set $8
          (i32.shl
           (local.get $4)
           (i32.const 1)
          )
         )
         (local.set $4
          (global.get $STACKTOP)
         )
         (global.set $STACKTOP
          (i32.add
           (global.get $STACKTOP)
           (i32.and
            (i32.add
             (local.get $8)
             (i32.const 15)
            )
            (i32.const -16)
           )
          )
         )
         ;;@ src/opus_decoder.c:371:0
         (local.set $8
          (i32.load offset=60
           (local.get $0)
          )
         )
         (if
          (i32.eq
           (local.get $8)
           (i32.const 1002)
          )
          ;;@ src/opus_decoder.c:372:0
          (drop
           (call $_silk_InitDecoder
            (local.get $27)
           )
          )
         )
         ;;@ src/opus_decoder.c:375:0
         (local.set $8
          (i32.mul
           (local.get $11)
           (i32.const 1000)
          )
         )
         (local.set $7
          (i32.load offset=12
           (local.get $0)
          )
         )
         (local.set $8
          (i32.div_s
           (local.get $8)
           (local.get $7)
          )
         )
         (local.set $7
          (i32.gt_s
           (local.get $8)
           (i32.const 10)
          )
         )
         (local.set $8
          (select
           (local.get $8)
           (i32.const 10)
           (local.get $7)
          )
         )
         (local.set $12
          (i32.add
           (local.get $0)
           (i32.const 16)
          )
         )
         (i32.store offset=32
          (local.get $0)
          (local.get $8)
         )
         (if
          (local.get $15)
          (block $label$break$L46
           ;;@ src/opus_decoder.c:379:0
           (local.set $8
            (i32.load offset=48
             (local.get $0)
            )
           )
           (i32.store offset=20
            (local.get $0)
            (local.get $8)
           )
           (if
            ;;@ src/opus_decoder.c:380:0
            (i32.ne
             (local.get $1)
             (i32.const 1000)
            )
            (block
             ;;@ src/opus_decoder.c:393:0
             (i32.store offset=28
              (local.get $0)
              (i32.const 16000)
             )
             (br $label$break$L46)
            )
           )
           (block $switch-default
            (block $switch-case4
             (block $switch-case
              (br_table $switch-case $switch-case4 $switch-default
               (i32.sub
                (local.get $6)
                (i32.const 1101)
               )
              )
             )
             ;;@ src/opus_decoder.c:382:0
             (i32.store offset=28
              (local.get $0)
              (i32.const 8000)
             )
             (br $label$break$L46)
            )
            ;;@ src/opus_decoder.c:384:0
            (i32.store offset=28
             (local.get $0)
             (i32.const 12000)
            )
            (br $label$break$L46)
           )
           ;;@ src/opus_decoder.c:385:0
           (i32.store offset=28
            (local.get $0)
            (i32.const 16000)
           )
           (br_if $label$break$L46
            (i32.eq
             (local.get $6)
             (i32.const 1103)
            )
           )
           ;;@ src/opus_decoder.c:389:0
           (call $_celt_fatal
            (i32.const 45506)
            (i32.const 44435)
            (i32.const 389)
           )
          )
         )
         ;;@ src/opus_decoder.c:397:0
         (local.set $8
          (i32.eqz
           (local.get $10)
          )
         )
         (local.set $7
          (i32.shl
           (local.get $5)
           (i32.const 1)
          )
         )
         (if
          (local.tee $29
           (select
            (i32.const 1)
            (local.get $7)
            (local.get $8)
           )
          )
          (block
           (local.set $8
            (local.get $4)
           )
           (local.set $7
            (i32.const 0)
           )
           (loop $while-in8
            ;;@ src/opus_decoder.c:401:0
            (local.set $16
             (i32.eqz
              (local.get $7)
             )
            )
            ;;@ src/opus_decoder.c:403:0
            (local.set $33
             (i32.load offset=44
              (local.get $0)
             )
            )
            ;;@ src/opus_decoder.c:402:0
            (local.set $16
             (call $_silk_Decode
              (local.get $27)
              (local.get $12)
              (local.get $29)
              (local.get $16)
              (local.get $19)
              (local.get $8)
              (local.get $13)
             )
            )
            (if
             ;;@ src/opus_decoder.c:404:0
             (local.get $16)
             (block
              ;;@ src/opus_decoder.c:407:0
              (i32.store
               (local.get $13)
               (local.get $11)
              )
              ;;@ src/opus_decoder.c:408:0
              (local.set $16
               (i32.load offset=8
                (local.get $0)
               )
              )
              (local.set $16
               (i32.mul
                (local.get $11)
                (local.get $16)
               )
              )
              (if
               (i32.gt_s
                (local.get $16)
                (i32.const 0)
               )
               (block
                (local.set $16
                 (i32.shl
                  (local.get $16)
                  (i32.const 1)
                 )
                )
                ;;@ src/opus_decoder.c:409:0
                (drop
                 (call $_memset
                  (local.get $8)
                  (i32.const 0)
                  (local.get $16)
                 )
                )
               )
              )
             )
            )
            ;;@ src/opus_decoder.c:415:0
            (local.set $16
             (i32.load
              (local.get $13)
             )
            )
            (local.set $33
             (i32.load offset=8
              (local.get $0)
             )
            )
            (local.set $33
             (i32.mul
              (local.get $16)
              (local.get $33)
             )
            )
            (local.set $8
             (i32.add
              (i32.shl
               (local.get $33)
               (i32.const 1)
              )
              (local.get $8)
             )
            )
            ;;@ src/opus_decoder.c:416:0
            (local.set $7
             (i32.add
              (local.get $7)
              (local.get $16)
             )
            )
            ;;@ src/opus_decoder.c:417:0
            (br_if $while-in8
             (i32.lt_s
              (local.get $7)
              (local.get $11)
             )
            )
           )
          )
          (block
           (local.set $8
            (local.get $4)
           )
           (local.set $7
            (i32.const 0)
           )
           (loop $while-in6
            ;;@ src/opus_decoder.c:401:0
            (local.set $16
             (i32.eqz
              (local.get $7)
             )
            )
            ;;@ src/opus_decoder.c:403:0
            (local.set $29
             (i32.load offset=44
              (local.get $0)
             )
            )
            ;;@ src/opus_decoder.c:402:0
            (local.set $16
             (call $_silk_Decode
              (local.get $27)
              (local.get $12)
              (i32.const 0)
              (local.get $16)
              (local.get $19)
              (local.get $8)
              (local.get $13)
             )
            )
            ;;@ src/opus_decoder.c:404:0
            (drop
             (br_if $label$break$L38
              (i32.const -3)
              (local.get $16)
             )
            )
            ;;@ src/opus_decoder.c:415:0
            (local.set $16
             (i32.load
              (local.get $13)
             )
            )
            (local.set $29
             (i32.load offset=8
              (local.get $0)
             )
            )
            (local.set $29
             (i32.mul
              (local.get $16)
              (local.get $29)
             )
            )
            (local.set $8
             (i32.add
              (i32.shl
               (local.get $29)
               (i32.const 1)
              )
              (local.get $8)
             )
            )
            ;;@ src/opus_decoder.c:416:0
            (local.set $7
             (i32.add
              (local.get $7)
              (local.get $16)
             )
            )
            ;;@ src/opus_decoder.c:417:0
            (br_if $while-in6
             (i32.lt_s
              (local.get $7)
              (local.get $11)
             )
            )
           )
          )
         )
         ;;@ src/opus_decoder.c:421:0
         (local.set $13
          (i32.eqz
           (local.get $5)
          )
         )
         (local.set $15
          (if (result i32)
           (i32.and
            (local.get $13)
            (local.get $15)
           )
           (block $do-once9 (result i32)
            (local.set $5
             (i32.load offset=20
              (local.get $19)
             )
            )
            (local.set $8
             (i32.load offset=28
              (local.get $19)
             )
            )
            ;;@ ./celt/entcode.h:112:0
            (local.set $8
             (i32.clz
              (local.get $8)
             )
            )
            ;;@ src/opus_decoder.c:422:0
            (local.set $7
             (i32.load offset=56
              (local.get $0)
             )
            )
            (local.set $7
             (i32.eq
              (local.get $7)
              (i32.const 1001)
             )
            )
            (local.set $7
             (select
              (i32.const 20)
              (i32.const 0)
              (local.get $7)
             )
            )
            ;;@ ./celt/entcode.h:112:0
            (local.set $5
             (i32.add
              (local.get $5)
              (i32.const -15)
             )
            )
            ;;@ src/opus_decoder.c:422:0
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $8)
             )
            )
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $7)
             )
            )
            (local.set $8
             (i32.shl
              (local.get $2)
              (i32.const 3)
             )
            )
            (if
             (i32.gt_s
              (local.get $5)
              (local.get $8)
             )
             (block
              (local.set $8
               (i32.const 0)
              )
              (local.set $7
               (i32.const 0)
              )
              (local.set $5
               (i32.const 0)
              )
             )
             (block
              (if
               ;;@ src/opus_decoder.c:425:0
               (i32.eq
                (local.get $1)
                (i32.const 1001)
               )
               (block
                ;;@ src/opus_decoder.c:426:0
                (local.set $5
                 (call $_ec_dec_bit_logp
                  (local.get $19)
                  (i32.const 12)
                 )
                )
                (if
                 ;;@ src/opus_decoder.c:429:0
                 (i32.eqz
                  (local.get $5)
                 )
                 (block
                  (local.set $1
                   (i32.const 1001)
                  )
                  (local.set $8
                   (i32.const 0)
                  )
                  (local.set $7
                   (i32.const 0)
                  )
                  (local.set $5
                   (i32.const 0)
                  )
                  (br $do-once9
                   (i32.const 1)
                  )
                 )
                )
                ;;@ src/opus_decoder.c:431:0
                (local.set $8
                 (call $_ec_dec_bit_logp
                  (local.get $19)
                  (i32.const 1)
                 )
                )
                ;;@ src/opus_decoder.c:435:0
                (local.set $7
                 (call $_ec_dec_uint
                  (local.get $19)
                  (i32.const 256)
                 )
                )
                (local.set $7
                 (i32.add
                  (local.get $7)
                  (i32.const 2)
                 )
                )
                (local.set $13
                 (i32.load offset=20
                  (local.get $19)
                 )
                )
                (local.set $12
                 (i32.load offset=28
                  (local.get $19)
                 )
                )
                ;;@ ./celt/entcode.h:112:0
                (local.set $15
                 (local.get $5)
                )
                (local.set $5
                 (local.get $13)
                )
                (local.set $13
                 (i32.clz
                  (local.get $12)
                 )
                )
               )
               (block
                ;;@ src/opus_decoder.c:431:0
                (local.set $8
                 (call $_ec_dec_bit_logp
                  (local.get $19)
                  (i32.const 1)
                 )
                )
                (local.set $5
                 (i32.load offset=20
                  (local.get $19)
                 )
                )
                (local.set $7
                 (i32.load offset=28
                  (local.get $19)
                 )
                )
                ;;@ ./celt/entcode.h:112:0
                (local.set $13
                 (i32.clz
                  (local.get $7)
                 )
                )
                (local.set $7
                 (i32.add
                  (local.get $5)
                  (i32.const -25)
                 )
                )
                ;;@ src/opus_decoder.c:436:0
                (local.set $7
                 (i32.add
                  (local.get $7)
                  (local.get $13)
                 )
                )
                (local.set $7
                 (i32.shr_s
                  (local.get $7)
                  (i32.const 3)
                 )
                )
                (local.set $15
                 (i32.const 1)
                )
                (local.set $7
                 (i32.sub
                  (local.get $2)
                  (local.get $7)
                 )
                )
               )
              )
              ;;@ src/opus_decoder.c:437:0
              (local.set $12
               (i32.sub
                (local.get $2)
                (local.get $7)
               )
              )
              ;;@ src/opus_decoder.c:440:0
              (local.set $2
               (i32.shl
                (local.get $12)
                (i32.const 3)
               )
              )
              ;;@ ./celt/entcode.h:112:0
              (local.set $5
               (i32.add
                (local.get $5)
                (i32.const -32)
               )
              )
              (local.set $5
               (i32.add
                (local.get $5)
                (local.get $13)
               )
              )
              ;;@ src/opus_decoder.c:440:0
              (local.set $2
               (i32.lt_s
                (local.get $2)
                (local.get $5)
               )
              )
              (local.set $5
               (select
                (i32.const 0)
                (local.get $15)
                (local.get $2)
               )
              )
              (local.set $7
               (select
                (i32.const 0)
                (local.get $7)
                (local.get $2)
               )
              )
              (local.set $2
               (select
                (i32.const 0)
                (local.get $12)
                (local.get $2)
               )
              )
              ;;@ src/opus_decoder.c:447:0
              (local.set $15
               (i32.load offset=4
                (local.get $19)
               )
              )
              (local.set $15
               (i32.sub
                (local.get $15)
                (local.get $7)
               )
              )
              (i32.store offset=4
               (local.get $19)
               (local.get $15)
              )
             )
            )
            (i32.const 1)
           )
           (block (result i32)
            (local.set $8
             (i32.const 0)
            )
            (local.set $7
             (i32.const 0)
            )
            (local.set $5
             (i32.const 0)
            )
            (local.get $13)
           )
          )
         )
         ;;@ src/opus_decoder.c:453:0
         (local.set $13
          (i32.ne
           (local.get $5)
           (i32.const 0)
          )
         )
         (local.set $21
          (select
           (i32.const 1)
           (local.get $21)
           (local.get $13)
          )
         )
         ;;@ src/opus_decoder.c:459:0
         (local.set $21
          (i32.shl
           (local.get $21)
           (i32.const 2)
          )
         )
         (local.set $12
          (global.get $STACKTOP)
         )
         (global.set $STACKTOP
          (i32.add
           (global.get $STACKTOP)
           (i32.and
            (i32.add
             (local.get $21)
             (i32.const 15)
            )
            (i32.const -16)
           )
          )
         )
         ;;@ src/opus_decoder.c:461:0
         (local.set $21
          (i32.xor
           (local.get $13)
           (i32.const 1)
          )
         )
         (local.set $27
          (i32.and
           (local.get $21)
           (local.get $32)
          )
         )
         (if
          (i32.and
           (local.get $21)
           (local.get $32)
          )
          (block
           ;;@ src/opus_decoder.c:464:0
           (local.set $14
            (i32.lt_s
             (local.get $23)
             (local.get $11)
            )
           )
           (local.set $14
            (select
             (local.get $23)
             (local.get $11)
             (local.get $14)
            )
           )
           (drop
            (call $_opus_decode_frame
             (local.get $0)
             (i32.const 0)
             (i32.const 0)
             (local.get $12)
             (local.get $14)
             (i32.const 0)
            )
           )
           (local.set $21
            (local.get $1)
           )
           (local.set $1
            (local.get $12)
           )
          )
          (block
           (local.set $21
            (local.get $1)
           )
           (local.set $1
            (local.get $14)
           )
          )
         )
         (local.set $14
          (local.get $5)
         )
         (local.set $16
          (i32.const 17)
         )
         (local.set $12
          (local.get $15)
         )
         (local.set $15
          (local.get $13)
         )
         (local.get $27)
        )
       )
      )
      (block $__rjto$2
       (block $__rjti$2
        (block $switch-default18
         (block $switch-case17
          (block $switch-case16
           (block $switch-case15
            (block $switch-case13
             (br_table $__rjto$2 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-case13 $switch-case15 $switch-case15 $switch-case16 $switch-case17 $switch-default18
              (local.get $6)
             )
            )
            (local.set $6
             (i32.const 13)
            )
            (br $__rjti$2)
           )
           (local.set $6
            (i32.const 17)
           )
           (br $__rjti$2)
          )
          (local.set $6
           (i32.const 19)
          )
          (br $__rjti$2)
         )
         (local.set $6
          (i32.const 21)
         )
         (br $__rjti$2)
        )
        ;;@ src/opus_decoder.c:488:0
        (call $_celt_fatal
         (i32.const 45506)
         (i32.const 44435)
         (i32.const 488)
        )
        (br $__rjto$2)
       )
       ;;@ src/opus_decoder.c:491:0
       (i32.store
        (local.get $26)
        (local.get $6)
       )
       (local.set $6
        (call $_opus_custom_decoder_ctl
         (local.get $20)
         (i32.const 10012)
         (local.get $26)
        )
       )
       (if
        (local.get $6)
        (call $_celt_fatal
         (i32.const 45526)
         (i32.const 44435)
         (i32.const 491)
        )
       )
      )
      ;;@ src/opus_decoder.c:493:0
      (local.set $6
       (i32.load offset=48
        (local.get $0)
       )
      )
      (i32.store
       (local.get $43)
       (local.get $6)
      )
      (local.set $6
       (call $_opus_custom_decoder_ctl
        (local.get $20)
        (i32.const 10008)
        (local.get $43)
       )
      )
      (if
       (local.get $6)
       (call $_celt_fatal
        (i32.const 45661)
        (i32.const 44435)
        (i32.const 493)
       )
      )
      (if
       (local.get $15)
       (block
        ;;@ src/opus_decoder.c:496:0
        (local.set $6
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.set $6
         (i32.mul
          (local.get $6)
          (local.get $23)
         )
        )
        ;;@ src/opus_decoder.c:497:0
        (local.set $13
         (i32.shl
          (local.get $6)
          (i32.const 2)
         )
        )
        (local.set $6
         (global.get $STACKTOP)
        )
        (global.set $STACKTOP
         (i32.add
          (global.get $STACKTOP)
          (i32.and
           (i32.add
            (local.get $13)
            (i32.const 15)
           )
           (i32.const -16)
          )
         )
        )
        (if
         ;;@ src/opus_decoder.c:500:0
         (local.get $8)
         (block
          ;;@ src/opus_decoder.c:502:0
          (i32.store
           (local.get $42)
           (i32.const 0)
          )
          (local.set $8
           (call $_opus_custom_decoder_ctl
            (local.get $20)
            (i32.const 10010)
            (local.get $42)
           )
          )
          (if
           (local.get $8)
           (call $_celt_fatal
            (i32.const 45820)
            (i32.const 44435)
            (i32.const 502)
           )
          )
          ;;@ src/opus_decoder.c:503:0
          (local.set $8
           (i32.add
            (local.get $2)
            (local.get $10)
           )
          )
          (drop
           (call $_celt_decode_with_ec
            (local.get $20)
            (local.get $8)
            (local.get $7)
            (local.get $6)
            (local.get $23)
            (i32.const 0)
           )
          )
          ;;@ src/opus_decoder.c:505:0
          (i32.store
           (local.get $41)
           (local.get $44)
          )
          (local.set $8
           (call $_opus_custom_decoder_ctl
            (local.get $20)
            (i32.const 4031)
            (local.get $41)
           )
          )
          (if
           (local.get $8)
           (call $_celt_fatal
            (i32.const 45943)
            (i32.const 44435)
            (i32.const 505)
           )
           (block
            (local.set $35
             (i32.const 1)
            )
            (local.set $17
             (local.get $6)
            )
            (local.set $36
             (i32.const 1)
            )
           )
          )
         )
         (local.set $17
          (local.get $6)
         )
        )
       )
       (block
        (local.set $17
         (global.get $STACKTOP)
        )
        ;;@ src/opus_decoder.c:497:0
        (global.set $STACKTOP
         (i32.add
          (global.get $STACKTOP)
          (i32.const 16)
         )
        )
        ;;@ src/opus_decoder.c:500:0
        (local.set $35
         (i32.ne
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
      ;;@ src/opus_decoder.c:509:0
      (i32.store
       (local.get $31)
       (local.get $16)
      )
      (local.set $6
       (call $_opus_custom_decoder_ctl
        (local.get $20)
        (i32.const 10010)
        (local.get $31)
       )
      )
      (if
       (local.get $6)
       (call $_celt_fatal
        (i32.const 46088)
        (i32.const 44435)
        (i32.const 509)
       )
      )
      (local.set $13
       (if (result i32)
        ;;@ src/opus_decoder.c:511:0
        (i32.eq
         (local.get $21)
         (i32.const 1000)
        )
        (block (result i32)
         ;;@ src/opus_decoder.c:521:0
         (i32.store16
          (local.get $31)
          (i32.const -1)
         )
         ;;@ src/opus_decoder.c:524:0
         (local.set $6
          (i32.load offset=8
           (local.get $0)
          )
         )
         (local.set $6
          (i32.mul
           (local.get $6)
           (local.get $11)
          )
         )
         (if
          (i32.gt_s
           (local.get $6)
           (i32.const 0)
          )
          (block
           (local.set $6
            (i32.shl
             (local.get $6)
             (i32.const 2)
            )
           )
           ;;@ src/opus_decoder.c:525:0
           (drop
            (call $_memset
             (local.get $3)
             (i32.const 0)
             (local.get $6)
            )
           )
          )
         )
         ;;@ src/opus_decoder.c:529:0
         (local.set $6
          (i32.load offset=60
           (local.get $0)
          )
         )
         (if
          (i32.eq
           (local.get $6)
           (i32.const 1001)
          )
          (block $do-once19
           (if
            (local.get $36)
            (block
             (local.set $6
              (i32.load offset=68
               (local.get $0)
              )
             )
             (br_if $do-once19
              (local.get $6)
             )
            )
           )
           ;;@ src/opus_decoder.c:531:0
           (i32.store
            (local.get $40)
            (i32.const 0)
           )
           (local.set $6
            (call $_opus_custom_decoder_ctl
             (local.get $20)
             (i32.const 10010)
             (local.get $40)
            )
           )
           (if
            (local.get $6)
            (call $_celt_fatal
             (i32.const 45820)
             (i32.const 44435)
             (i32.const 531)
            )
            ;;@ src/opus_decoder.c:532:0
            (drop
             (call $_celt_decode_with_ec
              (local.get $20)
              (local.get $31)
              (i32.const 2)
              (local.get $3)
              (local.get $24)
              (i32.const 0)
             )
            )
           )
          )
         )
         (i32.const 0)
        )
        (block (result i32)
         ;;@ src/opus_decoder.c:513:0
         (local.set $6
          (i32.lt_s
           (local.get $25)
           (local.get $11)
          )
         )
         (local.set $8
          (select
           (local.get $25)
           (local.get $11)
           (local.get $6)
          )
         )
         ;;@ src/opus_decoder.c:515:0
         (local.set $6
          (i32.load offset=60
           (local.get $0)
          )
         )
         (local.set $13
          (i32.ne
           (local.get $6)
           (local.get $21)
          )
         )
         (local.set $6
          (i32.gt_s
           (local.get $6)
           (i32.const 0)
          )
         )
         (if
          (i32.and
           (local.get $6)
           (local.get $13)
          )
          (block
           (local.set $6
            (i32.load offset=68
             (local.get $0)
            )
           )
           (if
            (i32.eqz
             (local.get $6)
            )
            (block
             ;;@ src/opus_decoder.c:516:0
             (local.set $6
              (call $_opus_custom_decoder_ctl
               (local.get $20)
               (i32.const 4028)
               (local.get $47)
              )
             )
             (if
              (local.get $6)
              (call $_celt_fatal
               (i32.const 46229)
               (i32.const 44435)
               (i32.const 516)
              )
             )
            )
           )
          )
         )
         ;;@ src/opus_decoder.c:518:0
         (local.set $6
          (select
           (local.get $10)
           (i32.const 0)
           (local.get $12)
          )
         )
         (call $_celt_decode_with_ec
          (local.get $20)
          (local.get $6)
          (local.get $2)
          (local.get $3)
          (local.get $8)
          (local.get $19)
         )
        )
       )
      )
      (if
       (i32.eqz
        (local.get $22)
       )
       (block
        ;;@ src/opus_decoder.c:542:0
        (local.set $6
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.set $8
         (i32.mul
          (local.get $6)
          (local.get $11)
         )
        )
        (if
         (i32.gt_s
          (local.get $8)
          (i32.const 0)
         )
         (block
          (local.set $6
           (i32.const 0)
          )
          (loop $while-in22
           ;;@ src/opus_decoder.c:543:0
           (local.set $22
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (local.set $9
            (f32.load
             (local.get $22)
            )
           )
           (local.set $12
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 1)
             )
             (local.get $4)
            )
           )
           (local.set $12
            (i32.load16_s
             (local.get $12)
            )
           )
           (local.set $18
            (f32.convert_i32_s
             (local.get $12)
            )
           )
           (local.set $18
            (f32.mul
             (local.get $18)
             (f32.const 0.000030517578125)
            )
           )
           (local.set $9
            (f32.add
             (local.get $9)
             (local.get $18)
            )
           )
           (f32.store
            (local.get $22)
            (local.get $9)
           )
           ;;@ src/opus_decoder.c:542:0
           (local.set $6
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (br_if $while-in22
            (i32.lt_s
             (local.get $6)
             (local.get $8)
            )
           )
          )
         )
        )
       )
      )
      ;;@ src/opus_decoder.c:549:0
      (i32.store
       (local.get $39)
       (local.get $31)
      )
      (local.set $4
       (call $_opus_custom_decoder_ctl
        (local.get $20)
        (i32.const 10015)
        (local.get $39)
       )
      )
      (if
       (local.get $4)
       (call $_celt_fatal
        (i32.const 46300)
        (i32.const 44435)
        (i32.const 549)
       )
      )
      ;;@ src/opus_decoder.c:550:0
      (local.set $4
       (i32.load
        (local.get $31)
       )
      )
      (local.set $8
       (i32.load offset=60
        (local.get $4)
       )
      )
      ;;@ src/opus_decoder.c:554:0
      (local.set $4
       (i32.eqz
        (local.get $14)
       )
      )
      (if
       (i32.eqz
        (i32.or
         (local.get $4)
         (local.get $35)
        )
       )
       (block
        ;;@ src/opus_decoder.c:556:0
        (local.set $4
         (call $_opus_custom_decoder_ctl
          (local.get $20)
          (i32.const 4028)
          (local.get $46)
         )
        )
        (if
         (local.get $4)
         (call $_celt_fatal
          (i32.const 46229)
          (i32.const 44435)
          (i32.const 556)
         )
        )
        ;;@ src/opus_decoder.c:557:0
        (i32.store
         (local.get $38)
         (i32.const 0)
        )
        (local.set $4
         (call $_opus_custom_decoder_ctl
          (local.get $20)
          (i32.const 10010)
          (local.get $38)
         )
        )
        (if
         (local.get $4)
         (call $_celt_fatal
          (i32.const 45820)
          (i32.const 44435)
          (i32.const 557)
         )
        )
        ;;@ src/opus_decoder.c:559:0
        (local.set $4
         (i32.add
          (local.get $2)
          (local.get $10)
         )
        )
        (drop
         (call $_celt_decode_with_ec
          (local.get $20)
          (local.get $4)
          (local.get $7)
          (local.get $17)
          (local.get $23)
          (i32.const 0)
         )
        )
        ;;@ src/opus_decoder.c:560:0
        (i32.store
         (local.get $37)
         (local.get $44)
        )
        (local.set $4
         (call $_opus_custom_decoder_ctl
          (local.get $20)
          (i32.const 4031)
          (local.get $37)
         )
        )
        (if
         (local.get $4)
         (call $_celt_fatal
          (i32.const 45943)
          (i32.const 44435)
          (i32.const 560)
         )
        )
        ;;@ src/opus_decoder.c:561:0
        (local.set $10
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.set $4
         (i32.sub
          (local.get $11)
          (local.get $24)
         )
        )
        (local.set $4
         (i32.mul
          (local.get $4)
          (local.get $10)
         )
        )
        (local.set $14
         (i32.add
          (i32.shl
           (local.get $4)
           (i32.const 2)
          )
          (local.get $3)
         )
        )
        (local.set $4
         (i32.mul
          (local.get $10)
          (local.get $24)
         )
        )
        (local.set $22
         (i32.add
          (i32.shl
           (local.get $4)
           (i32.const 2)
          )
          (local.get $17)
         )
        )
        ;;@ src/opus_decoder.c:562:0
        (local.set $4
         (i32.load offset=12
          (local.get $0)
         )
        )
        ;;@ src/opus_decoder.c:193:0
        (local.set $12
         (i32.div_s
          (i32.const 48000)
          (local.get $4)
         )
        )
        ;;@ src/opus_decoder.c:194:0
        (local.set $4
         (i32.gt_s
          (local.get $10)
          (i32.const 0)
         )
        )
        (local.set $6
         (i32.gt_s
          (local.get $28)
          (i32.const 399)
         )
        )
        (if
         (i32.and
          (local.get $4)
          (local.get $6)
         )
         (block
          (local.set $6
           (i32.const 0)
          )
          (loop $while-in24
           (local.set $4
            (i32.const 0)
           )
           (loop $while-in26
            ;;@ src/opus_decoder.c:198:0
            (local.set $7
             (i32.mul
              (local.get $4)
              (local.get $12)
             )
            )
            (local.set $7
             (i32.add
              (i32.shl
               (local.get $7)
               (i32.const 2)
              )
              (local.get $8)
             )
            )
            (local.set $9
             (f32.load
              (local.get $7)
             )
            )
            (local.set $9
             (f32.mul
              (local.get $9)
              (local.get $9)
             )
            )
            ;;@ src/opus_decoder.c:199:0
            (local.set $7
             (i32.mul
              (local.get $4)
              (local.get $10)
             )
            )
            (local.set $7
             (i32.add
              (local.get $6)
              (local.get $7)
             )
            )
            (local.set $27
             (i32.add
              (i32.shl
               (local.get $7)
               (i32.const 2)
              )
              (local.get $22)
             )
            )
            (local.set $18
             (f32.load
              (local.get $27)
             )
            )
            (local.set $18
             (f32.mul
              (local.get $9)
              (local.get $18)
             )
            )
            (local.set $9
             (f32.sub
              (f32.const 1)
              (local.get $9)
             )
            )
            (local.set $7
             (i32.add
              (i32.shl
               (local.get $7)
               (i32.const 2)
              )
              (local.get $14)
             )
            )
            (local.set $30
             (f32.load
              (local.get $7)
             )
            )
            (local.set $9
             (f32.mul
              (local.get $9)
              (local.get $30)
             )
            )
            (local.set $9
             (f32.add
              (local.get $18)
              (local.get $9)
             )
            )
            (f32.store
             (local.get $7)
             (local.get $9)
            )
            ;;@ src/opus_decoder.c:196:0
            (local.set $4
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (br_if $while-in26
             (i32.ne
              (local.get $4)
              (local.get $24)
             )
            )
           )
           ;;@ src/opus_decoder.c:194:0
           (local.set $6
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (br_if $while-in24
            (i32.ne
             (local.get $6)
             (local.get $10)
            )
           )
          )
         )
        )
       )
      )
      (if
       (local.get $36)
       (block
        ;;@ src/opus_decoder.c:566:0
        (local.set $10
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.set $7
         (i32.gt_s
          (local.get $10)
          (i32.const 0)
         )
        )
        (local.set $4
         (i32.gt_s
          (local.get $28)
          (i32.const 399)
         )
        )
        (if
         (i32.and
          (local.get $4)
          (local.get $7)
         )
         (block
          (local.set $4
           (i32.const 0)
          )
          (loop $while-in28
           (local.set $6
            (i32.const 0)
           )
           (loop $while-in30
            ;;@ src/opus_decoder.c:569:0
            (local.set $14
             (i32.mul
              (local.get $6)
              (local.get $10)
             )
            )
            (local.set $14
             (i32.add
              (local.get $4)
              (local.get $14)
             )
            )
            (local.set $22
             (i32.add
              (i32.shl
               (local.get $14)
               (i32.const 2)
              )
              (local.get $17)
             )
            )
            (local.set $22
             (i32.load
              (local.get $22)
             )
            )
            (local.set $14
             (i32.add
              (i32.shl
               (local.get $14)
               (i32.const 2)
              )
              (local.get $3)
             )
            )
            (i32.store
             (local.get $14)
             (local.get $22)
            )
            ;;@ src/opus_decoder.c:568:0
            (local.set $6
             (i32.add
              (local.get $6)
              (i32.const 1)
             )
            )
            (br_if $while-in30
             (i32.lt_s
              (local.get $6)
              (local.get $24)
             )
            )
           )
           ;;@ src/opus_decoder.c:566:0
           (local.set $4
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
           (br_if $while-in28
            (i32.lt_s
             (local.get $4)
             (local.get $10)
            )
           )
          )
         )
        )
        ;;@ src/opus_decoder.c:571:0
        (local.set $4
         (i32.mul
          (local.get $10)
          (local.get $24)
         )
        )
        (local.set $14
         (i32.add
          (i32.shl
           (local.get $4)
           (i32.const 2)
          )
          (local.get $17)
         )
        )
        (local.set $22
         (i32.add
          (i32.shl
           (local.get $4)
           (i32.const 2)
          )
          (local.get $3)
         )
        )
        ;;@ src/opus_decoder.c:572:0
        (local.set $4
         (i32.load offset=12
          (local.get $0)
         )
        )
        ;;@ src/opus_decoder.c:193:0
        (local.set $12
         (i32.div_s
          (i32.const 48000)
          (local.get $4)
         )
        )
        (local.set $4
         (i32.gt_s
          (local.get $28)
          (i32.const 399)
         )
        )
        (if
         ;;@ src/opus_decoder.c:194:0
         (i32.and
          (local.get $4)
          (local.get $7)
         )
         (block
          (local.set $6
           (i32.const 0)
          )
          (loop $while-in32
           (local.set $4
            (i32.const 0)
           )
           (loop $while-in34
            ;;@ src/opus_decoder.c:198:0
            (local.set $17
             (i32.mul
              (local.get $4)
              (local.get $12)
             )
            )
            (local.set $17
             (i32.add
              (i32.shl
               (local.get $17)
               (i32.const 2)
              )
              (local.get $8)
             )
            )
            (local.set $9
             (f32.load
              (local.get $17)
             )
            )
            (local.set $9
             (f32.mul
              (local.get $9)
              (local.get $9)
             )
            )
            ;;@ src/opus_decoder.c:199:0
            (local.set $17
             (i32.mul
              (local.get $4)
              (local.get $10)
             )
            )
            (local.set $17
             (i32.add
              (local.get $6)
              (local.get $17)
             )
            )
            (local.set $7
             (i32.add
              (i32.shl
               (local.get $17)
               (i32.const 2)
              )
              (local.get $22)
             )
            )
            (local.set $18
             (f32.load
              (local.get $7)
             )
            )
            (local.set $18
             (f32.mul
              (local.get $9)
              (local.get $18)
             )
            )
            (local.set $9
             (f32.sub
              (f32.const 1)
              (local.get $9)
             )
            )
            (local.set $17
             (i32.add
              (i32.shl
               (local.get $17)
               (i32.const 2)
              )
              (local.get $14)
             )
            )
            (local.set $30
             (f32.load
              (local.get $17)
             )
            )
            (local.set $9
             (f32.mul
              (local.get $9)
              (local.get $30)
             )
            )
            (local.set $9
             (f32.add
              (local.get $18)
              (local.get $9)
             )
            )
            (f32.store
             (local.get $7)
             (local.get $9)
            )
            ;;@ src/opus_decoder.c:196:0
            (local.set $4
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (br_if $while-in34
             (i32.ne
              (local.get $4)
              (local.get $24)
             )
            )
           )
           ;;@ src/opus_decoder.c:194:0
           (local.set $6
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (br_if $while-in32
            (i32.ne
             (local.get $6)
             (local.get $10)
            )
           )
          )
         )
        )
       )
      )
      (if
       (local.get $5)
       (block $label$break$L170
        ;;@ src/opus_decoder.c:576:0
        (local.set $6
         (i32.load offset=8
          (local.get $0)
         )
        )
        (if
         (i32.lt_s
          (local.get $11)
          (local.get $23)
         )
         (block
          ;;@ src/opus_decoder.c:591:0
          (local.set $4
           (i32.load offset=12
            (local.get $0)
           )
          )
          ;;@ src/opus_decoder.c:193:0
          (local.set $7
           (i32.div_s
            (i32.const 48000)
            (local.get $4)
           )
          )
          ;;@ src/opus_decoder.c:194:0
          (local.set $4
           (i32.gt_s
            (local.get $6)
            (i32.const 0)
           )
          )
          (local.set $5
           (i32.gt_s
            (local.get $28)
            (i32.const 399)
           )
          )
          (br_if $label$break$L170
           (i32.eqz
            (i32.and
             (local.get $4)
             (local.get $5)
            )
           )
          )
          (local.set $5
           (i32.const 0)
          )
          (loop $while-in37
           (local.set $4
            (i32.const 0)
           )
           (loop $while-in39
            ;;@ src/opus_decoder.c:198:0
            (local.set $10
             (i32.mul
              (local.get $4)
              (local.get $7)
             )
            )
            (local.set $10
             (i32.add
              (i32.shl
               (local.get $10)
               (i32.const 2)
              )
              (local.get $8)
             )
            )
            (local.set $9
             (f32.load
              (local.get $10)
             )
            )
            (local.set $9
             (f32.mul
              (local.get $9)
              (local.get $9)
             )
            )
            ;;@ src/opus_decoder.c:199:0
            (local.set $10
             (i32.mul
              (local.get $4)
              (local.get $6)
             )
            )
            (local.set $10
             (i32.add
              (local.get $5)
              (local.get $10)
             )
            )
            (local.set $17
             (i32.add
              (i32.shl
               (local.get $10)
               (i32.const 2)
              )
              (local.get $3)
             )
            )
            (local.set $18
             (f32.load
              (local.get $17)
             )
            )
            (local.set $18
             (f32.mul
              (local.get $9)
              (local.get $18)
             )
            )
            (local.set $9
             (f32.sub
              (f32.const 1)
              (local.get $9)
             )
            )
            (local.set $10
             (i32.add
              (i32.shl
               (local.get $10)
               (i32.const 2)
              )
              (local.get $1)
             )
            )
            (local.set $30
             (f32.load
              (local.get $10)
             )
            )
            (local.set $9
             (f32.mul
              (local.get $9)
              (local.get $30)
             )
            )
            (local.set $9
             (f32.add
              (local.get $18)
              (local.get $9)
             )
            )
            (f32.store
             (local.get $17)
             (local.get $9)
            )
            ;;@ src/opus_decoder.c:196:0
            (local.set $4
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (br_if $while-in39
             (i32.ne
              (local.get $4)
              (local.get $24)
             )
            )
           )
           ;;@ src/opus_decoder.c:194:0
           (local.set $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (br_if $while-in37
            (i32.ne
             (local.get $5)
             (local.get $6)
            )
           )
          )
          (br $label$break$L170)
         )
        )
        ;;@ src/opus_decoder.c:578:0
        (local.set $5
         (i32.mul
          (local.get $6)
          (local.get $24)
         )
        )
        (if
         (i32.gt_s
          (local.get $5)
          (i32.const 0)
         )
         (block
          (local.set $4
           (i32.const 0)
          )
          (loop $while-in41
           ;;@ src/opus_decoder.c:579:0
           (local.set $10
            (i32.add
             (i32.shl
              (local.get $4)
              (i32.const 2)
             )
             (local.get $1)
            )
           )
           (local.set $10
            (i32.load
             (local.get $10)
            )
           )
           (local.set $17
            (i32.add
             (i32.shl
              (local.get $4)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (i32.store
            (local.get $17)
            (local.get $10)
           )
           ;;@ src/opus_decoder.c:578:0
           (local.set $4
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
           (br_if $while-in41
            (i32.lt_s
             (local.get $4)
             (local.get $5)
            )
           )
          )
         )
        )
        ;;@ src/opus_decoder.c:580:0
        (local.set $17
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
        (local.set $7
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (local.get $3)
         )
        )
        ;;@ src/opus_decoder.c:582:0
        (local.set $1
         (i32.load offset=12
          (local.get $0)
         )
        )
        ;;@ src/opus_decoder.c:193:0
        (local.set $14
         (i32.div_s
          (i32.const 48000)
          (local.get $1)
         )
        )
        ;;@ src/opus_decoder.c:194:0
        (local.set $1
         (i32.gt_s
          (local.get $6)
          (i32.const 0)
         )
        )
        (local.set $4
         (i32.gt_s
          (local.get $28)
          (i32.const 399)
         )
        )
        (if
         (i32.and
          (local.get $1)
          (local.get $4)
         )
         (block
          (local.set $4
           (i32.const 0)
          )
          (loop $while-in43
           (local.set $1
            (i32.const 0)
           )
           (loop $while-in45
            ;;@ src/opus_decoder.c:198:0
            (local.set $5
             (i32.mul
              (local.get $1)
              (local.get $14)
             )
            )
            (local.set $5
             (i32.add
              (i32.shl
               (local.get $5)
               (i32.const 2)
              )
              (local.get $8)
             )
            )
            (local.set $9
             (f32.load
              (local.get $5)
             )
            )
            (local.set $9
             (f32.mul
              (local.get $9)
              (local.get $9)
             )
            )
            ;;@ src/opus_decoder.c:199:0
            (local.set $5
             (i32.mul
              (local.get $1)
              (local.get $6)
             )
            )
            (local.set $5
             (i32.add
              (local.get $4)
              (local.get $5)
             )
            )
            (local.set $10
             (i32.add
              (i32.shl
               (local.get $5)
               (i32.const 2)
              )
              (local.get $7)
             )
            )
            (local.set $18
             (f32.load
              (local.get $10)
             )
            )
            (local.set $18
             (f32.mul
              (local.get $9)
              (local.get $18)
             )
            )
            (local.set $9
             (f32.sub
              (f32.const 1)
              (local.get $9)
             )
            )
            (local.set $5
             (i32.add
              (i32.shl
               (local.get $5)
               (i32.const 2)
              )
              (local.get $17)
             )
            )
            (local.set $30
             (f32.load
              (local.get $5)
             )
            )
            (local.set $9
             (f32.mul
              (local.get $9)
              (local.get $30)
             )
            )
            (local.set $9
             (f32.add
              (local.get $18)
              (local.get $9)
             )
            )
            (f32.store
             (local.get $10)
             (local.get $9)
            )
            ;;@ src/opus_decoder.c:196:0
            (local.set $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (br_if $while-in45
             (i32.ne
              (local.get $1)
              (local.get $24)
             )
            )
           )
           ;;@ src/opus_decoder.c:194:0
           (local.set $4
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
           (br_if $while-in43
            (i32.ne
             (local.get $4)
             (local.get $6)
            )
           )
          )
         )
        )
       )
      )
      ;;@ src/opus_decoder.c:595:0
      (local.set $1
       (i32.load offset=40
        (local.get $0)
       )
      )
      (if
       (local.get $1)
       (block
        ;;@ src/opus_decoder.c:598:0
        (local.set $9
         (f32.convert_i32_s
          (local.get $1)
         )
        )
        (local.set $9
         (f32.mul
          (local.get $9)
          (f32.const 6.488140788860619e-04)
         )
        )
        (local.set $34
         (f64.promote_f32
          (local.get $9)
         )
        )
        (local.set $34
         (f64.mul
          (local.get $34)
          (f64.const 0.6931471805599453)
         )
        )
        (local.set $34
         (call $_exp
          (local.get $34)
         )
        )
        (local.set $9
         (f32.demote_f64
          (local.get $34)
         )
        )
        ;;@ src/opus_decoder.c:599:0
        (local.set $1
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.set $4
         (i32.mul
          (local.get $1)
          (local.get $11)
         )
        )
        (if
         (i32.gt_s
          (local.get $4)
          (i32.const 0)
         )
         (block
          (local.set $1
           (i32.const 0)
          )
          (loop $while-in47
           ;;@ src/opus_decoder.c:602:0
           (local.set $5
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (local.set $18
            (f32.load
             (local.get $5)
            )
           )
           (local.set $18
            (f32.mul
             (local.get $18)
             (local.get $9)
            )
           )
           ;;@ src/opus_decoder.c:603:0
           (f32.store
            (local.get $5)
            (local.get $18)
           )
           ;;@ src/opus_decoder.c:599:0
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (br_if $while-in47
            (i32.lt_s
             (local.get $1)
             (local.get $4)
            )
           )
          )
         )
        )
       )
      )
      (local.set $1
       (if (result i32)
        ;;@ src/opus_decoder.c:607:0
        (i32.lt_s
         (local.get $2)
         (i32.const 2)
        )
        (i32.const 0)
        (block (result i32)
         ;;@ src/opus_decoder.c:610:0
         (local.set $1
          (i32.load offset=28
           (local.get $19)
          )
         )
         (local.set $2
          (i32.load offset=84
           (local.get $26)
          )
         )
         (i32.xor
          (local.get $1)
          (local.get $2)
         )
        )
       )
      )
      (i32.store offset=84
       (local.get $0)
       (local.get $1)
      )
      ;;@ src/opus_decoder.c:612:0
      (i32.store offset=60
       (local.get $0)
       (local.get $21)
      )
      ;;@ src/opus_decoder.c:613:0
      (local.set $1
       (i32.xor
        (local.get $35)
        (i32.const 1)
       )
      )
      (local.set $1
       (i32.and
        (local.get $1)
        (local.get $15)
       )
      )
      (local.set $1
       (i32.and
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.store offset=68
       (local.get $0)
       (local.get $1)
      )
      ;;@ src/opus_decoder.c:622:0
      (local.set $0
       (i32.lt_s
        (local.get $13)
        (i32.const 0)
       )
      )
      (select
       (local.get $13)
       (local.get $11)
       (local.get $0)
      )
     )
    )
   )
   ;;@ src/opus_decoder.c:624:0
   (call $_llvm_stackrestore
    (local.get $45)
   )
   (global.set $STACKTOP
    (local.get $26)
   )
   (return
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $26)
  )
  (local.get $1)
 )
 (func $_opus_decode_float (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local.set $0
   (if (result i32)
    ;;@ src/opus_decoder.c:826:0
    (i32.lt_s
     (local.get $4)
     (i32.const 1)
    )
    (i32.const -1)
    ;;@ src/opus_decoder.c:828:0
    (call $_opus_decode_native
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (local.get $4)
     (local.get $5)
     (i32.const 0)
    )
   )
  )
  ;;@ src/opus_decoder.c:829:0
  (local.get $0)
 )
 (func $_opus_decoder_destroy (; has Stack IR ;) (param $0 i32)
  ;;@ src/opus_decoder.c:969:0
  (call $_free
   (local.get $0)
  )
 )
 (func $_speex_resampler_init (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  ;;@ resample.c:796:0
  (local.set $0
   (call $_speex_resampler_init_frac
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
   )
  )
  (local.get $0)
 )
 (func $_speex_resampler_init_frac (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  ;;@ resample.c:804:0
  (local.set $7
   (i32.eqz
    (local.get $0)
   )
  )
  (local.set $8
   (i32.eqz
    (local.get $1)
   )
  )
  (local.set $7
   (i32.or
    (local.get $7)
    (local.get $8)
   )
  )
  (local.set $8
   (i32.eqz
    (local.get $2)
   )
  )
  (local.set $7
   (i32.or
    (local.get $7)
    (local.get $8)
   )
  )
  (local.set $8
   (i32.gt_u
    (local.get $5)
    (i32.const 10)
   )
  )
  (block $folding-inner0
   (if
    (i32.or
     (local.get $7)
     (local.get $8)
    )
    (block
     ;;@ resample.c:806:0
     (br_if $folding-inner0
      (i32.eqz
       (local.get $6)
      )
     )
     ;;@ resample.c:807:0
     (i32.store
      (local.get $6)
      (i32.const 3)
     )
     (br $folding-inner0)
    )
   )
   ;;@ ./os_support.h:56:0
   (local.set $7
    (call $_calloc
     (i32.const 96)
    )
   )
   (if
    ;;@ resample.c:811:0
    (i32.eqz
     (local.get $7)
    )
    (block
     ;;@ resample.c:813:0
     (br_if $folding-inner0
      (i32.eqz
       (local.get $6)
      )
     )
     ;;@ resample.c:814:0
     (i32.store
      (local.get $6)
      (i32.const 1)
     )
     (br $folding-inner0)
    )
   )
   ;;@ resample.c:823:0
   (i64.store align=4
    (local.get $7)
    (i64.const 0)
   )
   ;;@ resample.c:819:0
   (i64.store offset=8 align=4
    (local.get $7)
    (i64.const 0)
   )
   ;;@ resample.c:823:0
   (i32.store offset=16
    (local.get $7)
    (i32.const -1)
   )
   ;;@ resample.c:830:0
   (f32.store offset=44
    (local.get $7)
    (f32.const 1)
   )
   ;;@ resample.c:831:0
   (i32.store offset=20
    (local.get $7)
    (local.get $0)
   )
   ;;@ resample.c:832:0
   (i32.store offset=88
    (local.get $7)
    (i32.const 1)
   )
   ;;@ resample.c:833:0
   (i32.store offset=92
    (local.get $7)
    (i32.const 1)
   )
   ;;@ resample.c:835:0
   (i32.store offset=32
    (local.get $7)
    (i32.const 160)
   )
   ;;@ resample.c:838:0
   (local.set $0
    (i32.shl
     (local.get $0)
     (i32.const 2)
    )
   )
   ;;@ ./os_support.h:56:0
   (local.set $8
    (call $_calloc
     (local.get $0)
    )
   )
   ;;@ resample.c:838:0
   (i32.store offset=60
    (local.get $7)
    (local.get $8)
   )
   (if
    (local.get $8)
    (block
     ;;@ ./os_support.h:56:0
     (local.set $8
      (call $_calloc
       (local.get $0)
      )
     )
     ;;@ resample.c:840:0
     (i32.store offset=68
      (local.get $7)
      (local.get $8)
     )
     (if
      (local.get $8)
      (block
       ;;@ ./os_support.h:56:0
       (local.set $0
        (call $_calloc
         (local.get $0)
        )
       )
       ;;@ resample.c:842:0
       (local.set $8
        (i32.sub
         (local.get $7)
         (i32.const -64)
        )
       )
       (i32.store
        (local.get $8)
        (local.get $0)
       )
       (if
        (local.get $0)
        (block
         ;;@ resample.c:1159:0
         (i32.store offset=16
          (local.get $7)
          (local.get $5)
         )
         (call $_speex_resampler_set_rate_frac
          (local.get $7)
          (local.get $1)
          (local.get $2)
          (local.get $3)
          (local.get $4)
         )
         ;;@ resample.c:848:0
         (local.set $0
          (call $_update_filter
           (local.get $7)
          )
         )
         (if
          ;;@ resample.c:849:0
          (local.get $0)
          (block
           ;;@ resample.c:870:0
           (local.set $1
            (i32.load offset=72
             (local.get $7)
            )
           )
           ;;@ ./os_support.h:81:0
           (call $_free
            (local.get $1)
           )
           ;;@ resample.c:871:0
           (local.set $1
            (i32.load offset=76
             (local.get $7)
            )
           )
           ;;@ ./os_support.h:81:0
           (call $_free
            (local.get $1)
           )
           ;;@ resample.c:872:0
           (local.set $1
            (i32.load offset=60
             (local.get $7)
            )
           )
           ;;@ ./os_support.h:81:0
           (call $_free
            (local.get $1)
           )
           ;;@ resample.c:873:0
           (local.set $1
            (i32.load offset=68
             (local.get $7)
            )
           )
           ;;@ ./os_support.h:81:0
           (call $_free
            (local.get $1)
           )
           ;;@ resample.c:874:0
           (local.set $1
            (i32.load
             (local.get $8)
            )
           )
           ;;@ ./os_support.h:81:0
           (call $_free
            (local.get $1)
           )
           (call $_free
            (local.get $7)
           )
           (local.set $7
            (i32.const 0)
           )
          )
          ;;@ resample.c:851:0
          (i32.store offset=52
           (local.get $7)
           (i32.const 1)
          )
         )
         (if
          ;;@ resample.c:856:0
          (i32.eqz
           (local.get $6)
          )
          ;;@ resample.c:866:0
          (return
           (local.get $7)
          )
         )
         ;;@ resample.c:857:0
         (i32.store
          (local.get $6)
          (local.get $0)
         )
         ;;@ resample.c:866:0
         (return
          (local.get $7)
         )
        )
       )
      )
     )
    )
   )
   (if
    ;;@ resample.c:862:0
    (local.get $6)
    ;;@ resample.c:863:0
    (i32.store
     (local.get $6)
     (i32.const 1)
    )
   )
   ;;@ resample.c:871:0
   (local.set $0
    (i32.load offset=76
     (local.get $7)
    )
   )
   ;;@ ./os_support.h:81:0
   (call $_free
    (local.get $0)
   )
   ;;@ resample.c:872:0
   (local.set $0
    (i32.load offset=60
     (local.get $7)
    )
   )
   ;;@ ./os_support.h:81:0
   (call $_free
    (local.get $0)
   )
   ;;@ resample.c:873:0
   (local.set $0
    (i32.load offset=68
     (local.get $7)
    )
   )
   ;;@ ./os_support.h:81:0
   (call $_free
    (local.get $0)
   )
   ;;@ resample.c:874:0
   (local.set $0
    (i32.sub
     (local.get $7)
     (i32.const -64)
    )
   )
   (local.set $0
    (i32.load
     (local.get $0)
    )
   )
   ;;@ ./os_support.h:81:0
   (call $_free
    (local.get $0)
   )
   (call $_free
    (local.get $7)
   )
   ;;@ resample.c:866:0
   (return
    (i32.const 0)
   )
  )
  (i32.const 0)
 )
 (func $_speex_resampler_set_rate_frac (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   ;;@ resample.c:1113:0
   (i32.or
    (i32.eqz
     (local.get $1)
    )
    (i32.eqz
     (local.get $2)
    )
   )
   (return)
  )
  (if
   ;;@ resample.c:1116:0
   (i32.eq
    (i32.load
     (local.get $0)
    )
    (local.get $3)
   )
   (if
    (i32.eq
     (i32.load offset=4
      (local.get $0)
     )
     (local.get $4)
    )
    (if
     (i32.eq
      (i32.load offset=8
       (local.get $0)
      )
      (local.get $1)
     )
     (if
      (i32.eq
       (i32.load offset=12
        (local.get $0)
       )
       (local.get $2)
      )
      (return)
     )
    )
   )
  )
  ;;@ resample.c:1119:0
  (local.set $5
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ resample.c:1120:0
  (i32.store
   (local.get $0)
   (local.get $3)
  )
  ;;@ resample.c:1121:0
  (i32.store offset=4
   (local.get $0)
   (local.get $4)
  )
  ;;@ resample.c:1122:0
  (i32.store offset=8
   (local.get $0)
   (local.get $1)
  )
  ;;@ resample.c:1123:0
  (i32.store offset=12
   (local.get $0)
   (local.get $2)
  )
  (local.set $3
   (local.get $2)
  )
  (local.set $4
   (local.get $1)
  )
  (loop $while-in
   (if
    ;;@ resample.c:1097:0
    (local.tee $6
     (i32.rem_u
      (local.get $4)
      (local.get $3)
     )
    )
    (block
     (local.set $4
      (local.get $3)
     )
     (local.set $3
      (local.get $6)
     )
     (br $while-in)
    )
   )
  )
  ;;@ resample.c:1127:0
  (i32.store offset=8
   (local.get $0)
   (i32.div_u
    (local.get $1)
    (local.get $3)
   )
  )
  ;;@ resample.c:1128:0
  (i32.store offset=12
   (local.get $0)
   (local.tee $2
    (i32.div_u
     (local.get $2)
     (local.get $3)
    )
   )
  )
  (if
   ;;@ resample.c:1130:0
   (local.get $5)
   (if
    ;;@ resample.c:1132:0
    (i32.load offset=20
     (local.get $0)
    )
    (block $label$break$L13
     (local.set $6
      (i32.load
       (i32.sub
        (local.get $0)
        (i32.const -64)
       )
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in1
      (block $__rjti$0
       ;;@ resample.c:598:0
       (br_if $__rjti$0
        (i32.or
         (i32.gt_u
          ;;@ resample.c:595:0
          (local.tee $7
           (i32.sub
            ;;@ resample.c:1134:0
            (local.tee $4
             (i32.load
              (local.tee $3
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 2)
                )
                (local.get $6)
               )
              )
             )
            )
            (i32.mul
             (local.get $5)
             (local.tee $4
              (i32.div_u
               (local.get $4)
               (local.get $5)
              )
             )
            )
           )
          )
          ;;@ resample.c:598:0
          (local.tee $8
           (i32.div_u
            (i32.const -1)
            (local.get $2)
           )
          )
         )
         (i32.gt_u
          (local.get $4)
          (local.get $8)
         )
        )
       )
       ;;@ resample.c:599:0
       (br_if $__rjti$0
        (i32.gt_u
         (local.tee $4
          (i32.mul
           (local.get $2)
           (local.get $4)
          )
         )
         (i32.xor
          (local.tee $2
           (i32.div_u
            (i32.mul
             (local.get $2)
             (local.get $7)
            )
            (local.get $5)
           )
          )
          (i32.const -1)
         )
        )
       )
       ;;@ resample.c:601:0
       (i32.store
        (local.get $3)
        (local.tee $2
         (i32.add
          (local.get $2)
          (local.get $4)
         )
        )
       )
       (if
        ;;@ resample.c:1137:0
        (i32.ge_u
         (local.get $2)
         (local.tee $2
          (i32.load offset=12
           (local.get $0)
          )
         )
        )
        ;;@ resample.c:1138:0
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $2)
          (i32.const -1)
         )
        )
       )
       ;;@ resample.c:1132:0
       (br_if $label$break$L13
        (i32.ge_u
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.load offset=20
          (local.get $0)
         )
        )
       )
       ;;@ resample.c:1134:0
       (local.set $2
        (i32.load offset=12
         (local.get $0)
        )
       )
       (br $while-in1)
      )
     )
     (return)
    )
   )
  )
  (if
   ;;@ resample.c:1142:0
   (i32.eqz
    (i32.load offset=52
     (local.get $0)
    )
   )
   (return)
  )
  (drop
   ;;@ resample.c:1145:0
   (call $_update_filter
    (local.get $0)
   )
  )
 )
 (func $_update_filter (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 f32)
  (local $13 f32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  ;;@ resample.c:607:0
  (local.set $17
   (i32.load offset=24
    (local.get $0)
   )
  )
  ;;@ resample.c:608:0
  (local.set $18
   (i32.load offset=28
    (local.get $0)
   )
  )
  ;;@ resample.c:613:0
  (local.set $5
   (i32.load offset=8
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=12
    (local.get $0)
   )
  )
  (local.set $1
   (i32.div_u
    (local.get $5)
    (local.get $4)
   )
  )
  (i32.store offset=36
   (local.get $0)
   (local.get $1)
  )
  (local.set $1
   (i32.sub
    (local.get $5)
    (i32.mul
     (local.get $1)
     (local.get $4)
    )
   )
  )
  ;;@ resample.c:614:0
  (i32.store offset=40
   (local.get $0)
   (local.get $1)
  )
  ;;@ resample.c:615:0
  (local.set $3
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $1
   (i32.add
    (i32.mul
     (local.get $3)
     (i32.const 20)
    )
    (i32.const 27380)
   )
  )
  (local.set $2
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=48
   (local.get $0)
   (local.get $2)
  )
  ;;@ resample.c:616:0
  (local.set $1
   (i32.add
    (i32.mul
     (local.get $3)
     (i32.const 20)
    )
    (i32.const 27376)
   )
  )
  (local.set $1
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=24
   (local.get $0)
   (local.get $1)
  )
  (block $folding-inner0
   (block $do-once
    (block $__rjti$1
     (if
      ;;@ resample.c:618:0
      (i32.gt_u
       (local.get $5)
       (local.get $4)
      )
      (block
       ;;@ resample.c:621:0
       (local.set $3
        (i32.add
         (i32.mul
          (local.get $3)
          (i32.const 20)
         )
         (i32.const 27384)
        )
       )
       (local.set $13
        (f32.load
         (local.get $3)
        )
       )
       (local.set $15
        (f32.convert_i32_u
         (local.get $4)
        )
       )
       (local.set $13
        (f32.mul
         (local.get $13)
         (local.get $15)
        )
       )
       (local.set $15
        (f32.convert_i32_u
         (local.get $5)
        )
       )
       (local.set $13
        (f32.div
         (local.get $13)
         (local.get $15)
        )
       )
       (f32.store offset=44
        (local.get $0)
        (local.get $13)
       )
       ;;@ resample.c:595:0
       (local.set $3
        (i32.sub
         (local.get $1)
         (i32.mul
          (local.tee $1
           (i32.div_u
            (local.get $1)
            (local.get $4)
           )
          )
          (local.get $4)
         )
        )
       )
       ;;@ resample.c:598:0
       (local.set $6
        (i32.div_u
         (i32.const -1)
         (local.get $5)
        )
       )
       (local.set $7
        (i32.gt_u
         (local.get $3)
         (local.get $6)
        )
       )
       (local.set $6
        (i32.gt_u
         (local.get $1)
         (local.get $6)
        )
       )
       (if
        (i32.eqz
         (i32.or
          (local.get $6)
          (local.get $7)
         )
        )
        (block
         ;;@ resample.c:599:0
         (local.set $1
          (i32.mul
           (local.get $1)
           (local.get $5)
          )
         )
         (local.set $3
          (i32.mul
           (local.get $3)
           (local.get $5)
          )
         )
         (local.set $3
          (i32.div_u
           (local.get $3)
           (local.get $4)
          )
         )
         (local.set $6
          (i32.xor
           (local.get $3)
           (i32.const -1)
          )
         )
         (if
          (i32.le_u
           (local.get $1)
           (local.get $6)
          )
          (block
           ;;@ resample.c:601:0
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 7)
            )
           )
           ;;@ resample.c:625:0
           (local.set $1
            (i32.add
             (local.get $1)
             (local.get $3)
            )
           )
           (local.set $1
            (i32.and
             (local.get $1)
             (i32.const -8)
            )
           )
           (i32.store offset=24
            (local.get $0)
            (local.get $1)
           )
           ;;@ resample.c:626:0
           (local.set $3
            (i32.shl
             (local.get $4)
             (i32.const 1)
            )
           )
           (local.set $3
            (i32.lt_u
             (local.get $3)
             (local.get $5)
            )
           )
           (local.set $6
            (i32.shr_u
             (local.get $2)
             (local.get $3)
            )
           )
           ;;@ resample.c:628:0
           (local.set $2
            (i32.shl
             (local.get $4)
             (i32.const 2)
            )
           )
           (local.set $2
            (i32.lt_u
             (local.get $2)
             (local.get $5)
            )
           )
           (local.set $6
            (i32.shr_u
             (local.get $6)
             (local.get $2)
            )
           )
           ;;@ resample.c:630:0
           (local.set $3
            (i32.or
             (local.get $2)
             (local.get $3)
            )
           )
           (local.set $2
            (i32.shl
             (local.get $4)
             (i32.const 3)
            )
           )
           (local.set $2
            (i32.lt_u
             (local.get $2)
             (local.get $5)
            )
           )
           (local.set $6
            (i32.shr_u
             (local.get $6)
             (local.get $2)
            )
           )
           ;;@ resample.c:632:0
           (local.set $3
            (i32.or
             (local.get $2)
             (local.get $3)
            )
           )
           (local.set $2
            (i32.shl
             (local.get $4)
             (i32.const 4)
            )
           )
           (local.set $5
            (i32.lt_u
             (local.get $2)
             (local.get $5)
            )
           )
           (local.set $2
            (i32.shr_u
             (local.get $6)
             (local.get $5)
            )
           )
           (if
            ;;@ resample.c:634:0
            (i32.or
             (local.get $3)
             (local.get $5)
            )
            (i32.store offset=48
             (local.get $0)
             (local.get $2)
            )
           )
           (if
            (i32.eqz
             (local.get $2)
            )
            (block
             ;;@ resample.c:635:0
             (i32.store offset=48
              (local.get $0)
              (i32.const 1)
             )
             (local.set $2
              (i32.const 1)
             )
            )
           )
           (br $__rjti$1)
          )
         )
        )
       )
      )
      (block
       ;;@ resample.c:638:0
       (local.set $5
        (i32.add
         (i32.mul
          (local.get $3)
          (i32.const 20)
         )
         (i32.const 27388)
        )
       )
       (local.set $5
        (i32.load
         (local.get $5)
        )
       )
       (i32.store offset=44
        (local.get $0)
        (local.get $5)
       )
       (br $__rjti$1)
      )
     )
     (br $do-once)
    )
    ;;@ resample.c:647:0
    (local.set $5
     (i32.mul
      (local.get $1)
      (local.get $4)
     )
    )
    (local.set $3
     (i32.mul
      (local.get $1)
      (local.get $2)
     )
    )
    (local.set $3
     (i32.add
      (local.get $3)
      (i32.const 8)
     )
    )
    (local.set $1
     (block $__rjto$0 (result i32)
      (block $__rjti$0
       (br_if $__rjti$0
        (i32.gt_u
         (local.get $5)
         (local.get $3)
        )
       )
       ;;@ resample.c:648:0
       (local.set $4
        (i32.div_u
         (i32.const 536870911)
         (local.get $4)
        )
       )
       (br_if $__rjti$0
        (i32.lt_u
         (local.get $4)
         (local.get $1)
        )
       )
       (local.set $2
        (i32.const 1)
       )
       (br $__rjto$0
        (local.get $5)
       )
      )
      ;;@ resample.c:654:0
      (local.set $2
       (i32.div_u
        (i32.const 536870903)
        (local.get $2)
       )
      )
      (br_if $do-once
       (i32.lt_u
        (local.get $2)
        (local.get $1)
       )
      )
      (local.set $2
       (i32.const 0)
      )
      (local.get $3)
     )
    )
    ;;@ resample.c:659:0
    (local.set $5
     (i32.load offset=80
      (local.get $0)
     )
    )
    (if
     (i32.lt_u
      (local.get $5)
      (local.get $1)
     )
     (block
      ;;@ resample.c:661:0
      (local.set $5
       (i32.load offset=76
        (local.get $0)
       )
      )
      (local.set $3
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
      ;;@ ./os_support.h:73:0
      (local.set $5
       (call $_realloc
        (local.get $5)
        (local.get $3)
       )
      )
      ;;@ resample.c:662:0
      (br_if $do-once
       (i32.eqz
        (local.get $5)
       )
      )
      ;;@ resample.c:665:0
      (i32.store offset=76
       (local.get $0)
       (local.get $5)
      )
      ;;@ resample.c:666:0
      (i32.store offset=80
       (local.get $0)
       (local.get $1)
      )
     )
    )
    (i32.store offset=84
     (local.get $0)
     (if (result i32)
      (local.get $2)
      (block (result i32)
       ;;@ resample.c:671:0
       (local.set $4
        (i32.load offset=12
         (local.get $0)
        )
       )
       (if
        (local.get $4)
        (block
         ;;@ resample.c:674:0
         (local.set $15
          (f32.convert_i32_u
           (local.get $4)
          )
         )
         (local.set $9
          (i32.gt_u
           (local.tee $1
            (i32.load offset=24
             (local.get $0)
            )
           )
           (i32.const 1)
          )
         )
         (local.set $11
          (i32.div_s
           (local.get $1)
           (i32.const -2)
          )
         )
         (local.set $5
          (i32.const 0)
         )
         (local.set $2
          (local.get $1)
         )
         (loop $while-in
          (local.set $2
           (if (result i32)
            (local.get $2)
            (block (result i32)
             (local.set $13
              (f32.div
               (f32.convert_i32_u
                (local.get $5)
               )
               (local.get $15)
              )
             )
             ;;@ resample.c:676:0
             (local.set $3
              (i32.add
               (i32.mul
                (i32.load offset=16
                 (local.get $0)
                )
                (i32.const 20)
               )
               (i32.const 27392)
              )
             )
             (local.set $6
              (i32.load
               (local.get $3)
              )
             )
             (local.set $7
              (i32.load offset=76
               (local.get $0)
              )
             )
             (local.set $12
              (f32.load offset=44
               (local.get $0)
              )
             )
             (local.set $3
              (i32.div_s
               (local.get $2)
               (i32.const -2)
              )
             )
             (local.set $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.set $10
              (f32.convert_i32_s
               (local.get $3)
              )
             )
             (local.set $10
              (f32.sub
               (local.get $10)
               (local.get $13)
              )
             )
             (local.set $12
              (call $_sinc
               (local.get $12)
               (local.get $10)
               (local.get $2)
               (local.get $6)
              )
             )
             (local.set $2
              (i32.mul
               (local.get $2)
               (local.get $5)
              )
             )
             (local.set $2
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 2)
               )
               (local.get $7)
              )
             )
             (f32.store
              (local.get $2)
              (local.get $12)
             )
             (if (result i32)
              (local.get $9)
              (block (result i32)
               (local.set $14
                (i32.mul
                 (local.get $1)
                 (local.get $5)
                )
               )
               (local.set $2
                (i32.const 1)
               )
               (loop $while-in1 (result i32)
                (local.set $12
                 (f32.load offset=44
                  (local.get $0)
                 )
                )
                (local.set $3
                 (i32.add
                  (local.get $2)
                  (i32.const 1)
                 )
                )
                (local.set $8
                 (i32.add
                  (local.get $3)
                  (local.get $11)
                 )
                )
                (local.set $10
                 (f32.convert_i32_s
                  (local.get $8)
                 )
                )
                (local.set $10
                 (f32.sub
                  (local.get $10)
                  (local.get $13)
                 )
                )
                (local.set $12
                 (call $_sinc
                  (local.get $12)
                  (local.get $10)
                  (local.get $1)
                  (local.get $6)
                 )
                )
                (local.set $2
                 (i32.add
                  (local.get $2)
                  (local.get $14)
                 )
                )
                (local.set $2
                 (i32.add
                  (i32.shl
                   (local.get $2)
                   (i32.const 2)
                  )
                  (local.get $7)
                 )
                )
                (f32.store
                 (local.get $2)
                 (local.get $12)
                )
                (if (result i32)
                 ;;@ resample.c:674:0
                 (i32.lt_u
                  (local.get $3)
                  (local.get $1)
                 )
                 (block
                  (local.set $2
                   (local.get $3)
                  )
                  (br $while-in1)
                 )
                 (local.get $1)
                )
               )
              )
              (local.get $1)
             )
            )
            (i32.const 0)
           )
          )
          ;;@ resample.c:671:0
          (local.set $5
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          (br_if $while-in
           (i32.lt_u
            (local.get $5)
            (local.get $4)
           )
          )
         )
        )
        ;;@ resample.c:709:0
        (local.set $1
         (i32.load offset=24
          (local.get $0)
         )
        )
       )
       ;;@ resample.c:682:0
       (local.set $2
        (i32.load offset=16
         (local.get $0)
        )
       )
       (local.set $2
        (i32.gt_s
         (local.get $2)
         (i32.const 8)
        )
       )
       ;;@ resample.c:683:0
       (select
        (i32.const 35)
        (i32.const 36)
        (local.get $2)
       )
      )
      (block (result i32)
       ;;@ resample.c:690:0
       (local.set $1
        (i32.load offset=48
         (local.get $0)
        )
       )
       (local.set $2
        (i32.load offset=24
         (local.get $0)
        )
       )
       (local.set $5
        (i32.mul
         (local.get $1)
         (local.get $2)
        )
       )
       (local.set $3
        (i32.add
         (local.get $5)
         (i32.const 4)
        )
       )
       (local.set $1
        (if (result i32)
         (i32.gt_s
          (local.get $3)
          (i32.const -4)
         )
         (block (result i32)
          ;;@ resample.c:691:0
          (local.set $4
           (i32.add
            (i32.mul
             (local.tee $5
              (i32.load offset=16
               (local.get $0)
              )
             )
             (i32.const 20)
            )
            (i32.const 27392)
           )
          )
          (local.set $4
           (i32.load
            (local.get $4)
           )
          )
          (local.set $6
           (i32.load offset=76
            (local.get $0)
           )
          )
          (local.set $13
           (f32.convert_i32_u
            (local.get $1)
           )
          )
          (local.set $15
           (f32.convert_i32_u
            (i32.shr_u
             (local.get $2)
             (i32.const 1)
            )
           )
          )
          (local.set $1
           (i32.const -4)
          )
          (loop $while-in3 (result i32)
           (local.set $12
            (f32.load offset=44
             (local.get $0)
            )
           )
           (local.set $10
            (f32.convert_i32_s
             (local.get $1)
            )
           )
           (local.set $10
            (f32.div
             (local.get $10)
             (local.get $13)
            )
           )
           (local.set $10
            (f32.sub
             (local.get $10)
             (local.get $15)
            )
           )
           (local.set $12
            (call $_sinc
             (local.get $12)
             (local.get $10)
             (local.get $2)
             (local.get $4)
            )
           )
           (local.set $7
            (i32.add
             (local.get $1)
             (i32.const 4)
            )
           )
           (local.set $7
            (i32.add
             (i32.shl
              (local.get $7)
              (i32.const 2)
             )
             (local.get $6)
            )
           )
           (f32.store
            (local.get $7)
            (local.get $12)
           )
           ;;@ resample.c:690:0
           (local.set $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (br_if $while-in3
            (i32.lt_s
             (local.get $1)
             (local.get $3)
            )
           )
           (local.get $5)
          )
         )
         ;;@ resample.c:695:0
         (i32.load offset=16
          (local.get $0)
         )
        )
       )
       (local.set $5
        (i32.gt_s
         (local.get $1)
         (i32.const 8)
        )
       )
       ;;@ resample.c:696:0
       (local.set $1
        (local.get $2)
       )
       (select
        (i32.const 37)
        (i32.const 38)
        (local.get $5)
       )
      )
     )
    )
    ;;@ resample.c:709:0
    (local.set $1
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
    )
    (local.set $2
     (i32.load offset=32
      (local.get $0)
     )
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
    ;;@ resample.c:710:0
    (local.set $2
     (i32.load offset=28
      (local.get $0)
     )
    )
    (if
     (i32.gt_u
      (local.get $1)
      (local.get $2)
     )
     (block
      ;;@ resample.c:713:0
      (local.set $2
       (i32.load offset=20
        (local.get $0)
       )
      )
      (local.set $5
       (i32.div_u
        (i32.const 536870911)
        (local.get $2)
       )
      )
      (br_if $do-once
       (i32.lt_u
        (local.get $5)
        (local.get $1)
       )
      )
      ;;@ resample.c:715:0
      (local.set $5
       (i32.load offset=72
        (local.get $0)
       )
      )
      (local.set $3
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
      (local.set $2
       (i32.mul
        (local.get $2)
        (local.get $3)
       )
      )
      ;;@ ./os_support.h:73:0
      (local.set $2
       (call $_realloc
        (local.get $5)
        (local.get $2)
       )
      )
      ;;@ resample.c:715:0
      (br_if $do-once
       (i32.eqz
        (local.get $2)
       )
      )
      ;;@ resample.c:718:0
      (i32.store offset=72
       (local.get $0)
       (local.get $2)
      )
      ;;@ resample.c:719:0
      (i32.store offset=28
       (local.get $0)
       (local.get $1)
      )
     )
     (local.set $1
      (local.get $2)
     )
    )
    ;;@ resample.c:721:0
    (local.set $2
     (i32.load offset=56
      (local.get $0)
     )
    )
    (if
     (i32.eqz
      (local.get $2)
     )
     (block
      ;;@ resample.c:724:0
      (local.set $2
       (i32.load offset=20
        (local.get $0)
       )
      )
      (local.set $1
       (i32.mul
        (local.get $1)
        (local.get $2)
       )
      )
      (br_if $folding-inner0
       (i32.eqz
        (local.get $1)
       )
      )
      (local.set $0
       (i32.load offset=72
        (local.get $0)
       )
      )
      (local.set $1
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
      ;;@ resample.c:725:0
      (drop
       (call $_memset
        (local.get $0)
        (i32.const 0)
        (local.get $1)
       )
      )
      (br $folding-inner0)
     )
    )
    ;;@ resample.c:727:0
    (local.set $2
     (i32.load offset=24
      (local.get $0)
     )
    )
    (if
     (i32.le_u
      (local.get $2)
      (local.get $17)
     )
     (block
      ;;@ resample.c:766:0
      (br_if $folding-inner0
       (i32.ge_u
        (local.get $2)
        (local.get $17)
       )
      )
      ;;@ resample.c:771:0
      (local.set $1
       (i32.load offset=20
        (local.get $0)
       )
      )
      (br_if $folding-inner0
       (i32.eqz
        (local.get $1)
       )
      )
      (local.set $9
       (i32.load offset=68
        (local.get $0)
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in5
       (block $while-out4
        ;;@ resample.c:774:0
        (local.set $5
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $9)
         )
        )
        (local.set $4
         (i32.load
          (local.get $5)
         )
        )
        ;;@ resample.c:775:0
        (local.set $2
         (i32.sub
          (local.get $17)
          (local.get $2)
         )
        )
        (local.set $3
         (i32.shr_u
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store
         (local.get $5)
         (local.get $3)
        )
        ;;@ resample.c:778:0
        (local.set $2
         (i32.load offset=24
          (local.get $0)
         )
        )
        (local.set $4
         (i32.add
          (local.get $3)
          (local.get $4)
         )
        )
        (local.set $6
         (i32.add
          (local.get $4)
          (i32.const -1)
         )
        )
        (local.set $7
         (i32.sub
          (i32.const 0)
          (local.get $2)
         )
        )
        (if
         (i32.ne
          (local.get $6)
          (local.get $7)
         )
         (block
          (local.set $7
           (i32.load offset=72
            (local.get $0)
           )
          )
          (local.set $11
           (i32.mul
            (local.get $1)
            (i32.load offset=28
             (local.get $0)
            )
           )
          )
          (local.set $14
           (i32.add
            (local.get $2)
            (local.get $6)
           )
          )
          (local.set $2
           (i32.const 0)
          )
          (loop $while-in7
           ;;@ resample.c:779:0
           (local.set $6
            (i32.add
             (local.get $2)
             (local.get $11)
            )
           )
           (local.set $8
            (i32.add
             (local.get $3)
             (local.get $6)
            )
           )
           (local.set $8
            (i32.add
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
             (local.get $7)
            )
           )
           (local.set $8
            (i32.load
             (local.get $8)
            )
           )
           (local.set $6
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 2)
             )
             (local.get $7)
            )
           )
           (i32.store
            (local.get $6)
            (local.get $8)
           )
           ;;@ resample.c:778:0
           (local.set $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (br_if $while-in7
            (i32.lt_u
             (local.get $2)
             (local.get $14)
            )
           )
          )
         )
        )
        ;;@ resample.c:780:0
        (i32.store
         (local.get $5)
         (local.get $4)
        )
        ;;@ resample.c:771:0
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.set $2
         (i32.load offset=20
          (local.get $0)
         )
        )
        (br_if $while-out4
         (i32.ge_u
          (local.get $1)
          (local.get $2)
         )
        )
        ;;@ resample.c:775:0
        (local.set $2
         (i32.load offset=24
          (local.get $0)
         )
        )
        (br $while-in5)
       )
      )
      (br $folding-inner0)
     )
    )
    ;;@ resample.c:732:0
    (local.set $1
     (i32.load offset=20
      (local.get $0)
     )
    )
    (br_if $folding-inner0
     (i32.eqz
      (local.get $1)
     )
    )
    (local.set $19
     (i32.load offset=68
      (local.get $0)
     )
    )
    (local.set $20
     (i32.add
      (local.get $17)
      (i32.const -1)
     )
    )
    (local.set $2
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
    (local.set $21
     (i32.add
      (local.get $2)
      (i32.const -4)
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (loop $while-in9
     (local.set $2
      (i32.mul
       (local.get $5)
       (i32.const -4)
      )
     )
     (local.set $11
      (i32.add
       (local.get $2)
       (local.get $21)
      )
     )
     (local.set $2
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     ;;@ resample.c:741:0
     (local.set $4
      (i32.add
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
       (local.get $19)
      )
     )
     (local.set $3
      (i32.load
       (local.get $4)
      )
     )
     (local.set $1
      (i32.shl
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $7
      (i32.add
       (local.get $1)
       (local.get $17)
      )
     )
     ;;@ resample.c:742:0
     (local.set $1
      (i32.add
       (local.get $3)
       (local.get $20)
      )
     )
     (if
      (local.get $1)
      (block
       (local.set $6
        (i32.load offset=72
         (local.get $0)
        )
       )
       (local.set $9
        (i32.mul
         (local.get $2)
         (local.get $18)
        )
       )
       (local.set $14
        (i32.mul
         (local.get $2)
         (i32.load offset=28
          (local.get $0)
         )
        )
       )
       (loop $while-in11
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
        )
        ;;@ resample.c:743:0
        (local.set $8
         (i32.add
          (local.get $1)
          (local.get $9)
         )
        )
        (local.set $8
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 2)
          )
          (local.get $6)
         )
        )
        (local.set $8
         (i32.load
          (local.get $8)
         )
        )
        (local.set $16
         (i32.add
          (local.get $1)
          (local.get $3)
         )
        )
        (local.set $16
         (i32.add
          (local.get $14)
          (local.get $16)
         )
        )
        (local.set $16
         (i32.add
          (i32.shl
           (local.get $16)
           (i32.const 2)
          )
          (local.get $6)
         )
        )
        (i32.store
         (local.get $16)
         (local.get $8)
        )
        ;;@ resample.c:742:0
        (br_if $while-in11
         (local.get $1)
        )
       )
      )
     )
     (if
      ;;@ resample.c:744:0
      (local.get $3)
      (block
       (local.set $1
        (i32.load offset=72
         (local.get $0)
        )
       )
       (local.set $6
        (i32.load offset=28
         (local.get $0)
        )
       )
       (local.set $6
        (i32.mul
         (local.get $6)
         (local.get $11)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (local.get $6)
        )
       )
       (local.set $3
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
       )
       ;;@ resample.c:745:0
       (drop
        (call $_memset
         (local.get $1)
         (i32.const 0)
         (local.get $3)
        )
       )
      )
     )
     ;;@ resample.c:746:0
     (i32.store
      (local.get $4)
      (i32.const 0)
     )
     ;;@ resample.c:748:0
     (local.set $9
      (i32.load offset=24
       (local.get $0)
      )
     )
     (if
      (i32.lt_u
       (local.get $7)
       (local.get $9)
      )
      (block
       ;;@ resample.c:752:0
       (local.set $6
        (i32.add
         (local.get $7)
         (i32.const -1)
        )
       )
       (if
        (local.get $6)
        (block
         (local.set $14
          (i32.load offset=72
           (local.get $0)
          )
         )
         (local.set $8
          (i32.mul
           (local.get $2)
           (i32.load offset=28
            (local.get $0)
           )
          )
         )
         (local.set $16
          (i32.add
           (local.get $7)
           (i32.const -2)
          )
         )
         (local.set $22
          (i32.add
           (local.get $9)
           (i32.const -2)
          )
         )
         (local.set $1
          (i32.const 0)
         )
         (local.set $3
          (i32.const 0)
         )
         (loop $while-in13
          ;;@ resample.c:753:0
          (local.set $4
           (i32.add
            (local.get $1)
            (local.get $16)
           )
          )
          (local.set $4
           (i32.add
            (local.get $4)
            (local.get $8)
           )
          )
          (local.set $4
           (i32.add
            (i32.shl
             (local.get $4)
             (i32.const 2)
            )
            (local.get $14)
           )
          )
          (local.set $4
           (i32.load
            (local.get $4)
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (local.get $22)
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (local.get $8)
           )
          )
          (local.set $1
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $14)
           )
          )
          (i32.store
           (local.get $1)
           (local.get $4)
          )
          ;;@ resample.c:752:0
          (local.set $4
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (local.set $1
           (i32.xor
            (local.get $3)
            (i32.const -1)
           )
          )
          (if
           (i32.ne
            (local.get $4)
            (local.get $6)
           )
           (block
            (local.set $3
             (local.get $4)
            )
            (br $while-in13)
           )
          )
         )
        )
        (local.set $6
         (i32.const 0)
        )
       )
       ;;@ resample.c:755:0
       (local.set $1
        (i32.add
         (local.get $9)
         (i32.const -1)
        )
       )
       (if
        (i32.gt_u
         (local.get $1)
         (local.get $6)
        )
        (block
         (local.set $3
          (i32.load offset=72
           (local.get $0)
          )
         )
         (local.set $4
          (i32.load offset=28
           (local.get $0)
          )
         )
         (local.set $4
          (i32.mul
           (local.get $4)
           (local.get $11)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (local.get $4)
          )
         )
         (local.set $1
          (i32.sub
           (local.get $1)
           (local.get $6)
          )
         )
         (local.set $1
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
         )
         ;;@ resample.c:756:0
         (drop
          (call $_memset
           (local.get $3)
           (i32.const 0)
           (local.get $1)
          )
         )
        )
       )
       ;;@ resample.c:758:0
       (local.set $1
        (i32.sub
         (local.get $9)
         (local.get $7)
        )
       )
       (local.set $3
        (i32.shr_u
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.load offset=60
         (local.get $0)
        )
       )
       (local.set $1
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 2)
         )
         (local.get $1)
        )
       )
       (local.set $4
        (i32.load
         (local.get $1)
        )
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (local.get $4)
        )
       )
       (i32.store
        (local.get $1)
        (local.get $3)
       )
      )
      (block
       ;;@ resample.c:761:0
       (local.set $1
        (i32.sub
         (local.get $7)
         (local.get $9)
        )
       )
       (local.set $3
        (i32.shr_u
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $4)
        (local.get $3)
       )
       ;;@ resample.c:762:0
       (local.set $1
        (i32.load offset=24
         (local.get $0)
        )
       )
       (local.set $4
        (i32.add
         (local.get $3)
         (i32.const -1)
        )
       )
       (local.set $6
        (i32.sub
         (i32.const 0)
         (local.get $1)
        )
       )
       (if
        (i32.ne
         (local.get $4)
         (local.get $6)
        )
        (block
         (local.set $6
          (i32.load offset=72
           (local.get $0)
          )
         )
         (local.set $7
          (i32.mul
           (local.get $2)
           (i32.load offset=28
            (local.get $0)
           )
          )
         )
         (local.set $9
          (i32.add
           (local.get $1)
           (local.get $4)
          )
         )
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in15
          ;;@ resample.c:763:0
          (local.set $4
           (i32.add
            (local.get $1)
            (local.get $7)
           )
          )
          (local.set $11
           (i32.add
            (local.get $3)
            (local.get $4)
           )
          )
          (local.set $11
           (i32.add
            (i32.shl
             (local.get $11)
             (i32.const 2)
            )
            (local.get $6)
           )
          )
          (local.set $11
           (i32.load
            (local.get $11)
           )
          )
          (local.set $4
           (i32.add
            (i32.shl
             (local.get $4)
             (i32.const 2)
            )
            (local.get $6)
           )
          )
          (i32.store
           (local.get $4)
           (local.get $11)
          )
          ;;@ resample.c:762:0
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (br_if $while-in15
           (i32.lt_u
            (local.get $1)
            (local.get $9)
           )
          )
         )
        )
       )
      )
     )
     ;;@ resample.c:732:0
     (local.set $1
      (i32.eqz
       (local.get $2)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (if
      (i32.eqz
       (local.get $1)
      )
      (block
       (local.set $1
        (local.get $2)
       )
       (br $while-in9)
      )
     )
    )
    (br $folding-inner0)
   )
   ;;@ resample.c:786:0
   (i32.store offset=84
    (local.get $0)
    (i32.const 39)
   )
   ;;@ resample.c:790:0
   (i32.store offset=24
    (local.get $0)
    (local.get $17)
   )
   ;;@ resample.c:792:0
   (return
    (i32.const 1)
   )
  )
  (i32.const 0)
 )
 (func $_sinc (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 i32) (param $3 i32) (result f32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 i32)
  (local $10 f32)
  (local $11 f64)
  (local $12 f64)
  ;;@ resample.c:291:0
  (local.set $10
   (f32.mul
    (local.get $0)
    (local.get $1)
   )
  )
  ;;@ resample.c:292:0
  (local.set $4
   (f64.promote_f32
    (local.get $1)
   )
  )
  (local.set $5
   (f64.abs
    (local.get $4)
   )
  )
  (if
   (f64.lt
    (local.get $5)
    (f64.const 1e-06)
   )
   ;;@ resample.c:298:0
   (return
    (local.get $0)
   )
  )
  ;;@ resample.c:294:0
  (local.set $6
   (f64.convert_i32_s
    (local.get $2)
   )
  )
  (local.set $7
   (f64.mul
    (local.get $6)
    (f64.const 0.5)
   )
  )
  (if
   (f64.gt
    (local.get $5)
    (local.get $7)
   )
   ;;@ resample.c:298:0
   (return
    (f32.const 0)
   )
  )
  ;;@ resample.c:297:0
  (local.set $7
   (f64.promote_f32
    (local.get $0)
   )
  )
  (local.set $5
   (f64.promote_f32
    (local.get $10)
   )
  )
  (local.set $5
   (f64.mul
    (local.get $5)
    (f64.const 3.141592653589793)
   )
  )
  (local.set $8
   (call $_sin
    (local.get $5)
   )
  )
  (local.set $7
   (f64.mul
    (local.get $8)
    (local.get $7)
   )
  )
  (local.set $11
   (f64.div
    (local.get $7)
    (local.get $5)
   )
  )
  (local.set $4
   (f64.mul
    (local.get $4)
    (f64.const 2)
   )
  )
  (local.set $4
   (f64.div
    (local.get $4)
    (local.get $6)
   )
  )
  (local.set $0
   (f32.demote_f64
    (local.get $4)
   )
  )
  (local.set $0
   (f32.abs
    (local.get $0)
   )
  )
  (local.set $9
   (i32.load
    (local.get $3)
   )
  )
  (local.set $2
   (i32.load offset=4
    (local.get $3)
   )
  )
  ;;@ resample.c:245:0
  (local.set $1
   (f32.convert_i32_s
    (local.get $2)
   )
  )
  (local.set $0
   (f32.mul
    (local.get $0)
    (local.get $1)
   )
  )
  ;;@ resample.c:246:0
  (local.set $1
   (f32.floor
    (local.get $0)
   )
  )
  (local.set $2
   (i32.trunc_f32_s
    (local.get $1)
   )
  )
  ;;@ resample.c:247:0
  (local.set $1
   (f32.convert_i32_s
    (local.get $2)
   )
  )
  (local.set $0
   (f32.sub
    (local.get $0)
    (local.get $1)
   )
  )
  ;;@ resample.c:249:0
  (local.set $4
   (f64.promote_f32
    (local.get $0)
   )
  )
  (local.set $7
   (f64.mul
    (local.get $4)
    (f64.const 0.1666666667)
   )
  )
  (local.set $1
   (f32.mul
    (local.get $0)
    (local.get $0)
   )
  )
  (local.set $0
   (f32.mul
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $5
   (f64.promote_f32
    (local.get $0)
   )
  )
  (local.set $6
   (f64.mul
    (local.get $5)
    (f64.const 0.1666666667)
   )
  )
  (local.set $7
   (f64.sub
    (local.get $6)
    (local.get $7)
   )
  )
  ;;@ resample.c:250:0
  (local.set $8
   (f64.promote_f32
    (local.get $1)
   )
  )
  (local.set $8
   (f64.mul
    (local.get $8)
    (f64.const 0.5)
   )
  )
  (local.set $12
   (f64.add
    (local.get $8)
    (local.get $4)
   )
  )
  (local.set $5
   (f64.mul
    (local.get $5)
    (f64.const 0.5)
   )
  )
  (local.set $5
   (f64.sub
    (local.get $12)
    (local.get $5)
   )
  )
  ;;@ resample.c:252:0
  (local.set $4
   (f64.mul
    (local.get $4)
    (f64.const 0.3333333333)
   )
  )
  (local.set $4
   (f64.sub
    (local.get $8)
    (local.get $4)
   )
  )
  (local.set $4
   (f64.sub
    (local.get $4)
    (local.get $6)
   )
  )
  ;;@ resample.c:254:0
  (local.set $6
   (f64.sub
    (f64.const 1)
    (local.get $7)
   )
  )
  (local.set $6
   (f64.sub
    (local.get $6)
    (local.get $5)
   )
  )
  (local.set $6
   (f64.sub
    (local.get $6)
    (local.get $4)
   )
  )
  ;;@ resample.c:257:0
  (local.set $3
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 3)
    )
    (local.get $9)
   )
  )
  (local.set $8
   (f64.load
    (local.get $3)
   )
  )
  (local.set $4
   (f64.mul
    (local.get $8)
    (local.get $4)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.add
    (i32.shl
     (local.get $3)
     (i32.const 3)
    )
    (local.get $9)
   )
  )
  (local.set $8
   (f64.load
    (local.get $3)
   )
  )
  (local.set $6
   (f64.mul
    (local.get $8)
    (local.get $6)
   )
  )
  (local.set $4
   (f64.add
    (local.get $4)
    (local.get $6)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 2)
   )
  )
  (local.set $3
   (i32.add
    (i32.shl
     (local.get $3)
     (i32.const 3)
    )
    (local.get $9)
   )
  )
  (local.set $6
   (f64.load
    (local.get $3)
   )
  )
  (local.set $5
   (f64.mul
    (local.get $6)
    (local.get $5)
   )
  )
  (local.set $4
   (f64.add
    (local.get $5)
    (local.get $4)
   )
  )
  (local.set $2
   (i32.add
    (local.get $2)
    (i32.const 3)
   )
  )
  (local.set $2
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 3)
    )
    (local.get $9)
   )
  )
  (local.set $5
   (f64.load
    (local.get $2)
   )
  )
  (local.set $5
   (f64.mul
    (local.get $5)
    (local.get $7)
   )
  )
  (local.set $4
   (f64.add
    (local.get $5)
    (local.get $4)
   )
  )
  ;;@ resample.c:297:0
  (local.set $4
   (f64.mul
    (local.get $11)
    (local.get $4)
   )
  )
  (local.set $0
   (f32.demote_f64
    (local.get $4)
   )
  )
  ;;@ resample.c:298:0
  (local.get $0)
 )
 (func $_resampler_basic_direct_double (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 f64)
  (local $10 i32)
  (local $11 f32)
  (local $12 f64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  ;;@ resample.c:391:0
  (local.set $17
   (i32.load offset=24
    (local.get $0)
   )
  )
  ;;@ resample.c:393:0
  (local.set $8
   (i32.load offset=60
    (local.get $0)
   )
  )
  (local.set $14
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $8)
   )
  )
  (local.set $8
   (i32.load
    (local.get $14)
   )
  )
  ;;@ resample.c:394:0
  (local.set $10
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
  )
  (local.set $10
   (i32.load
    (local.get $10)
   )
  )
  (local.set $10
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $10)
   )
  )
  (local.set $1
   (i32.load
    (local.get $10)
   )
  )
  ;;@ resample.c:395:0
  (local.set $26
   (i32.load offset=76
    (local.get $0)
   )
  )
  ;;@ resample.c:396:0
  (local.set $22
   (i32.load offset=92
    (local.get $0)
   )
  )
  ;;@ resample.c:397:0
  (local.set $23
   (i32.load offset=36
    (local.get $0)
   )
  )
  ;;@ resample.c:398:0
  (local.set $24
   (i32.load offset=40
    (local.get $0)
   )
  )
  ;;@ resample.c:399:0
  (local.set $15
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ resample.c:402:0
  (local.set $18
   (i32.load
    (local.get $3)
   )
  )
  (if
   (i32.ge_s
    (local.get $8)
    (local.get $18)
   )
   (block
    ;;@ resample.c:432:0
    (i32.store
     (local.get $14)
     (local.get $8)
    )
    ;;@ resample.c:433:0
    (i32.store
     (local.get $10)
     (local.get $1)
    )
    ;;@ resample.c:434:0
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $25
   (i32.load
    (local.get $5)
   )
  )
  (if
   (i32.le_s
    (local.get $17)
    (i32.const 0)
   )
   (block
    (local.set $0
     (local.get $8)
    )
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in
     (block $while-out
      ;;@ resample.c:402:0
      (br_if $while-out
       (i32.ge_s
        (local.get $2)
        (local.get $25)
       )
      )
      ;;@ resample.c:422:0
      (local.set $3
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (local.set $2
       (i32.mul
        (local.get $2)
        (local.get $22)
       )
      )
      (local.set $2
       (i32.add
        (i32.shl
         (local.get $2)
         (i32.const 2)
        )
        (local.get $4)
       )
      )
      (f32.store
       (local.get $2)
       (f32.const 0)
      )
      ;;@ resample.c:423:0
      (local.set $5
       (i32.add
        (local.get $0)
        (local.get $23)
       )
      )
      ;;@ resample.c:424:0
      (local.set $0
       (i32.add
        (local.get $1)
        (local.get $24)
       )
      )
      ;;@ resample.c:425:0
      (local.set $2
       (i32.lt_u
        (local.get $0)
        (local.get $15)
       )
      )
      (local.set $1
       (select
        (i32.const 0)
        (local.get $15)
        (local.get $2)
       )
      )
      (local.set $1
       (i32.sub
        (local.get $0)
        (local.get $1)
       )
      )
      (local.set $0
       (i32.xor
        (local.get $2)
        (i32.const 1)
       )
      )
      (local.set $0
       (i32.and
        (local.get $0)
        (i32.const 1)
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (local.get $5)
       )
      )
      (local.set $2
       (if (result i32)
        ;;@ resample.c:402:0
        (i32.lt_s
         (local.get $0)
         (local.get $18)
        )
        (block
         (local.set $2
          (local.get $3)
         )
         (br $while-in)
        )
        (local.get $3)
       )
      )
     )
    )
    ;;@ resample.c:432:0
    (i32.store
     (local.get $14)
     (local.get $0)
    )
    ;;@ resample.c:433:0
    (i32.store
     (local.get $10)
     (local.get $1)
    )
    ;;@ resample.c:434:0
    (return
     (local.get $2)
    )
   )
  )
  (local.set $0
   (local.get $8)
  )
  (local.set $3
   (i32.const 0)
  )
  (local.set $2
   (loop $while-in1 (result i32)
    (block $while-out0 (result i32)
     ;;@ resample.c:402:0
     (drop
      (br_if $while-out0
       (local.get $3)
       (i32.ge_s
        (local.get $3)
        (local.get $25)
       )
      )
     )
     ;;@ resample.c:404:0
     (local.set $5
      (i32.mul
       (local.get $1)
       (local.get $17)
      )
     )
     (local.set $8
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $26)
      )
     )
     ;;@ resample.c:405:0
     (local.set $16
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $2)
      )
     )
     (local.set $5
      (i32.const 0)
     )
     (local.set $9
      (f64.const 0)
     )
     (local.set $19
      (f64.const 0)
     )
     (local.set $20
      (f64.const 0)
     )
     (local.set $21
      (f64.const 0)
     )
     (loop $while-in3
      ;;@ resample.c:412:0
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
        (local.get $8)
       )
      )
      (local.set $7
       (f32.load
        (local.get $6)
       )
      )
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
        (local.get $16)
       )
      )
      (local.set $11
       (f32.load
        (local.get $6)
       )
      )
      (local.set $7
       (f32.mul
        (local.get $7)
        (local.get $11)
       )
      )
      (local.set $12
       (f64.promote_f32
        (local.get $7)
       )
      )
      (local.set $9
       (f64.add
        (local.get $9)
        (local.get $12)
       )
      )
      ;;@ resample.c:413:0
      (local.set $6
       (i32.or
        (local.get $5)
        (i32.const 1)
       )
      )
      (local.set $13
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $8)
       )
      )
      (local.set $7
       (f32.load
        (local.get $13)
       )
      )
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $16)
       )
      )
      (local.set $11
       (f32.load
        (local.get $6)
       )
      )
      (local.set $7
       (f32.mul
        (local.get $7)
        (local.get $11)
       )
      )
      (local.set $12
       (f64.promote_f32
        (local.get $7)
       )
      )
      (local.set $20
       (f64.add
        (local.get $20)
        (local.get $12)
       )
      )
      ;;@ resample.c:414:0
      (local.set $6
       (i32.or
        (local.get $5)
        (i32.const 2)
       )
      )
      (local.set $13
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $8)
       )
      )
      (local.set $7
       (f32.load
        (local.get $13)
       )
      )
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $16)
       )
      )
      (local.set $11
       (f32.load
        (local.get $6)
       )
      )
      (local.set $7
       (f32.mul
        (local.get $7)
        (local.get $11)
       )
      )
      (local.set $12
       (f64.promote_f32
        (local.get $7)
       )
      )
      (local.set $21
       (f64.add
        (local.get $21)
        (local.get $12)
       )
      )
      ;;@ resample.c:415:0
      (local.set $6
       (i32.or
        (local.get $5)
        (i32.const 3)
       )
      )
      (local.set $13
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $8)
       )
      )
      (local.set $7
       (f32.load
        (local.get $13)
       )
      )
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
        (local.get $16)
       )
      )
      (local.set $11
       (f32.load
        (local.get $6)
       )
      )
      (local.set $7
       (f32.mul
        (local.get $7)
        (local.get $11)
       )
      )
      (local.set $12
       (f64.promote_f32
        (local.get $7)
       )
      )
      (local.set $19
       (f64.add
        (local.get $19)
        (local.get $12)
       )
      )
      ;;@ resample.c:411:0
      (local.set $5
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
      (br_if $while-in3
       (i32.lt_s
        (local.get $5)
        (local.get $17)
       )
      )
     )
     ;;@ resample.c:417:0
     (local.set $9
      (f64.add
       (local.get $9)
       (local.get $20)
      )
     )
     (local.set $9
      (f64.add
       (local.get $9)
       (local.get $21)
      )
     )
     (local.set $9
      (f64.add
       (local.get $9)
       (local.get $19)
      )
     )
     ;;@ resample.c:422:0
     (local.set $7
      (f32.demote_f64
       (local.get $9)
      )
     )
     (local.set $5
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $3
      (i32.mul
       (local.get $3)
       (local.get $22)
      )
     )
     (local.set $3
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $4)
      )
     )
     (f32.store
      (local.get $3)
      (local.get $7)
     )
     ;;@ resample.c:423:0
     (local.set $8
      (i32.add
       (local.get $0)
       (local.get $23)
      )
     )
     ;;@ resample.c:424:0
     (local.set $0
      (i32.add
       (local.get $1)
       (local.get $24)
      )
     )
     ;;@ resample.c:425:0
     (local.set $3
      (i32.lt_u
       (local.get $0)
       (local.get $15)
      )
     )
     (local.set $1
      (select
       (i32.const 0)
       (local.get $15)
       (local.get $3)
      )
     )
     (local.set $1
      (i32.sub
       (local.get $0)
       (local.get $1)
      )
     )
     (local.set $0
      (i32.xor
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $0
      (i32.and
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $8)
      )
     )
     (if (result i32)
      ;;@ resample.c:402:0
      (i32.lt_s
       (local.get $0)
       (local.get $18)
      )
      (block
       (local.set $3
        (local.get $5)
       )
       (br $while-in1)
      )
      (local.get $5)
     )
    )
   )
  )
  ;;@ resample.c:432:0
  (i32.store
   (local.get $14)
   (local.get $0)
  )
  ;;@ resample.c:433:0
  (i32.store
   (local.get $10)
   (local.get $1)
  )
  ;;@ resample.c:434:0
  (local.get $2)
 )
 (func $_resampler_basic_direct_single (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 f32)
  ;;@ resample.c:333:0
  (local.set $11
   (i32.load offset=24
    (local.get $0)
   )
  )
  ;;@ resample.c:335:0
  (local.set $6
   (i32.load offset=60
    (local.get $0)
   )
  )
  (local.set $8
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $6)
   )
  )
  (local.set $7
   (i32.load
    (local.get $8)
   )
  )
  ;;@ resample.c:336:0
  (local.set $6
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
  )
  (local.set $6
   (i32.load
    (local.get $6)
   )
  )
  (local.set $9
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $6)
   )
  )
  (local.set $6
   (i32.load
    (local.get $9)
   )
  )
  ;;@ resample.c:337:0
  (local.set $19
   (i32.load offset=76
    (local.get $0)
   )
  )
  ;;@ resample.c:338:0
  (local.set $15
   (i32.load offset=92
    (local.get $0)
   )
  )
  ;;@ resample.c:339:0
  (local.set $16
   (i32.load offset=36
    (local.get $0)
   )
  )
  ;;@ resample.c:340:0
  (local.set $17
   (i32.load offset=40
    (local.get $0)
   )
  )
  ;;@ resample.c:341:0
  (local.set $10
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ resample.c:344:0
  (local.set $12
   (i32.load
    (local.get $3)
   )
  )
  (if
   (i32.ge_s
    (local.get $7)
    (local.get $12)
   )
   (block
    ;;@ resample.c:381:0
    (i32.store
     (local.get $8)
     (local.get $7)
    )
    ;;@ resample.c:382:0
    (i32.store
     (local.get $9)
     (local.get $6)
    )
    ;;@ resample.c:383:0
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $18
   (i32.load
    (local.get $5)
   )
  )
  (if
   (i32.le_s
    (local.get $11)
    (i32.const 0)
   )
   (block
    (local.set $3
     (i32.const 0)
    )
    (local.set $1
     (local.get $7)
    )
    (local.set $0
     (local.get $6)
    )
    (loop $while-in
     (block $while-out
      (if
       ;;@ resample.c:344:0
       (i32.ge_s
        (local.get $3)
        (local.get $18)
       )
       (block
        (local.set $2
         (local.get $3)
        )
        (br $while-out)
       )
      )
      ;;@ resample.c:371:0
      (local.set $2
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (local.set $3
       (i32.mul
        (local.get $3)
        (local.get $15)
       )
      )
      (local.set $3
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
        (local.get $4)
       )
      )
      (f32.store
       (local.get $3)
       (f32.const 0)
      )
      ;;@ resample.c:372:0
      (local.set $3
       (i32.add
        (local.get $1)
        (local.get $16)
       )
      )
      ;;@ resample.c:373:0
      (local.set $5
       (i32.add
        (local.get $0)
        (local.get $17)
       )
      )
      ;;@ resample.c:374:0
      (local.set $1
       (i32.lt_u
        (local.get $5)
        (local.get $10)
       )
      )
      (local.set $0
       (select
        (i32.const 0)
        (local.get $10)
        (local.get $1)
       )
      )
      (local.set $0
       (i32.sub
        (local.get $5)
        (local.get $0)
       )
      )
      (local.set $1
       (i32.xor
        (local.get $1)
        (i32.const 1)
       )
      )
      (local.set $1
       (i32.and
        (local.get $1)
        (i32.const 1)
       )
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (local.get $3)
       )
      )
      (if
       ;;@ resample.c:344:0
       (i32.lt_s
        (local.get $1)
        (local.get $12)
       )
       (block
        (local.set $3
         (local.get $2)
        )
        (br $while-in)
       )
      )
     )
    )
    ;;@ resample.c:381:0
    (i32.store
     (local.get $8)
     (local.get $1)
    )
    ;;@ resample.c:382:0
    (i32.store
     (local.get $9)
     (local.get $0)
    )
    ;;@ resample.c:383:0
    (return
     (local.get $2)
    )
   )
  )
  (local.set $5
   (i32.const 0)
  )
  (local.set $1
   (local.get $7)
  )
  (local.set $0
   (local.get $6)
  )
  (local.set $2
   (loop $while-in1 (result i32)
    (block $while-out0 (result i32)
     ;;@ resample.c:344:0
     (drop
      (br_if $while-out0
       (local.get $5)
       (i32.ge_s
        (local.get $5)
        (local.get $18)
       )
      )
     )
     ;;@ resample.c:346:0
     (local.set $3
      (i32.mul
       (local.get $0)
       (local.get $11)
      )
     )
     (local.set $20
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $19)
      )
     )
     ;;@ resample.c:347:0
     (local.set $7
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
     )
     (local.set $13
      (f32.const 0)
     )
     (local.set $3
      (i32.const 0)
     )
     (loop $while-in3
      ;;@ resample.c:352:0
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
        (local.get $20)
       )
      )
      (local.set $21
       (f32.load
        (local.get $6)
       )
      )
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
        (local.get $7)
       )
      )
      (local.set $14
       (f32.load
        (local.get $6)
       )
      )
      (local.set $14
       (f32.mul
        (local.get $21)
        (local.get $14)
       )
      )
      (local.set $13
       (f32.add
        (local.get $13)
        (local.get $14)
       )
      )
      (local.set $3
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (br_if $while-in3
       (i32.ne
        (local.get $3)
        (local.get $11)
       )
      )
     )
     ;;@ resample.c:371:0
     (local.set $3
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.mul
       (local.get $5)
       (local.get $15)
      )
     )
     (local.set $5
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $4)
      )
     )
     (f32.store
      (local.get $5)
      (local.get $13)
     )
     ;;@ resample.c:372:0
     (local.set $5
      (i32.add
       (local.get $1)
       (local.get $16)
      )
     )
     ;;@ resample.c:373:0
     (local.set $6
      (i32.add
       (local.get $0)
       (local.get $17)
      )
     )
     ;;@ resample.c:374:0
     (local.set $1
      (i32.lt_u
       (local.get $6)
       (local.get $10)
      )
     )
     (local.set $0
      (select
       (i32.const 0)
       (local.get $10)
       (local.get $1)
      )
     )
     (local.set $0
      (i32.sub
       (local.get $6)
       (local.get $0)
      )
     )
     (local.set $1
      (i32.xor
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.and
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $5)
      )
     )
     (if (result i32)
      ;;@ resample.c:344:0
      (i32.lt_s
       (local.get $1)
       (local.get $12)
      )
      (block
       (local.set $5
        (local.get $3)
       )
       (br $while-in1)
      )
      (local.get $3)
     )
    )
   )
  )
  ;;@ resample.c:381:0
  (i32.store
   (local.get $8)
   (local.get $1)
  )
  ;;@ resample.c:382:0
  (i32.store
   (local.get $9)
   (local.get $0)
  )
  ;;@ resample.c:383:0
  (local.get $2)
 )
 (func $_resampler_basic_interpolate_double (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  (local $9 f64)
  (local $10 f32)
  (local $11 i32)
  (local $12 f64)
  (local $13 f64)
  (local $14 i32)
  (local $15 f64)
  (local $16 i32)
  (local $17 i32)
  (local $18 f32)
  (local $19 f64)
  (local $20 i32)
  (local $21 i32)
  (local $22 f64)
  (local $23 i32)
  (local $24 f32)
  (local $25 f32)
  (local $26 f64)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 f32)
  (local $33 i32)
  (local $34 f64)
  (local $35 i32)
  (local $36 i32)
  ;;@ resample.c:503:0
  (local.set $27
   (i32.load offset=24
    (local.get $0)
   )
  )
  ;;@ resample.c:505:0
  (local.set $8
   (i32.load offset=60
    (local.get $0)
   )
  )
  (local.set $20
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $8)
   )
  )
  (local.set $8
   (i32.load
    (local.get $20)
   )
  )
  ;;@ resample.c:506:0
  (local.set $11
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
  )
  (local.set $11
   (i32.load
    (local.get $11)
   )
  )
  (local.set $21
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $11)
   )
  )
  (local.set $11
   (i32.load
    (local.get $21)
   )
  )
  ;;@ resample.c:507:0
  (local.set $28
   (i32.load offset=92
    (local.get $0)
   )
  )
  ;;@ resample.c:508:0
  (local.set $29
   (i32.load offset=36
    (local.get $0)
   )
  )
  ;;@ resample.c:509:0
  (local.set $30
   (i32.load offset=40
    (local.get $0)
   )
  )
  ;;@ resample.c:510:0
  (local.set $17
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ resample.c:513:0
  (local.set $23
   (i32.load
    (local.get $3)
   )
  )
  (if
   (i32.ge_s
    (local.get $8)
    (local.get $23)
   )
   (block
    ;;@ resample.c:555:0
    (i32.store
     (local.get $20)
     (local.get $8)
    )
    ;;@ resample.c:556:0
    (i32.store
     (local.get $21)
     (local.get $11)
    )
    ;;@ resample.c:557:0
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $31
   (i32.load
    (local.get $5)
   )
  )
  (local.set $32
   (f32.convert_i32_u
    (local.get $17)
   )
  )
  (if
   (i32.le_s
    (local.get $27)
    (i32.const 0)
   )
   (block
    (local.set $1
     (local.get $8)
    )
    (local.set $2
     (local.get $11)
    )
    (local.set $3
     (i32.const 0)
    )
    (local.set $0
     (loop $while-in (result i32)
      (block $while-out (result i32)
       ;;@ resample.c:513:0
       (drop
        (br_if $while-out
         (local.get $3)
         (i32.ge_s
          (local.get $3)
          (local.get $31)
         )
        )
       )
       ;;@ resample.c:517:0
       (local.set $5
        (i32.load offset=48
         (local.get $0)
        )
       )
       (local.set $5
        (i32.mul
         (local.get $2)
         (local.get $5)
        )
       )
       ;;@ resample.c:521:0
       (local.set $5
        (i32.rem_u
         (local.get $5)
         (local.get $17)
        )
       )
       (local.set $6
        (f32.convert_i32_u
         (local.get $5)
        )
       )
       (local.set $6
        (f32.div
         (local.get $6)
         (local.get $32)
        )
       )
       ;;@ resample.c:322:0
       (local.set $10
        (f32.mul
         (local.get $6)
         (f32.const 0.16666999459266663)
        )
       )
       (local.set $7
        (f32.mul
         (local.get $6)
         (local.get $10)
        )
       )
       (local.set $7
        (f32.mul
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $24
        (f32.sub
         (local.get $7)
         (local.get $10)
        )
       )
       ;;@ resample.c:323:0
       (local.set $10
        (f32.mul
         (local.get $6)
         (f32.const 0.5)
        )
       )
       (local.set $10
        (f32.mul
         (local.get $6)
         (local.get $10)
        )
       )
       (local.set $18
        (f32.add
         (local.get $6)
         (local.get $10)
        )
       )
       (local.set $25
        (f32.mul
         (local.get $6)
         (local.get $10)
        )
       )
       (local.set $18
        (f32.sub
         (local.get $18)
         (local.get $25)
        )
       )
       ;;@ resample.c:325:0
       (local.set $6
        (f32.mul
         (local.get $6)
         (f32.const 0.3333300054073334)
        )
       )
       (local.set $6
        (f32.sub
         (local.get $10)
         (local.get $6)
        )
       )
       (local.set $6
        (f32.sub
         (local.get $6)
         (local.get $7)
        )
       )
       ;;@ resample.c:327:0
       (local.set $9
        (f64.promote_f32
         (local.get $24)
        )
       )
       (local.set $13
        (f64.sub
         (f64.const 1)
         (local.get $9)
        )
       )
       (local.set $12
        (f64.promote_f32
         (local.get $18)
        )
       )
       (local.set $19
        (f64.sub
         (local.get $13)
         (local.get $12)
        )
       )
       (local.set $13
        (f64.promote_f32
         (local.get $6)
        )
       )
       (local.set $19
        (f64.sub
         (local.get $19)
         (local.get $13)
        )
       )
       (local.set $6
        (f32.demote_f64
         (local.get $19)
        )
       )
       ;;@ resample.c:539:0
       (local.set $9
        (f64.mul
         (local.get $9)
         (f64.const 0)
        )
       )
       (local.set $12
        (f64.mul
         (local.get $12)
         (f64.const 0)
        )
       )
       (local.set $9
        (f64.add
         (local.get $9)
         (local.get $12)
        )
       )
       (local.set $12
        (f64.promote_f32
         (local.get $6)
        )
       )
       (local.set $12
        (f64.mul
         (local.get $12)
         (f64.const 0)
        )
       )
       (local.set $9
        (f64.add
         (local.get $9)
         (local.get $12)
        )
       )
       (local.set $12
        (f64.mul
         (local.get $13)
         (f64.const 0)
        )
       )
       (local.set $9
        (f64.add
         (local.get $9)
         (local.get $12)
        )
       )
       (local.set $6
        (f32.demote_f64
         (local.get $9)
        )
       )
       ;;@ resample.c:545:0
       (local.set $5
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $3
        (i32.mul
         (local.get $3)
         (local.get $28)
        )
       )
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (local.get $4)
        )
       )
       (f32.store
        (local.get $3)
        (local.get $6)
       )
       ;;@ resample.c:546:0
       (local.set $8
        (i32.add
         (local.get $1)
         (local.get $29)
        )
       )
       ;;@ resample.c:547:0
       (local.set $1
        (i32.add
         (local.get $2)
         (local.get $30)
        )
       )
       ;;@ resample.c:548:0
       (local.set $3
        (i32.lt_u
         (local.get $1)
         (local.get $17)
        )
       )
       (local.set $2
        (select
         (i32.const 0)
         (local.get $17)
         (local.get $3)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $1)
         (local.get $2)
        )
       )
       (local.set $1
        (i32.xor
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.and
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (local.get $8)
        )
       )
       (if (result i32)
        ;;@ resample.c:513:0
        (i32.lt_s
         (local.get $1)
         (local.get $23)
        )
        (block
         (local.set $3
          (local.get $5)
         )
         (br $while-in)
        )
        (local.get $5)
       )
      )
     )
    )
    ;;@ resample.c:555:0
    (i32.store
     (local.get $20)
     (local.get $1)
    )
    ;;@ resample.c:556:0
    (i32.store
     (local.get $21)
     (local.get $2)
    )
    ;;@ resample.c:557:0
    (return
     (local.get $0)
    )
   )
  )
  (local.set $1
   (local.get $8)
  )
  (local.set $3
   (local.get $11)
  )
  (local.set $5
   (i32.const 0)
  )
  (local.set $0
   (loop $while-in1 (result i32)
    (block $while-out0 (result i32)
     (if
      ;;@ resample.c:513:0
      (i32.ge_s
       (local.get $5)
       (local.get $31)
      )
      (block
       (local.set $2
        (local.get $3)
       )
       (br $while-out0
        (local.get $5)
       )
      )
     )
     ;;@ resample.c:515:0
     (local.set $35
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
     )
     ;;@ resample.c:517:0
     (local.set $33
      (i32.load offset=48
       (local.get $0)
      )
     )
     (local.set $8
      (i32.mul
       (local.get $3)
       (local.get $33)
      )
     )
     (local.set $11
      (i32.sub
       (local.get $8)
       (i32.mul
        (local.get $17)
        (local.tee $8
         (i32.div_u
          (local.get $8)
          (local.get $17)
         )
        )
       )
      )
     )
     ;;@ resample.c:521:0
     (local.set $10
      (f32.convert_i32_u
       (local.get $11)
      )
     )
     (local.set $11
      (i32.load offset=76
       (local.get $0)
      )
     )
     (local.set $36
      (i32.sub
       (i32.const 4)
       (local.get $8)
      )
     )
     (local.set $8
      (i32.const 0)
     )
     (local.set $9
      (f64.const 0)
     )
     (local.set $12
      (f64.const 0)
     )
     (local.set $13
      (f64.const 0)
     )
     (local.set $19
      (f64.const 0)
     )
     (loop $while-in3
      ;;@ resample.c:531:0
      (local.set $14
       (i32.add
        (i32.shl
         (local.get $8)
         (i32.const 2)
        )
        (local.get $35)
       )
      )
      (local.set $6
       (f32.load
        (local.get $14)
       )
      )
      ;;@ resample.c:532:0
      (local.set $8
       (i32.add
        (local.get $8)
        (i32.const 1)
       )
      )
      (local.set $14
       (i32.mul
        (local.get $8)
        (local.get $33)
       )
      )
      (local.set $14
       (i32.add
        (local.get $14)
        (local.get $36)
       )
      )
      (local.set $16
       (i32.add
        (local.get $14)
        (i32.const -2)
       )
      )
      (local.set $16
       (i32.add
        (i32.shl
         (local.get $16)
         (i32.const 2)
        )
        (local.get $11)
       )
      )
      (local.set $7
       (f32.load
        (local.get $16)
       )
      )
      (local.set $7
       (f32.mul
        (local.get $6)
        (local.get $7)
       )
      )
      (local.set $15
       (f64.promote_f32
        (local.get $7)
       )
      )
      (local.set $9
       (f64.add
        (local.get $9)
        (local.get $15)
       )
      )
      ;;@ resample.c:533:0
      (local.set $16
       (i32.add
        (local.get $14)
        (i32.const -1)
       )
      )
      (local.set $16
       (i32.add
        (i32.shl
         (local.get $16)
         (i32.const 2)
        )
        (local.get $11)
       )
      )
      (local.set $7
       (f32.load
        (local.get $16)
       )
      )
      (local.set $7
       (f32.mul
        (local.get $6)
        (local.get $7)
       )
      )
      (local.set $15
       (f64.promote_f32
        (local.get $7)
       )
      )
      (local.set $13
       (f64.add
        (local.get $13)
        (local.get $15)
       )
      )
      ;;@ resample.c:534:0
      (local.set $16
       (i32.add
        (i32.shl
         (local.get $14)
         (i32.const 2)
        )
        (local.get $11)
       )
      )
      (local.set $7
       (f32.load
        (local.get $16)
       )
      )
      (local.set $7
       (f32.mul
        (local.get $6)
        (local.get $7)
       )
      )
      (local.set $15
       (f64.promote_f32
        (local.get $7)
       )
      )
      (local.set $19
       (f64.add
        (local.get $19)
        (local.get $15)
       )
      )
      ;;@ resample.c:535:0
      (local.set $14
       (i32.add
        (local.get $14)
        (i32.const 1)
       )
      )
      (local.set $14
       (i32.add
        (i32.shl
         (local.get $14)
         (i32.const 2)
        )
        (local.get $11)
       )
      )
      (local.set $7
       (f32.load
        (local.get $14)
       )
      )
      (local.set $6
       (f32.mul
        (local.get $6)
        (local.get $7)
       )
      )
      (local.set $15
       (f64.promote_f32
        (local.get $6)
       )
      )
      (local.set $12
       (f64.add
        (local.get $12)
        (local.get $15)
       )
      )
      ;;@ resample.c:530:0
      (br_if $while-in3
       (i32.ne
        (local.get $8)
        (local.get $27)
       )
      )
     )
     ;;@ resample.c:521:0
     (local.set $6
      (f32.div
       (local.get $10)
       (local.get $32)
      )
     )
     ;;@ resample.c:322:0
     (local.set $10
      (f32.mul
       (local.get $6)
       (f32.const 0.16666999459266663)
      )
     )
     (local.set $7
      (f32.mul
       (local.get $6)
       (local.get $10)
      )
     )
     (local.set $7
      (f32.mul
       (local.get $6)
       (local.get $7)
      )
     )
     (local.set $24
      (f32.sub
       (local.get $7)
       (local.get $10)
      )
     )
     ;;@ resample.c:323:0
     (local.set $10
      (f32.mul
       (local.get $6)
       (f32.const 0.5)
      )
     )
     (local.set $10
      (f32.mul
       (local.get $6)
       (local.get $10)
      )
     )
     (local.set $18
      (f32.add
       (local.get $6)
       (local.get $10)
      )
     )
     (local.set $25
      (f32.mul
       (local.get $6)
       (local.get $10)
      )
     )
     (local.set $18
      (f32.sub
       (local.get $18)
       (local.get $25)
      )
     )
     ;;@ resample.c:325:0
     (local.set $6
      (f32.mul
       (local.get $6)
       (f32.const 0.3333300054073334)
      )
     )
     (local.set $6
      (f32.sub
       (local.get $10)
       (local.get $6)
      )
     )
     (local.set $6
      (f32.sub
       (local.get $6)
       (local.get $7)
      )
     )
     ;;@ resample.c:327:0
     (local.set $15
      (f64.promote_f32
       (local.get $24)
      )
     )
     (local.set $22
      (f64.sub
       (f64.const 1)
       (local.get $15)
      )
     )
     (local.set $34
      (f64.promote_f32
       (local.get $18)
      )
     )
     (local.set $26
      (f64.sub
       (local.get $22)
       (local.get $34)
      )
     )
     (local.set $22
      (f64.promote_f32
       (local.get $6)
      )
     )
     (local.set $26
      (f64.sub
       (local.get $26)
       (local.get $22)
      )
     )
     (local.set $6
      (f32.demote_f64
       (local.get $26)
      )
     )
     ;;@ resample.c:539:0
     (local.set $9
      (f64.mul
       (local.get $9)
       (local.get $15)
      )
     )
     (local.set $13
      (f64.mul
       (local.get $13)
       (local.get $34)
      )
     )
     (local.set $9
      (f64.add
       (local.get $9)
       (local.get $13)
      )
     )
     (local.set $13
      (f64.promote_f32
       (local.get $6)
      )
     )
     (local.set $13
      (f64.mul
       (local.get $19)
       (local.get $13)
      )
     )
     (local.set $9
      (f64.add
       (local.get $9)
       (local.get $13)
      )
     )
     (local.set $12
      (f64.mul
       (local.get $12)
       (local.get $22)
      )
     )
     (local.set $9
      (f64.add
       (local.get $9)
       (local.get $12)
      )
     )
     (local.set $6
      (f32.demote_f64
       (local.get $9)
      )
     )
     ;;@ resample.c:545:0
     (local.set $8
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.mul
       (local.get $5)
       (local.get $28)
      )
     )
     (local.set $5
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $4)
      )
     )
     (f32.store
      (local.get $5)
      (local.get $6)
     )
     ;;@ resample.c:546:0
     (local.set $11
      (i32.add
       (local.get $1)
       (local.get $29)
      )
     )
     ;;@ resample.c:547:0
     (local.set $1
      (i32.add
       (local.get $3)
       (local.get $30)
      )
     )
     ;;@ resample.c:548:0
     (local.set $5
      (i32.lt_u
       (local.get $1)
       (local.get $17)
      )
     )
     (local.set $3
      (select
       (i32.const 0)
       (local.get $17)
       (local.get $5)
      )
     )
     (local.set $3
      (i32.sub
       (local.get $1)
       (local.get $3)
      )
     )
     (local.set $1
      (i32.xor
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.and
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $11)
      )
     )
     (if (result i32)
      ;;@ resample.c:513:0
      (i32.lt_s
       (local.get $1)
       (local.get $23)
      )
      (block
       (local.set $5
        (local.get $8)
       )
       (br $while-in1)
      )
      (block (result i32)
       (local.set $2
        (local.get $3)
       )
       (local.get $8)
      )
     )
    )
   )
  )
  ;;@ resample.c:555:0
  (i32.store
   (local.get $20)
   (local.get $1)
  )
  ;;@ resample.c:556:0
  (i32.store
   (local.get $21)
   (local.get $2)
  )
  ;;@ resample.c:557:0
  (local.get $0)
 )
 (func $_resampler_basic_interpolate_single (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 f32)
  (local $7 f32)
  (local $8 i32)
  (local $9 f32)
  (local $10 f32)
  (local $11 i32)
  (local $12 f32)
  (local $13 f64)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 f32)
  (local $19 f64)
  (local $20 i32)
  (local $21 i32)
  (local $22 f32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 f32)
  (local $30 i32)
  (local $31 f32)
  (local $32 i32)
  (local $33 i32)
  (local $34 f32)
  ;;@ resample.c:440:0
  (local.set $24
   (i32.load offset=24
    (local.get $0)
   )
  )
  ;;@ resample.c:442:0
  (local.set $8
   (i32.load offset=60
    (local.get $0)
   )
  )
  (local.set $20
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $8)
   )
  )
  (local.set $8
   (i32.load
    (local.get $20)
   )
  )
  ;;@ resample.c:443:0
  (local.set $11
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
  )
  (local.set $11
   (i32.load
    (local.get $11)
   )
  )
  (local.set $21
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $11)
   )
  )
  (local.set $11
   (i32.load
    (local.get $21)
   )
  )
  ;;@ resample.c:444:0
  (local.set $25
   (i32.load offset=92
    (local.get $0)
   )
  )
  ;;@ resample.c:445:0
  (local.set $26
   (i32.load offset=36
    (local.get $0)
   )
  )
  ;;@ resample.c:446:0
  (local.set $27
   (i32.load offset=40
    (local.get $0)
   )
  )
  ;;@ resample.c:447:0
  (local.set $17
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ resample.c:450:0
  (local.set $23
   (i32.load
    (local.get $3)
   )
  )
  (if
   (i32.ge_s
    (local.get $8)
    (local.get $23)
   )
   (block
    ;;@ resample.c:493:0
    (i32.store
     (local.get $20)
     (local.get $8)
    )
    ;;@ resample.c:494:0
    (i32.store
     (local.get $21)
     (local.get $11)
    )
    ;;@ resample.c:495:0
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $28
   (i32.load
    (local.get $5)
   )
  )
  (local.set $29
   (f32.convert_i32_u
    (local.get $17)
   )
  )
  (if
   (i32.le_s
    (local.get $24)
    (i32.const 0)
   )
   (block
    (local.set $1
     (local.get $8)
    )
    (local.set $2
     (local.get $11)
    )
    (local.set $3
     (i32.const 0)
    )
    (local.set $0
     (loop $while-in (result i32)
      (block $while-out (result i32)
       ;;@ resample.c:450:0
       (drop
        (br_if $while-out
         (local.get $3)
         (i32.ge_s
          (local.get $3)
          (local.get $28)
         )
        )
       )
       ;;@ resample.c:454:0
       (local.set $5
        (i32.load offset=48
         (local.get $0)
        )
       )
       (local.set $5
        (i32.mul
         (local.get $2)
         (local.get $5)
        )
       )
       ;;@ resample.c:458:0
       (local.set $5
        (i32.rem_u
         (local.get $5)
         (local.get $17)
        )
       )
       (local.set $6
        (f32.convert_i32_u
         (local.get $5)
        )
       )
       (local.set $6
        (f32.div
         (local.get $6)
         (local.get $29)
        )
       )
       ;;@ resample.c:322:0
       (local.set $9
        (f32.mul
         (local.get $6)
         (f32.const 0.16666999459266663)
        )
       )
       (local.set $12
        (f32.mul
         (local.get $6)
         (local.get $9)
        )
       )
       (local.set $12
        (f32.mul
         (local.get $6)
         (local.get $12)
        )
       )
       (local.set $18
        (f32.sub
         (local.get $12)
         (local.get $9)
        )
       )
       ;;@ resample.c:323:0
       (local.set $9
        (f32.mul
         (local.get $6)
         (f32.const 0.5)
        )
       )
       (local.set $9
        (f32.mul
         (local.get $6)
         (local.get $9)
        )
       )
       (local.set $7
        (f32.add
         (local.get $6)
         (local.get $9)
        )
       )
       (local.set $14
        (f32.mul
         (local.get $6)
         (local.get $9)
        )
       )
       (local.set $7
        (f32.sub
         (local.get $7)
         (local.get $14)
        )
       )
       ;;@ resample.c:325:0
       (local.set $6
        (f32.mul
         (local.get $6)
         (f32.const 0.3333300054073334)
        )
       )
       (local.set $6
        (f32.sub
         (local.get $9)
         (local.get $6)
        )
       )
       (local.set $6
        (f32.sub
         (local.get $6)
         (local.get $12)
        )
       )
       ;;@ resample.c:327:0
       (local.set $13
        (f64.promote_f32
         (local.get $18)
        )
       )
       (local.set $13
        (f64.sub
         (f64.const 1)
         (local.get $13)
        )
       )
       (local.set $19
        (f64.promote_f32
         (local.get $7)
        )
       )
       (local.set $13
        (f64.sub
         (local.get $13)
         (local.get $19)
        )
       )
       (local.set $19
        (f64.promote_f32
         (local.get $6)
        )
       )
       (local.set $13
        (f64.sub
         (local.get $13)
         (local.get $19)
        )
       )
       (local.set $9
        (f32.demote_f64
         (local.get $13)
        )
       )
       ;;@ resample.c:476:0
       (local.set $12
        (f32.mul
         (local.get $18)
         (f32.const 0)
        )
       )
       (local.set $18
        (f32.mul
         (local.get $7)
         (f32.const 0)
        )
       )
       (local.set $12
        (f32.add
         (local.get $18)
         (local.get $12)
        )
       )
       (local.set $9
        (f32.mul
         (local.get $9)
         (f32.const 0)
        )
       )
       (local.set $9
        (f32.add
         (local.get $9)
         (local.get $12)
        )
       )
       (local.set $6
        (f32.mul
         (local.get $6)
         (f32.const 0)
        )
       )
       (local.set $6
        (f32.add
         (local.get $6)
         (local.get $9)
        )
       )
       ;;@ resample.c:483:0
       (local.set $5
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $3
        (i32.mul
         (local.get $3)
         (local.get $25)
        )
       )
       (local.set $3
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (local.get $4)
        )
       )
       (f32.store
        (local.get $3)
        (local.get $6)
       )
       ;;@ resample.c:484:0
       (local.set $8
        (i32.add
         (local.get $1)
         (local.get $26)
        )
       )
       ;;@ resample.c:485:0
       (local.set $1
        (i32.add
         (local.get $2)
         (local.get $27)
        )
       )
       ;;@ resample.c:486:0
       (local.set $3
        (i32.lt_u
         (local.get $1)
         (local.get $17)
        )
       )
       (local.set $2
        (select
         (i32.const 0)
         (local.get $17)
         (local.get $3)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $1)
         (local.get $2)
        )
       )
       (local.set $1
        (i32.xor
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.and
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (local.get $8)
        )
       )
       (if (result i32)
        ;;@ resample.c:450:0
        (i32.lt_s
         (local.get $1)
         (local.get $23)
        )
        (block
         (local.set $3
          (local.get $5)
         )
         (br $while-in)
        )
        (local.get $5)
       )
      )
     )
    )
    ;;@ resample.c:493:0
    (i32.store
     (local.get $20)
     (local.get $1)
    )
    ;;@ resample.c:494:0
    (i32.store
     (local.get $21)
     (local.get $2)
    )
    ;;@ resample.c:495:0
    (return
     (local.get $0)
    )
   )
  )
  (local.set $1
   (local.get $8)
  )
  (local.set $3
   (local.get $11)
  )
  (local.set $5
   (i32.const 0)
  )
  (local.set $0
   (loop $while-in1 (result i32)
    (block $while-out0 (result i32)
     (if
      ;;@ resample.c:450:0
      (i32.ge_s
       (local.get $5)
       (local.get $28)
      )
      (block
       (local.set $2
        (local.get $3)
       )
       (br $while-out0
        (local.get $5)
       )
      )
     )
     ;;@ resample.c:452:0
     (local.set $32
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
     )
     ;;@ resample.c:454:0
     (local.set $30
      (i32.load offset=48
       (local.get $0)
      )
     )
     (local.set $8
      (i32.mul
       (local.get $3)
       (local.get $30)
      )
     )
     (local.set $11
      (i32.sub
       (local.get $8)
       (i32.mul
        (local.get $17)
        (local.tee $8
         (i32.div_u
          (local.get $8)
          (local.get $17)
         )
        )
       )
      )
     )
     ;;@ resample.c:458:0
     (local.set $14
      (f32.convert_i32_u
       (local.get $11)
      )
     )
     (local.set $11
      (i32.load offset=76
       (local.get $0)
      )
     )
     (local.set $33
      (i32.sub
       (i32.const 4)
       (local.get $8)
      )
     )
     (local.set $8
      (i32.const 0)
     )
     (local.set $6
      (f32.const 0)
     )
     (local.set $9
      (f32.const 0)
     )
     (local.set $12
      (f32.const 0)
     )
     (local.set $18
      (f32.const 0)
     )
     (loop $while-in3
      ;;@ resample.c:468:0
      (local.set $15
       (i32.add
        (i32.shl
         (local.get $8)
         (i32.const 2)
        )
        (local.get $32)
       )
      )
      (local.set $7
       (f32.load
        (local.get $15)
       )
      )
      ;;@ resample.c:469:0
      (local.set $8
       (i32.add
        (local.get $8)
        (i32.const 1)
       )
      )
      (local.set $15
       (i32.mul
        (local.get $8)
        (local.get $30)
       )
      )
      (local.set $15
       (i32.add
        (local.get $15)
        (local.get $33)
       )
      )
      (local.set $16
       (i32.add
        (local.get $15)
        (i32.const -2)
       )
      )
      (local.set $16
       (i32.add
        (i32.shl
         (local.get $16)
         (i32.const 2)
        )
        (local.get $11)
       )
      )
      (local.set $10
       (f32.load
        (local.get $16)
       )
      )
      (local.set $10
       (f32.mul
        (local.get $7)
        (local.get $10)
       )
      )
      (local.set $6
       (f32.add
        (local.get $6)
        (local.get $10)
       )
      )
      ;;@ resample.c:470:0
      (local.set $16
       (i32.add
        (local.get $15)
        (i32.const -1)
       )
      )
      (local.set $16
       (i32.add
        (i32.shl
         (local.get $16)
         (i32.const 2)
        )
        (local.get $11)
       )
      )
      (local.set $10
       (f32.load
        (local.get $16)
       )
      )
      (local.set $10
       (f32.mul
        (local.get $7)
        (local.get $10)
       )
      )
      (local.set $12
       (f32.add
        (local.get $12)
        (local.get $10)
       )
      )
      ;;@ resample.c:471:0
      (local.set $16
       (i32.add
        (i32.shl
         (local.get $15)
         (i32.const 2)
        )
        (local.get $11)
       )
      )
      (local.set $10
       (f32.load
        (local.get $16)
       )
      )
      (local.set $10
       (f32.mul
        (local.get $7)
        (local.get $10)
       )
      )
      (local.set $18
       (f32.add
        (local.get $18)
        (local.get $10)
       )
      )
      ;;@ resample.c:472:0
      (local.set $15
       (i32.add
        (local.get $15)
        (i32.const 1)
       )
      )
      (local.set $15
       (i32.add
        (i32.shl
         (local.get $15)
         (i32.const 2)
        )
        (local.get $11)
       )
      )
      (local.set $10
       (f32.load
        (local.get $15)
       )
      )
      (local.set $7
       (f32.mul
        (local.get $7)
        (local.get $10)
       )
      )
      (local.set $9
       (f32.add
        (local.get $9)
        (local.get $7)
       )
      )
      ;;@ resample.c:467:0
      (br_if $while-in3
       (i32.ne
        (local.get $8)
        (local.get $24)
       )
      )
     )
     ;;@ resample.c:458:0
     (local.set $7
      (f32.div
       (local.get $14)
       (local.get $29)
      )
     )
     ;;@ resample.c:322:0
     (local.set $14
      (f32.mul
       (local.get $7)
       (f32.const 0.16666999459266663)
      )
     )
     (local.set $10
      (f32.mul
       (local.get $7)
       (local.get $14)
      )
     )
     (local.set $10
      (f32.mul
       (local.get $7)
       (local.get $10)
      )
     )
     (local.set $31
      (f32.sub
       (local.get $10)
       (local.get $14)
      )
     )
     ;;@ resample.c:323:0
     (local.set $14
      (f32.mul
       (local.get $7)
       (f32.const 0.5)
      )
     )
     (local.set $14
      (f32.mul
       (local.get $7)
       (local.get $14)
      )
     )
     (local.set $22
      (f32.add
       (local.get $7)
       (local.get $14)
      )
     )
     (local.set $34
      (f32.mul
       (local.get $7)
       (local.get $14)
      )
     )
     (local.set $22
      (f32.sub
       (local.get $22)
       (local.get $34)
      )
     )
     ;;@ resample.c:325:0
     (local.set $7
      (f32.mul
       (local.get $7)
       (f32.const 0.3333300054073334)
      )
     )
     (local.set $7
      (f32.sub
       (local.get $14)
       (local.get $7)
      )
     )
     (local.set $7
      (f32.sub
       (local.get $7)
       (local.get $10)
      )
     )
     ;;@ resample.c:327:0
     (local.set $13
      (f64.promote_f32
       (local.get $31)
      )
     )
     (local.set $13
      (f64.sub
       (f64.const 1)
       (local.get $13)
      )
     )
     (local.set $19
      (f64.promote_f32
       (local.get $22)
      )
     )
     (local.set $13
      (f64.sub
       (local.get $13)
       (local.get $19)
      )
     )
     (local.set $19
      (f64.promote_f32
       (local.get $7)
      )
     )
     (local.set $13
      (f64.sub
       (local.get $13)
       (local.get $19)
      )
     )
     (local.set $14
      (f32.demote_f64
       (local.get $13)
      )
     )
     ;;@ resample.c:476:0
     (local.set $6
      (f32.mul
       (local.get $31)
       (local.get $6)
      )
     )
     (local.set $12
      (f32.mul
       (local.get $22)
       (local.get $12)
      )
     )
     (local.set $6
      (f32.add
       (local.get $12)
       (local.get $6)
      )
     )
     (local.set $12
      (f32.mul
       (local.get $18)
       (local.get $14)
      )
     )
     (local.set $6
      (f32.add
       (local.get $12)
       (local.get $6)
      )
     )
     (local.set $9
      (f32.mul
       (local.get $7)
       (local.get $9)
      )
     )
     (local.set $6
      (f32.add
       (local.get $9)
       (local.get $6)
      )
     )
     ;;@ resample.c:483:0
     (local.set $8
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.mul
       (local.get $5)
       (local.get $25)
      )
     )
     (local.set $5
      (i32.add
       (i32.shl
        (local.get $5)
        (i32.const 2)
       )
       (local.get $4)
      )
     )
     (f32.store
      (local.get $5)
      (local.get $6)
     )
     ;;@ resample.c:484:0
     (local.set $11
      (i32.add
       (local.get $1)
       (local.get $26)
      )
     )
     ;;@ resample.c:485:0
     (local.set $1
      (i32.add
       (local.get $3)
       (local.get $27)
      )
     )
     ;;@ resample.c:486:0
     (local.set $5
      (i32.lt_u
       (local.get $1)
       (local.get $17)
      )
     )
     (local.set $3
      (select
       (i32.const 0)
       (local.get $17)
       (local.get $5)
      )
     )
     (local.set $3
      (i32.sub
       (local.get $1)
       (local.get $3)
      )
     )
     (local.set $1
      (i32.xor
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.and
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (local.get $11)
      )
     )
     (if (result i32)
      ;;@ resample.c:450:0
      (i32.lt_s
       (local.get $1)
       (local.get $23)
      )
      (block
       (local.set $5
        (local.get $8)
       )
       (br $while-in1)
      )
      (block (result i32)
       (local.set $2
        (local.get $3)
       )
       (local.get $8)
      )
     )
    )
   )
  )
  ;;@ resample.c:493:0
  (i32.store
   (local.get $20)
   (local.get $1)
  )
  ;;@ resample.c:494:0
  (i32.store
   (local.get $21)
   (local.get $2)
  )
  ;;@ resample.c:495:0
  (local.get $0)
 )
 (func $_resampler_basic_zero (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  ;;@ resample.c:568:0
  (local.set $2
   (i32.load offset=60
    (local.get $0)
   )
  )
  (local.set $7
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $2)
   )
  )
  (local.set $2
   (i32.load
    (local.get $7)
   )
  )
  ;;@ resample.c:569:0
  (local.set $6
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
  )
  (local.set $6
   (i32.load
    (local.get $6)
   )
  )
  (local.set $6
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $6)
   )
  )
  (local.set $1
   (i32.load
    (local.get $6)
   )
  )
  ;;@ resample.c:570:0
  (local.set $10
   (i32.load offset=92
    (local.get $0)
   )
  )
  ;;@ resample.c:571:0
  (local.set $11
   (i32.load offset=36
    (local.get $0)
   )
  )
  ;;@ resample.c:572:0
  (local.set $12
   (i32.load offset=40
    (local.get $0)
   )
  )
  ;;@ resample.c:573:0
  (local.set $8
   (i32.load offset=12
    (local.get $0)
   )
  )
  ;;@ resample.c:576:0
  (local.set $9
   (i32.load
    (local.get $3)
   )
  )
  (if
   (i32.ge_s
    (local.get $2)
    (local.get $9)
   )
   (block
    ;;@ resample.c:588:0
    (i32.store
     (local.get $7)
     (local.get $2)
    )
    ;;@ resample.c:589:0
    (i32.store
     (local.get $6)
     (local.get $1)
    )
    ;;@ resample.c:590:0
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $5
   (i32.load
    (local.get $5)
   )
  )
  (local.set $0
   (local.get $2)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in
   (block $__rjti$0
    ;;@ resample.c:576:0
    (br_if $__rjti$0
     (i32.ge_s
      (local.get $2)
      (local.get $5)
     )
    )
    ;;@ resample.c:578:0
    (local.set $3
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (local.set $2
     (i32.mul
      (local.get $2)
      (local.get $10)
     )
    )
    (local.set $2
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
      (local.get $4)
     )
    )
    (f32.store
     (local.get $2)
     (f32.const 0)
    )
    ;;@ resample.c:579:0
    (local.set $13
     (i32.add
      (local.get $0)
      (local.get $11)
     )
    )
    ;;@ resample.c:580:0
    (local.set $0
     (i32.add
      (local.get $1)
      (local.get $12)
     )
    )
    ;;@ resample.c:581:0
    (local.set $2
     (i32.lt_u
      (local.get $0)
      (local.get $8)
     )
    )
    (local.set $1
     (select
      (i32.const 0)
      (local.get $8)
      (local.get $2)
     )
    )
    (local.set $1
     (i32.sub
      (local.get $0)
      (local.get $1)
     )
    )
    (local.set $0
     (i32.xor
      (local.get $2)
      (i32.const 1)
     )
    )
    (local.set $0
     (i32.and
      (local.get $0)
      (i32.const 1)
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (local.get $13)
     )
    )
    (local.set $2
     (if (result i32)
      ;;@ resample.c:576:0
      (i32.lt_s
       (local.get $0)
       (local.get $9)
      )
      (block
       (local.set $2
        (local.get $3)
       )
       (br $while-in)
      )
      (local.get $3)
     )
    )
   )
  )
  ;;@ resample.c:588:0
  (i32.store
   (local.get $7)
   (local.get $0)
  )
  ;;@ resample.c:589:0
  (i32.store
   (local.get $6)
   (local.get $1)
  )
  ;;@ resample.c:590:0
  (local.get $2)
 )
 (func $_speex_resampler_destroy (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  ;;@ resample.c:870:0
  (local.set $1
   (i32.load offset=72
    (local.get $0)
   )
  )
  ;;@ ./os_support.h:81:0
  (call $_free
   (local.get $1)
  )
  ;;@ resample.c:871:0
  (local.set $1
   (i32.load offset=76
    (local.get $0)
   )
  )
  ;;@ ./os_support.h:81:0
  (call $_free
   (local.get $1)
  )
  ;;@ resample.c:872:0
  (local.set $1
   (i32.load offset=60
    (local.get $0)
   )
  )
  ;;@ ./os_support.h:81:0
  (call $_free
   (local.get $1)
  )
  ;;@ resample.c:873:0
  (local.set $1
   (i32.load offset=68
    (local.get $0)
   )
  )
  ;;@ ./os_support.h:81:0
  (call $_free
   (local.get $1)
  )
  ;;@ resample.c:874:0
  (local.set $1
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
  )
  (local.set $1
   (i32.load
    (local.get $1)
   )
  )
  ;;@ ./os_support.h:81:0
  (call $_free
   (local.get $1)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $_speex_resampler_process_float (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $10
   (i32.add
    (local.get $9)
    (i32.const 4)
   )
  )
  ;;@ resample.c:931:0
  (local.set $11
   (i32.load
    (local.get $3)
   )
  )
  ;;@ resample.c:932:0
  (local.set $7
   (i32.load
    (local.get $5)
   )
  )
  ;;@ resample.c:933:0
  (local.set $15
   (i32.add
    (local.tee $14
     (i32.load offset=72
      (local.get $0)
     )
    )
    (i32.shl
     (local.tee $18
      (i32.mul
       (local.tee $16
        (i32.load offset=28
         (local.get $0)
        )
       )
       (local.get $1)
      )
     )
     (i32.const 2)
    )
   )
  )
  ;;@ resample.c:935:0
  (local.set $21
   (i32.sub
    (local.get $16)
    ;;@ resample.c:934:0
    (local.tee $19
     (i32.add
      (local.tee $13
       (i32.load offset=24
        (local.get $0)
       )
      )
      (i32.const -1)
     )
    )
   )
  )
  ;;@ resample.c:936:0
  (local.set $22
   (i32.load offset=88
    (local.get $0)
   )
  )
  (block $folding-inner0
   (if
    ;;@ resample.c:938:0
    (i32.load
     (local.tee $6
      (i32.add
       (i32.load offset=68
        (local.get $0)
       )
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
     )
    )
    (block
     (i32.store
      (local.get $10)
      (local.get $7)
     )
     ;;@ resample.c:905:0
     (i32.store
      (local.get $9)
      (i32.load
       (local.get $6)
      )
     )
     ;;@ resample.c:886:0
     (i32.store offset=56
      (local.get $0)
      (i32.const 1)
     )
     ;;@ resample.c:889:0
     (local.set $17
      (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_i32)
       (local.get $0)
       (local.get $1)
       (local.get $15)
       (local.get $9)
       (local.get $4)
       (local.get $10)
       (i32.add
        (i32.and
         (i32.load offset=84
          (local.get $0)
         )
         (i32.const 63)
        )
        (i32.const 166)
       )
      )
     )
     (if
      ;;@ resample.c:891:0
      (i32.lt_s
       (local.tee $6
        (i32.load
         (local.tee $12
          (i32.add
           (i32.load offset=60
            (local.get $0)
           )
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
          )
         )
        )
       )
       (local.tee $8
        (i32.load
         (local.get $9)
        )
       )
      )
      ;;@ resample.c:892:0
      (i32.store
       (local.get $9)
       (local.get $6)
      )
      (local.set $6
       (local.get $8)
      )
     )
     ;;@ resample.c:893:0
     (i32.store
      (local.get $10)
      (local.get $17)
     )
     ;;@ resample.c:894:0
     (i32.store
      (local.get $12)
      (i32.sub
       (i32.load
        (local.get $12)
       )
       (local.get $6)
      )
     )
     ;;@ resample.c:896:0
     (local.set $8
      (i32.load
       (local.get $9)
      )
     )
     (if
      ;;@ resample.c:898:0
      (i32.gt_s
       (local.get $13)
       (i32.const 1)
      )
      (block
       (local.set $6
        (i32.const 0)
       )
       (loop $while-in
        ;;@ resample.c:899:0
        (i32.store
         (i32.add
          (i32.shl
           (local.get $6)
           (i32.const 2)
          )
          (local.get $15)
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $6)
             (local.get $8)
            )
            (i32.const 2)
           )
           (local.get $15)
          )
         )
        )
        ;;@ resample.c:898:0
        (br_if $while-in
         (i32.ne
          (local.get $19)
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     ;;@ resample.c:911:0
     (local.set $8
      (i32.sub
       (i32.load
        (local.tee $12
         (i32.add
          (i32.load offset=68
           (local.get $0)
          )
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
         )
        )
       )
       (local.get $8)
      )
     )
     (i32.store
      (local.get $12)
      (local.get $8)
     )
     (if
      ;;@ resample.c:914:0
      (local.get $8)
      (block
       (local.set $17
        (i32.load
         (local.get $9)
        )
       )
       (local.set $6
        (i32.const 0)
       )
       (loop $while-in1
        ;;@ resample.c:918:0
        (i32.store
         (i32.add
          (i32.shl
           (local.tee $20
            (i32.add
             (local.get $6)
             (local.get $19)
            )
           )
           (i32.const 2)
          )
          (local.get $15)
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $17)
             (local.get $20)
            )
            (i32.const 2)
           )
           (local.get $15)
          )
         )
        )
        ;;@ resample.c:917:0
        (br_if $while-in1
         (i32.ne
          (local.get $8)
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     ;;@ resample.c:920:0
     (local.set $4
      (i32.add
       (i32.shl
        (i32.mul
         (local.tee $6
          (i32.load
           (local.get $10)
          )
         )
         (i32.load offset=92
          (local.get $0)
         )
        )
        (i32.const 2)
       )
       (local.get $4)
      )
     )
     ;;@ resample.c:939:0
     (local.set $6
      (i32.sub
       (local.get $7)
       (local.get $6)
      )
     )
     (br_if $folding-inner0
      (i32.load
       (local.get $12)
      )
     )
    )
    (local.set $6
     (local.get $7)
    )
   )
   ;;@ resample.c:941:0
   (br_if $folding-inner0
    (i32.eqz
     (i32.and
      (i32.ne
       (local.get $11)
       (i32.const 0)
      )
      (i32.ne
       (local.get $6)
       (i32.const 0)
      )
     )
    )
   )
   (local.set $18
    (i32.add
     (i32.shl
      (i32.add
       (i32.add
        (local.get $13)
        (local.get $18)
       )
       (i32.const -1)
      )
      (i32.const 2)
     )
     (local.get $14)
    )
   )
   (local.set $16
    (i32.sub
     (i32.add
      (local.get $13)
      (i32.const -2)
     )
     (local.get $16)
    )
   )
   (loop $while-in3
    ;;@ resample.c:942:0
    (i32.store
     (local.get $10)
     (local.tee $8
      (select
       (local.get $21)
       (local.get $11)
       (i32.gt_u
        (local.get $11)
        (local.get $21)
       )
      )
     )
    )
    ;;@ resample.c:943:0
    (i32.store
     (local.get $9)
     (local.get $6)
    )
    ;;@ resample.c:945:0
    (local.set $7
     (i32.ne
      (local.get $8)
      (i32.const 0)
     )
    )
    (if
     (local.tee $17
      (i32.ne
       (local.get $2)
       (i32.const 0)
      )
     )
     (if
      (local.get $7)
      (block
       (local.set $7
        (i32.const 0)
       )
       (loop $while-in5
        ;;@ resample.c:947:0
        (i32.store
         (i32.add
          (i32.shl
           (i32.add
            (local.get $7)
            (local.get $19)
           )
           (i32.const 2)
          )
          (local.get $15)
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.mul
             (local.get $7)
             (local.get $22)
            )
            (i32.const 2)
           )
           (local.get $2)
          )
         )
        )
        ;;@ resample.c:946:0
        (br_if $while-in5
         (i32.lt_u
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (local.get $8)
         )
        )
       )
      )
     )
     (if
      (local.get $7)
      ;;@ resample.c:950:0
      (drop
       (call $_memset
        (local.get $18)
        (i32.const 0)
        (i32.sub
         (i32.const -4)
         (i32.shl
          (select
           (local.get $16)
           ;;@ resample.c:949:0
           (local.tee $7
            (i32.xor
             (local.get $11)
             (i32.const -1)
            )
           )
           (i32.gt_u
            (local.get $16)
            (local.get $7)
           )
          )
          (i32.const 2)
         )
        )
       )
      )
     )
    )
    ;;@ resample.c:881:0
    (local.set $12
     (i32.load offset=24
      (local.get $0)
     )
    )
    ;;@ resample.c:883:0
    (local.set $13
     (i32.add
      (i32.load offset=72
       (local.get $0)
      )
      (i32.shl
       (i32.mul
        (i32.load offset=28
         (local.get $0)
        )
        (local.get $1)
       )
       (i32.const 2)
      )
     )
    )
    ;;@ resample.c:886:0
    (i32.store offset=56
     (local.get $0)
     (i32.const 1)
    )
    ;;@ resample.c:889:0
    (local.set $20
     (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_i32)
      (local.get $0)
      (local.get $1)
      (local.get $13)
      (local.get $10)
      (local.get $4)
      (local.get $9)
      (i32.add
       (i32.and
        (i32.load offset=84
         (local.get $0)
        )
        (i32.const 63)
       )
       (i32.const 166)
      )
     )
    )
    (if
     ;;@ resample.c:891:0
     (i32.lt_s
      (local.tee $7
       (i32.load
        (local.tee $14
         (i32.add
          (i32.load offset=60
           (local.get $0)
          )
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
         )
        )
       )
      )
      (local.tee $8
       (i32.load
        (local.get $10)
       )
      )
     )
     ;;@ resample.c:892:0
     (i32.store
      (local.get $10)
      (local.get $7)
     )
     (local.set $7
      (local.get $8)
     )
    )
    ;;@ resample.c:893:0
    (i32.store
     (local.get $9)
     (local.get $20)
    )
    ;;@ resample.c:894:0
    (i32.store
     (local.get $14)
     (i32.sub
      (i32.load
       (local.get $14)
      )
      (local.get $7)
     )
    )
    ;;@ resample.c:896:0
    (local.set $8
     (i32.load
      (local.get $10)
     )
    )
    ;;@ resample.c:898:0
    (local.set $14
     (i32.add
      (local.get $12)
      (i32.const -1)
     )
    )
    (if
     (i32.gt_s
      (local.get $12)
      (i32.const 1)
     )
     (block
      (local.set $7
       (i32.const 0)
      )
      (loop $while-in7
       ;;@ resample.c:899:0
       (i32.store
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 2)
         )
         (local.get $13)
        )
        (i32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $7)
            (local.get $8)
           )
           (i32.const 2)
          )
          (local.get $13)
         )
        )
       )
       ;;@ resample.c:898:0
       (br_if $while-in7
        (i32.ne
         (local.get $14)
         (local.tee $7
          (i32.add
           (local.get $7)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    ;;@ resample.c:954:0
    (local.set $6
     (i32.sub
      (local.get $6)
      (local.tee $7
       (i32.load
        (local.get $9)
       )
      )
     )
    )
    ;;@ resample.c:955:0
    (local.set $4
     (i32.add
      (i32.shl
       (i32.mul
        (i32.load offset=92
         (local.get $0)
        )
        (local.get $7)
       )
       (i32.const 2)
      )
      (local.get $4)
     )
    )
    ;;@ resample.c:956:0
    (local.set $2
     (select
      (i32.add
       (i32.shl
        (i32.mul
         (local.get $8)
         (local.get $22)
        )
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.const 0)
      (local.get $17)
     )
    )
    ;;@ resample.c:941:0
    (br_if $while-in3
     (i32.and
      (i32.ne
       ;;@ resample.c:953:0
       (local.tee $11
        (i32.sub
         (local.get $11)
         (local.get $8)
        )
       )
       (i32.const 0)
      )
      (i32.ne
       (local.get $6)
       (i32.const 0)
      )
     )
    )
   )
   ;;@ resample.c:960:0
   (i32.store
    (local.get $3)
    (i32.sub
     (i32.load
      (local.get $3)
     )
     (local.get $11)
    )
   )
   ;;@ resample.c:961:0
   (i32.store
    (local.get $5)
    (i32.sub
     (i32.load
      (local.get $5)
     )
     (local.get $6)
    )
   )
   ;;@ resample.c:962:0
   (drop
    (i32.load offset=84
     (local.get $0)
    )
   )
   (global.set $STACKTOP
    (local.get $9)
   )
   (return)
  )
  ;;@ resample.c:960:0
  (i32.store
   (local.get $3)
   (i32.sub
    (i32.load
     (local.get $3)
    )
    (local.get $11)
   )
  )
  ;;@ resample.c:961:0
  (i32.store
   (local.get $5)
   (i32.sub
    (i32.load
     (local.get $5)
    )
    (local.get $6)
   )
  )
  ;;@ resample.c:962:0
  (drop
   (i32.load offset=84
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_speex_resampler_process_interleaved_float (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  ;;@ resample.c:1042:0
  (local.set $7
   (i32.load
    (local.get $4)
   )
  )
  ;;@ resample.c:1043:0
  (local.set $8
   (i32.load
    (local.get $2)
   )
  )
  ;;@ resample.c:1044:0
  (local.set $9
   (i32.load offset=88
    (local.get $0)
   )
  )
  ;;@ resample.c:1045:0
  (local.set $10
   (i32.load offset=92
    (local.get $0)
   )
  )
  ;;@ resample.c:1046:0
  (local.set $5
   (i32.load offset=20
    (local.get $0)
   )
  )
  (i32.store offset=92
   (local.get $0)
   (local.get $5)
  )
  (i32.store offset=88
   (local.get $0)
   (local.get $5)
  )
  (if
   ;;@ resample.c:1047:0
   (local.get $5)
   (if
    (local.get $1)
    (block
     (local.set $5
      (i32.const 0)
     )
     (loop $while-in1
      ;;@ resample.c:1049:0
      (i32.store
       (local.get $4)
       (local.get $7)
      )
      ;;@ resample.c:1050:0
      (i32.store
       (local.get $2)
       (local.get $8)
      )
      ;;@ resample.c:1052:0
      (local.set $11
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
      (local.set $6
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
        (local.get $3)
       )
      )
      (call $_speex_resampler_process_float
       (local.get $0)
       (local.get $5)
       (local.get $11)
       (local.get $2)
       (local.get $6)
       (local.get $4)
      )
      ;;@ resample.c:1047:0
      (local.set $5
       (i32.add
        (local.get $5)
        (i32.const 1)
       )
      )
      (local.set $6
       (i32.load offset=20
        (local.get $0)
       )
      )
      (br_if $while-in1
       (i32.lt_u
        (local.get $5)
        (local.get $6)
       )
      )
     )
    )
    (block
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in
      ;;@ resample.c:1049:0
      (i32.store
       (local.get $4)
       (local.get $7)
      )
      ;;@ resample.c:1050:0
      (i32.store
       (local.get $2)
       (local.get $8)
      )
      ;;@ resample.c:1054:0
      (local.set $5
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $3)
       )
      )
      (call $_speex_resampler_process_float
       (local.get $0)
       (local.get $1)
       (i32.const 0)
       (local.get $2)
       (local.get $5)
       (local.get $4)
      )
      ;;@ resample.c:1047:0
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (local.set $5
       (i32.load offset=20
        (local.get $0)
       )
      )
      (br_if $while-in
       (i32.lt_u
        (local.get $1)
        (local.get $5)
       )
      )
     )
    )
   )
  )
  ;;@ resample.c:1056:0
  (i32.store offset=88
   (local.get $0)
   (local.get $9)
  )
  ;;@ resample.c:1057:0
  (i32.store offset=92
   (local.get $0)
   (local.get $10)
  )
  ;;@ resample.c:1058:0
  (local.set $0
   (i32.load offset=84
    (local.get $0)
   )
  )
  (local.set $0
   (i32.eq
    (local.get $0)
    (i32.const 39)
   )
  )
  (local.get $0)
 )
 (func $___stdio_close (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.and
   (call $___wasi_fd_close
    (i32.load offset=60
     (local.get $0)
    )
   )
   (i32.const 65535)
  )
 )
 (func $___stdio_write (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $3
    (local.get $6)
   )
   (local.tee $4
    (i32.load offset=28
     (local.get $0)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (local.tee $5
    (i32.sub
     (i32.load offset=20
      (local.get $0)
     )
     (local.get $4)
    )
   )
  )
  (i32.store offset=8
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=12
   (local.get $3)
   (local.get $2)
  )
  (local.set $4
   (i32.const 2)
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (local.get $5)
   )
  )
  (local.set $1
   (local.get $3)
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in
     (if
      (i32.ne
       (local.tee $3
        (if (result i32)
         (if (result i32)
          (i32.and
           (local.tee $3
            (call $___wasi_fd_write
             (i32.load offset=60
              (local.get $0)
             )
             (local.get $1)
             (local.get $4)
             (local.get $7)
            )
           )
           (i32.const 65535)
          )
          (block (result i32)
           (i32.store
            (i32.const 53312)
            (i32.and
             (local.get $3)
             (i32.const 65535)
            )
           )
           (i32.const -1)
          )
          (i32.const 0)
         )
         (block (result i32)
          (i32.store
           (local.get $7)
           (i32.const -1)
          )
          (i32.const -1)
         )
         (i32.load
          (local.get $7)
         )
        )
       )
       (local.get $5)
      )
      (block
       (br_if $__rjti$1
        (i32.lt_s
         (local.get $3)
         (i32.const 0)
        )
       )
       (i32.store
        (local.tee $1
         (select
          (i32.add
           (local.get $1)
           (i32.const 8)
          )
          (local.get $1)
          (local.tee $9
           (i32.gt_u
            (local.get $3)
            (local.tee $8
             (i32.load offset=4
              (local.get $1)
             )
            )
           )
          )
         )
        )
        (i32.add
         (local.tee $8
          (i32.sub
           (local.get $3)
           (select
            (local.get $8)
            (i32.const 0)
            (local.get $9)
           )
          )
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store offset=4
        (local.get $1)
        (i32.sub
         (i32.load offset=4
          (local.get $1)
         )
         (local.get $8)
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.shr_s
          (i32.shl
           (local.get $9)
           (i32.const 31)
          )
          (i32.const 31)
         )
        )
       )
       (local.set $5
        (i32.sub
         (local.get $5)
         (local.get $3)
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.store offset=16
     (local.get $0)
     (i32.add
      (local.tee $1
       (i32.load offset=44
        (local.get $0)
       )
      )
      (i32.load offset=48
       (local.get $0)
      )
     )
    )
    (i32.store offset=28
     (local.get $0)
     (local.get $1)
    )
    (i32.store offset=20
     (local.get $0)
     (local.get $1)
    )
    (br $__rjto$1)
   )
   (i32.store offset=16
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=28
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=20
    (local.get $0)
    (i32.const 0)
   )
   (i32.store
    (local.get $0)
    (i32.or
     (i32.load
      (local.get $0)
     )
     (i32.const 32)
    )
   )
   (local.set $2
    (if (result i32)
     (i32.eq
      (local.get $4)
      (i32.const 2)
     )
     (i32.const 0)
     (i32.sub
      (local.get $2)
      (i32.load offset=4
       (local.get $1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $2)
 )
 (func $___stdio_seek (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (result i64)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $1
   (if (result i64)
    (if (result i32)
     (i32.and
      (local.tee $0
       (call $legalimport$___wasi_fd_seek
        (i32.load offset=60
         (local.get $0)
        )
        (i32.wrap_i64
         (local.get $1)
        )
        (i32.wrap_i64
         (i64.shr_u
          (local.get $1)
          (i64.const 32)
         )
        )
        (i32.and
         (local.get $2)
         (i32.const 255)
        )
        (local.get $3)
       )
      )
      (i32.const 65535)
     )
     (block (result i32)
      (i32.store
       (i32.const 53312)
       (i32.and
        (local.get $0)
        (i32.const 65535)
       )
      )
      (i32.const -1)
     )
     (i32.const 0)
    )
    (block (result i64)
     (i64.store
      (local.get $3)
      (i64.const -1)
     )
     (i64.const -1)
    )
    (i64.load
     (local.get $3)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $1)
 )
 (func $___errno_location (; has Stack IR ;) (result i32)
  (i32.const 53312)
 )
 (func $___stdio_read (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=4
   (local.get $3)
   (i32.sub
    (local.get $2)
    (i32.ne
     (local.tee $4
      (i32.load offset=48
       (local.get $0)
      )
     )
     (i32.const 0)
    )
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load offset=44
    (local.get $0)
   )
  )
  (i32.store offset=12
   (local.get $3)
   (local.get $4)
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (if (result i32)
      (i32.and
       (local.tee $4
        (call $___wasi_fd_read
         (i32.load offset=60
          (local.get $0)
         )
         (local.get $3)
         (i32.const 2)
         (i32.add
          (local.get $3)
          (i32.const 16)
         )
        )
       )
       (i32.const 65535)
      )
      (block (result i32)
       (i32.store
        (i32.const 53312)
        (i32.and
         (local.get $4)
         (i32.const 65535)
        )
       )
       (i32.const -1)
      )
      (i32.const 0)
     )
     (block
      (i32.store offset=16
       (local.get $3)
       (i32.const -1)
      )
      (local.set $2
       (i32.const -1)
      )
      (br $__rjti$0)
     )
     (if
      (i32.lt_s
       (local.tee $4
        (i32.load offset=16
         (local.get $3)
        )
       )
       (i32.const 1)
      )
      (block
       (local.set $2
        (local.get $4)
       )
       (br $__rjti$0)
      )
      (if
       (i32.gt_u
        (local.get $4)
        (local.tee $6
         (i32.load offset=4
          (local.get $3)
         )
        )
       )
       (block
        (i32.store offset=4
         (local.get $0)
         (local.tee $5
          (i32.load offset=44
           (local.get $0)
          )
         )
        )
        (i32.store offset=8
         (local.get $0)
         (i32.add
          (local.get $5)
          (i32.sub
           (local.get $4)
           (local.get $6)
          )
         )
        )
        (if
         (i32.load offset=48
          (local.get $0)
         )
         (block
          (i32.store offset=4
           (local.get $0)
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
           (i32.load8_s
            (local.get $5)
           )
          )
         )
        )
       )
       (local.set $2
        (local.get $4)
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (i32.store
    (local.get $0)
    (i32.or
     (i32.load
      (local.get $0)
     )
     (i32.xor
      (i32.and
       (local.get $2)
       (i32.const 48)
      )
      (i32.const 16)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $2)
 )
 (func $___emscripten_stdout_close (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.const 0)
 )
 (func $___emscripten_stdout_seek (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (result i64)
  (i64.const 0)
 )
 (func $_wcslen (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (local.get $0)
  )
  (loop $while-in
   (local.set $2
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
   (if
    (i32.load
     (local.get $1)
    )
    (block
     (local.set $1
      (local.get $2)
     )
     (br $while-in)
    )
   )
  )
  (i32.shr_s
   (i32.sub
    (local.get $1)
    (local.get $0)
   )
   (i32.const 2)
  )
 )
 (func $_strcmp (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $0
   (if (result i32)
    (i32.or
     (i32.ne
      (local.tee $2
       (i32.load8_s
        (local.get $0)
       )
      )
      (local.tee $3
       (i32.load8_s
        (local.get $1)
       )
      )
     )
     (i32.eqz
      (local.get $2)
     )
    )
    (block (result i32)
     (local.set $1
      (local.get $2)
     )
     (local.get $3)
    )
    (loop $while-in (result i32)
     (if (result i32)
      (i32.or
       (i32.ne
        (local.tee $2
         (i32.load8_s
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
         )
        )
        (local.tee $3
         (i32.load8_s
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
        )
       )
       (i32.eqz
        (local.get $2)
       )
      )
      (block (result i32)
       (local.set $1
        (local.get $2)
       )
       (local.get $3)
      )
      (br $while-in)
     )
    )
   )
  )
  (i32.sub
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
   (i32.and
    (local.get $0)
    (i32.const 255)
   )
  )
 )
 (func $_strlen (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (i32.and
       (local.tee $2
        (local.get $0)
       )
       (i32.const 3)
      )
     )
    )
    (local.set $0
     (local.tee $1
      (local.get $2)
     )
    )
    (block $label$break$L1
     (loop $while-in
      (br_if $label$break$L1
       (i32.eqz
        (i32.load8_s
         (local.get $1)
        )
       )
      )
      (br_if $while-in
       (i32.and
        (local.tee $0
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
        (i32.const 3)
       )
      )
     )
     (local.set $0
      (local.get $1)
     )
     (br $__rjti$0)
    )
    (br $__rjto$0)
   )
   (loop $while-in1
    (local.set $1
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.add
        (local.tee $3
         (i32.load
          (local.get $0)
         )
        )
        (i32.const -16843009)
       )
       (i32.xor
        (i32.and
         (local.get $3)
         (i32.const -2139062144)
        )
        (i32.const -2139062144)
       )
      )
     )
     (block
      (local.set $0
       (local.get $1)
      )
      (br $while-in1)
     )
    )
   )
   (if
    (i32.and
     (local.get $3)
     (i32.const 255)
    )
    (loop $while-in3
     (br_if $while-in3
      (i32.load8_s
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
  (i32.sub
   (local.get $0)
   (local.get $2)
  )
 )
 (func $_fwrite (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local.set $4
   (i32.mul
    (local.get $1)
    (local.get $2)
   )
  )
  (drop
   (i32.load offset=76
    (local.get $3)
   )
  )
  (local.set $0
   (call $___fwritex
    (local.get $0)
    (local.get $4)
    (local.get $3)
   )
  )
  (local.set $2
   (select
    (local.get $2)
    (i32.const 0)
    (local.get $1)
   )
  )
  (if (result i32)
   (i32.ne
    (local.get $0)
    (local.get $4)
   )
   (i32.div_u
    (local.get $0)
    (local.get $1)
   )
   (local.get $2)
  )
 )
 (func $___towrite (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (i32.store8 offset=74
   (local.get $0)
   (i32.or
    (local.tee $1
     (i32.load8_s offset=74
      (local.get $0)
     )
    )
    (i32.add
     (local.get $1)
     (i32.const 255)
    )
   )
  )
  (if (result i32)
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 8)
   )
   (block (result i32)
    (i32.store
     (local.get $0)
     (i32.or
      (local.get $1)
      (i32.const 32)
     )
    )
    (i32.const -1)
   )
   (block (result i32)
    (i32.store offset=8
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=4
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=28
     (local.get $0)
     (local.tee $1
      (i32.load offset=44
       (local.get $0)
      )
     )
    )
    (i32.store offset=20
     (local.get $0)
     (local.get $1)
    )
    (i32.store offset=16
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.load offset=48
       (local.get $0)
      )
     )
    )
    (i32.const 0)
   )
  )
 )
 (func $___fwritex (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (block $label$break$L5
   (block $__rjti$0
    (br_if $__rjti$0
     (local.tee $3
      (i32.load offset=16
       (local.get $2)
      )
     )
    )
    (local.set $4
     (if (result i32)
      (call $___towrite
       (local.get $2)
      )
      (i32.const 0)
      (block
       (local.set $3
        (i32.load offset=16
         (local.get $2)
        )
       )
       (br $__rjti$0)
      )
     )
    )
    (br $label$break$L5)
   )
   (if
    (i32.lt_u
     (i32.sub
      (local.get $3)
      (local.tee $4
       (i32.load offset=20
        (local.get $2)
       )
      )
     )
     (local.get $1)
    )
    (block
     (local.set $3
      (i32.load offset=36
       (local.get $2)
      )
     )
     (local.set $4
      (call_indirect (type $i32_i32_i32_=>_i32)
       (local.get $2)
       (local.get $0)
       (local.get $1)
       (i32.add
        (i32.and
         (local.get $3)
         (i32.const 31)
        )
        (i32.const 82)
       )
      )
     )
     (br $label$break$L5)
    )
   )
   (if
    (i32.or
     (i32.eqz
      (local.get $1)
     )
     (i32.lt_s
      (i32.load8_s offset=75
       (local.get $2)
      )
      (i32.const 0)
     )
    )
    (local.set $3
     (i32.const 0)
    )
    (block $label$break$L10
     (local.set $3
      (local.get $1)
     )
     (loop $while-in
      (if
       (i32.ne
        (i32.load8_s
         (i32.add
          (local.get $0)
          (local.tee $5
           (i32.add
            (local.get $3)
            (i32.const -1)
           )
          )
         )
        )
        (i32.const 10)
       )
       (if
        (local.get $5)
        (block
         (local.set $3
          (local.get $5)
         )
         (br $while-in)
        )
        (block
         (local.set $3
          (i32.const 0)
         )
         (br $label$break$L10)
        )
       )
      )
     )
     (local.set $4
      (i32.load offset=36
       (local.get $2)
      )
     )
     (br_if $label$break$L5
      (i32.lt_u
       (local.tee $4
        (call_indirect (type $i32_i32_i32_=>_i32)
         (local.get $2)
         (local.get $0)
         (local.get $3)
         (i32.add
          (i32.and
           (local.get $4)
           (i32.const 31)
          )
          (i32.const 82)
         )
        )
       )
       (local.get $3)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (local.get $3)
      )
     )
     (local.set $1
      (i32.sub
       (local.get $1)
       (local.get $3)
      )
     )
     (local.set $4
      (i32.load offset=20
       (local.get $2)
      )
     )
    )
   )
   (drop
    (call $_memcpy
     (local.get $4)
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.store offset=20
    (local.get $2)
    (i32.add
     (local.get $1)
     (i32.load offset=20
      (local.get $2)
     )
    )
   )
   (local.set $4
    (i32.add
     (local.get $1)
     (local.get $3)
    )
   )
  )
  (local.get $4)
 )
 (func $___strchrnul (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (block $label$break$L1
   (if
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (loop $while-in
     (br_if $label$break$L1
      (i32.or
       (i32.eqz
        (local.tee $1
         (i32.load8_s
          (local.get $0)
         )
        )
       )
       (i32.eq
        (local.get $1)
        (i32.const 58)
       )
      )
     )
     (br_if $while-in
      (i32.and
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (i32.const 3)
      )
     )
    )
   )
   (if
    (i32.eqz
     (i32.and
      (i32.add
       (local.tee $1
        (i32.load
         (local.get $0)
        )
       )
       (i32.const -16843009)
      )
      (i32.xor
       (i32.and
        (local.get $1)
        (i32.const -2139062144)
       )
       (i32.const -2139062144)
      )
     )
    )
    (loop $while-in2
     (if
      (i32.eqz
       (i32.and
        (i32.add
         (local.tee $1
          (i32.xor
           (local.get $1)
           (i32.const 976894522)
          )
         )
         (i32.const -16843009)
        )
        (i32.xor
         (i32.and
          (local.get $1)
          (i32.const -2139062144)
         )
         (i32.const -2139062144)
        )
       )
      )
      (br_if $while-in2
       (i32.eqz
        (i32.and
         (i32.add
          (local.tee $1
           (i32.load
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 4)
             )
            )
           )
          )
          (i32.const -16843009)
         )
         (i32.xor
          (i32.and
           (local.get $1)
           (i32.const -2139062144)
          )
          (i32.const -2139062144)
         )
        )
       )
      )
     )
    )
   )
   (loop $while-in4
    (local.set $1
     (i32.add
      (local.get $0)
      (i32.const 1)
     )
    )
    (if
     (i32.eqz
      (i32.or
       (i32.eqz
        (local.tee $2
         (i32.load8_s
          (local.get $0)
         )
        )
       )
       (i32.eq
        (local.get $2)
        (i32.const 58)
       )
      )
     )
     (block
      (local.set $0
       (local.get $1)
      )
      (br $while-in4)
     )
    )
   )
  )
  (local.get $0)
 )
 (func $_fflush (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (local.get $0)
   (local.set $0
    (block $do-once (result i32)
     (if
      (i32.le_s
       (i32.load offset=76
        (local.get $0)
       )
       (i32.const -1)
      )
      (br $do-once
       (call $___fflush_unlocked
        (local.get $0)
       )
      )
     )
     (call $___fflush_unlocked
      (local.get $0)
     )
    )
   )
   (block
    (local.set $0
     (if (result i32)
      (i32.load
       (i32.const 37132)
      )
      (call $_fflush
       (i32.load
        (i32.const 37132)
       )
      )
      (i32.const 0)
     )
    )
    (if
     (local.tee $1
      (i32.load
       (i32.const 53324)
      )
     )
     (loop $while-in
      (drop
       (if (result i32)
        (i32.gt_s
         (i32.load offset=76
          (local.get $1)
         )
         (i32.const -1)
        )
        (i32.const 1)
        (i32.const 0)
       )
      )
      (if
       (i32.gt_u
        (i32.load offset=20
         (local.get $1)
        )
        (i32.load offset=28
         (local.get $1)
        )
       )
       (local.set $0
        (i32.or
         (call $___fflush_unlocked
          (local.get $1)
         )
         (local.get $0)
        )
       )
      )
      (br_if $while-in
       (local.tee $1
        (i32.load offset=56
         (local.get $1)
        )
       )
      )
     )
    )
   )
  )
  (local.get $0)
 )
 (func $___fflush_unlocked (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_u
      (i32.load offset=20
       (local.get $0)
      )
      (i32.load offset=28
       (local.get $0)
      )
     )
    )
    (local.set $1
     (i32.load offset=36
      (local.get $0)
     )
    )
    (drop
     (call_indirect (type $i32_i32_i32_=>_i32)
      (local.get $0)
      (i32.const 0)
      (i32.const 0)
      (i32.add
       (i32.and
        (local.get $1)
        (i32.const 31)
       )
       (i32.const 82)
      )
     )
    )
    (br_if $__rjti$0
     (i32.load offset=20
      (local.get $0)
     )
    )
    (br $__rjto$0
     (i32.const -1)
    )
   )
   (if
    (i32.lt_u
     (local.tee $1
      (i32.load offset=4
       (local.get $0)
      )
     )
     (local.tee $2
      (i32.load offset=8
       (local.get $0)
      )
     )
    )
    (block
     (local.set $3
      (i32.load offset=40
       (local.get $0)
      )
     )
     (drop
      (call_indirect (type $i32_i64_i32_=>_i64)
       (local.get $0)
       (i64.extend_i32_s
        (i32.sub
         (local.get $1)
         (local.get $2)
        )
       )
       (i32.const 1)
       (i32.add
        (i32.and
         (local.get $3)
         (i32.const 3)
        )
        (i32.const 262)
       )
      )
     )
    )
   )
   (i32.store offset=16
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=28
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=20
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=8
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=4
    (local.get $0)
    (i32.const 0)
   )
   (i32.const 0)
  )
 )
 (func $_sscanf (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (local.set $0
   (call $_vsscanf
    (local.get $0)
    (i32.const 48632)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $0)
 )
 (func $_vsscanf (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (drop
   (call $_memset
    (local.get $3)
    (i32.const 0)
    (i32.const 144)
   )
  )
  (i32.store offset=32
   (local.get $3)
   (i32.const 24)
  )
  (i32.store offset=44
   (local.get $3)
   (local.get $0)
  )
  (i32.store offset=76
   (local.get $3)
   (i32.const -1)
  )
  (i32.store offset=84
   (local.get $3)
   (local.get $0)
  )
  (local.set $0
   (call $_vfscanf
    (local.get $3)
    (local.get $1)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_do_read (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call $___string_read
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_vfscanf (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i64)
  (local $19 i32)
  (local $20 f64)
  (local $21 i32)
  (local $22 i32)
  (local $23 i64)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 288)
   )
  )
  (drop
   (if (result i32)
    (i32.gt_s
     (i32.load offset=76
      (local.get $0)
     )
     (i32.const -1)
    )
    (i32.const 1)
    (i32.const 0)
   )
  )
  (local.set $14
   (i32.add
    (local.get $9)
    (i32.const 264)
   )
  )
  (local.set $21
   (i32.add
    (local.get $9)
    (i32.const 260)
   )
  )
  (local.set $22
   (i32.add
    (local.get $9)
    (i32.const 272)
   )
  )
  (if
   (local.tee $11
    (i32.load8_s
     (local.get $1)
    )
   )
   (block $label$break$L4
    (block $__rjto$3
     (block $__rjti$3
      (block $__rjti$2
       (block $__rjti$1
        (loop $label$continue$L6
         (block $label$break$L6
          (if
           (i32.or
            (i32.eq
             (local.tee $3
              (i32.and
               (local.get $11)
               (i32.const 255)
              )
             )
             (i32.const 32)
            )
            (i32.lt_u
             (i32.add
              (local.get $3)
              (i32.const -9)
             )
             (i32.const 5)
            )
           )
           (block
            (loop $while-in104
             (if
              (i32.or
               (i32.eq
                (local.tee $6
                 (i32.load8_u
                  (local.tee $3
                   (i32.add
                    (local.get $1)
                    (i32.const 1)
                   )
                  )
                 )
                )
                (i32.const 32)
               )
               (i32.lt_u
                (i32.add
                 (local.get $6)
                 (i32.const -9)
                )
                (i32.const 5)
               )
              )
              (block
               (local.set $1
                (local.get $3)
               )
               (br $while-in104)
              )
             )
            )
            (call $___shlim
             (local.get $0)
             (i64.const 0)
            )
            (loop $while-in106
             (br_if $while-in106
              (i32.or
               (i32.eq
                (local.tee $3
                 (if (result i32)
                  (i32.lt_u
                   (local.tee $3
                    (i32.load offset=4
                     (local.get $0)
                    )
                   )
                   (i32.load offset=104
                    (local.get $0)
                   )
                  )
                  (block (result i32)
                   (i32.store offset=4
                    (local.get $0)
                    (i32.add
                     (local.get $3)
                     (i32.const 1)
                    )
                   )
                   (i32.load8_u
                    (local.get $3)
                   )
                  )
                  (call $___shgetc
                   (local.get $0)
                  )
                 )
                )
                (i32.const 32)
               )
               (i32.lt_u
                (i32.add
                 (local.get $3)
                 (i32.const -9)
                )
                (i32.const 5)
               )
              )
             )
            )
            (if
             (i32.load offset=104
              (local.get $0)
             )
             (i32.store offset=4
              (local.get $0)
              (local.tee $11
               (i32.add
                (i32.load offset=4
                 (local.get $0)
                )
                (i32.const -1)
               )
              )
             )
             (local.set $11
              (i32.load offset=4
               (local.get $0)
              )
             )
            )
            (local.set $12
             (i64.add
              (i64.extend_i32_s
               (i32.sub
                (local.get $11)
                (i32.load offset=8
                 (local.get $0)
                )
               )
              )
              (i64.add
               (local.get $12)
               (i64.load offset=120
                (local.get $0)
               )
              )
             )
            )
           )
           (block $label$break$L8
            (if
             (local.tee $6
              (i32.eq
               (i32.load8_s
                (local.get $1)
               )
               (i32.const 37)
              )
             )
             (block $label$break$L10
              (if
               (i32.lt_u
                (i32.add
                 (i32.load8_u
                  (local.tee $1
                   (block $label$break$L12 (result i32)
                    (block $switch-default
                     (block $switch-case3
                      (br_table $label$break$L10 $switch-default $switch-default $switch-default $switch-default $switch-case3 $switch-default
                       (i32.sub
                        (local.tee $3
                         (i32.load8_s
                          (local.tee $4
                           (i32.add
                            (local.get $1)
                            (i32.const 1)
                           )
                          )
                         )
                        )
                        (i32.const 37)
                       )
                      )
                     )
                     (local.set $10
                      (i32.const 0)
                     )
                     (br $label$break$L12
                      (i32.add
                       (local.get $1)
                       (i32.const 2)
                      )
                     )
                    )
                    (if
                     (i32.lt_u
                      (i32.add
                       (i32.and
                        (local.get $3)
                        (i32.const 255)
                       )
                       (i32.const -48)
                      )
                      (i32.const 10)
                     )
                     (if
                      (i32.eq
                       (i32.load8_s offset=2
                        (local.get $1)
                       )
                       (i32.const 36)
                      )
                      (block
                       (local.set $10
                        (call $_arg_n_629
                         (local.get $2)
                         (i32.add
                          (i32.load8_u
                           (local.get $4)
                          )
                          (i32.const -48)
                         )
                        )
                       )
                       (br $label$break$L12
                        (i32.add
                         (local.get $1)
                         (i32.const 3)
                        )
                       )
                      )
                     )
                    )
                    (local.set $10
                     (i32.load
                      (local.tee $1
                       (i32.and
                        (i32.add
                         (i32.load
                          (local.get $2)
                         )
                         (i32.const 3)
                        )
                        (i32.const -4)
                       )
                      )
                     )
                    )
                    (i32.store
                     (local.get $2)
                     (i32.add
                      (local.get $1)
                      (i32.const 4)
                     )
                    )
                    (local.get $4)
                   )
                  )
                 )
                 (i32.const -48)
                )
                (i32.const 10)
               )
               (block
                (local.set $4
                 (i32.const 0)
                )
                (loop $while-in
                 (local.set $4
                  (i32.add
                   (i32.load8_u
                    (local.get $1)
                   )
                   (i32.add
                    (i32.mul
                     (local.get $4)
                     (i32.const 10)
                    )
                    (i32.const -48)
                   )
                  )
                 )
                 (br_if $while-in
                  (i32.lt_u
                   (i32.add
                    (i32.load8_u
                     (local.tee $1
                      (i32.add
                       (local.get $1)
                       (i32.const 1)
                      )
                     )
                    )
                    (i32.const -48)
                   )
                   (i32.const 10)
                  )
                 )
                )
               )
               (local.set $4
                (i32.const 0)
               )
              )
              (local.set $6
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
              (local.set $11
               (if (result i32)
                (i32.eq
                 (local.tee $8
                  (i32.load8_s
                   (local.get $1)
                  )
                 )
                 (i32.const 109)
                )
                (block (result i32)
                 (local.set $7
                  (i32.const 0)
                 )
                 (local.set $1
                  (i32.add
                   (local.get $1)
                   (i32.const 2)
                  )
                 )
                 (local.set $8
                  (i32.load8_s
                   (local.tee $3
                    (local.get $6)
                   )
                  )
                 )
                 (local.set $5
                  (i32.const 0)
                 )
                 (i32.ne
                  (local.get $10)
                  (i32.const 0)
                 )
                )
                (block (result i32)
                 (local.set $3
                  (local.get $1)
                 )
                 (local.set $1
                  (local.get $6)
                 )
                 (i32.const 0)
                )
               )
              )
              (block $switch4
               (block $switch-case31
                (block $switch-case10
                 (block $switch-case9
                  (block $switch-case7
                   (block $switch-case6
                    (block $switch-case5
                     (br_table $switch-case31 $__rjti$2 $switch-case31 $__rjti$2 $switch-case31 $switch-case31 $switch-case31 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $switch-case10 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $switch-case31 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $switch-case31 $__rjti$2 $__rjti$2 $switch-case31 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $__rjti$2 $switch-case31 $__rjti$2 $switch-case31 $switch-case31 $switch-case31 $switch-case31 $switch-case31 $switch-case5 $switch-case31 $switch-case7 $__rjti$2 $switch-case6 $__rjti$2 $switch-case31 $switch-case31 $switch-case31 $__rjti$2 $__rjti$2 $switch-case31 $switch-case9 $switch-case31 $__rjti$2 $__rjti$2 $switch-case31 $__rjti$2 $switch-case9 $__rjti$2
                      (i32.sub
                       (i32.shr_s
                        (i32.shl
                         (local.get $8)
                         (i32.const 24)
                        )
                        (i32.const 24)
                       )
                       (i32.const 65)
                      )
                     )
                    )
                    (local.set $8
                     (select
                      (i32.const -2)
                      (i32.const -1)
                      (local.tee $6
                       (i32.eq
                        (i32.load8_s
                         (local.get $1)
                        )
                        (i32.const 104)
                       )
                      )
                     )
                    )
                    (local.set $1
                     (select
                      (i32.add
                       (local.get $3)
                       (i32.const 2)
                      )
                      (local.get $1)
                      (local.get $6)
                     )
                    )
                    (br $switch4)
                   )
                   (local.set $8
                    (select
                     (i32.const 3)
                     (i32.const 1)
                     (local.tee $6
                      (i32.eq
                       (i32.load8_s
                        (local.get $1)
                       )
                       (i32.const 108)
                      )
                     )
                    )
                   )
                   (local.set $1
                    (select
                     (i32.add
                      (local.get $3)
                      (i32.const 2)
                     )
                     (local.get $1)
                     (local.get $6)
                    )
                   )
                   (br $switch4)
                  )
                  (local.set $8
                   (i32.const 3)
                  )
                  (br $switch4)
                 )
                 (local.set $8
                  (i32.const 1)
                 )
                 (br $switch4)
                )
                (local.set $8
                 (i32.const 2)
                )
                (br $switch4)
               )
               (local.set $8
                (i32.const 0)
               )
               (local.set $1
                (local.get $3)
               )
              )
              (local.set $15
               (select
                (i32.const 1)
                (local.get $8)
                (local.tee $3
                 (i32.eq
                  (i32.and
                   (local.tee $6
                    (i32.load8_u
                     (local.get $1)
                    )
                   )
                   (i32.const 47)
                  )
                  (i32.const 3)
                 )
                )
               )
              )
              (call $___shlim
               (local.get $0)
               (local.tee $23
                (i64.extend_i32_s
                 (local.tee $19
                  (block $switch33 (result i32)
                   (block $switch-default39
                    (block $switch-case36
                     (block $switch-case35
                      (block $switch-case34
                       (br_table $switch-case35 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-case34 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-default39 $switch-case36 $switch-default39
                        (i32.sub
                         (i32.shr_s
                          (i32.shl
                           (local.tee $6
                            (i32.and
                             (local.tee $13
                              (select
                               (i32.or
                                (local.get $6)
                                (i32.const 32)
                               )
                               (local.get $6)
                               (local.get $3)
                              )
                             )
                             (i32.const 255)
                            )
                           )
                           (i32.const 24)
                          )
                          (i32.const 24)
                         )
                         (i32.const 91)
                        )
                       )
                      )
                      (br $switch33
                       (select
                        (local.get $4)
                        (i32.const 1)
                        (i32.gt_s
                         (local.get $4)
                         (i32.const 1)
                        )
                       )
                      )
                     )
                     (br $switch33
                      (local.get $4)
                     )
                    )
                    (call $_store_int_630
                     (local.get $10)
                     (local.get $15)
                     (local.get $12)
                    )
                    (br $label$break$L8)
                   )
                   (call $___shlim
                    (local.get $0)
                    (i64.const 0)
                   )
                   (loop $while-in38
                    (br_if $while-in38
                     (i32.or
                      (i32.eq
                       (local.tee $3
                        (if (result i32)
                         (i32.lt_u
                          (local.tee $3
                           (i32.load offset=4
                            (local.get $0)
                           )
                          )
                          (i32.load offset=104
                           (local.get $0)
                          )
                         )
                         (block (result i32)
                          (i32.store offset=4
                           (local.get $0)
                           (i32.add
                            (local.get $3)
                            (i32.const 1)
                           )
                          )
                          (i32.load8_u
                           (local.get $3)
                          )
                         )
                         (call $___shgetc
                          (local.get $0)
                         )
                        )
                       )
                       (i32.const 32)
                      )
                      (i32.lt_u
                       (i32.add
                        (local.get $3)
                        (i32.const -9)
                       )
                       (i32.const 5)
                      )
                     )
                    )
                   )
                   (if
                    (i32.load offset=104
                     (local.get $0)
                    )
                    (i32.store offset=4
                     (local.get $0)
                     (local.tee $8
                      (i32.add
                       (i32.load offset=4
                        (local.get $0)
                       )
                       (i32.const -1)
                      )
                     )
                    )
                    (local.set $8
                     (i32.load offset=4
                      (local.get $0)
                     )
                    )
                   )
                   (local.set $12
                    (i64.add
                     (i64.extend_i32_s
                      (i32.sub
                       (local.get $8)
                       (i32.load offset=8
                        (local.get $0)
                       )
                      )
                     )
                     (i64.add
                      (local.get $12)
                      (i64.load offset=120
                       (local.get $0)
                      )
                     )
                    )
                   )
                   (local.get $4)
                  )
                 )
                )
               )
              )
              (if
               (i32.lt_u
                (local.tee $3
                 (i32.load offset=4
                  (local.get $0)
                 )
                )
                (local.tee $4
                 (i32.load offset=104
                  (local.get $0)
                 )
                )
               )
               (i32.store offset=4
                (local.get $0)
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (block
                (br_if $__rjti$2
                 (i32.lt_s
                  (call $___shgetc
                   (local.get $0)
                  )
                  (i32.const 0)
                 )
                )
                (local.set $4
                 (i32.load offset=104
                  (local.get $0)
                 )
                )
               )
              )
              (if
               (local.get $4)
               (i32.store offset=4
                (local.get $0)
                (i32.add
                 (i32.load offset=4
                  (local.get $0)
                 )
                 (i32.const -1)
                )
               )
              )
              (block $do-once101
               (block $__rjti$0
                (block $switch-case99
                 (block $switch-case86
                  (block $switch-case85
                   (block $switch-case83
                    (block $switch-case82
                     (block $switch-case79
                      (br_table $switch-case99 $do-once101 $do-once101 $do-once101 $switch-case99 $switch-case99 $switch-case99 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $switch-case82 $do-once101 $do-once101 $switch-case79 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $switch-case99 $do-once101 $switch-case79 $switch-case85 $switch-case99 $switch-case99 $switch-case99 $do-once101 $switch-case86 $do-once101 $do-once101 $do-once101 $do-once101 $do-once101 $switch-case83 $switch-case82 $do-once101 $do-once101 $switch-case79 $do-once101 $switch-case85 $do-once101 $do-once101 $switch-case82 $do-once101
                       (i32.sub
                        (i32.shr_s
                         (i32.shl
                          (local.get $6)
                          (i32.const 24)
                         )
                         (i32.const 24)
                        )
                        (i32.const 65)
                       )
                      )
                     )
                     (if
                      (i32.eq
                       (i32.or
                        (local.get $13)
                        (i32.const 16)
                       )
                       (i32.const 115)
                      )
                      (block
                       (local.set $5
                        (i32.eq
                         (local.get $13)
                         (i32.const 115)
                        )
                       )
                       (drop
                        (call $_memset
                         (local.get $9)
                         (i32.const -1)
                         (i32.const 257)
                        )
                       )
                       (i32.store8
                        (local.get $9)
                        (i32.const 0)
                       )
                       (if
                        (local.get $5)
                        (block
                         (i32.store8 offset=33
                          (local.get $9)
                          (i32.const 0)
                         )
                         (i32.store offset=10 align=2
                          (local.get $9)
                          (i32.const 0)
                         )
                         (i32.store8 offset=14
                          (local.get $9)
                          (i32.const 0)
                         )
                        )
                       )
                      )
                      (block $label$break$L61
                       (local.set $4
                        (local.tee $3
                         (i32.eq
                          (i32.load8_s
                           (local.tee $6
                            (i32.add
                             (local.get $1)
                             (i32.const 1)
                            )
                           )
                          )
                          (i32.const 94)
                         )
                        )
                       )
                       (local.set $1
                        (select
                         (i32.add
                          (local.get $1)
                          (i32.const 2)
                         )
                         (local.get $6)
                         (local.get $3)
                        )
                       )
                       (drop
                        (call $_memset
                         (local.get $9)
                         (local.get $4)
                         (i32.const 257)
                        )
                       )
                       (i32.store8
                        (local.get $9)
                        (i32.const 0)
                       )
                       (block $switch45
                        (block $switch-default48
                         (block $switch-case47
                          (block $switch-case46
                           (br_table $switch-case46 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-default48 $switch-case47 $switch-default48
                            (i32.sub
                             (i32.load8_s
                              (local.get $1)
                             )
                             (i32.const 45)
                            )
                           )
                          )
                          (i32.store8 offset=46
                           (local.get $9)
                           (local.tee $8
                            (i32.xor
                             (local.get $4)
                             (i32.const 1)
                            )
                           )
                          )
                          (local.set $1
                           (i32.add
                            (local.get $1)
                            (i32.const 1)
                           )
                          )
                          (br $switch45)
                         )
                         (i32.store8 offset=94
                          (local.get $9)
                          (local.tee $8
                           (i32.xor
                            (local.get $4)
                            (i32.const 1)
                           )
                          )
                         )
                         (local.set $1
                          (i32.add
                           (local.get $1)
                           (i32.const 1)
                          )
                         )
                         (br $switch45)
                        )
                        (local.set $8
                         (i32.xor
                          (local.get $4)
                          (i32.const 1)
                         )
                        )
                       )
                       (loop $while-in50
                        (block $label$break$L72
                         (block $switch-case61
                          (br_table $__rjti$2 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $switch-case61 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L72 $label$break$L61 $label$break$L72
                           (local.tee $4
                            (i32.load8_s
                             (local.get $1)
                            )
                           )
                          )
                         )
                         (block $switch55
                          (block $switch-case57
                           (br_table $switch-case57 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch55 $switch-case57 $switch55
                            (local.tee $6
                             (i32.load8_s
                              (local.tee $3
                               (i32.add
                                (local.get $1)
                                (i32.const 1)
                               )
                              )
                             )
                            )
                           )
                          )
                          (local.set $4
                           (i32.const 45)
                          )
                          (br $label$break$L72)
                         )
                         (local.set $4
                          (if (result i32)
                           (i32.lt_s
                            (local.tee $1
                             (i32.load8_u
                              (i32.add
                               (local.get $1)
                               (i32.const -1)
                              )
                             )
                            )
                            (i32.and
                             (local.get $6)
                             (i32.const 255)
                            )
                           )
                           (loop $while-in60 (result i32)
                            (i32.store8
                             (i32.add
                              (local.tee $1
                               (i32.add
                                (local.get $1)
                                (i32.const 1)
                               )
                              )
                              (local.get $9)
                             )
                             (local.get $8)
                            )
                            (br_if $while-in60
                             (i32.lt_u
                              (local.get $1)
                              (i32.and
                               (local.tee $6
                                (i32.load8_s
                                 (local.get $3)
                                )
                               )
                               (i32.const 255)
                              )
                             )
                            )
                            (local.set $1
                             (local.get $3)
                            )
                            (local.get $6)
                           )
                           (block (result i32)
                            (local.set $1
                             (local.get $3)
                            )
                            (local.get $6)
                           )
                          )
                         )
                        )
                        (i32.store8
                         (i32.add
                          (i32.add
                           (i32.and
                            (local.get $4)
                            (i32.const 255)
                           )
                           (i32.const 1)
                          )
                          (local.get $9)
                         )
                         (local.get $8)
                        )
                        (local.set $1
                         (i32.add
                          (local.get $1)
                          (i32.const 1)
                         )
                        )
                        (br $while-in50)
                       )
                      )
                     )
                     (local.set $4
                      (select
                       (i32.add
                        (local.get $19)
                        (i32.const 1)
                       )
                       (i32.const 31)
                       (local.tee $13
                        (i32.eq
                         (local.get $13)
                         (i32.const 99)
                        )
                       )
                      )
                     )
                     (local.set $17
                      (i32.ne
                       (local.get $11)
                       (i32.const 0)
                      )
                     )
                     (if
                      (local.tee $19
                       (i32.eq
                        (local.get $15)
                        (i32.const 1)
                       )
                      )
                      (block
                       (if
                        (local.get $17)
                        (if
                         (i32.eqz
                          (local.tee $5
                           (call $_malloc
                            (i32.shl
                             (local.get $4)
                             (i32.const 2)
                            )
                           )
                          )
                         )
                         (block
                          (local.set $7
                           (i32.const 0)
                          )
                          (local.set $5
                           (i32.const 0)
                          )
                          (br $__rjti$2)
                         )
                        )
                        (local.set $5
                         (local.get $10)
                        )
                       )
                       (i32.store
                        (local.get $14)
                        (i32.const 0)
                       )
                       (i32.store offset=4
                        (local.get $14)
                        (i32.const 0)
                       )
                       (local.set $7
                        (i32.const 0)
                       )
                       (loop $label$continue$L85
                        (block $label$break$L85
                         (local.set $6
                          (i32.eqz
                           (local.get $5)
                          )
                         )
                         (loop $while-in65
                          (loop $label$continue$L89
                           (block $label$break$L89
                            (br_if $label$break$L85
                             (i32.eqz
                              (i32.load8_s
                               (i32.add
                                (i32.add
                                 (local.tee $3
                                  (if (result i32)
                                   (i32.lt_u
                                    (local.tee $3
                                     (i32.load offset=4
                                      (local.get $0)
                                     )
                                    )
                                    (i32.load offset=104
                                     (local.get $0)
                                    )
                                   )
                                   (block (result i32)
                                    (i32.store offset=4
                                     (local.get $0)
                                     (i32.add
                                      (local.get $3)
                                      (i32.const 1)
                                     )
                                    )
                                    (i32.load8_u
                                     (local.get $3)
                                    )
                                   )
                                   (call $___shgetc
                                    (local.get $0)
                                   )
                                  )
                                 )
                                 (i32.const 1)
                                )
                                (local.get $9)
                               )
                              )
                             )
                            )
                            (i32.store8
                             (local.get $22)
                             (local.get $3)
                            )
                            (block $switch66
                             (block $switch-case67
                              (br_table $switch66 $switch-case67 $label$break$L89
                               (i32.sub
                                (call $_mbrtowc
                                 (local.get $21)
                                 (local.get $22)
                                 (i32.const 1)
                                 (local.get $14)
                                )
                                (i32.const -2)
                               )
                              )
                             )
                             (local.set $7
                              (i32.const 0)
                             )
                             (br $__rjti$2)
                            )
                            (br $label$continue$L89)
                           )
                          )
                          (if
                           (i32.eqz
                            (local.get $6)
                           )
                           (block
                            (i32.store
                             (i32.add
                              (i32.shl
                               (local.get $7)
                               (i32.const 2)
                              )
                              (local.get $5)
                             )
                             (i32.load
                              (local.get $21)
                             )
                            )
                            (local.set $7
                             (i32.add
                              (local.get $7)
                              (i32.const 1)
                             )
                            )
                           )
                          )
                          (br_if $while-in65
                           (i32.eqz
                            (i32.and
                             (local.get $17)
                             (i32.eq
                              (local.get $4)
                              (local.get $7)
                             )
                            )
                           )
                          )
                         )
                         (if
                          (local.tee $3
                           (call $_realloc
                            (local.get $5)
                            (i32.shl
                             (local.tee $4
                              (i32.or
                               (i32.shl
                                (local.get $4)
                                (i32.const 1)
                               )
                               (i32.const 1)
                              )
                             )
                             (i32.const 2)
                            )
                           )
                          )
                          (block
                           (local.set $5
                            (local.get $3)
                           )
                           (br $label$continue$L85)
                          )
                          (block
                           (local.set $7
                            (i32.const 0)
                           )
                           (br $__rjti$2)
                          )
                         )
                        )
                       )
                       (local.set $7
                        (if (result i32)
                         (if (result i32)
                          (local.get $14)
                          (i32.eqz
                           (i32.load
                            (local.get $14)
                           )
                          )
                          (i32.const 1)
                         )
                         (block (result i32)
                          (local.set $4
                           (local.get $7)
                          )
                          (local.set $3
                           (local.get $5)
                          )
                          (i32.const 0)
                         )
                         (block
                          (local.set $7
                           (i32.const 0)
                          )
                          (br $__rjti$2)
                         )
                        )
                       )
                      )
                      (block $label$break$L80
                       (if
                        (local.get $17)
                        (block
                         (if
                          (i32.eqz
                           (local.tee $7
                            (call $_malloc
                             (local.get $4)
                            )
                           )
                          )
                          (block
                           (local.set $7
                            (i32.const 0)
                           )
                           (local.set $5
                            (i32.const 0)
                           )
                           (br $__rjti$2)
                          )
                         )
                         (local.set $5
                          (i32.const 0)
                         )
                         (loop $while-in71
                          (loop $while-in73
                           (if
                            (i32.eqz
                             (i32.load8_s
                              (i32.add
                               (i32.add
                                (local.tee $3
                                 (if (result i32)
                                  (i32.lt_u
                                   (local.tee $3
                                    (i32.load offset=4
                                     (local.get $0)
                                    )
                                   )
                                   (i32.load offset=104
                                    (local.get $0)
                                   )
                                  )
                                  (block (result i32)
                                   (i32.store offset=4
                                    (local.get $0)
                                    (i32.add
                                     (local.get $3)
                                     (i32.const 1)
                                    )
                                   )
                                   (i32.load8_u
                                    (local.get $3)
                                   )
                                  )
                                  (call $___shgetc
                                   (local.get $0)
                                  )
                                 )
                                )
                                (i32.const 1)
                               )
                               (local.get $9)
                              )
                             )
                            )
                            (block
                             (local.set $4
                              (local.get $5)
                             )
                             (local.set $3
                              (i32.const 0)
                             )
                             (local.set $5
                              (i32.const 0)
                             )
                             (br $label$break$L80)
                            )
                           )
                           (i32.store8
                            (i32.add
                             (local.get $5)
                             (local.get $7)
                            )
                            (local.get $3)
                           )
                           (br_if $while-in73
                            (i32.ne
                             (local.tee $5
                              (i32.add
                               (local.get $5)
                               (i32.const 1)
                              )
                             )
                             (local.get $4)
                            )
                           )
                          )
                          (if
                           (local.tee $3
                            (call $_realloc
                             (local.get $7)
                             (local.tee $4
                              (i32.or
                               (i32.shl
                                (local.get $4)
                                (i32.const 1)
                               )
                               (i32.const 1)
                              )
                             )
                            )
                           )
                           (block
                            (local.set $7
                             (local.get $3)
                            )
                            (br $while-in71)
                           )
                           (block
                            (local.set $5
                             (i32.const 0)
                            )
                            (br $__rjti$2)
                           )
                          )
                         )
                        )
                       )
                       (if
                        (i32.eqz
                         (local.get $10)
                        )
                        (loop $while-in75
                         (br_if $while-in75
                          (i32.load8_s
                           (i32.add
                            (i32.add
                             (if (result i32)
                              (i32.lt_u
                               (local.tee $5
                                (i32.load offset=4
                                 (local.get $0)
                                )
                               )
                               (i32.load offset=104
                                (local.get $0)
                               )
                              )
                              (block (result i32)
                               (i32.store offset=4
                                (local.get $0)
                                (i32.add
                                 (local.get $5)
                                 (i32.const 1)
                                )
                               )
                               (i32.load8_u
                                (local.get $5)
                               )
                              )
                              (call $___shgetc
                               (local.get $0)
                              )
                             )
                             (i32.const 1)
                            )
                            (local.get $9)
                           )
                          )
                         )
                         (local.set $4
                          (i32.const 0)
                         )
                         (local.set $7
                          (i32.const 0)
                         )
                         (local.set $3
                          (i32.const 0)
                         )
                         (local.set $5
                          (i32.const 0)
                         )
                         (br $label$break$L80)
                        )
                       )
                       (local.set $4
                        (i32.const 0)
                       )
                       (local.set $7
                        (loop $while-in77 (result i32)
                         (if (result i32)
                          (i32.load8_s
                           (i32.add
                            (i32.add
                             (local.tee $5
                              (if (result i32)
                               (i32.lt_u
                                (local.tee $5
                                 (i32.load offset=4
                                  (local.get $0)
                                 )
                                )
                                (i32.load offset=104
                                 (local.get $0)
                                )
                               )
                               (block (result i32)
                                (i32.store offset=4
                                 (local.get $0)
                                 (i32.add
                                  (local.get $5)
                                  (i32.const 1)
                                 )
                                )
                                (i32.load8_u
                                 (local.get $5)
                                )
                               )
                               (call $___shgetc
                                (local.get $0)
                               )
                              )
                             )
                             (i32.const 1)
                            )
                            (local.get $9)
                           )
                          )
                          (block
                           (i32.store8
                            (i32.add
                             (local.get $4)
                             (local.get $10)
                            )
                            (local.get $5)
                           )
                           (local.set $4
                            (i32.add
                             (local.get $4)
                             (i32.const 1)
                            )
                           )
                           (br $while-in77)
                          )
                          (block (result i32)
                           (local.set $3
                            (i32.const 0)
                           )
                           (local.set $5
                            (i32.const 0)
                           )
                           (local.get $10)
                          )
                         )
                        )
                       )
                      )
                     )
                     (if
                      (i32.load offset=104
                       (local.get $0)
                      )
                      (i32.store offset=4
                       (local.get $0)
                       (local.tee $8
                        (i32.add
                         (i32.load offset=4
                          (local.get $0)
                         )
                         (i32.const -1)
                        )
                       )
                      )
                      (local.set $8
                       (i32.load offset=4
                        (local.get $0)
                       )
                      )
                     )
                     (br_if $label$break$L6
                      (i64.eqz
                       (local.tee $18
                        (i64.add
                         (i64.load offset=120
                          (local.get $0)
                         )
                         (i64.extend_i32_s
                          (i32.sub
                           (local.get $8)
                           (i32.load offset=8
                            (local.get $0)
                           )
                          )
                         )
                        )
                       )
                      )
                     )
                     (br_if $label$break$L6
                      (i32.eqz
                       (i32.or
                        (i32.xor
                         (local.get $13)
                         (i32.const 1)
                        )
                        (i64.eq
                         (local.get $18)
                         (local.get $23)
                        )
                       )
                      )
                     )
                     (if
                      (local.get $17)
                      (if
                       (local.get $19)
                       (i32.store
                        (local.get $10)
                        (local.get $3)
                       )
                       (i32.store
                        (local.get $10)
                        (local.get $7)
                       )
                      )
                     )
                     (if
                      (i32.eqz
                       (local.get $13)
                      )
                      (block
                       (if
                        (local.get $3)
                        (i32.store
                         (i32.add
                          (i32.shl
                           (local.get $4)
                           (i32.const 2)
                          )
                          (local.get $3)
                         )
                         (i32.const 0)
                        )
                       )
                       (if
                        (i32.eqz
                         (local.get $7)
                        )
                        (block
                         (local.set $7
                          (i32.const 0)
                         )
                         (br $do-once101)
                        )
                       )
                       (i32.store8
                        (i32.add
                         (local.get $4)
                         (local.get $7)
                        )
                        (i32.const 0)
                       )
                      )
                     )
                     (br $do-once101)
                    )
                    (local.set $4
                     (i32.const 16)
                    )
                    (br $__rjti$0)
                   )
                   (local.set $4
                    (i32.const 8)
                   )
                   (br $__rjti$0)
                  )
                  (local.set $4
                   (i32.const 10)
                  )
                  (br $__rjti$0)
                 )
                 (local.set $4
                  (i32.const 0)
                 )
                 (br $__rjti$0)
                )
                (local.set $20
                 (call $___floatscan
                  (local.get $0)
                  (local.get $15)
                  (i32.const 0)
                 )
                )
                (br_if $label$break$L6
                 (i64.eq
                  (i64.load offset=120
                   (local.get $0)
                  )
                  (i64.sub
                   (i64.const 0)
                   (i64.extend_i32_s
                    (i32.sub
                     (i32.load offset=4
                      (local.get $0)
                     )
                     (i32.load offset=8
                      (local.get $0)
                     )
                    )
                   )
                  )
                 )
                )
                (if
                 (local.get $10)
                 (block
                  (block $switch-case97
                   (block $switch-case96
                    (block $switch-case95
                     (br_table $switch-case95 $switch-case96 $switch-case97 $do-once101
                      (local.get $15)
                     )
                    )
                    (f32.store
                     (local.get $10)
                     (f32.demote_f64
                      (local.get $20)
                     )
                    )
                    (br $do-once101)
                   )
                   (f64.store
                    (local.get $10)
                    (local.get $20)
                   )
                   (br $do-once101)
                  )
                  (f64.store
                   (local.get $10)
                   (local.get $20)
                  )
                  (br $do-once101)
                 )
                )
                (br $do-once101)
               )
               (local.set $18
                (call $___intscan
                 (local.get $0)
                 (local.get $4)
                 (i32.const 0)
                 (i64.const -1)
                )
               )
               (br_if $label$break$L6
                (i64.eq
                 (i64.load offset=120
                  (local.get $0)
                 )
                 (i64.sub
                  (i64.const 0)
                  (i64.extend_i32_s
                   (i32.sub
                    (i32.load offset=4
                     (local.get $0)
                    )
                    (i32.load offset=8
                     (local.get $0)
                    )
                   )
                  )
                 )
                )
               )
               (if
                (i32.and
                 (i32.eq
                  (local.get $13)
                  (i32.const 112)
                 )
                 (i32.ne
                  (local.get $10)
                  (i32.const 0)
                 )
                )
                (i64.store32
                 (local.get $10)
                 (local.get $18)
                )
                (call $_store_int_630
                 (local.get $10)
                 (local.get $15)
                 (local.get $18)
                )
               )
              )
              (local.set $16
               (i32.add
                (local.get $16)
                (i32.ne
                 (local.get $10)
                 (i32.const 0)
                )
               )
              )
              (local.set $12
               (i64.add
                (i64.extend_i32_s
                 (i32.sub
                  (i32.load offset=4
                   (local.get $0)
                  )
                  (i32.load offset=8
                   (local.get $0)
                  )
                 )
                )
                (i64.add
                 (local.get $12)
                 (i64.load offset=120
                  (local.get $0)
                 )
                )
               )
              )
              (br $label$break$L8)
             )
            )
            (local.set $1
             (i32.add
              (local.get $1)
              (local.get $6)
             )
            )
            (call $___shlim
             (local.get $0)
             (i64.const 0)
            )
            (local.set $3
             (if (result i32)
              (i32.lt_u
               (local.tee $3
                (i32.load offset=4
                 (local.get $0)
                )
               )
               (i32.load offset=104
                (local.get $0)
               )
              )
              (block (result i32)
               (i32.store offset=4
                (local.get $0)
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (i32.load8_u
                (local.get $3)
               )
              )
              (call $___shgetc
               (local.get $0)
              )
             )
            )
            (br_if $__rjti$1
             (i32.ne
              (local.get $3)
              (i32.load8_u
               (local.get $1)
              )
             )
            )
            (local.set $12
             (i64.add
              (local.get $12)
              (i64.const 1)
             )
            )
           )
          )
          (br_if $label$continue$L6
           (local.tee $11
            (i32.load8_s
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
            )
           )
          )
          (br $label$break$L4)
         )
        )
        (br $__rjto$3)
       )
       (if
        (i32.load offset=104
         (local.get $0)
        )
        (i32.store offset=4
         (local.get $0)
         (i32.add
          (i32.load offset=4
           (local.get $0)
          )
          (i32.const -1)
         )
        )
       )
       (br_if $label$break$L4
        (i32.or
         (i32.gt_s
          (local.get $3)
          (i32.const -1)
         )
         (local.get $16)
        )
       )
       (local.set $11
        (i32.const 0)
       )
       (br $__rjti$3)
      )
      (br_if $__rjti$3
       (i32.eqz
        (local.get $16)
       )
      )
      (br $__rjto$3)
     )
     (local.set $16
      (i32.const -1)
     )
    )
    (if
     (local.get $11)
     (block
      (call $_free
       (local.get $7)
      )
      (call $_free
       (local.get $5)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  (local.get $16)
 )
 (func $___shlim (; has Stack IR ;) (param $0 i32) (param $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (i64.store offset=112
   (local.get $0)
   (local.get $1)
  )
  (i64.store offset=120
   (local.get $0)
   (local.tee $4
    (i64.extend_i32_s
     (i32.sub
      (local.tee $2
       (i32.load offset=8
        (local.get $0)
       )
      )
      (local.tee $3
       (i32.load offset=4
        (local.get $0)
       )
      )
     )
    )
   )
  )
  (if
   (i32.and
    (i64.ne
     (local.get $1)
     (i64.const 0)
    )
    (i64.gt_s
     (local.get $4)
     (local.get $1)
    )
   )
   (i32.store offset=104
    (local.get $0)
    (i32.add
     (local.get $3)
     (i32.wrap_i64
      (local.get $1)
     )
    )
   )
   (i32.store offset=104
    (local.get $0)
    (local.get $2)
   )
  )
 )
 (func $___shgetc (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (block $__rjto$2
   (block $__rjti$2
    (if
     (i32.eqz
      (i64.eqz
       (local.tee $2
        (i64.load offset=112
         (local.get $0)
        )
       )
      )
     )
     (br_if $__rjti$2
      (i64.ge_s
       (i64.load offset=120
        (local.get $0)
       )
       (local.get $2)
      )
     )
    )
    (br_if $__rjti$2
     (i32.lt_s
      (local.tee $3
       (call $___uflow
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (local.set $1
     (i32.load offset=8
      (local.get $0)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i64.eqz
        (local.tee $2
         (i64.load offset=112
          (local.get $0)
         )
        )
       )
      )
      (br_if $__rjti$0
       (i64.gt_s
        (local.tee $2
         (i64.sub
          (local.get $2)
          (i64.load offset=120
           (local.get $0)
          )
         )
        )
        (i64.extend_i32_s
         (i32.sub
          (local.get $1)
          (local.tee $4
           (i32.load offset=4
            (local.get $0)
           )
          )
         )
        )
       )
      )
      (i32.store offset=104
       (local.get $0)
       (i32.add
        (local.get $4)
        (i32.add
         (i32.wrap_i64
          (local.get $2)
         )
         (i32.const -1)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $4
      (local.get $1)
     )
     (i32.store offset=104
      (local.get $0)
      (local.get $1)
     )
    )
    (if
     (i32.ne
      (local.get $3)
      (i32.load8_u
       (local.tee $0
        (i32.add
         (if (result i32)
          (local.get $1)
          (block (result i32)
           (i64.store offset=120
            (local.get $0)
            (i64.add
             (i64.load offset=120
              (local.get $0)
             )
             (i64.extend_i32_s
              (i32.sub
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
               (local.tee $1
                (i32.load offset=4
                 (local.get $0)
                )
               )
              )
             )
            )
           )
           (local.get $1)
          )
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.const -1)
        )
       )
      )
     )
     (i32.store8
      (local.get $0)
      (local.get $3)
     )
    )
    (br $__rjto$2)
   )
   (i32.store offset=104
    (local.get $0)
    (i32.const 0)
   )
   (local.set $3
    (i32.const -1)
   )
  )
  (local.get $3)
 )
 (func $_arg_n_629 (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load
    (local.get $0)
   )
  )
  (loop $while-in
   (local.set $3
    (i32.load
     (local.tee $0
      (i32.and
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 3)
       )
       (i32.const -4)
      )
     )
    )
   )
   (i32.store
    (local.get $2)
    (i32.add
     (local.get $0)
     (i32.const 4)
    )
   )
   (local.set $0
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
   (if
    (i32.gt_u
     (local.get $1)
     (i32.const 1)
    )
    (block
     (local.set $1
      (local.get $0)
     )
     (br $while-in)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $3)
 )
 (func $_store_int_630 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i64)
  (if
   (local.get $0)
   (block $label$break$L1
    (block $switch-case3
     (block $switch-case2
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $label$break$L1 $switch-case3 $label$break$L1
          (i32.sub
           (local.get $1)
           (i32.const -2)
          )
         )
        )
        (i64.store8
         (local.get $0)
         (local.get $2)
        )
        (br $label$break$L1)
       )
       (i64.store16
        (local.get $0)
        (local.get $2)
       )
       (br $label$break$L1)
      )
      (i64.store32
       (local.get $0)
       (local.get $2)
      )
      (br $label$break$L1)
     )
     (i64.store32
      (local.get $0)
      (local.get $2)
     )
     (br $label$break$L1)
    )
    (i64.store
     (local.get $0)
     (local.get $2)
    )
   )
  )
 )
 (func $_mbrtowc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (i32.load
    (local.tee $5
     (select
      (local.get $3)
      (i32.const 53328)
      (local.get $3)
     )
    )
   )
  )
  (local.set $0
   (block $__rjto$1 (result i32)
    (block $__rjti$1
     (br $__rjto$1
      (if (result i32)
       (local.get $1)
       (block $label$break$L1 (result i32)
        (local.set $6
         (select
          (local.get $0)
          (local.get $7)
          (local.get $0)
         )
        )
        (if
         (local.get $2)
         (block
          (block $label$break$L14
           (block $__rjti$0
            (if
             (local.get $3)
             (block
              (local.set $0
               (local.get $3)
              )
              (local.set $3
               (local.get $2)
              )
              (br $__rjti$0)
             )
             (block
              (if
               (i32.gt_s
                (local.tee $0
                 (i32.load8_s
                  (local.get $1)
                 )
                )
                (i32.const -1)
               )
               (block
                (i32.store
                 (local.get $6)
                 (i32.and
                  (local.get $0)
                  (i32.const 255)
                 )
                )
                (br $label$break$L1
                 (i32.ne
                  (local.get $0)
                  (i32.const 0)
                 )
                )
               )
              )
              (local.set $0
               (i32.load8_s
                (local.get $1)
               )
              )
              (if
               (i32.eqz
                (i32.load
                 (i32.load
                  (i32.const 37316)
                 )
                )
               )
               (block
                (i32.store
                 (local.get $6)
                 (i32.and
                  (local.get $0)
                  (i32.const 57343)
                 )
                )
                (br $label$break$L1
                 (i32.const 1)
                )
               )
              )
              (br_if $__rjti$1
               (i32.gt_u
                (local.tee $0
                 (i32.add
                  (i32.and
                   (local.get $0)
                   (i32.const 255)
                  )
                  (i32.const -194)
                 )
                )
                (i32.const 50)
               )
              )
              (local.set $1
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
              (local.set $0
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $0)
                  (i32.const 2)
                 )
                 (i32.const 29040)
                )
               )
              )
              (br_if $__rjti$0
               (local.tee $3
                (i32.add
                 (local.get $2)
                 (i32.const -1)
                )
               )
              )
             )
            )
            (br $label$break$L14)
           )
           (br_if $__rjti$1
            (i32.gt_u
             (i32.or
              (i32.add
               (local.tee $4
                (i32.shr_u
                 (local.tee $8
                  (i32.load8_u
                   (local.get $1)
                  )
                 )
                 (i32.const 3)
                )
               )
               (i32.const -16)
              )
              (i32.add
               (local.get $4)
               (i32.shr_s
                (local.get $0)
                (i32.const 26)
               )
              )
             )
             (i32.const 7)
            )
           )
           (local.set $4
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
           (if
            (i32.lt_s
             (local.tee $0
              (i32.or
               (i32.add
                (local.get $8)
                (i32.const -128)
               )
               (i32.shl
                (local.get $0)
                (i32.const 6)
               )
              )
             )
             (i32.const 0)
            )
            (block
             (local.set $3
              (local.get $1)
             )
             (local.set $1
              (local.get $4)
             )
             (loop $while-in
              (br_if $label$break$L14
               (i32.eqz
                (local.get $1)
               )
              )
              (br_if $__rjti$1
               (i32.ne
                (i32.and
                 (local.tee $4
                  (i32.load8_s
                   (local.tee $3
                    (i32.add
                     (local.get $3)
                     (i32.const 1)
                    )
                   )
                  )
                 )
                 (i32.const 192)
                )
                (i32.const 128)
               )
              )
              (local.set $1
               (i32.add
                (local.get $1)
                (i32.const -1)
               )
              )
              (br_if $while-in
               (i32.lt_s
                (local.tee $0
                 (i32.or
                  (i32.add
                   (i32.and
                    (local.get $4)
                    (i32.const 255)
                   )
                   (i32.const -128)
                  )
                  (i32.shl
                   (local.get $0)
                   (i32.const 6)
                  )
                 )
                )
                (i32.const 0)
               )
              )
             )
            )
            (local.set $1
             (local.get $4)
            )
           )
           (i32.store
            (local.get $5)
            (i32.const 0)
           )
           (i32.store
            (local.get $6)
            (local.get $0)
           )
           (br $label$break$L1
            (i32.sub
             (local.get $2)
             (local.get $1)
            )
           )
          )
          (i32.store
           (local.get $5)
           (local.get $0)
          )
         )
        )
        (i32.const -2)
       )
       (block (result i32)
        (br_if $__rjti$1
         (local.get $3)
        )
        (i32.const 0)
       )
      )
     )
    )
    (i32.store
     (local.get $5)
     (i32.const 0)
    )
    (i32.store
     (i32.const 53312)
     (i32.const 25)
    )
    (i32.const -1)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $___intscan (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (result i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const 36)
   )
   (block
    (i32.store
     (i32.const 53312)
     (i32.const 28)
    )
    (local.set $3
     (i64.const 0)
    )
   )
   (block $label$break$L1
    (loop $while-in
     (br_if $while-in
      (i32.or
       (i32.eq
        (local.tee $5
         (local.tee $4
          (if (result i32)
           (i32.lt_u
            (local.tee $4
             (i32.load offset=4
              (local.get $0)
             )
            )
            (i32.load offset=104
             (local.get $0)
            )
           )
           (block (result i32)
            (i32.store offset=4
             (local.get $0)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.load8_u
             (local.get $4)
            )
           )
           (call $___shgetc
            (local.get $0)
           )
          )
         )
        )
        (i32.const 32)
       )
       (i32.lt_u
        (i32.add
         (local.get $5)
         (i32.const -9)
        )
        (i32.const 5)
       )
      )
     )
    )
    (block $label$break$L11
     (block $switch-default
      (block $switch-case1
       (br_table $switch-case1 $switch-default $switch-case1 $switch-default
        (i32.sub
         (local.get $4)
         (i32.const 43)
        )
       )
      )
      (local.set $9
       (i32.shr_s
        (i32.shl
         (i32.eq
          (local.get $4)
          (i32.const 45)
         )
         (i32.const 31)
        )
        (i32.const 31)
       )
      )
      (local.set $4
       (if (result i32)
        (i32.lt_u
         (local.tee $4
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.load offset=104
          (local.get $0)
         )
        )
        (block (result i32)
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $4)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (br $label$break$L11)
     )
    )
    (local.set $5
     (i32.eqz
      (local.get $1)
     )
    )
    (block $__rjto$2
     (block $__rjti$2
      (block $__rjti$1
       (if
        (i32.and
         (i32.eq
          (i32.or
           (local.get $1)
           (i32.const 16)
          )
          (i32.const 16)
         )
         (i32.eq
          (local.get $4)
          (i32.const 48)
         )
        )
        (block $__rjti$0
         (if
          (i32.ne
           (i32.or
            (local.tee $4
             (if (result i32)
              (i32.lt_u
               (local.tee $4
                (i32.load offset=4
                 (local.get $0)
                )
               )
               (i32.load offset=104
                (local.get $0)
               )
              )
              (block (result i32)
               (i32.store offset=4
                (local.get $0)
                (i32.add
                 (local.get $4)
                 (i32.const 1)
                )
               )
               (i32.load8_u
                (local.get $4)
               )
              )
              (call $___shgetc
               (local.get $0)
              )
             )
            )
            (i32.const 32)
           )
           (i32.const 120)
          )
          (if
           (local.get $5)
           (block
            (local.set $2
             (local.get $4)
            )
            (local.set $1
             (i32.const 8)
            )
            (br $__rjti$1)
           )
           (block
            (local.set $2
             (local.get $4)
            )
            (br $__rjti$0)
           )
          )
         )
         (if
          (i32.gt_s
           (i32.load8_u
            (i32.add
             (local.tee $1
              (if (result i32)
               (i32.lt_u
                (local.tee $1
                 (i32.load offset=4
                  (local.get $0)
                 )
                )
                (i32.load offset=104
                 (local.get $0)
                )
               )
               (block (result i32)
                (i32.store offset=4
                 (local.get $0)
                 (i32.add
                  (local.get $1)
                  (i32.const 1)
                 )
                )
                (i32.load8_u
                 (local.get $1)
                )
               )
               (call $___shgetc
                (local.get $0)
               )
              )
             )
             (i32.const 33121)
            )
           )
           (i32.const 15)
          )
          (block
           (if
            (i32.eqz
             (local.tee $1
              (i32.eqz
               (i32.load offset=104
                (local.get $0)
               )
              )
             )
            )
            (i32.store offset=4
             (local.get $0)
             (i32.add
              (i32.load offset=4
               (local.get $0)
              )
              (i32.const -1)
             )
            )
           )
           (if
            (i32.eqz
             (local.get $2)
            )
            (block
             (call $___shlim
              (local.get $0)
              (i64.const 0)
             )
             (local.set $3
              (i64.const 0)
             )
             (br $label$break$L1)
            )
           )
           (if
            (local.get $1)
            (block
             (local.set $3
              (i64.const 0)
             )
             (br $label$break$L1)
            )
           )
           (i32.store offset=4
            (local.get $0)
            (i32.add
             (i32.load offset=4
              (local.get $0)
             )
             (i32.const -1)
            )
           )
           (local.set $3
            (i64.const 0)
           )
           (br $label$break$L1)
          )
          (block
           (local.set $2
            (local.get $1)
           )
           (local.set $1
            (i32.const 16)
           )
           (br $__rjti$1)
          )
         )
        )
        (local.set $2
         (if (result i32)
          (i32.gt_u
           (local.tee $1
            (select
             (i32.const 10)
             (local.get $1)
             (local.get $5)
            )
           )
           (i32.load8_u
            (i32.add
             (local.get $4)
             (i32.const 33121)
            )
           )
          )
          (local.get $4)
          (block
           (if
            (i32.load offset=104
             (local.get $0)
            )
            (i32.store offset=4
             (local.get $0)
             (i32.add
              (i32.load offset=4
               (local.get $0)
              )
              (i32.const -1)
             )
            )
           )
           (call $___shlim
            (local.get $0)
            (i64.const 0)
           )
           (i32.store
            (i32.const 53312)
            (i32.const 28)
           )
           (local.set $3
            (i64.const 0)
           )
           (br $label$break$L1)
          )
         )
        )
       )
       (br_if $__rjti$1
        (i32.ne
         (local.get $1)
         (i32.const 10)
        )
       )
       (if
        (i32.lt_u
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const -48)
          )
         )
         (i32.const 10)
        )
        (block
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in5
          (local.set $1
           (i32.add
            (i32.mul
             (local.get $1)
             (i32.const 10)
            )
            (local.get $2)
           )
          )
          (br_if $while-in5
           (i32.and
            (i32.lt_u
             (local.tee $2
              (i32.add
               (local.tee $4
                (if (result i32)
                 (i32.lt_u
                  (local.tee $2
                   (i32.load offset=4
                    (local.get $0)
                   )
                  )
                  (i32.load offset=104
                   (local.get $0)
                  )
                 )
                 (block (result i32)
                  (i32.store offset=4
                   (local.get $0)
                   (i32.add
                    (local.get $2)
                    (i32.const 1)
                   )
                  )
                  (i32.load8_u
                   (local.get $2)
                  )
                 )
                 (call $___shgetc
                  (local.get $0)
                 )
                )
               )
               (i32.const -48)
              )
             )
             (i32.const 10)
            )
            (i32.lt_u
             (local.get $1)
             (i32.const 429496729)
            )
           )
          )
         )
         (local.set $6
          (i64.extend_i32_u
           (local.get $1)
          )
         )
         (if
          (i32.lt_u
           (local.get $2)
           (i32.const 10)
          )
          (block
           (local.set $1
            (local.get $4)
           )
           (loop $while-in7
            (if
             (i64.gt_u
              (local.tee $7
               (i64.mul
                (local.get $6)
                (i64.const 10)
               )
              )
              (i64.xor
               (local.tee $10
                (i64.extend_i32_s
                 (local.get $2)
                )
               )
               (i64.const -1)
              )
             )
             (block
              (local.set $2
               (i32.const 10)
              )
              (br $__rjti$2)
             )
            )
            (local.set $6
             (i64.add
              (local.get $7)
              (local.get $10)
             )
            )
            (br_if $while-in7
             (i32.and
              (i32.lt_u
               (local.tee $2
                (i32.add
                 (local.tee $1
                  (if (result i32)
                   (i32.lt_u
                    (local.tee $1
                     (i32.load offset=4
                      (local.get $0)
                     )
                    )
                    (i32.load offset=104
                     (local.get $0)
                    )
                   )
                   (block (result i32)
                    (i32.store offset=4
                     (local.get $0)
                     (i32.add
                      (local.get $1)
                      (i32.const 1)
                     )
                    )
                    (i32.load8_u
                     (local.get $1)
                    )
                   )
                   (call $___shgetc
                    (local.get $0)
                   )
                  )
                 )
                 (i32.const -48)
                )
               )
               (i32.const 10)
              )
              (i64.lt_u
               (local.get $6)
               (i64.const 1844674407370955162)
              )
             )
            )
           )
           (if
            (i32.le_u
             (local.get $2)
             (i32.const 9)
            )
            (block
             (local.set $2
              (i32.const 10)
             )
             (br $__rjti$2)
            )
           )
          )
         )
        )
       )
       (br $__rjto$2)
      )
      (if
       (i32.eqz
        (i32.and
         (local.get $1)
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
        )
       )
       (block
        (local.set $8
         (i32.load8_s
          (i32.add
           (i32.and
            (i32.shr_u
             (i32.mul
              (local.get $1)
              (i32.const 23)
             )
             (i32.const 5)
            )
            (i32.const 7)
           )
           (i32.const 46453)
          )
         )
        )
        (if
         (i32.gt_u
          (local.get $1)
          (local.tee $5
           (i32.and
            (local.tee $11
             (i32.load8_s
              (i32.add
               (local.get $2)
               (i32.const 33121)
              )
             )
            )
            (i32.const 255)
           )
          )
         )
         (block
          (local.set $4
           (i32.const 0)
          )
          (local.set $2
           (local.get $5)
          )
          (loop $while-in10
           (br_if $while-in10
            (i32.and
             (i32.lt_u
              (local.tee $4
               (i32.or
                (i32.shl
                 (local.get $4)
                 (local.get $8)
                )
                (local.get $2)
               )
              )
              (i32.const 134217728)
             )
             (i32.gt_u
              (local.get $1)
              (local.tee $2
               (i32.and
                (local.tee $11
                 (i32.load8_s
                  (i32.add
                   (local.tee $5
                    (if (result i32)
                     (i32.lt_u
                      (local.tee $2
                       (i32.load offset=4
                        (local.get $0)
                       )
                      )
                      (i32.load offset=104
                       (local.get $0)
                      )
                     )
                     (block (result i32)
                      (i32.store offset=4
                       (local.get $0)
                       (i32.add
                        (local.get $2)
                        (i32.const 1)
                       )
                      )
                      (i32.load8_u
                       (local.get $2)
                      )
                     )
                     (call $___shgetc
                      (local.get $0)
                     )
                    )
                   )
                   (i32.const 33121)
                  )
                 )
                )
                (i32.const 255)
               )
              )
             )
            )
           )
          )
          (local.set $6
           (i64.extend_i32_u
            (local.get $4)
           )
          )
          (local.set $4
           (local.get $5)
          )
          (local.set $5
           (local.get $2)
          )
         )
         (local.set $4
          (local.get $2)
         )
        )
        (local.set $2
         (local.get $11)
        )
        (if
         (i32.or
          (i32.le_u
           (local.get $1)
           (local.get $5)
          )
          (i64.lt_u
           (local.tee $10
            (i64.shr_u
             (i64.const -1)
             (local.tee $7
              (i64.extend_i32_u
               (local.get $8)
              )
             )
            )
           )
           (local.get $6)
          )
         )
         (block
          (local.set $2
           (local.get $1)
          )
          (local.set $1
           (local.get $4)
          )
          (br $__rjti$2)
         )
        )
        (loop $while-in12
         (if
          (i32.or
           (i32.le_u
            (local.get $1)
            (i32.and
             (local.tee $4
              (i32.load8_s
               (i32.add
                (local.tee $5
                 (if (result i32)
                  (i32.lt_u
                   (local.tee $4
                    (i32.load offset=4
                     (local.get $0)
                    )
                   )
                   (i32.load offset=104
                    (local.get $0)
                   )
                  )
                  (block (result i32)
                   (i32.store offset=4
                    (local.get $0)
                    (i32.add
                     (local.get $4)
                     (i32.const 1)
                    )
                   )
                   (i32.load8_u
                    (local.get $4)
                   )
                  )
                  (call $___shgetc
                   (local.get $0)
                  )
                 )
                )
                (i32.const 33121)
               )
              )
             )
             (i32.const 255)
            )
           )
           (i64.gt_u
            (local.tee $6
             (i64.or
              (i64.extend_i32_u
               (i32.and
                (local.get $2)
                (i32.const 255)
               )
              )
              (i64.shl
               (local.get $6)
               (local.get $7)
              )
             )
            )
            (local.get $10)
           )
          )
          (block
           (local.set $2
            (local.get $1)
           )
           (local.set $1
            (local.get $5)
           )
           (br $__rjti$2)
          )
          (block
           (local.set $2
            (local.get $4)
           )
           (br $while-in12)
          )
         )
        )
       )
      )
      (if
       (i32.gt_u
        (local.get $1)
        (local.tee $5
         (i32.and
          (local.tee $8
           (i32.load8_s
            (i32.add
             (local.get $2)
             (i32.const 33121)
            )
           )
          )
          (i32.const 255)
         )
        )
       )
       (block
        (local.set $4
         (i32.const 0)
        )
        (local.set $2
         (local.get $5)
        )
        (loop $while-in14
         (br_if $while-in14
          (i32.and
           (i32.lt_u
            (local.tee $4
             (i32.add
              (i32.mul
               (local.get $1)
               (local.get $4)
              )
              (local.get $2)
             )
            )
            (i32.const 119304647)
           )
           (i32.gt_u
            (local.get $1)
            (local.tee $2
             (i32.and
              (local.tee $8
               (i32.load8_s
                (i32.add
                 (local.tee $5
                  (if (result i32)
                   (i32.lt_u
                    (local.tee $2
                     (i32.load offset=4
                      (local.get $0)
                     )
                    )
                    (i32.load offset=104
                     (local.get $0)
                    )
                   )
                   (block (result i32)
                    (i32.store offset=4
                     (local.get $0)
                     (i32.add
                      (local.get $2)
                      (i32.const 1)
                     )
                    )
                    (i32.load8_u
                     (local.get $2)
                    )
                   )
                   (call $___shgetc
                    (local.get $0)
                   )
                  )
                 )
                 (i32.const 33121)
                )
               )
              )
              (i32.const 255)
             )
            )
           )
          )
         )
        )
        (local.set $6
         (i64.extend_i32_u
          (local.get $4)
         )
        )
        (local.set $4
         (local.get $5)
        )
        (local.set $5
         (local.get $2)
        )
       )
       (local.set $4
        (local.get $2)
       )
      )
      (local.set $2
       (local.get $8)
      )
      (local.set $7
       (i64.extend_i32_u
        (local.get $1)
       )
      )
      (local.set $1
       (if (result i32)
        (i32.gt_u
         (local.get $1)
         (local.get $5)
        )
        (block (result i32)
         (local.set $10
          (i64.div_u
           (i64.const -1)
           (local.get $7)
          )
         )
         (loop $while-in16 (result i32)
          (if
           (i64.gt_u
            (local.get $6)
            (local.get $10)
           )
           (block
            (local.set $2
             (local.get $1)
            )
            (local.set $1
             (local.get $4)
            )
            (br $__rjti$2)
           )
          )
          (if
           (i64.gt_u
            (local.tee $12
             (i64.mul
              (local.get $6)
              (local.get $7)
             )
            )
            (i64.xor
             (local.tee $13
              (i64.extend_i32_u
               (i32.and
                (local.get $2)
                (i32.const 255)
               )
              )
             )
             (i64.const -1)
            )
           )
           (block
            (local.set $2
             (local.get $1)
            )
            (local.set $1
             (local.get $4)
            )
            (br $__rjti$2)
           )
          )
          (local.set $4
           (if (result i32)
            (i32.lt_u
             (local.tee $2
              (i32.load offset=4
               (local.get $0)
              )
             )
             (i32.load offset=104
              (local.get $0)
             )
            )
            (block (result i32)
             (i32.store offset=4
              (local.get $0)
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             (i32.load8_u
              (local.get $2)
             )
            )
            (call $___shgetc
             (local.get $0)
            )
           )
          )
          (local.set $6
           (i64.add
            (local.get $12)
            (local.get $13)
           )
          )
          (br_if $while-in16
           (i32.gt_u
            (local.get $1)
            (i32.and
             (local.tee $2
              (i32.load8_s
               (i32.add
                (local.get $4)
                (i32.const 33121)
               )
              )
             )
             (i32.const 255)
            )
           )
          )
          (local.set $2
           (local.get $1)
          )
          (local.get $4)
         )
        )
        (block (result i32)
         (local.set $2
          (local.get $1)
         )
         (local.get $4)
        )
       )
      )
     )
     (if
      (i32.gt_u
       (local.get $2)
       (i32.load8_u
        (i32.add
         (local.get $1)
         (i32.const 33121)
        )
       )
      )
      (block
       (loop $while-in18
        (br_if $while-in18
         (i32.gt_u
          (local.get $2)
          (i32.load8_u
           (i32.add
            (if (result i32)
             (i32.lt_u
              (local.tee $1
               (i32.load offset=4
                (local.get $0)
               )
              )
              (i32.load offset=104
               (local.get $0)
              )
             )
             (block (result i32)
              (i32.store offset=4
               (local.get $0)
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
              (i32.load8_u
               (local.get $1)
              )
             )
             (call $___shgetc
              (local.get $0)
             )
            )
            (i32.const 33121)
           )
          )
         )
        )
       )
       (i32.store
        (i32.const 53312)
        (i32.const 68)
       )
       (local.set $9
        (select
         (local.get $9)
         (i32.const 0)
         (i64.eqz
          (i64.and
           (local.get $3)
           (i64.const 1)
          )
         )
        )
       )
       (local.set $6
        (local.get $3)
       )
      )
     )
    )
    (if
     (i32.load offset=104
      (local.get $0)
     )
     (i32.store offset=4
      (local.get $0)
      (i32.add
       (i32.load offset=4
        (local.get $0)
       )
       (i32.const -1)
      )
     )
    )
    (if
     (i64.ge_u
      (local.get $6)
      (local.get $3)
     )
     (block
      (if
       (i32.eqz
        (i32.or
         (i32.ne
          (local.get $9)
          (i32.const 0)
         )
         (i64.ne
          (i64.and
           (local.get $3)
           (i64.const 1)
          )
          (i64.const 0)
         )
        )
       )
       (block
        (i32.store
         (i32.const 53312)
         (i32.const 68)
        )
        (local.set $3
         (i64.add
          (local.get $3)
          (i64.const -1)
         )
        )
        (br $label$break$L1)
       )
      )
      (if
       (i64.gt_u
        (local.get $6)
        (local.get $3)
       )
       (block
        (i32.store
         (i32.const 53312)
         (i32.const 68)
        )
        (br $label$break$L1)
       )
      )
     )
    )
    (local.set $3
     (i64.sub
      (i64.xor
       (local.get $6)
       (local.tee $3
        (i64.extend_i32_s
         (local.get $9)
        )
       )
      )
      (local.get $3)
     )
    )
   )
  )
  (local.get $3)
 )
 (func $___floatscan (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (block $label$break$L4 (result f64)
   (block $__rjti$1
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case $switch-case0 $switch-case1 $switch-default
         (local.get $1)
        )
       )
       (local.set $5
        (i32.const -149)
       )
       (local.set $6
        (i32.const 24)
       )
       (br $__rjti$1)
      )
      (local.set $5
       (i32.const -1074)
      )
      (local.set $6
       (i32.const 53)
      )
      (br $__rjti$1)
     )
     (local.set $5
      (i32.const -1074)
     )
     (local.set $6
      (i32.const 53)
     )
     (br $__rjti$1)
    )
    (br $label$break$L4
     (f64.const 0)
    )
   )
   (loop $while-in
    (br_if $while-in
     (i32.or
      (i32.eq
       (local.tee $4
        (local.tee $1
         (if (result i32)
          (i32.lt_u
           (local.tee $1
            (i32.load offset=4
             (local.get $0)
            )
           )
           (i32.load offset=104
            (local.get $0)
           )
          )
          (block (result i32)
           (i32.store offset=4
            (local.get $0)
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (i32.load8_u
            (local.get $1)
           )
          )
          (call $___shgetc
           (local.get $0)
          )
         )
        )
       )
       (i32.const 32)
      )
      (i32.lt_u
       (i32.add
        (local.get $4)
        (i32.const -9)
       )
       (i32.const 5)
      )
     )
    )
   )
   (block $label$break$L13
    (block $switch-default6
     (block $switch-case5
      (br_table $switch-case5 $switch-default6 $switch-case5 $switch-default6
       (i32.sub
        (local.get $1)
        (i32.const 43)
       )
      )
     )
     (local.set $4
      (i32.sub
       (i32.const 1)
       (i32.shl
        (i32.eq
         (local.get $1)
         (i32.const 45)
        )
        (i32.const 1)
       )
      )
     )
     (local.set $1
      (if (result i32)
       (i32.lt_u
        (local.tee $1
         (i32.load offset=4
          (local.get $0)
         )
        )
        (i32.load offset=104
         (local.get $0)
        )
       )
       (block (result i32)
        (i32.store offset=4
         (local.get $0)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.load8_u
         (local.get $1)
        )
       )
       (call $___shgetc
        (local.get $0)
       )
      )
     )
     (br $label$break$L13)
    )
    (local.set $4
     (i32.const 1)
    )
   )
   (block $__rjto$0
    (block $__rjti$0
     (block $switch-default27
      (br_table $__rjti$0 $switch-default27 $switch-default27 $switch-default27 $switch-default27 $__rjto$0 $switch-default27
       (i32.sub
        (i32.and
         (local.tee $3
          (loop $while-in8 (result i32)
           (if (result i32)
            (i32.eq
             (i32.load8_s
              (i32.add
               (local.get $3)
               (i32.const 46444)
              )
             )
             (i32.or
              (local.get $1)
              (i32.const 32)
             )
            )
            (block (result i32)
             (if
              (i32.lt_u
               (local.get $3)
               (i32.const 7)
              )
              (local.set $1
               (if (result i32)
                (i32.lt_u
                 (local.tee $1
                  (i32.load offset=4
                   (local.get $0)
                  )
                 )
                 (i32.load offset=104
                  (local.get $0)
                 )
                )
                (block (result i32)
                 (i32.store offset=4
                  (local.get $0)
                  (i32.add
                   (local.get $1)
                   (i32.const 1)
                  )
                 )
                 (i32.load8_u
                  (local.get $1)
                 )
                )
                (call $___shgetc
                 (local.get $0)
                )
               )
              )
             )
             (br_if $while-in8
              (i32.lt_u
               (local.tee $3
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (i32.const 8)
              )
             )
             (i32.const 8)
            )
            (local.get $3)
           )
          )
         )
         (i32.const 2147483647)
        )
        (i32.const 3)
       )
      )
     )
     (if
      (i32.and
       (local.tee $7
        (i32.ne
         (local.get $2)
         (i32.const 0)
        )
       )
       (i32.gt_u
        (local.get $3)
        (i32.const 3)
       )
      )
      (block
       (br_if $__rjto$0
        (i32.eq
         (local.get $3)
         (i32.const 8)
        )
       )
       (br $__rjti$0)
      )
     )
     (if
      (i32.eqz
       (local.get $3)
      )
      (block $label$break$L34
       (local.set $3
        (i32.const 0)
       )
       (local.set $3
        (loop $while-in16 (result i32)
         (br_if $label$break$L34
          (i32.ne
           (i32.load8_s
            (i32.add
             (local.get $3)
             (i32.const 46506)
            )
           )
           (i32.or
            (local.get $1)
            (i32.const 32)
           )
          )
         )
         (if
          (i32.lt_u
           (local.get $3)
           (i32.const 2)
          )
          (local.set $1
           (if (result i32)
            (i32.lt_u
             (local.tee $1
              (i32.load offset=4
               (local.get $0)
              )
             )
             (i32.load offset=104
              (local.get $0)
             )
            )
            (block (result i32)
             (i32.store offset=4
              (local.get $0)
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.load8_u
              (local.get $1)
             )
            )
            (call $___shgetc
             (local.get $0)
            )
           )
          )
         )
         (br_if $while-in16
          (i32.lt_u
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (i32.const 3)
          )
         )
         (i32.const 3)
        )
       )
      )
     )
     (block $switch-default26
      (block $switch-case25
       (block $switch-case24
        (br_table $switch-case25 $switch-default26 $switch-default26 $switch-case24 $switch-default26
         (local.get $3)
        )
       )
       (if
        (i32.ne
         (if (result i32)
          (i32.lt_u
           (local.tee $1
            (i32.load offset=4
             (local.get $0)
            )
           )
           (i32.load offset=104
            (local.get $0)
           )
          )
          (block (result i32)
           (i32.store offset=4
            (local.get $0)
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (i32.load8_u
            (local.get $1)
           )
          )
          (call $___shgetc
           (local.get $0)
          )
         )
         (i32.const 40)
        )
        (block
         (drop
          (br_if $label$break$L4
           (global.get $nan$asm2wasm$import)
           (i32.eqz
            (i32.load offset=104
             (local.get $0)
            )
           )
          )
         )
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (i32.load offset=4
            (local.get $0)
           )
           (i32.const -1)
          )
         )
         (br $label$break$L4
          (global.get $nan$asm2wasm$import)
         )
        )
       )
       (local.set $1
        (i32.const 1)
       )
       (loop $while-in21
        (block $while-out20
         (if
          (i32.eqz
           (i32.or
            (i32.lt_u
             (i32.add
              (local.tee $2
               (if (result i32)
                (i32.lt_u
                 (local.tee $2
                  (i32.load offset=4
                   (local.get $0)
                  )
                 )
                 (i32.load offset=104
                  (local.get $0)
                 )
                )
                (block (result i32)
                 (i32.store offset=4
                  (local.get $0)
                  (i32.add
                   (local.get $2)
                   (i32.const 1)
                  )
                 )
                 (i32.load8_u
                  (local.get $2)
                 )
                )
                (call $___shgetc
                 (local.get $0)
                )
               )
              )
              (i32.const -48)
             )
             (i32.const 10)
            )
            (i32.lt_u
             (i32.add
              (local.get $2)
              (i32.const -65)
             )
             (i32.const 26)
            )
           )
          )
          (br_if $while-out20
           (i32.eqz
            (i32.or
             (i32.eq
              (local.get $2)
              (i32.const 95)
             )
             (i32.lt_u
              (i32.add
               (local.get $2)
               (i32.const -97)
              )
              (i32.const 26)
             )
            )
           )
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (br $while-in21)
        )
       )
       (drop
        (br_if $label$break$L4
         (global.get $nan$asm2wasm$import)
         (i32.eq
          (local.get $2)
          (i32.const 41)
         )
        )
       )
       (if
        (i32.eqz
         (local.tee $2
          (i32.eqz
           (i32.load offset=104
            (local.get $0)
           )
          )
         )
        )
        (i32.store offset=4
         (local.get $0)
         (i32.add
          (i32.load offset=4
           (local.get $0)
          )
          (i32.const -1)
         )
        )
       )
       (if
        (i32.eqz
         (local.get $7)
        )
        (block
         (i32.store
          (i32.const 53312)
          (i32.const 28)
         )
         (call $___shlim
          (local.get $0)
          (i64.const 0)
         )
         (br $label$break$L4
          (f64.const 0)
         )
        )
       )
       (drop
        (br_if $label$break$L4
         (global.get $nan$asm2wasm$import)
         (i32.eqz
          (local.get $1)
         )
        )
       )
       (loop $while-in23
        (if
         (i32.eqz
          (local.get $2)
         )
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (i32.load offset=4
            (local.get $0)
           )
           (i32.const -1)
          )
         )
        )
        (drop
         (br_if $label$break$L4
          (global.get $nan$asm2wasm$import)
          (i32.eqz
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const -1)
            )
           )
          )
         )
        )
        (br $while-in23)
       )
      )
      (br $label$break$L4
       (call $_decfloat
        (local.get $0)
        (if (result i32)
         (i32.eq
          (local.get $1)
          (i32.const 48)
         )
         (block (result i32)
          (if
           (i32.eq
            (i32.or
             (if (result i32)
              (i32.lt_u
               (local.tee $1
                (i32.load offset=4
                 (local.get $0)
                )
               )
               (i32.load offset=104
                (local.get $0)
               )
              )
              (block (result i32)
               (i32.store offset=4
                (local.get $0)
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (i32.load8_u
                (local.get $1)
               )
              )
              (call $___shgetc
               (local.get $0)
              )
             )
             (i32.const 32)
            )
            (i32.const 120)
           )
           (br $label$break$L4
            (call $_hexfloat
             (local.get $0)
             (local.get $6)
             (local.get $5)
             (local.get $4)
             (local.get $2)
            )
           )
          )
          (if
           (i32.load offset=104
            (local.get $0)
           )
           (i32.store offset=4
            (local.get $0)
            (i32.add
             (i32.load offset=4
              (local.get $0)
             )
             (i32.const -1)
            )
           )
          )
          (i32.const 48)
         )
         (local.get $1)
        )
        (local.get $6)
        (local.get $5)
        (local.get $4)
        (local.get $2)
       )
      )
     )
     (if
      (i32.load offset=104
       (local.get $0)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.add
        (i32.load offset=4
         (local.get $0)
        )
        (i32.const -1)
       )
      )
     )
     (i32.store
      (i32.const 53312)
      (i32.const 28)
     )
     (call $___shlim
      (local.get $0)
      (i64.const 0)
     )
     (br $label$break$L4
      (f64.const 0)
     )
    )
    (if
     (i32.eqz
      (local.tee $1
       (i32.eqz
        (i32.load offset=104
         (local.get $0)
        )
       )
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.add
       (i32.load offset=4
        (local.get $0)
       )
       (i32.const -1)
      )
     )
    )
    (if
     (i32.and
      (i32.ne
       (local.get $2)
       (i32.const 0)
      )
      (i32.gt_u
       (local.get $3)
       (i32.const 3)
      )
     )
     (loop $while-in29
      (if
       (i32.eqz
        (local.get $1)
       )
       (i32.store offset=4
        (local.get $0)
        (i32.add
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const -1)
        )
       )
      )
      (br_if $while-in29
       (i32.gt_u
        (local.tee $3
         (i32.add
          (local.get $3)
          (i32.const -1)
         )
        )
        (i32.const 3)
       )
      )
     )
    )
   )
   (f64.promote_f32
    (f32.mul
     (f32.convert_i32_s
      (local.get $4)
     )
     (f32.demote_f64
      (global.get $inf$asm2wasm$import)
     )
    )
   )
  )
 )
 (func $_hexfloat (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result f64)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  (local $11 f64)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 f64)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i64)
  (local.set $5
   (if (result i32)
    (i32.lt_u
     (local.tee $5
      (i32.load offset=4
       (local.get $0)
      )
     )
     (i32.load offset=104
      (local.get $0)
     )
    )
    (block (result i32)
     (i32.store offset=4
      (local.get $0)
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (i32.load8_u
      (local.get $5)
     )
    )
    (call $___shgetc
     (local.get $0)
    )
   )
  )
  (block $__rjto$3
   (block $__rjti$3
    (loop $label$continue$L5
     (block $label$break$L5
      (block $switch
       (br_table $__rjti$3 $label$break$L5 $switch $label$break$L5
        (i32.sub
         (local.get $5)
         (i32.const 46)
        )
       )
      )
      (local.set $5
       (if (result i32)
        (i32.lt_u
         (local.tee $5
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.load offset=104
          (local.get $0)
         )
        )
        (block (result i32)
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $5)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $13
       (i32.const 1)
      )
      (br $label$continue$L5)
     )
    )
    (br $__rjto$3)
   )
   (local.set $14
    (if (result i32)
     (i32.eq
      (local.tee $5
       (if (result i32)
        (i32.lt_u
         (local.tee $5
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.load offset=104
          (local.get $0)
         )
        )
        (block (result i32)
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $5)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (i32.const 48)
     )
     (loop $while-in (result i32)
      (local.set $5
       (if (result i32)
        (i32.lt_u
         (local.tee $5
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.load offset=104
          (local.get $0)
         )
        )
        (block (result i32)
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (local.get $5)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $5)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $9
       (i64.add
        (local.get $9)
        (i64.const -1)
       )
      )
      (br_if $while-in
       (i32.eq
        (local.get $5)
        (i32.const 48)
       )
      )
      (local.set $13
       (i32.const 1)
      )
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
  )
  (local.set $11
   (f64.const 1)
  )
  (local.set $7
   (local.get $5)
  )
  (local.set $5
   (local.get $13)
  )
  (loop $while-in2
   (block $while-out1
    (local.set $13
     (i32.or
      (local.get $7)
      (i32.const 32)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.lt_u
        (local.tee $17
         (i32.add
          (local.get $7)
          (i32.const -48)
         )
        )
        (i32.const 10)
       )
      )
      (br_if $while-out1
       (i32.eqz
        (i32.or
         (local.tee $18
          (i32.eq
           (local.get $7)
           (i32.const 46)
          )
         )
         (i32.lt_u
          (i32.add
           (local.get $13)
           (i32.const -97)
          )
          (i32.const 6)
         )
        )
       )
      )
      (br_if $__rjti$0
       (i32.eqz
        (local.get $18)
       )
      )
      (local.set $9
       (if (result i64)
        (local.get $14)
        (block
         (local.set $7
          (i32.const 46)
         )
         (br $while-out1)
        )
        (block (result i64)
         (local.set $14
          (i32.const 1)
         )
         (local.get $12)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $5
      (select
       (i32.add
        (local.get $13)
        (i32.const -87)
       )
       (local.get $17)
       (i32.gt_s
        (local.get $7)
        (i32.const 57)
       )
      )
     )
     (if
      (i64.lt_s
       (local.get $12)
       (i64.const 8)
      )
      (local.set $8
       (i32.add
        (local.get $5)
        (i32.shl
         (local.get $8)
         (i32.const 4)
        )
       )
      )
      (local.set $6
       (if (result f64)
        (i64.lt_s
         (local.get $12)
         (i64.const 14)
        )
        (block (result f64)
         (local.set $11
          (local.tee $15
           (f64.mul
            (local.get $11)
            (f64.const 0.0625)
           )
          )
         )
         (f64.add
          (local.get $6)
          (f64.mul
           (local.get $15)
           (f64.convert_i32_s
            (local.get $5)
           )
          )
         )
        )
        (block (result f64)
         (local.set $16
          (select
           (local.get $16)
           (i32.const 1)
           (local.tee $5
            (i32.or
             (i32.eqz
              (local.get $5)
             )
             (i32.ne
              (local.get $16)
              (i32.const 0)
             )
            )
           )
          )
         )
         (select
          (local.get $6)
          (f64.add
           (local.get $6)
           (f64.mul
            (local.get $11)
            (f64.const 0.5)
           )
          )
          (local.get $5)
         )
        )
       )
      )
     )
     (local.set $12
      (i64.add
       (local.get $12)
       (i64.const 1)
      )
     )
     (local.set $5
      (i32.const 1)
     )
    )
    (local.set $7
     (if (result i32)
      (i32.lt_u
       (local.tee $7
        (i32.load offset=4
         (local.get $0)
        )
       )
       (i32.load offset=104
        (local.get $0)
       )
      )
      (block (result i32)
       (i32.store offset=4
        (local.get $0)
        (i32.add
         (local.get $7)
         (i32.const 1)
        )
       )
       (i32.load8_u
        (local.get $7)
       )
      )
      (call $___shgetc
       (local.get $0)
      )
     )
    )
    (br $while-in2)
   )
  )
  (if (result f64)
   (local.get $5)
   (block $do-once3 (result f64)
    (if
     (i64.lt_s
      (local.get $12)
      (i64.const 8)
     )
     (block
      (local.set $10
       (local.get $12)
      )
      (loop $while-in6
       (local.set $8
        (i32.shl
         (local.get $8)
         (i32.const 4)
        )
       )
       (local.set $19
        (i64.add
         (local.get $10)
         (i64.const 1)
        )
       )
       (if
        (i64.lt_s
         (local.get $10)
         (i64.const 7)
        )
        (block
         (local.set $10
          (local.get $19)
         )
         (br $while-in6)
        )
       )
      )
     )
    )
    (local.set $10
     (if (result i64)
      (i32.eq
       (i32.or
        (local.get $7)
        (i32.const 32)
       )
       (i32.const 112)
      )
      (if (result i64)
       (i64.eq
        (local.tee $10
         (call $_scanexp
          (local.get $0)
          (local.get $4)
         )
        )
        (i64.const -9223372036854775808)
       )
       (block (result i64)
        (if
         (i32.eqz
          (local.get $4)
         )
         (block
          (call $___shlim
           (local.get $0)
           (i64.const 0)
          )
          (br $do-once3
           (f64.const 0)
          )
         )
        )
        (if
         (i32.load offset=104
          (local.get $0)
         )
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (i32.load offset=4
            (local.get $0)
           )
           (i32.const -1)
          )
         )
        )
        (i64.const 0)
       )
       (local.get $10)
      )
      (block (result i64)
       (if
        (i32.load offset=104
         (local.get $0)
        )
        (i32.store offset=4
         (local.get $0)
         (i32.add
          (i32.load offset=4
           (local.get $0)
          )
          (i32.const -1)
         )
        )
       )
       (i64.const 0)
      )
     )
    )
    (drop
     (br_if $do-once3
      (f64.mul
       (f64.convert_i32_s
        (local.get $3)
       )
       (f64.const 0)
      )
      (i32.eqz
       (local.get $8)
      )
     )
    )
    (if
     (i64.gt_s
      (local.tee $9
       (i64.add
        (local.get $10)
        (i64.add
         (i64.shl
          (select
           (local.get $9)
           (local.get $12)
           (local.get $14)
          )
          (i64.const 2)
         )
         (i64.const -32)
        )
       )
      )
      (i64.extend_i32_s
       (i32.sub
        (i32.const 0)
        (local.get $2)
       )
      )
     )
     (block
      (i32.store
       (i32.const 53312)
       (i32.const 68)
      )
      (br $do-once3
       (f64.mul
        (f64.mul
         (f64.convert_i32_s
          (local.get $3)
         )
         (f64.const 1797693134862315708145274e284)
        )
        (f64.const 1797693134862315708145274e284)
       )
      )
     )
    )
    (if
     (i64.lt_s
      (local.get $9)
      (i64.extend_i32_s
       (i32.add
        (local.get $2)
        (i32.const -106)
       )
      )
     )
     (block
      (i32.store
       (i32.const 53312)
       (i32.const 68)
      )
      (br $do-once3
       (f64.mul
        (f64.mul
         (f64.convert_i32_s
          (local.get $3)
         )
         (f64.const 2.2250738585072014e-308)
        )
        (f64.const 2.2250738585072014e-308)
       )
      )
     )
    )
    (if
     (i32.gt_s
      (local.get $8)
      (i32.const -1)
     )
     (loop $while-in8
      (local.set $8
       (i32.or
        (i32.xor
         (local.tee $0
          (i32.eqz
           (f64.ge
            (local.get $6)
            (f64.const 0.5)
           )
          )
         )
         (i32.const 1)
        )
        (i32.shl
         (local.get $8)
         (i32.const 1)
        )
       )
      )
      (local.set $6
       (f64.add
        (local.get $6)
        (select
         (local.get $6)
         (f64.add
          (local.get $6)
          (f64.const -1)
         )
         (local.get $0)
        )
       )
      )
      (local.set $9
       (i64.add
        (local.get $9)
        (i64.const -1)
       )
      )
      (br_if $while-in8
       (i32.gt_s
        (local.get $8)
        (i32.const -1)
       )
      )
     )
    )
    (local.set $15
     (block $__rjto$2 (result f64)
      (block $__rjti$2
       (if
        (i64.lt_s
         (local.tee $10
          (i64.add
           (local.get $9)
           (i64.sub
            (i64.const 32)
            (i64.extend_i32_s
             (local.get $2)
            )
           )
          )
         )
         (i64.extend_i32_s
          (local.get $1)
         )
        )
        (if
         (i32.le_s
          (local.tee $1
           (i32.wrap_i64
            (local.get $10)
           )
          )
          (i32.const 0)
         )
         (block
          (local.set $1
           (i32.const 0)
          )
          (local.set $0
           (i32.const 84)
          )
          (br $__rjti$2)
         )
        )
       )
       (local.set $0
        (i32.sub
         (i32.const 84)
         (local.get $1)
        )
       )
       (br_if $__rjti$2
        (i32.lt_s
         (local.get $1)
         (i32.const 53)
        )
       )
       (local.set $11
        (f64.convert_i32_s
         (local.get $3)
        )
       )
       (br $__rjto$2
        (f64.const 0)
       )
      )
      (local.set $11
       (f64.convert_i32_s
        (local.get $3)
       )
      )
      (f64.reinterpret_i64
       (i64.or
        (i64.and
         (i64.reinterpret_f64
          (call $_scalbn
           (f64.const 1)
           (local.get $0)
          )
         )
         (i64.const 9223372036854775807)
        )
        (i64.and
         (i64.reinterpret_f64
          (local.get $11)
         )
         (i64.const -9223372036854775808)
        )
       )
      )
     )
    )
    (if
     (f64.eq
      (local.tee $6
       (f64.sub
        (f64.add
         (f64.mul
          (select
           (f64.const 0)
           (local.get $6)
           (local.tee $0
            (i32.and
             (i32.eqz
              (i32.and
               (local.get $8)
               (i32.const 1)
              )
             )
             (i32.and
              (i32.lt_s
               (local.get $1)
               (i32.const 32)
              )
              (f64.ne
               (local.get $6)
               (f64.const 0)
              )
             )
            )
           )
          )
          (local.get $11)
         )
         (f64.add
          (local.get $15)
          (f64.mul
           (local.get $11)
           (f64.convert_i32_u
            (i32.add
             (local.get $0)
             (local.get $8)
            )
           )
          )
         )
        )
        (local.get $15)
       )
      )
      (f64.const 0)
     )
     (i32.store
      (i32.const 53312)
      (i32.const 68)
     )
    )
    (call $_scalbnl
     (local.get $6)
     (i32.wrap_i64
      (local.get $9)
     )
    )
   )
   (block (result f64)
    (if
     (i32.eqz
      (local.tee $1
       (i32.eqz
        (i32.load offset=104
         (local.get $0)
        )
       )
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.add
       (i32.load offset=4
        (local.get $0)
       )
       (i32.const -1)
      )
     )
    )
    (if
     (local.get $4)
     (if
      (i32.eqz
       (local.get $1)
      )
      (block
       (i32.store offset=4
        (local.get $0)
        (i32.add
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const -1)
        )
       )
       (if
        (i32.eqz
         (i32.or
          (local.get $1)
          (i32.eqz
           (local.get $14)
          )
         )
        )
        (i32.store offset=4
         (local.get $0)
         (i32.add
          (i32.load offset=4
           (local.get $0)
          )
          (i32.const -1)
         )
        )
       )
      )
     )
     (call $___shlim
      (local.get $0)
      (i64.const 0)
     )
    )
    (f64.mul
     (f64.convert_i32_s
      (local.get $3)
     )
     (f64.const 0)
    )
   )
  )
 )
 (func $_decfloat (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f64)
  (local $13 i64)
  (local $14 i32)
  (local $15 f64)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i64)
  (local $20 f64)
  (local $21 i32)
  (local $22 i32)
  (local $23 i64)
  (local $24 i32)
  (local $25 i32)
  (local $26 f64)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 512)
   )
  )
  (local.set $22
   (i32.sub
    (i32.const 0)
    (local.tee $21
     (i32.add
      (local.get $2)
      (local.get $3)
     )
    )
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $label$continue$L1
     (block $label$break$L1
      (block $switch
       (block $switch-default
        (br_table $__rjti$1 $switch-default $switch $switch-default
         (i32.sub
          (local.get $1)
          (i32.const 46)
         )
        )
       )
       (local.set $6
        (local.get $1)
       )
       (local.set $1
        (local.get $7)
       )
       (br $label$break$L1)
      )
      (local.set $1
       (if (result i32)
        (i32.lt_u
         (local.tee $1
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.load offset=104
          (local.get $0)
         )
        )
        (block (result i32)
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $1)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $7
       (i32.const 1)
      )
      (br $label$continue$L1)
     )
    )
    (br $__rjto$1)
   )
   (local.set $1
    (if (result i32)
     (i32.eq
      (local.tee $6
       (if (result i32)
        (i32.lt_u
         (local.tee $1
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.load offset=104
          (local.get $0)
         )
        )
        (block (result i32)
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $1)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (i32.const 48)
     )
     (loop $while-in (result i32)
      (local.set $6
       (if (result i32)
        (i32.lt_u
         (local.tee $1
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.load offset=104
          (local.get $0)
         )
        )
        (block (result i32)
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $1)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $13
       (i64.add
        (local.get $13)
        (i64.const -1)
       )
      )
      (br_if $while-in
       (i32.eq
        (local.get $6)
        (i32.const 48)
       )
      )
      (local.set $8
       (i32.const 1)
      )
      (i32.const 1)
     )
     (block (result i32)
      (local.set $8
       (i32.const 1)
      )
      (local.get $7)
     )
    )
   )
  )
  (i32.store
   (local.get $10)
   (i32.const 0)
  )
  (local.set $12
   (block $do-once4 (result f64)
    (block $__rjti$6
     (block $__rjti$5
      (block $__rjti$4
       (block $__rjti$3
        (if
         (i32.or
          (local.tee $18
           (i32.eq
            (local.get $6)
            (i32.const 46)
           )
          )
          (i32.lt_u
           (local.tee $17
            (i32.add
             (local.get $6)
             (i32.const -48)
            )
           )
           (i32.const 10)
          )
         )
         (block $__rjti$2
          (local.set $7
           (local.get $8)
          )
          (local.set $14
           (local.get $6)
          )
          (local.set $8
           (local.get $18)
          )
          (local.set $6
           (local.get $17)
          )
          (loop $label$continue$L24
           (block $label$break$L24
            (local.set $16
             (if (result i32)
              (local.get $8)
              (block (result i32)
               (br_if $label$break$L24
                (local.get $7)
               )
               (local.set $7
                (i32.const 1)
               )
               (local.set $13
                (local.get $19)
               )
               (local.get $16)
              )
              (block $do-once (result i32)
               (local.set $19
                (i64.add
                 (local.get $19)
                 (i64.const 1)
                )
               )
               (local.set $8
                (i32.ne
                 (local.get $14)
                 (i32.const 48)
                )
               )
               (if
                (i32.ge_s
                 (local.get $9)
                 (i32.const 125)
                )
                (block
                 (drop
                  (br_if $do-once
                   (local.get $16)
                   (i32.eqz
                    (local.get $8)
                   )
                  )
                 )
                 (i32.store offset=496
                  (local.get $10)
                  (i32.or
                   (i32.load offset=496
                    (local.get $10)
                   )
                   (i32.const 1)
                  )
                 )
                 (br $do-once
                  (i32.const 1116)
                 )
                )
               )
               (i32.store
                (local.tee $1
                 (i32.add
                  (i32.shl
                   (local.get $9)
                   (i32.const 2)
                  )
                  (local.get $10)
                 )
                )
                (if (result i32)
                 (local.get $11)
                 (i32.add
                  (i32.add
                   (local.get $14)
                   (i32.const -48)
                  )
                  (i32.mul
                   (i32.load
                    (local.get $1)
                   )
                   (i32.const 10)
                  )
                 )
                 (local.get $6)
                )
               )
               (local.set $1
                (i32.eq
                 (local.tee $6
                  (i32.add
                   (local.get $11)
                   (i32.const 1)
                  )
                 )
                 (i32.const 9)
                )
               )
               (local.set $11
                (select
                 (i32.const 0)
                 (local.get $6)
                 (local.get $1)
                )
               )
               (local.set $9
                (i32.add
                 (local.get $1)
                 (local.get $9)
                )
               )
               (local.set $1
                (i32.const 1)
               )
               (select
                (i32.wrap_i64
                 (local.get $19)
                )
                (local.get $16)
                (local.get $8)
               )
              )
             )
            )
            (br_if $label$continue$L24
             (i32.or
              (i32.lt_u
               (local.tee $6
                (i32.add
                 (local.tee $14
                  (if (result i32)
                   (i32.lt_u
                    (local.tee $6
                     (i32.load offset=4
                      (local.get $0)
                     )
                    )
                    (i32.load offset=104
                     (local.get $0)
                    )
                   )
                   (block (result i32)
                    (i32.store offset=4
                     (local.get $0)
                     (i32.add
                      (local.get $6)
                      (i32.const 1)
                     )
                    )
                    (i32.load8_u
                     (local.get $6)
                    )
                   )
                   (call $___shgetc
                    (local.get $0)
                   )
                  )
                 )
                 (i32.const -48)
                )
               )
               (i32.const 10)
              )
              (local.tee $8
               (i32.eq
                (local.get $14)
                (i32.const 46)
               )
              )
             )
            )
            (local.set $6
             (local.get $14)
            )
            (br $__rjti$2)
           )
          )
          (local.set $1
           (i32.ne
            (local.get $1)
            (i32.const 0)
           )
          )
          (br $__rjti$3)
         )
         (local.set $7
          (local.get $8)
         )
        )
        (local.set $13
         (select
          (local.get $13)
          (local.get $19)
          (local.get $7)
         )
        )
        (if
         (i32.eqz
          (i32.and
           (local.tee $1
            (i32.ne
             (local.get $1)
             (i32.const 0)
            )
           )
           (i32.eq
            (i32.or
             (local.get $6)
             (i32.const 32)
            )
            (i32.const 101)
           )
          )
         )
         (if
          (i32.gt_s
           (local.get $6)
           (i32.const -1)
          )
          (br $__rjti$3)
          (br $__rjti$4)
         )
        )
        (local.set $13
         (i64.add
          (if (result i64)
           (i64.eq
            (local.tee $23
             (call $_scanexp
              (local.get $0)
              (local.get $5)
             )
            )
            (i64.const -9223372036854775808)
           )
           (block (result i64)
            (if
             (i32.eqz
              (local.get $5)
             )
             (block
              (call $___shlim
               (local.get $0)
               (i64.const 0)
              )
              (br $do-once4
               (f64.const 0)
              )
             )
            )
            (if
             (i32.load offset=104
              (local.get $0)
             )
             (i32.store offset=4
              (local.get $0)
              (i32.add
               (i32.load offset=4
                (local.get $0)
               )
               (i32.const -1)
              )
             )
            )
            (i64.const 0)
           )
           (local.get $23)
          )
          (local.get $13)
         )
        )
        (br $__rjti$6)
       )
       (if
        (i32.load offset=104
         (local.get $0)
        )
        (block
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (i32.load offset=4
            (local.get $0)
           )
           (i32.const -1)
          )
         )
         (br_if $__rjti$5
          (i32.eqz
           (local.get $1)
          )
         )
         (br $__rjti$6)
        )
       )
      )
      (br_if $__rjti$5
       (i32.eqz
        (local.get $1)
       )
      )
      (br $__rjti$6)
     )
     (i32.store
      (i32.const 53312)
      (i32.const 28)
     )
     (call $___shlim
      (local.get $0)
      (i64.const 0)
     )
     (br $do-once4
      (f64.const 0)
     )
    )
    (drop
     (br_if $do-once4
      (f64.mul
       (f64.convert_i32_s
        (local.get $4)
       )
       (f64.const 0)
      )
      (i32.eqz
       (local.tee $0
        (i32.load
         (local.get $10)
        )
       )
      )
     )
    )
    (if
     (i32.and
      (i64.eq
       (local.get $13)
       (local.get $19)
      )
      (i64.lt_s
       (local.get $19)
       (i64.const 10)
      )
     )
     (drop
      (br_if $do-once4
       (f64.mul
        (f64.convert_i32_s
         (local.get $4)
        )
        (f64.convert_i32_u
         (local.get $0)
        )
       )
       (i32.or
        (i32.eqz
         (i32.shr_u
          (local.get $0)
          (local.get $2)
         )
        )
        (i32.gt_s
         (local.get $2)
         (i32.const 30)
        )
       )
      )
     )
    )
    (if
     (i64.gt_s
      (local.get $13)
      (i64.extend_i32_s
       (i32.div_s
        (local.get $3)
        (i32.const -2)
       )
      )
     )
     (block
      (i32.store
       (i32.const 53312)
       (i32.const 68)
      )
      (br $do-once4
       (f64.mul
        (f64.mul
         (f64.convert_i32_s
          (local.get $4)
         )
         (f64.const 1797693134862315708145274e284)
        )
        (f64.const 1797693134862315708145274e284)
       )
      )
     )
    )
    (if
     (i64.lt_s
      (local.get $13)
      (i64.extend_i32_s
       (i32.add
        (local.get $3)
        (i32.const -106)
       )
      )
     )
     (block
      (i32.store
       (i32.const 53312)
       (i32.const 68)
      )
      (br $do-once4
       (f64.mul
        (f64.mul
         (f64.convert_i32_s
          (local.get $4)
         )
         (f64.const 2.2250738585072014e-308)
        )
        (f64.const 2.2250738585072014e-308)
       )
      )
     )
    )
    (local.set $0
     (if (result i32)
      (local.get $11)
      (block (result i32)
       (if
        (i32.lt_s
         (local.get $11)
         (i32.const 9)
        )
        (block
         (local.set $1
          (i32.load
           (local.tee $5
            (i32.add
             (i32.shl
              (local.get $9)
              (i32.const 2)
             )
             (local.get $10)
            )
           )
          )
         )
         (loop $while-in7
          (local.set $1
           (i32.mul
            (local.get $1)
            (i32.const 10)
           )
          )
          (local.set $0
           (i32.add
            (local.get $11)
            (i32.const 1)
           )
          )
          (if
           (i32.lt_s
            (local.get $11)
            (i32.const 8)
           )
           (block
            (local.set $11
             (local.get $0)
            )
            (br $while-in7)
           )
          )
         )
         (i32.store
          (local.get $5)
          (local.get $1)
         )
        )
       )
       (i32.add
        (local.get $9)
        (i32.const 1)
       )
      )
      (local.get $9)
     )
    )
    (local.set $5
     (i32.wrap_i64
      (local.get $13)
     )
    )
    (if
     (i32.lt_s
      (local.get $16)
      (i32.const 9)
     )
     (if
      (i32.and
       (i32.lt_s
        (local.get $5)
        (i32.const 18)
       )
       (i32.le_s
        (local.get $16)
        (local.get $5)
       )
      )
      (block
       (if
        (i32.eq
         (local.get $5)
         (i32.const 9)
        )
        (br $do-once4
         (f64.mul
          (f64.convert_i32_s
           (local.get $4)
          )
          (f64.convert_i32_u
           (i32.load
            (local.get $10)
           )
          )
         )
        )
       )
       (if
        (i32.lt_s
         (local.get $5)
         (i32.const 9)
        )
        (br $do-once4
         (f64.div
          (f64.mul
           (f64.convert_i32_s
            (local.get $4)
           )
           (f64.convert_i32_u
            (i32.load
             (local.get $10)
            )
           )
          )
          (f64.convert_i32_s
           (i32.load
            (i32.add
             (i32.shl
              (i32.sub
               (i32.const 0)
               (local.get $5)
              )
              (i32.const 2)
             )
             (i32.const 33120)
            )
           )
          )
         )
        )
       )
       (if
        (i32.or
         (i32.gt_s
          (local.tee $1
           (i32.add
            (i32.add
             (local.get $2)
             (i32.const 27)
            )
            (i32.mul
             (local.get $5)
             (i32.const -3)
            )
           )
          )
          (i32.const 30)
         )
         (i32.eqz
          (i32.shr_u
           (local.tee $7
            (i32.load
             (local.get $10)
            )
           )
           (local.get $1)
          )
         )
        )
        (br $do-once4
         (f64.mul
          (f64.mul
           (f64.convert_i32_s
            (local.get $4)
           )
           (f64.convert_i32_u
            (local.get $7)
           )
          )
          (f64.convert_i32_s
           (i32.load
            (i32.add
             (i32.shl
              (local.get $5)
              (i32.const 2)
             )
             (i32.const 33048)
            )
           )
          )
         )
        )
       )
      )
     )
    )
    (loop $while-in9
     (if
      (i32.eqz
       (i32.load
        (i32.add
         (i32.shl
          (local.tee $1
           (i32.add
            (local.get $0)
            (i32.const -1)
           )
          )
          (i32.const 2)
         )
         (local.get $10)
        )
       )
      )
      (block
       (local.set $0
        (local.get $1)
       )
       (br $while-in9)
      )
     )
    )
    (local.set $1
     (if (result i32)
      (local.tee $1
       (i32.rem_s
        (local.get $5)
        (i32.const 9)
       )
      )
      (block (result i32)
       (local.set $6
        (i32.load
         (i32.add
          (i32.shl
           (i32.sub
            (i32.const 0)
            (local.tee $14
             (select
              (local.get $1)
              (i32.add
               (local.get $1)
               (i32.const 9)
              )
              (i32.gt_s
               (local.get $5)
               (i32.const -1)
              )
             )
            )
           )
           (i32.const 2)
          )
          (i32.const 33120)
         )
        )
       )
       (local.set $0
        (if (result i32)
         (local.get $0)
         (block (result i32)
          (local.set $11
           (i32.div_s
            (i32.const 1000000000)
            (local.get $6)
           )
          )
          (local.set $9
           (i32.const 0)
          )
          (local.set $1
           (i32.const 0)
          )
          (local.set $7
           (i32.const 0)
          )
          (loop $while-in11
           (local.set $8
            (i32.add
             (local.get $9)
             (local.tee $16
              (i32.div_u
               (local.tee $17
                (i32.load
                 (local.tee $18
                  (i32.add
                   (i32.shl
                    (local.get $7)
                    (i32.const 2)
                   )
                   (local.get $10)
                  )
                 )
                )
               )
               (local.get $6)
              )
             )
            )
           )
           (i32.store
            (local.get $18)
            (local.get $8)
           )
           (local.set $9
            (i32.mul
             (local.get $11)
             (i32.sub
              (local.get $17)
              (i32.mul
               (local.get $6)
               (local.get $16)
              )
             )
            )
           )
           (local.set $5
            (select
             (i32.add
              (local.get $5)
              (i32.const -9)
             )
             (local.get $5)
             (local.tee $8
              (i32.and
               (i32.eqz
                (local.get $8)
               )
               (i32.eq
                (local.get $1)
                (local.get $7)
               )
              )
             )
            )
           )
           (local.set $1
            (select
             (i32.and
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
              (i32.const 127)
             )
             (local.get $1)
             (local.get $8)
            )
           )
           (br_if $while-in11
            (i32.ne
             (local.tee $7
              (i32.add
               (local.get $7)
               (i32.const 1)
              )
             )
             (local.get $0)
            )
           )
          )
          (if (result i32)
           (local.get $9)
           (block (result i32)
            (i32.store
             (i32.add
              (i32.shl
               (local.get $0)
               (i32.const 2)
              )
              (local.get $10)
             )
             (local.get $9)
            )
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (local.get $0)
          )
         )
         (block (result i32)
          (local.set $1
           (i32.const 0)
          )
          (i32.const 0)
         )
        )
       )
       (local.set $7
        (local.get $1)
       )
       (i32.add
        (local.get $5)
        (i32.sub
         (i32.const 9)
         (local.get $14)
        )
       )
      )
      (block (result i32)
       (local.set $7
        (i32.const 0)
       )
       (local.get $5)
      )
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (loop $label$continue$L107
     (block $label$break$L107
      (local.set $14
       (i32.lt_s
        (local.get $1)
        (i32.const 18)
       )
      )
      (local.set $18
       (i32.eq
        (local.get $1)
        (i32.const 18)
       )
      )
      (local.set $17
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $10)
       )
      )
      (loop $while-in13
       (if
        (i32.eqz
         (local.get $14)
        )
        (block
         (br_if $label$break$L107
          (i32.eqz
           (local.get $18)
          )
         )
         (if
          (i32.ge_u
           (i32.load
            (local.get $17)
           )
           (i32.const 9007199)
          )
          (block
           (local.set $1
            (i32.const 18)
           )
           (br $label$break$L107)
          )
         )
        )
       )
       (local.set $11
        (i32.const 0)
       )
       (local.set $9
        (i32.add
         (local.get $0)
         (i32.const 127)
        )
       )
       (loop $while-in15
        (local.set $9
         (i32.wrap_i64
          (local.tee $13
           (i64.add
            (i64.extend_i32_u
             (local.get $11)
            )
            (i64.shl
             (i64.extend_i32_u
              (i32.load
               (local.tee $6
                (i32.add
                 (i32.shl
                  (local.tee $8
                   (i32.and
                    (local.get $9)
                    (i32.const 127)
                   )
                  )
                  (i32.const 2)
                 )
                 (local.get $10)
                )
               )
              )
             )
             (i64.const 29)
            )
           )
          )
         )
        )
        (if
         (i64.gt_u
          (local.get $13)
          (i64.const 1000000000)
         )
         (block
          (local.set $11
           (i32.wrap_i64
            (local.tee $19
             (i64.div_u
              (local.get $13)
              (i64.const 1000000000)
             )
            )
           )
          )
          (local.set $9
           (i32.wrap_i64
            (i64.sub
             (local.get $13)
             (i64.mul
              (local.get $19)
              (i64.const 1000000000)
             )
            )
           )
          )
         )
         (local.set $11
          (i32.const 0)
         )
        )
        (i32.store
         (local.get $6)
         (local.get $9)
        )
        (local.set $6
         (select
          (local.get $0)
          (select
           (local.get $0)
           (local.get $8)
           (local.get $9)
          )
          (i32.or
           (local.tee $16
            (i32.eq
             (local.get $7)
             (local.get $8)
            )
           )
           (i32.ne
            (local.get $8)
            (i32.and
             (i32.add
              (local.get $0)
              (i32.const 127)
             )
             (i32.const 127)
            )
           )
          )
         )
        )
        (local.set $9
         (i32.add
          (local.get $8)
          (i32.const -1)
         )
        )
        (if
         (i32.eqz
          (local.get $16)
         )
         (block
          (local.set $0
           (local.get $6)
          )
          (br $while-in15)
         )
        )
       )
       (local.set $5
        (i32.add
         (local.get $5)
         (i32.const -29)
        )
       )
       (br_if $while-in13
        (i32.eqz
         (local.get $11)
        )
       )
      )
      (local.set $8
       (i32.and
        (i32.add
         (local.get $6)
         (i32.const 127)
        )
        (i32.const 127)
       )
      )
      (local.set $9
       (i32.add
        (i32.shl
         (i32.and
          (i32.add
           (local.get $6)
           (i32.const 126)
          )
          (i32.const 127)
         )
         (i32.const 2)
        )
        (local.get $10)
       )
      )
      (if
       (i32.eq
        (local.tee $7
         (i32.and
          (i32.add
           (local.get $7)
           (i32.const 127)
          )
          (i32.const 127)
         )
        )
        (local.get $6)
       )
       (block
        (i32.store
         (local.get $9)
         (i32.or
          (i32.load
           (i32.add
            (i32.shl
             (local.get $8)
             (i32.const 2)
            )
            (local.get $10)
           )
          )
          (i32.load
           (local.get $9)
          )
         )
        )
        (local.set $0
         (local.get $8)
        )
       )
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $10)
       )
       (local.get $11)
      )
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 9)
       )
      )
      (br $label$continue$L107)
     )
    )
    (loop $label$continue$L126
     (block $label$break$L126
      (local.set $6
       (i32.and
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
        (i32.const 127)
       )
      )
      (local.set $18
       (i32.add
        (i32.shl
         (i32.and
          (i32.add
           (local.get $0)
           (i32.const 127)
          )
          (i32.const 127)
         )
         (i32.const 2)
        )
        (local.get $10)
       )
      )
      (loop $while-in17
       (block $while-out16
        (local.set $9
         (i32.eq
          (local.get $1)
          (i32.const 18)
         )
        )
        (local.set $14
         (select
          (i32.const 9)
          (i32.const 1)
          (i32.gt_s
           (local.get $1)
           (i32.const 27)
          )
         )
        )
        (loop $while-in19
         (local.set $8
          (i32.const 0)
         )
         (block $__rjto$0
          (block $__rjti$0
           (loop $while-in21
            (block $while-out20
             (br_if $__rjti$0
              (i32.eq
               (local.get $0)
               (local.tee $11
                (i32.and
                 (i32.add
                  (local.get $7)
                  (local.get $8)
                 )
                 (i32.const 127)
                )
               )
              )
             )
             (br_if $__rjti$0
              (i32.lt_u
               (local.tee $11
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $11)
                   (i32.const 2)
                  )
                  (local.get $10)
                 )
                )
               )
               (local.tee $17
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.get $8)
                   (i32.const 2)
                  )
                  (i32.const 37380)
                 )
                )
               )
              )
             )
             (br_if $while-out20
              (i32.gt_u
               (local.get $11)
               (local.get $17)
              )
             )
             (br_if $__rjti$0
              (i32.ge_u
               (i32.add
                (local.get $8)
                (i32.const 1)
               )
               (i32.const 2)
              )
             )
             (local.set $8
              (i32.const 1)
             )
             (br $while-in21)
            )
           )
           (br $__rjto$0)
          )
          (br_if $label$break$L126
           (local.get $9)
          )
         )
         (local.set $5
          (i32.add
           (local.get $5)
           (local.get $14)
          )
         )
         (if
          (i32.eq
           (local.get $0)
           (local.get $7)
          )
          (block
           (local.set $7
            (local.get $0)
           )
           (br $while-in19)
          )
         )
        )
        (local.set $17
         (i32.add
          (i32.shl
           (i32.const 1)
           (local.get $14)
          )
          (i32.const -1)
         )
        )
        (local.set $16
         (i32.shr_u
          (i32.const 1000000000)
          (local.get $14)
         )
        )
        (local.set $11
         (i32.const 0)
        )
        (local.set $9
         (local.get $7)
        )
        (loop $while-in23
         (local.set $8
          (i32.add
           (local.get $11)
           (i32.shr_u
            (local.tee $25
             (i32.load
              (local.tee $24
               (i32.add
                (i32.shl
                 (local.get $9)
                 (i32.const 2)
                )
                (local.get $10)
               )
              )
             )
            )
            (local.get $14)
           )
          )
         )
         (i32.store
          (local.get $24)
          (local.get $8)
         )
         (local.set $11
          (i32.mul
           (local.get $16)
           (i32.and
            (local.get $17)
            (local.get $25)
           )
          )
         )
         (local.set $1
          (select
           (i32.add
            (local.get $1)
            (i32.const -9)
           )
           (local.get $1)
           (local.tee $8
            (i32.and
             (i32.eqz
              (local.get $8)
             )
             (i32.eq
              (local.get $7)
              (local.get $9)
             )
            )
           )
          )
         )
         (local.set $7
          (select
           (i32.and
            (i32.add
             (local.get $7)
             (i32.const 1)
            )
            (i32.const 127)
           )
           (local.get $7)
           (local.get $8)
          )
         )
         (br_if $while-in23
          (i32.ne
           (local.tee $9
            (i32.and
             (i32.add
              (local.get $9)
              (i32.const 1)
             )
             (i32.const 127)
            )
           )
           (local.get $0)
          )
         )
        )
        (if
         (local.get $11)
         (block
          (br_if $while-out16
           (i32.ne
            (local.get $6)
            (local.get $7)
           )
          )
          (i32.store
           (local.get $18)
           (i32.or
            (i32.load
             (local.get $18)
            )
            (i32.const 1)
           )
          )
         )
        )
        (br $while-in17)
       )
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (local.get $10)
       )
       (local.get $11)
      )
      (local.set $0
       (local.get $6)
      )
      (br $label$continue$L126)
     )
    )
    (local.set $1
     (i32.const 0)
    )
    (loop $while-in25
     (local.set $6
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
       (i32.const 127)
      )
     )
     (if
      (i32.eq
       (local.get $0)
       (local.tee $8
        (i32.and
         (i32.add
          (local.get $1)
          (local.get $7)
         )
         (i32.const 127)
        )
       )
      )
      (block
       (i32.store
        (i32.add
         (i32.shl
          (i32.add
           (local.get $6)
           (i32.const -1)
          )
          (i32.const 2)
         )
         (local.get $10)
        )
        (i32.const 0)
       )
       (local.set $0
        (local.get $6)
       )
      )
     )
     (local.set $12
      (f64.add
       (f64.mul
        (local.get $12)
        (f64.const 1e9)
       )
       (f64.convert_i32_u
        (i32.load
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 2)
          )
          (local.get $10)
         )
        )
       )
      )
     )
     (br_if $while-in25
      (i32.ne
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
    )
    (local.set $15
     (f64.mul
      (local.get $12)
      (local.tee $20
       (f64.convert_i32_s
        (local.get $4)
       )
      )
     )
    )
    (local.set $4
     (i32.lt_s
      (local.tee $3
       (i32.sub
        (local.tee $6
         (i32.add
          (local.get $5)
          (i32.const 53)
         )
        )
        (local.get $3)
       )
      )
      (local.get $2)
     )
    )
    (if
     (i32.lt_s
      (local.tee $1
       (select
        (select
         (local.get $3)
         (i32.const 0)
         (i32.gt_s
          (local.get $3)
          (i32.const 0)
         )
        )
        (local.get $2)
        (local.get $4)
       )
      )
      (i32.const 53)
     )
     (local.set $15
      (f64.add
       (local.tee $26
        (f64.reinterpret_i64
         (i64.or
          (i64.and
           (i64.reinterpret_f64
            (call $_scalbn
             (f64.const 1)
             (i32.sub
              (i32.const 105)
              (local.get $1)
             )
            )
           )
           (i64.const 9223372036854775807)
          )
          (i64.and
           (i64.reinterpret_f64
            (local.get $15)
           )
           (i64.const -9223372036854775808)
          )
         )
        )
       )
       (f64.sub
        (local.get $15)
        (local.tee $12
         (call $_fmodl
          (local.get $15)
          (call $_scalbn
           (f64.const 1)
           (i32.sub
            (i32.const 53)
            (local.get $1)
           )
          )
         )
        )
       )
      )
     )
     (local.set $12
      (f64.const 0)
     )
    )
    (if
     (i32.ne
      (local.tee $2
       (i32.and
        (i32.add
         (local.get $7)
         (i32.const 2)
        )
        (i32.const 127)
       )
      )
      (local.get $0)
     )
     (block
      (block $do-once26
       (local.set $12
        (if (result f64)
         (i32.lt_u
          (local.tee $2
           (i32.load
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $10)
            )
           )
          )
          (i32.const 500000000)
         )
         (block (result f64)
          (br_if $do-once26
           (select
            (i32.eqz
             (local.get $2)
            )
            (i32.const 0)
            (i32.eq
             (local.get $0)
             (i32.and
              (i32.add
               (local.get $7)
               (i32.const 3)
              )
              (i32.const 127)
             )
            )
           )
          )
          (f64.add
           (f64.mul
            (local.get $20)
            (f64.const 0.25)
           )
           (local.get $12)
          )
         )
         (block (result f64)
          (if
           (i32.ne
            (local.get $2)
            (i32.const 500000000)
           )
           (block
            (local.set $12
             (f64.add
              (f64.mul
               (local.get $20)
               (f64.const 0.75)
              )
              (local.get $12)
             )
            )
            (br $do-once26)
           )
          )
          (if (result f64)
           (i32.eq
            (local.get $0)
            (i32.and
             (i32.add
              (local.get $7)
              (i32.const 3)
             )
             (i32.const 127)
            )
           )
           (f64.add
            (f64.mul
             (local.get $20)
             (f64.const 0.5)
            )
            (local.get $12)
           )
           (f64.add
            (f64.mul
             (local.get $20)
             (f64.const 0.75)
            )
            (local.get $12)
           )
          )
         )
        )
       )
      )
      (local.set $12
       (if (result f64)
        (i32.gt_s
         (i32.sub
          (i32.const 53)
          (local.get $1)
         )
         (i32.const 1)
        )
        (if (result f64)
         (f64.eq
          (call $_fmodl
           (local.get $12)
           (f64.const 1)
          )
          (f64.const 0)
         )
         (f64.add
          (local.get $12)
          (f64.const 1)
         )
         (local.get $12)
        )
        (local.get $12)
       )
      )
     )
    )
    (local.set $15
     (f64.sub
      (f64.add
       (local.get $15)
       (local.get $12)
      )
      (local.get $26)
     )
    )
    (call $_scalbnl
     (if (result f64)
      (i32.gt_s
       (i32.and
        (local.get $6)
        (i32.const 2147483647)
       )
       (i32.sub
        (i32.const -2)
        (local.get $21)
       )
      )
      (block $do-once28 (result f64)
       (local.set $5
        (i32.add
         (local.get $5)
         (i32.xor
          (local.tee $0
           (i32.eqz
            (f64.ge
             (f64.abs
              (local.get $15)
             )
             (f64.const 9007199254740992)
            )
           )
          )
          (i32.const 1)
         )
        )
       )
       (local.set $15
        (select
         (local.get $15)
         (f64.mul
          (local.get $15)
          (f64.const 0.5)
         )
         (local.get $0)
        )
       )
       (if
        (i32.le_s
         (i32.add
          (local.get $5)
          (i32.const 50)
         )
         (local.get $22)
        )
        (drop
         (br_if $do-once28
          (local.get $15)
          (i32.eqz
           (i32.and
            (i32.and
             (local.get $4)
             (i32.or
              (local.get $0)
              (i32.ne
               (local.get $1)
               (local.get $3)
              )
             )
            )
            (f64.ne
             (local.get $12)
             (f64.const 0)
            )
           )
          )
         )
        )
       )
       (i32.store
        (i32.const 53312)
        (i32.const 68)
       )
       (local.get $15)
      )
      (local.get $15)
     )
     (local.get $5)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
  (local.get $12)
 )
 (func $_scanexp (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (block $__rjto$1 (result i64)
   (block $__rjti$1
    (block $__rjti$0
     (block $switch-default
      (block $switch-case0
       (br_table $switch-case0 $switch-default $switch-case0 $switch-default
        (i32.sub
         (local.tee $2
          (if (result i32)
           (i32.lt_u
            (local.tee $2
             (i32.load offset=4
              (local.get $0)
             )
            )
            (i32.load offset=104
             (local.get $0)
            )
           )
           (block (result i32)
            (i32.store offset=4
             (local.get $0)
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (i32.load8_u
             (local.get $2)
            )
           )
           (call $___shgetc
            (local.get $0)
           )
          )
         )
         (i32.const 43)
        )
       )
      )
      (local.set $3
       (if (result i32)
        (i32.lt_u
         (local.tee $3
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.load offset=104
          (local.get $0)
         )
        )
        (block (result i32)
         (i32.store offset=4
          (local.get $0)
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.load8_u
          (local.get $3)
         )
        )
        (call $___shgetc
         (local.get $0)
        )
       )
      )
      (local.set $5
       (i32.eq
        (local.get $2)
        (i32.const 45)
       )
      )
      (br $__rjto$1
       (if (result i64)
        (i32.and
         (i32.ne
          (local.get $1)
          (i32.const 0)
         )
         (i32.gt_u
          (local.tee $2
           (i32.add
            (local.get $3)
            (i32.const -48)
           )
          )
          (i32.const 9)
         )
        )
        (if (result i64)
         (i32.load offset=104
          (local.get $0)
         )
         (block
          (i32.store offset=4
           (local.get $0)
           (i32.add
            (i32.load offset=4
             (local.get $0)
            )
            (i32.const -1)
           )
          )
          (br $__rjti$1)
         )
         (i64.const -9223372036854775808)
        )
        (block
         (local.set $1
          (local.get $3)
         )
         (br $__rjti$0)
        )
       )
      )
     )
     (local.set $2
      (i32.add
       (local.tee $1
        (local.get $2)
       )
       (i32.const -48)
      )
     )
    )
    (br_if $__rjti$1
     (i32.gt_u
      (local.get $2)
      (i32.const 9)
     )
    )
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in
     (local.set $2
      (i32.add
       (i32.add
        (local.get $1)
        (i32.const -48)
       )
       (i32.mul
        (local.get $2)
        (i32.const 10)
       )
      )
     )
     (br_if $while-in
      (i32.and
       (i32.lt_s
        (local.get $2)
        (i32.const 214748364)
       )
       (i32.lt_u
        (local.tee $3
         (i32.add
          (local.tee $1
           (if (result i32)
            (i32.lt_u
             (local.tee $1
              (i32.load offset=4
               (local.get $0)
              )
             )
             (i32.load offset=104
              (local.get $0)
             )
            )
            (block (result i32)
             (i32.store offset=4
              (local.get $0)
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.load8_u
              (local.get $1)
             )
            )
            (call $___shgetc
             (local.get $0)
            )
           )
          )
          (i32.const -48)
         )
        )
        (i32.const 10)
       )
      )
     )
    )
    (local.set $4
     (i64.extend_i32_s
      (local.get $2)
     )
    )
    (if
     (i32.lt_u
      (local.get $3)
      (i32.const 10)
     )
     (block
      (loop $while-in2
       (local.set $4
        (i64.add
         (i64.add
          (i64.extend_i32_s
           (local.get $1)
          )
          (i64.const -48)
         )
         (i64.mul
          (local.get $4)
          (i64.const 10)
         )
        )
       )
       (br_if $while-in2
        (i32.and
         (i32.lt_u
          (local.tee $2
           (i32.add
            (local.tee $1
             (if (result i32)
              (i32.lt_u
               (local.tee $1
                (i32.load offset=4
                 (local.get $0)
                )
               )
               (i32.load offset=104
                (local.get $0)
               )
              )
              (block (result i32)
               (i32.store offset=4
                (local.get $0)
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (i32.load8_u
                (local.get $1)
               )
              )
              (call $___shgetc
               (local.get $0)
              )
             )
            )
            (i32.const -48)
           )
          )
          (i32.const 10)
         )
         (i64.lt_s
          (local.get $4)
          (i64.const 92233720368547758)
         )
        )
       )
      )
      (if
       (i32.lt_u
        (local.get $2)
        (i32.const 10)
       )
       (loop $while-in4
        (br_if $while-in4
         (i32.lt_u
          (i32.add
           (if (result i32)
            (i32.lt_u
             (local.tee $1
              (i32.load offset=4
               (local.get $0)
              )
             )
             (i32.load offset=104
              (local.get $0)
             )
            )
            (block (result i32)
             (i32.store offset=4
              (local.get $0)
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.load8_u
              (local.get $1)
             )
            )
            (call $___shgetc
             (local.get $0)
            )
           )
           (i32.const -48)
          )
          (i32.const 10)
         )
        )
       )
      )
     )
    )
    (if
     (i32.load offset=104
      (local.get $0)
     )
     (i32.store offset=4
      (local.get $0)
      (i32.add
       (i32.load offset=4
        (local.get $0)
       )
       (i32.const -1)
      )
     )
    )
    (br $__rjto$1
     (select
      (i64.sub
       (i64.const 0)
       (local.get $4)
      )
      (local.get $4)
      (local.get $5)
     )
    )
   )
   (if
    (i32.load offset=104
     (local.get $0)
    )
    (i32.store offset=4
     (local.get $0)
     (i32.add
      (i32.load offset=4
       (local.get $0)
      )
      (i32.const -1)
     )
    )
   )
   (i64.const -9223372036854775808)
  )
 )
 (func $_scalbn (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 1023)
   )
   (block
    (local.set $0
     (select
      (f64.mul
       (local.tee $0
        (f64.mul
         (local.get $0)
         (f64.const 8988465674311579538646525e283)
        )
       )
       (f64.const 8988465674311579538646525e283)
      )
      (local.get $0)
      (local.tee $2
       (i32.gt_s
        (local.get $1)
        (i32.const 2046)
       )
      )
     )
    )
    (local.set $1
     (select
      (select
       (local.tee $3
        (i32.add
         (local.get $1)
         (i32.const -2046)
        )
       )
       (i32.const 1023)
       (i32.lt_s
        (local.get $3)
        (i32.const 1023)
       )
      )
      (i32.add
       (local.get $1)
       (i32.const -1023)
      )
      (local.get $2)
     )
    )
   )
   (if
    (i32.lt_s
     (local.get $1)
     (i32.const -1022)
    )
    (block
     (local.set $0
      (select
       (f64.mul
        (local.tee $0
         (f64.mul
          (local.get $0)
          (f64.const 2.2250738585072014e-308)
         )
        )
        (f64.const 2.2250738585072014e-308)
       )
       (local.get $0)
       (local.tee $2
        (i32.lt_s
         (local.get $1)
         (i32.const -2044)
        )
       )
      )
     )
     (local.set $1
      (select
       (select
        (local.tee $3
         (i32.add
          (local.get $1)
          (i32.const 2044)
         )
        )
        (i32.const -1022)
        (i32.gt_s
         (local.get $3)
         (i32.const -1022)
        )
       )
       (i32.add
        (local.get $1)
        (i32.const 1022)
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (f64.mul
   (local.get $0)
   (f64.reinterpret_i64
    (i64.shl
     (i64.extend_i32_u
      (i32.add
       (local.get $1)
       (i32.const 1023)
      )
     )
     (i64.const 52)
    )
   )
  )
 )
 (func $_fmodl (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (call $_fmod
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_scalbnl (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (call $_scalbn
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_fmod (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 i32)
  (local $9 i64)
  (local.set $3
   (i32.and
    (i32.wrap_i64
     (i64.shr_u
      (local.tee $6
       (i64.reinterpret_f64
        (local.get $0)
       )
      )
      (i64.const 52)
     )
    )
    (i32.const 2047)
   )
  )
  (local.set $8
   (i32.and
    (i32.wrap_i64
     (i64.shr_u
      (local.tee $4
       (i64.reinterpret_f64
        (local.get $1)
       )
      )
      (i64.const 52)
     )
    )
    (i32.const 2047)
   )
  )
  (local.set $9
   (i64.and
    (local.get $6)
    (i64.const -9223372036854775808)
   )
  )
  (block $__rjto$0 (result f64)
   (block $__rjti$0
    (br_if $__rjti$0
     (i64.eqz
      (local.tee $2
       (i64.shl
        (local.get $4)
        (i64.const 1)
       )
      )
     )
    )
    (br $__rjto$0
     (block $label$break$L1 (result f64)
      (br_if $__rjti$0
       (i32.or
        (i32.eq
         (local.get $3)
         (i32.const 2047)
        )
        (i64.gt_u
         (i64.and
          (i64.reinterpret_f64
           (local.get $1)
          )
          (i64.const 9223372036854775807)
         )
         (i64.const 9218868437227405312)
        )
       )
      )
      (if
       (i64.le_u
        (local.tee $7
         (i64.shl
          (local.get $6)
          (i64.const 1)
         )
        )
        (local.get $2)
       )
       (return
        (select
         (f64.mul
          (local.get $0)
          (f64.const 0)
         )
         (local.get $0)
         (i64.eq
          (local.get $2)
          (local.get $7)
         )
        )
       )
      )
      (local.set $5
       (i64.gt_s
        (local.tee $2
         (i64.sub
          (local.tee $7
           (if (result i64)
            (local.get $3)
            (i64.or
             (i64.and
              (local.get $6)
              (i64.const 4503599627370495)
             )
             (i64.const 4503599627370496)
            )
            (block (result i64)
             (if
              (i64.gt_s
               (local.tee $2
                (i64.shl
                 (local.get $6)
                 (i64.const 12)
                )
               )
               (i64.const -1)
              )
              (block
               (local.set $3
                (i32.const 0)
               )
               (loop $while-in
                (local.set $3
                 (i32.add
                  (local.get $3)
                  (i32.const -1)
                 )
                )
                (br_if $while-in
                 (i64.gt_s
                  (local.tee $2
                   (i64.shl
                    (local.get $2)
                    (i64.const 1)
                   )
                  )
                  (i64.const -1)
                 )
                )
               )
              )
              (local.set $3
               (i32.const 0)
              )
             )
             (i64.shl
              (local.get $6)
              (i64.extend_i32_u
               (i32.sub
                (i32.const 1)
                (local.get $3)
               )
              )
             )
            )
           )
          )
          (local.tee $4
           (if (result i64)
            (local.get $8)
            (i64.or
             (i64.and
              (local.get $4)
              (i64.const 4503599627370495)
             )
             (i64.const 4503599627370496)
            )
            (block (result i64)
             (if
              (i64.gt_s
               (local.tee $2
                (i64.shl
                 (local.get $4)
                 (i64.const 12)
                )
               )
               (i64.const -1)
              )
              (loop $while-in1
               (local.set $5
                (i32.add
                 (local.get $5)
                 (i32.const -1)
                )
               )
               (br_if $while-in1
                (i64.gt_s
                 (local.tee $2
                  (i64.shl
                   (local.get $2)
                   (i64.const 1)
                  )
                 )
                 (i64.const -1)
                )
               )
              )
             )
             (i64.shl
              (local.get $4)
              (i64.extend_i32_u
               (i32.sub
                (i32.const 1)
                (local.tee $8
                 (local.get $5)
                )
               )
              )
             )
            )
           )
          )
         )
        )
        (i64.const -1)
       )
      )
      (if
       (i32.gt_s
        (local.get $3)
        (local.get $8)
       )
       (block $label$break$L25
        (loop $while-in4
         (block $while-out3
          (if
           (local.get $5)
           (br_if $while-out3
            (i64.eqz
             (local.get $2)
            )
           )
           (local.set $2
            (local.get $7)
           )
          )
          (local.set $5
           (i64.gt_s
            (local.tee $2
             (i64.sub
              (local.tee $7
               (i64.shl
                (local.get $2)
                (i64.const 1)
               )
              )
              (local.get $4)
             )
            )
            (i64.const -1)
           )
          )
          (br_if $while-in4
           (i32.gt_s
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
            )
            (local.get $8)
           )
          )
          (br $label$break$L25)
         )
        )
        (br $label$break$L1
         (f64.mul
          (local.get $0)
          (f64.const 0)
         )
        )
       )
      )
      (if
       (local.get $5)
       (drop
        (br_if $label$break$L1
         (f64.mul
          (local.get $0)
          (f64.const 0)
         )
         (i64.eqz
          (local.get $2)
         )
        )
       )
       (local.set $2
        (local.get $7)
       )
      )
      (if
       (i64.lt_u
        (local.get $2)
        (i64.const 4503599627370496)
       )
       (loop $while-in6
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const -1)
         )
        )
        (br_if $while-in6
         (i64.lt_u
          (local.tee $2
           (i64.shl
            (local.get $2)
            (i64.const 1)
           )
          )
          (i64.const 4503599627370496)
         )
        )
       )
      )
      (f64.reinterpret_i64
       (i64.or
        (if (result i64)
         (i32.gt_s
          (local.get $3)
          (i32.const 0)
         )
         (i64.or
          (i64.add
           (local.get $2)
           (i64.const -4503599627370496)
          )
          (i64.shl
           (i64.extend_i32_u
            (local.get $3)
           )
           (i64.const 52)
          )
         )
         (i64.shr_u
          (local.get $2)
          (i64.extend_i32_u
           (i32.sub
            (i32.const 1)
            (local.get $3)
           )
          )
         )
        )
        (local.get $9)
       )
      )
     )
    )
   )
   (f64.div
    (local.tee $0
     (f64.mul
      (local.get $0)
      (local.get $1)
     )
    )
    (local.get $0)
   )
  )
 )
 (func $___uflow (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (call $___toread
     (local.get $0)
    )
    (i32.const -1)
    (block (result i32)
     (local.set $2
      (i32.load offset=32
       (local.get $0)
      )
     )
     (if (result i32)
      (i32.eq
       (call_indirect (type $i32_i32_i32_=>_i32)
        (local.get $0)
        (local.get $1)
        (i32.const 1)
        (i32.add
         (i32.and
          (local.get $2)
          (i32.const 31)
         )
         (i32.const 82)
        )
       )
       (i32.const 1)
      )
      (i32.load8_u
       (local.get $1)
      )
      (i32.const -1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $___toread (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (i32.store8 offset=74
   (local.get $0)
   (i32.or
    (local.tee $1
     (i32.load8_s offset=74
      (local.get $0)
     )
    )
    (i32.add
     (local.get $1)
     (i32.const 255)
    )
   )
  )
  (if
   (i32.gt_u
    (i32.load offset=20
     (local.get $0)
    )
    (i32.load offset=28
     (local.get $0)
    )
   )
   (block
    (local.set $1
     (i32.load offset=36
      (local.get $0)
     )
    )
    (drop
     (call_indirect (type $i32_i32_i32_=>_i32)
      (local.get $0)
      (i32.const 0)
      (i32.const 0)
      (i32.add
       (i32.and
        (local.get $1)
        (i32.const 31)
       )
       (i32.const 82)
      )
     )
    )
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=28
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=20
   (local.get $0)
   (i32.const 0)
  )
  (if (result i32)
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 4)
   )
   (block (result i32)
    (i32.store
     (local.get $0)
     (i32.or
      (local.get $1)
      (i32.const 32)
     )
    )
    (i32.const -1)
   )
   (block (result i32)
    (i32.store offset=8
     (local.get $0)
     (local.tee $2
      (i32.add
       (i32.load offset=44
        (local.get $0)
       )
       (i32.load offset=48
        (local.get $0)
       )
      )
     )
    )
    (i32.store offset=4
     (local.get $0)
     (local.get $2)
    )
    (i32.shr_s
     (i32.shl
      (local.get $1)
      (i32.const 27)
     )
     (i32.const 31)
    )
   )
  )
 )
 (func $___string_read (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (call $_memchr
    (local.tee $3
     (i32.load offset=84
      (local.get $0)
     )
    )
    (local.tee $5
     (i32.add
      (local.get $2)
      (i32.const 256)
     )
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $1)
    (local.get $3)
    (local.tee $2
     (select
      (local.tee $1
       (select
        (i32.sub
         (local.get $4)
         (local.get $3)
        )
        (local.get $5)
        (local.get $4)
       )
      )
      (local.get $2)
      (i32.lt_u
       (local.get $1)
       (local.get $2)
      )
     )
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (local.get $2)
    (local.get $3)
   )
  )
  (i32.store offset=8
   (local.get $0)
   (local.tee $1
    (i32.add
     (local.get $1)
     (local.get $3)
    )
   )
  )
  (i32.store offset=84
   (local.get $0)
   (local.get $1)
  )
  (local.get $2)
 )
 (func $_memchr (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (block $label$break$L8
   (block $__rjti$1
    (if
     (i32.and
      (local.tee $2
       (i32.ne
        (local.get $1)
        (i32.const 0)
       )
      )
      (i32.ne
       (i32.and
        (local.get $0)
        (i32.const 3)
       )
       (i32.const 0)
      )
     )
     (loop $while-in
      (br_if $__rjti$1
       (i32.eqz
        (i32.load8_u
         (local.get $0)
        )
       )
      )
      (br_if $while-in
       (i32.and
        (local.tee $2
         (i32.ne
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const -1)
           )
          )
          (i32.const 0)
         )
        )
        (i32.ne
         (i32.and
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (i32.const 3)
         )
         (i32.const 0)
        )
       )
      )
     )
    )
    (br_if $__rjti$1
     (local.get $2)
    )
    (local.set $0
     (i32.const 0)
    )
    (br $label$break$L8)
   )
   (if
    (i32.load8_u
     (local.get $0)
    )
    (if
     (i32.gt_u
      (local.get $1)
      (i32.const 3)
     )
     (loop $while-in3
      (if
       (i32.eqz
        (i32.and
         (i32.add
          (local.tee $2
           (i32.load
            (local.get $0)
           )
          )
          (i32.const -16843009)
         )
         (i32.xor
          (i32.and
           (local.get $2)
           (i32.const -2139062144)
          )
          (i32.const -2139062144)
         )
        )
       )
       (block
        (local.set $0
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (br_if $while-in3
         (i32.gt_u
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const -4)
           )
          )
          (i32.const 3)
         )
        )
       )
      )
     )
    )
   )
   (local.set $0
    (if (result i32)
     (local.get $1)
     (loop $while-in5 (result i32)
      (br_if $label$break$L8
       (i32.eqz
        (i32.load8_u
         (local.get $0)
        )
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (br_if $while-in5
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
       )
      )
      (i32.const 0)
     )
     (i32.const 0)
    )
   )
  )
  (local.get $0)
 )
 (func $_fprintf (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (drop
   (call $_vfprintf
    (local.get $0)
    (i32.const 40921)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_vfprintf (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call $___vfprintf_internal
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_fmt_fp (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f64)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i64)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i64)
  (local $27 i64)
  (local $28 i32)
  (local.set $22
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 560)
   )
  )
  (local.set $6
   (i32.add
    (local.get $22)
    (i32.const 32)
   )
  )
  (local.set $18
   (local.tee $14
    (local.get $22)
   )
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $14)
     (i32.const 536)
    )
   )
   (i32.const 0)
  )
  (local.set $15
   (i32.add
    (local.tee $10
     (i32.add
      (local.get $14)
      (i32.const 540)
     )
    )
    (i32.const 12)
   )
  )
  (local.set $20
   (if (result i32)
    (i64.lt_s
     (local.tee $21
      (i64.reinterpret_f64
       (local.get $1)
      )
     )
     (i64.const 0)
    )
    (block (result i32)
     (local.set $21
      (i64.reinterpret_f64
       (local.tee $1
        (f64.neg
         (local.get $1)
        )
       )
      )
     )
     (local.set $19
      (i32.const 46479)
     )
     (i32.const 1)
    )
    (block (result i32)
     (local.set $19
      (select
       (i32.const 46482)
       (select
        (i32.const 46485)
        (i32.const 46480)
        (i32.and
         (local.get $4)
         (i32.const 1)
        )
       )
       (i32.and
        (local.get $4)
        (i32.const 2048)
       )
      )
     )
     (i32.ne
      (i32.and
       (local.get $4)
       (i32.const 2049)
      )
      (i32.const 0)
     )
    )
   )
  )
  (local.set $0
   (if (result i32)
    (i64.eq
     (i64.and
      (local.get $21)
      (i64.const 9218868437227405312)
     )
     (i64.const 9218868437227405312)
    )
    (block (result i32)
     (local.set $5
      (select
       (select
        (i32.const 46506)
        (i32.const 46510)
        (local.tee $3
         (i32.ne
          (i32.and
           (local.get $5)
           (i32.const 32)
          )
          (i32.const 0)
         )
        )
       )
       (select
        (i32.const 46498)
        (i32.const 46502)
        (local.get $3)
       )
       (f64.ne
        (local.get $1)
        (local.get $1)
       )
      )
     )
     (call $_pad_575
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.tee $3
       (i32.add
        (local.get $20)
        (i32.const 3)
       )
      )
      (i32.and
       (local.get $4)
       (i32.const -65537)
      )
     )
     (call $_out_569
      (local.get $0)
      (local.get $19)
      (local.get $20)
     )
     (call $_out_569
      (local.get $0)
      (local.get $5)
      (i32.const 3)
     )
     (call $_pad_575
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.get $3)
      (i32.xor
       (local.get $4)
       (i32.const 8192)
      )
     )
     (local.get $3)
    )
    (block $do-once (result i32)
     (if
      (local.tee $7
       (f64.ne
        (local.tee $1
         (f64.mul
          (call $_frexp
           (local.get $1)
           (local.get $12)
          )
          (f64.const 2)
         )
        )
        (f64.const 0)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (i32.load
         (local.get $12)
        )
        (i32.const -1)
       )
      )
     )
     (if
      (i32.eq
       (local.tee $11
        (i32.or
         (local.get $5)
         (i32.const 32)
        )
       )
       (i32.const 97)
      )
      (block
       (local.set $8
        (select
         (i32.add
          (local.get $19)
          (i32.const 9)
         )
         (local.get $19)
         (local.tee $9
          (i32.and
           (local.get $5)
           (i32.const 32)
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.or
          (i32.eqz
           (local.tee $7
            (i32.sub
             (i32.const 12)
             (local.get $3)
            )
           )
          )
          (i32.gt_u
           (local.get $3)
           (i32.const 11)
          )
         )
        )
        (block
         (local.set $16
          (f64.const 8)
         )
         (loop $while-in
          (local.set $16
           (f64.mul
            (local.get $16)
            (f64.const 16)
           )
          )
          (br_if $while-in
           (local.tee $7
            (i32.add
             (local.get $7)
             (i32.const -1)
            )
           )
          )
         )
         (local.set $1
          (if (result f64)
           (i32.eq
            (i32.load8_s
             (local.get $8)
            )
            (i32.const 45)
           )
           (f64.neg
            (f64.add
             (local.get $16)
             (f64.sub
              (f64.neg
               (local.get $1)
              )
              (local.get $16)
             )
            )
           )
           (f64.sub
            (f64.add
             (local.get $1)
             (local.get $16)
            )
            (local.get $16)
           )
          )
         )
        )
       )
       (if
        (i32.eq
         (local.get $15)
         (local.tee $7
          (call $_fmt_u
           (i64.extend_i32_s
            (select
             (i32.sub
              (i32.const 0)
              (local.tee $6
               (i32.load
                (local.get $12)
               )
              )
             )
             (local.get $6)
             (i32.lt_s
              (local.get $6)
              (i32.const 0)
             )
            )
           )
           (local.get $15)
          )
         )
        )
        (i32.store8
         (local.tee $7
          (i32.add
           (local.get $10)
           (i32.const 11)
          )
         )
         (i32.const 48)
        )
       )
       (local.set $10
        (i32.or
         (local.get $20)
         (i32.const 2)
        )
       )
       (i32.store8
        (i32.add
         (local.get $7)
         (i32.const -1)
        )
        (i32.add
         (i32.and
          (i32.shr_s
           (local.get $6)
           (i32.const 31)
          )
          (i32.const 2)
         )
         (i32.const 43)
        )
       )
       (i32.store8
        (local.tee $7
         (i32.add
          (local.get $7)
          (i32.const -2)
         )
        )
        (i32.add
         (local.get $5)
         (i32.const 15)
        )
       )
       (local.set $12
        (i32.lt_s
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $13
        (i32.eqz
         (i32.and
          (local.get $4)
          (i32.const 8)
         )
        )
       )
       (local.set $5
        (local.get $14)
       )
       (loop $while-in3
        (i32.store8
         (local.get $5)
         (i32.or
          (local.get $9)
          (i32.load8_u
           (i32.add
            (local.tee $6
             (i32.trunc_f64_s
              (local.get $1)
             )
            )
            (i32.const 33856)
           )
          )
         )
        )
        (local.set $1
         (f64.mul
          (f64.sub
           (local.get $1)
           (f64.convert_i32_s
            (local.get $6)
           )
          )
          (f64.const 16)
         )
        )
        (local.set $5
         (if (result i32)
          (i32.eq
           (i32.sub
            (local.tee $6
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.get $18)
           )
           (i32.const 1)
          )
          (if (result i32)
           (i32.and
            (local.get $13)
            (i32.and
             (local.get $12)
             (f64.eq
              (local.get $1)
              (f64.const 0)
             )
            )
           )
           (local.get $6)
           (block (result i32)
            (i32.store8
             (local.get $6)
             (i32.const 46)
            )
            (i32.add
             (local.get $5)
             (i32.const 2)
            )
           )
          )
          (local.get $6)
         )
        )
        (br_if $while-in3
         (f64.ne
          (local.get $1)
          (f64.const 0)
         )
        )
       )
       (local.set $6
        (block $__rjto$0 (result i32)
         (block $__rjti$0
          (br_if $__rjti$0
           (i32.eqz
            (local.get $3)
           )
          )
          (br_if $__rjti$0
           (i32.ge_s
            (i32.add
             (local.get $5)
             (i32.sub
              (i32.const -2)
              (local.get $18)
             )
            )
            (local.get $3)
           )
          )
          (local.set $11
           (i32.sub
            (i32.add
             (local.get $15)
             (i32.add
              (local.get $3)
              (i32.const 2)
             )
            )
            (local.get $7)
           )
          )
          (br $__rjto$0
           (local.get $7)
          )
         )
         (local.set $11
          (i32.add
           (local.get $5)
           (i32.sub
            (i32.sub
             (local.get $15)
             (local.get $18)
            )
            (local.get $7)
           )
          )
         )
         (local.get $7)
        )
       )
       (call $_pad_575
        (local.get $0)
        (i32.const 32)
        (local.get $2)
        (local.tee $3
         (i32.add
          (local.get $10)
          (local.get $11)
         )
        )
        (local.get $4)
       )
       (call $_out_569
        (local.get $0)
        (local.get $8)
        (local.get $10)
       )
       (call $_pad_575
        (local.get $0)
        (i32.const 48)
        (local.get $2)
        (local.get $3)
        (i32.xor
         (local.get $4)
         (i32.const 65536)
        )
       )
       (call $_out_569
        (local.get $0)
        (local.get $14)
        (local.tee $5
         (i32.sub
          (local.get $5)
          (local.get $18)
         )
        )
       )
       (call $_pad_575
        (local.get $0)
        (i32.const 48)
        (i32.sub
         (local.get $11)
         (i32.add
          (local.get $5)
          (local.tee $6
           (i32.sub
            (local.get $15)
            (local.get $6)
           )
          )
         )
        )
        (i32.const 0)
        (i32.const 0)
       )
       (call $_out_569
        (local.get $0)
        (local.get $7)
        (local.get $6)
       )
       (call $_pad_575
        (local.get $0)
        (i32.const 32)
        (local.get $2)
        (local.get $3)
        (i32.xor
         (local.get $4)
         (i32.const 8192)
        )
       )
       (br $do-once
        (local.get $3)
       )
      )
     )
     (if
      (local.get $7)
      (block
       (i32.store
        (local.get $12)
        (local.tee $8
         (i32.add
          (i32.load
           (local.get $12)
          )
          (i32.const -28)
         )
        )
       )
       (local.set $1
        (f64.mul
         (local.get $1)
         (f64.const 268435456)
        )
       )
      )
      (local.set $8
       (i32.load
        (local.get $12)
       )
      )
     )
     (local.set $6
      (local.tee $10
       (select
        (local.get $6)
        (i32.add
         (local.get $6)
         (i32.const 288)
        )
        (i32.lt_s
         (local.get $8)
         (i32.const 0)
        )
       )
      )
     )
     (loop $while-in5
      (i32.store
       (local.get $6)
       (local.tee $7
        (i32.trunc_f64_u
         (local.get $1)
        )
       )
      )
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 4)
       )
      )
      (br_if $while-in5
       (f64.ne
        (local.tee $1
         (f64.mul
          (f64.sub
           (local.get $1)
           (f64.convert_i32_u
            (local.get $7)
           )
          )
          (f64.const 1e9)
         )
        )
        (f64.const 0)
       )
      )
     )
     (if
      (i32.gt_s
       (local.get $8)
       (i32.const 0)
      )
      (block
       (local.set $7
        (local.get $10)
       )
       (loop $while-in7
        (local.set $13
         (select
          (local.get $8)
          (i32.const 29)
          (i32.lt_s
           (local.get $8)
           (i32.const 29)
          )
         )
        )
        (if
         (i32.ge_u
          (local.tee $8
           (i32.add
            (local.get $6)
            (i32.const -4)
           )
          )
          (local.get $7)
         )
         (block
          (local.set $26
           (i64.extend_i32_u
            (local.get $13)
           )
          )
          (local.set $9
           (i32.const 0)
          )
          (loop $while-in9
           (local.set $21
            (i64.div_u
             (local.tee $27
              (i64.add
               (i64.extend_i32_u
                (local.get $9)
               )
               (i64.shl
                (i64.extend_i32_u
                 (i32.load
                  (local.get $8)
                 )
                )
                (local.get $26)
               )
              )
             )
             (i64.const 1000000000)
            )
           )
           (i64.store32
            (local.get $8)
            (i64.sub
             (local.get $27)
             (i64.mul
              (local.get $21)
              (i64.const 1000000000)
             )
            )
           )
           (local.set $9
            (i32.wrap_i64
             (local.get $21)
            )
           )
           (br_if $while-in9
            (i32.ge_u
             (local.tee $8
              (i32.add
               (local.get $8)
               (i32.const -4)
              )
             )
             (local.get $7)
            )
           )
          )
          (if
           (local.get $9)
           (i32.store
            (local.tee $7
             (i32.add
              (local.get $7)
              (i32.const -4)
             )
            )
            (local.get $9)
           )
          )
         )
        )
        (if
         (i32.gt_u
          (local.get $6)
          (local.get $7)
         )
         (block $label$break$L57
          (local.set $6
           (loop $while-in12 (result i32)
            (br_if $label$break$L57
             (i32.load
              (local.tee $8
               (i32.add
                (local.get $6)
                (i32.const -4)
               )
              )
             )
            )
            (if (result i32)
             (i32.gt_u
              (local.get $8)
              (local.get $7)
             )
             (block
              (local.set $6
               (local.get $8)
              )
              (br $while-in12)
             )
             (local.get $8)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $12)
         (local.tee $8
          (i32.sub
           (i32.load
            (local.get $12)
           )
           (local.get $13)
          )
         )
        )
        (br_if $while-in7
         (i32.gt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
      (local.set $7
       (local.get $10)
      )
     )
     (local.set $13
      (select
       (i32.const 6)
       (local.get $3)
       (i32.lt_s
        (local.get $3)
        (i32.const 0)
       )
      )
     )
     (if
      (i32.lt_s
       (local.get $8)
       (i32.const 0)
      )
      (block
       (local.set $17
        (i32.add
         (i32.div_s
          (i32.add
           (local.get $13)
           (i32.const 25)
          )
          (i32.const 9)
         )
         (i32.const 1)
        )
       )
       (local.set $23
        (i32.eq
         (local.get $11)
         (i32.const 102)
        )
       )
       (local.set $3
        (local.get $6)
       )
       (loop $while-in14
        (local.set $9
         (select
          (local.tee $6
           (i32.sub
            (i32.const 0)
            (local.get $8)
           )
          )
          (i32.const 9)
          (i32.lt_s
           (local.get $6)
           (i32.const 9)
          )
         )
        )
        (local.set $8
         (select
          (i32.add
           (local.tee $7
            (select
             (local.get $10)
             (local.tee $3
              (if (result i32)
               (i32.lt_u
                (local.get $7)
                (local.get $3)
               )
               (block (result i32)
                (local.set $24
                 (i32.add
                  (i32.shl
                   (i32.const 1)
                   (local.get $9)
                  )
                  (i32.const -1)
                 )
                )
                (local.set $25
                 (i32.shr_u
                  (i32.const 1000000000)
                  (local.get $9)
                 )
                )
                (local.set $8
                 (i32.const 0)
                )
                (local.set $6
                 (local.get $7)
                )
                (loop $while-in16
                 (i32.store
                  (local.get $6)
                  (i32.add
                   (local.get $8)
                   (i32.shr_u
                    (local.tee $28
                     (i32.load
                      (local.get $6)
                     )
                    )
                    (local.get $9)
                   )
                  )
                 )
                 (local.set $8
                  (i32.mul
                   (local.get $25)
                   (i32.and
                    (local.get $24)
                    (local.get $28)
                   )
                  )
                 )
                 (br_if $while-in16
                  (i32.lt_u
                   (local.tee $6
                    (i32.add
                     (local.get $6)
                     (i32.const 4)
                    )
                   )
                   (local.get $3)
                  )
                 )
                )
                (local.set $7
                 (select
                  (local.get $7)
                  (i32.add
                   (local.get $7)
                   (i32.const 4)
                  )
                  (i32.load
                   (local.get $7)
                  )
                 )
                )
                (local.set $6
                 (if (result i32)
                  (local.get $8)
                  (block (result i32)
                   (i32.store
                    (local.get $3)
                    (local.get $8)
                   )
                   (i32.add
                    (local.get $3)
                    (i32.const 4)
                   )
                  )
                  (local.get $3)
                 )
                )
                (local.get $7)
               )
               (block (result i32)
                (local.set $6
                 (local.get $3)
                )
                (select
                 (local.get $7)
                 (i32.add
                  (local.get $7)
                  (i32.const 4)
                 )
                 (i32.load
                  (local.get $7)
                 )
                )
               )
              )
             )
             (local.get $23)
            )
           )
           (i32.shl
            (local.get $17)
            (i32.const 2)
           )
          )
          (local.get $6)
          (i32.gt_s
           (i32.shr_s
            (i32.sub
             (local.get $6)
             (local.get $7)
            )
            (i32.const 2)
           )
           (local.get $17)
          )
         )
        )
        (i32.store
         (local.get $12)
         (local.tee $6
          (i32.add
           (local.get $9)
           (i32.load
            (local.get $12)
           )
          )
         )
        )
        (if
         (i32.lt_s
          (local.get $6)
          (i32.const 0)
         )
         (block
          (local.set $7
           (local.get $3)
          )
          (local.set $3
           (local.get $8)
          )
          (local.set $8
           (local.get $6)
          )
          (br $while-in14)
         )
        )
       )
      )
      (block
       (local.set $3
        (local.get $7)
       )
       (local.set $8
        (local.get $6)
       )
      )
     )
     (local.set $12
      (local.get $10)
     )
     (if
      (i32.lt_u
       (local.get $3)
       (local.get $8)
      )
      (block
       (local.set $7
        (i32.mul
         (i32.shr_s
          (i32.sub
           (local.get $12)
           (local.get $3)
          )
          (i32.const 2)
         )
         (i32.const 9)
        )
       )
       (if
        (i32.ge_u
         (local.tee $10
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 10)
        )
        (block
         (local.set $6
          (i32.const 10)
         )
         (loop $while-in18
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (br_if $while-in18
           (i32.ge_u
            (local.get $10)
            (local.tee $6
             (i32.mul
              (local.get $6)
              (i32.const 10)
             )
            )
           )
          )
         )
        )
       )
      )
      (local.set $7
       (i32.const 0)
      )
     )
     (local.set $10
      (if (result i32)
       (i32.lt_s
        (local.tee $6
         (i32.add
          (i32.sub
           (local.get $13)
           (select
            (i32.const 0)
            (local.get $7)
            (i32.eq
             (local.get $11)
             (i32.const 102)
            )
           )
          )
          (i32.shr_s
           (i32.shl
            (i32.and
             (local.tee $23
              (i32.eq
               (local.get $11)
               (i32.const 103)
              )
             )
             (local.tee $24
              (i32.ne
               (local.get $13)
               (i32.const 0)
              )
             )
            )
            (i32.const 31)
           )
           (i32.const 31)
          )
         )
        )
        (i32.add
         (i32.mul
          (i32.shr_s
           (i32.sub
            (local.get $8)
            (local.get $12)
           )
           (i32.const 2)
          )
          (i32.const 9)
         )
         (i32.const -9)
        )
       )
       (block (result i32)
        (local.set $9
         (i32.div_s
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const 9216)
           )
          )
          (i32.const 9)
         )
        )
        (if
         (i32.lt_s
          (local.tee $6
           (i32.sub
            (local.get $6)
            (i32.mul
             (local.get $9)
             (i32.const 9)
            )
           )
          )
          (i32.const 8)
         )
         (block
          (local.set $11
           (i32.const 10)
          )
          (loop $while-in20
           (local.set $10
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (local.set $11
            (i32.mul
             (local.get $11)
             (i32.const 10)
            )
           )
           (if
            (i32.lt_s
             (local.get $6)
             (i32.const 7)
            )
            (block
             (local.set $6
              (local.get $10)
             )
             (br $while-in20)
            )
           )
          )
         )
         (local.set $11
          (i32.const 10)
         )
        )
        (local.set $17
         (i32.div_u
          (local.tee $9
           (i32.load
            (local.tee $6
             (i32.add
              (i32.add
               (i32.shl
                (local.get $9)
                (i32.const 2)
               )
               (local.get $12)
              )
              (i32.const -4092)
             )
            )
           )
          )
          (local.get $11)
         )
        )
        (if
         (i32.eqz
          (i32.and
           (local.tee $25
            (i32.eq
             (local.get $8)
             (i32.add
              (local.get $6)
              (i32.const 4)
             )
            )
           )
           (i32.eqz
            (local.tee $10
             (i32.sub
              (local.get $9)
              (i32.mul
               (local.get $11)
               (local.get $17)
              )
             )
            )
           )
          )
         )
         (block
          (local.set $1
           (select
            (f64.const 9007199254740994)
            (f64.const 9007199254740992)
            (i32.and
             (local.get $17)
             (i32.const 1)
            )
           )
          )
          (local.set $16
           (select
            (f64.const 0.5)
            (select
             (f64.const 1)
             (f64.const 1.5)
             (i32.and
              (local.get $25)
              (i32.eq
               (local.get $10)
               (local.tee $17
                (i32.shr_u
                 (local.get $11)
                 (i32.const 1)
                )
               )
              )
             )
            )
            (i32.lt_u
             (local.get $10)
             (local.get $17)
            )
           )
          )
          (if
           (local.get $20)
           (block
            (local.set $16
             (select
              (f64.neg
               (local.get $16)
              )
              (local.get $16)
              (local.tee $17
               (i32.eq
                (i32.load8_s
                 (local.get $19)
                )
                (i32.const 45)
               )
              )
             )
            )
            (local.set $1
             (select
              (f64.neg
               (local.get $1)
              )
              (local.get $1)
              (local.get $17)
             )
            )
           )
          )
          (i32.store
           (local.get $6)
           (local.tee $10
            (i32.sub
             (local.get $9)
             (local.get $10)
            )
           )
          )
          (if
           (f64.ne
            (f64.add
             (local.get $1)
             (local.get $16)
            )
            (local.get $1)
           )
           (block
            (i32.store
             (local.get $6)
             (local.tee $7
              (i32.add
               (local.get $10)
               (local.get $11)
              )
             )
            )
            (if
             (i32.gt_u
              (local.get $7)
              (i32.const 999999999)
             )
             (loop $while-in22
              (i32.store
               (local.get $6)
               (i32.const 0)
              )
              (if
               (i32.lt_u
                (local.tee $6
                 (i32.add
                  (local.get $6)
                  (i32.const -4)
                 )
                )
                (local.get $3)
               )
               (i32.store
                (local.tee $3
                 (i32.add
                  (local.get $3)
                  (i32.const -4)
                 )
                )
                (i32.const 0)
               )
              )
              (i32.store
               (local.get $6)
               (local.tee $7
                (i32.add
                 (i32.load
                  (local.get $6)
                 )
                 (i32.const 1)
                )
               )
              )
              (br_if $while-in22
               (i32.gt_u
                (local.get $7)
                (i32.const 999999999)
               )
              )
             )
            )
            (local.set $7
             (i32.mul
              (i32.shr_s
               (i32.sub
                (local.get $12)
                (local.get $3)
               )
               (i32.const 2)
              )
              (i32.const 9)
             )
            )
            (if
             (i32.ge_u
              (local.tee $10
               (i32.load
                (local.get $3)
               )
              )
              (i32.const 10)
             )
             (block
              (local.set $11
               (i32.const 10)
              )
              (loop $while-in24
               (local.set $7
                (i32.add
                 (local.get $7)
                 (i32.const 1)
                )
               )
               (br_if $while-in24
                (i32.ge_u
                 (local.get $10)
                 (local.tee $11
                  (i32.mul
                   (local.get $11)
                   (i32.const 10)
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
        (local.set $9
         (local.get $7)
        )
        (local.set $6
         (select
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const 4)
           )
          )
          (local.get $8)
          (i32.gt_u
           (local.get $8)
           (local.get $6)
          )
         )
        )
        (local.get $3)
       )
       (block (result i32)
        (local.set $9
         (local.get $7)
        )
        (local.set $6
         (local.get $8)
        )
        (local.get $3)
       )
      )
     )
     (local.set $7
      (if (result i32)
       (i32.gt_u
        (local.get $6)
        (local.get $10)
       )
       (block $label$break$L109 (result i32)
        (local.set $3
         (local.get $6)
        )
        (loop $while-in27 (result i32)
         (if
          (i32.load
           (local.tee $6
            (i32.add
             (local.get $3)
             (i32.const -4)
            )
           )
          )
          (block
           (local.set $6
            (local.get $3)
           )
           (br $label$break$L109
            (i32.const 1)
           )
          )
         )
         (if (result i32)
          (i32.gt_u
           (local.get $6)
           (local.get $10)
          )
          (block
           (local.set $3
            (local.get $6)
           )
           (br $while-in27)
          )
          (i32.const 0)
         )
        )
       )
       (i32.const 0)
      )
     )
     (local.set $3
      (if (result i32)
       (local.get $23)
       (block (result i32)
        (local.set $5
         (if (result i32)
          (i32.and
           (i32.gt_s
            (local.tee $3
             (i32.add
              (i32.xor
               (local.get $24)
               (i32.const 1)
              )
              (local.get $13)
             )
            )
            (local.get $9)
           )
           (i32.gt_s
            (local.get $9)
            (i32.const -5)
           )
          )
          (block (result i32)
           (local.set $8
            (i32.sub
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
             (local.get $9)
            )
           )
           (i32.add
            (local.get $5)
            (i32.const -1)
           )
          )
          (block (result i32)
           (local.set $8
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
           (i32.add
            (local.get $5)
            (i32.const -2)
           )
          )
         )
        )
        (if (result i32)
         (i32.and
          (local.get $4)
          (i32.const 8)
         )
         (local.get $8)
         (block (result i32)
          (if
           (local.get $7)
           (if
            (local.tee $13
             (i32.load
              (i32.add
               (local.get $6)
               (i32.const -4)
              )
             )
            )
            (if
             (i32.rem_u
              (local.get $13)
              (i32.const 10)
             )
             (local.set $3
              (i32.const 0)
             )
             (block
              (local.set $3
               (i32.const 0)
              )
              (local.set $11
               (i32.const 10)
              )
              (loop $while-in31
               (local.set $3
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (br_if $while-in31
                (i32.eqz
                 (i32.rem_u
                  (local.get $13)
                  (local.tee $11
                   (i32.mul
                    (local.get $11)
                    (i32.const 10)
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (local.set $3
             (i32.const 9)
            )
           )
           (local.set $3
            (i32.const 9)
           )
          )
          (local.set $13
           (i32.add
            (i32.mul
             (i32.shr_s
              (i32.sub
               (local.get $6)
               (local.get $12)
              )
              (i32.const 2)
             )
             (i32.const 9)
            )
            (i32.const -9)
           )
          )
          (if (result i32)
           (i32.eq
            (i32.or
             (local.get $5)
             (i32.const 32)
            )
            (i32.const 102)
           )
           (select
            (local.get $8)
            (local.tee $3
             (select
              (local.tee $3
               (i32.sub
                (local.get $13)
                (local.get $3)
               )
              )
              (i32.const 0)
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
            )
            (i32.lt_s
             (local.get $8)
             (local.get $3)
            )
           )
           (select
            (local.get $8)
            (local.tee $3
             (select
              (local.tee $3
               (i32.sub
                (i32.add
                 (local.get $9)
                 (local.get $13)
                )
                (local.get $3)
               )
              )
              (i32.const 0)
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
            )
            (i32.lt_s
             (local.get $8)
             (local.get $3)
            )
           )
          )
         )
        )
       )
       (local.get $13)
      )
     )
     (local.set $8
      (i32.sub
       (i32.const 0)
       (local.get $9)
      )
     )
     (call $_pad_575
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.tee $13
       (i32.add
        (if (result i32)
         (local.tee $17
          (i32.eq
           (i32.or
            (local.get $5)
            (i32.const 32)
           )
           (i32.const 102)
          )
         )
         (block (result i32)
          (local.set $8
           (i32.const 0)
          )
          (select
           (local.get $9)
           (i32.const 0)
           (i32.gt_s
            (local.get $9)
            (i32.const 0)
           )
          )
         )
         (block (result i32)
          (if
           (i32.lt_s
            (i32.sub
             (local.get $15)
             (local.tee $11
              (call $_fmt_u
               (i64.extend_i32_s
                (select
                 (local.get $8)
                 (local.get $9)
                 (i32.lt_s
                  (local.get $9)
                  (i32.const 0)
                 )
                )
               )
               (local.get $15)
              )
             )
            )
            (i32.const 2)
           )
           (loop $while-in33
            (i32.store8
             (local.tee $11
              (i32.add
               (local.get $11)
               (i32.const -1)
              )
             )
             (i32.const 48)
            )
            (br_if $while-in33
             (i32.lt_s
              (i32.sub
               (local.get $15)
               (local.get $11)
              )
              (i32.const 2)
             )
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $11)
            (i32.const -1)
           )
           (i32.add
            (i32.and
             (i32.shr_s
              (local.get $9)
              (i32.const 31)
             )
             (i32.const 2)
            )
            (i32.const 43)
           )
          )
          (i32.store8
           (local.tee $8
            (i32.add
             (local.get $11)
             (i32.const -2)
            )
           )
           (local.get $5)
          )
          (i32.sub
           (local.get $15)
           (local.get $8)
          )
         )
        )
        (i32.add
         (i32.add
          (local.get $3)
          (i32.add
           (local.get $20)
           (i32.const 1)
          )
         )
         (select
          (i32.const 1)
          (i32.and
           (i32.shr_u
            (local.get $4)
            (i32.const 3)
           )
           (i32.const 1)
          )
          (local.tee $11
           (i32.ne
            (local.get $3)
            (i32.const 0)
           )
          )
         )
        )
       )
      )
      (local.get $4)
     )
     (call $_out_569
      (local.get $0)
      (local.get $19)
      (local.get $20)
     )
     (call $_pad_575
      (local.get $0)
      (i32.const 48)
      (local.get $2)
      (local.get $13)
      (i32.xor
       (local.get $4)
       (i32.const 65536)
      )
     )
     (if
      (local.get $17)
      (block
       (local.set $15
        (local.tee $9
         (i32.add
          (local.get $14)
          (i32.const 9)
         )
        )
       )
       (local.set $8
        (i32.add
         (local.get $14)
         (i32.const 8)
        )
       )
       (local.set $7
        (local.tee $10
         (select
          (local.get $12)
          (local.get $10)
          (i32.gt_u
           (local.get $10)
           (local.get $12)
          )
         )
        )
       )
       (loop $while-in35
        (local.set $5
         (call $_fmt_u
          (i64.extend_i32_u
           (i32.load
            (local.get $7)
           )
          )
          (local.get $9)
         )
        )
        (if
         (i32.eq
          (local.get $7)
          (local.get $10)
         )
         (if
          (i32.eq
           (local.get $5)
           (local.get $9)
          )
          (block
           (i32.store8
            (local.get $8)
            (i32.const 48)
           )
           (local.set $5
            (local.get $8)
           )
          )
         )
         (if
          (i32.gt_u
           (local.get $5)
           (local.get $14)
          )
          (block
           (drop
            (call $_memset
             (local.get $14)
             (i32.const 48)
             (i32.sub
              (local.get $5)
              (local.get $18)
             )
            )
           )
           (loop $while-in37
            (br_if $while-in37
             (i32.gt_u
              (local.tee $5
               (i32.add
                (local.get $5)
                (i32.const -1)
               )
              )
              (local.get $14)
             )
            )
           )
          )
         )
        )
        (call $_out_569
         (local.get $0)
         (local.get $5)
         (i32.sub
          (local.get $15)
          (local.get $5)
         )
        )
        (if
         (i32.le_u
          (local.tee $5
           (i32.add
            (local.get $7)
            (i32.const 4)
           )
          )
          (local.get $12)
         )
         (block
          (local.set $7
           (local.get $5)
          )
          (br $while-in35)
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (i32.eqz
           (i32.and
            (local.get $4)
            (i32.const 8)
           )
          )
          (i32.xor
           (local.get $11)
           (i32.const 1)
          )
         )
        )
        (call $_out_569
         (local.get $0)
         (i32.const 46514)
         (i32.const 1)
        )
       )
       (call $_pad_575
        (local.get $0)
        (i32.const 48)
        (i32.add
         (if (result i32)
          (i32.and
           (i32.lt_u
            (local.get $5)
            (local.get $6)
           )
           (i32.gt_s
            (local.get $3)
            (i32.const 0)
           )
          )
          (loop $while-in39 (result i32)
           (if
            (i32.gt_u
             (local.tee $7
              (call $_fmt_u
               (i64.extend_i32_u
                (i32.load
                 (local.get $5)
                )
               )
               (local.get $9)
              )
             )
             (local.get $14)
            )
            (block
             (drop
              (call $_memset
               (local.get $14)
               (i32.const 48)
               (i32.sub
                (local.get $7)
                (local.get $18)
               )
              )
             )
             (loop $while-in41
              (br_if $while-in41
               (i32.gt_u
                (local.tee $7
                 (i32.add
                  (local.get $7)
                  (i32.const -1)
                 )
                )
                (local.get $14)
               )
              )
             )
            )
           )
           (call $_out_569
            (local.get $0)
            (local.get $7)
            (select
             (local.get $3)
             (i32.const 9)
             (i32.lt_s
              (local.get $3)
              (i32.const 9)
             )
            )
           )
           (local.set $7
            (i32.add
             (local.get $3)
             (i32.const -9)
            )
           )
           (if (result i32)
            (i32.and
             (i32.lt_u
              (local.tee $5
               (i32.add
                (local.get $5)
                (i32.const 4)
               )
              )
              (local.get $6)
             )
             (i32.gt_s
              (local.get $3)
              (i32.const 9)
             )
            )
            (block
             (local.set $3
              (local.get $7)
             )
             (br $while-in39)
            )
            (local.get $7)
           )
          )
          (local.get $3)
         )
         (i32.const 9)
        )
        (i32.const 9)
        (i32.const 0)
       )
      )
      (block
       (call $_pad_575
        (local.get $0)
        (i32.const 48)
        (i32.add
         (if (result i32)
          (i32.and
           (i32.lt_u
            (local.get $10)
            (local.tee $11
             (select
              (local.get $6)
              (i32.add
               (local.get $10)
               (i32.const 4)
              )
              (local.get $7)
             )
            )
           )
           (i32.gt_s
            (local.get $3)
            (i32.const -1)
           )
          )
          (block (result i32)
           (local.set $19
            (i32.eqz
             (i32.and
              (local.get $4)
              (i32.const 8)
             )
            )
           )
           (local.set $20
            (local.tee $12
             (i32.add
              (local.get $14)
              (i32.const 9)
             )
            )
           )
           (local.set $18
            (i32.sub
             (i32.const 0)
             (local.get $18)
            )
           )
           (local.set $9
            (i32.add
             (local.get $14)
             (i32.const 8)
            )
           )
           (local.set $5
            (local.get $3)
           )
           (local.set $6
            (local.get $10)
           )
           (loop $while-in43 (result i32)
            (if
             (i32.eq
              (local.get $12)
              (local.tee $3
               (call $_fmt_u
                (i64.extend_i32_u
                 (i32.load
                  (local.get $6)
                 )
                )
                (local.get $12)
               )
              )
             )
             (block
              (i32.store8
               (local.get $9)
               (i32.const 48)
              )
              (local.set $3
               (local.get $9)
              )
             )
            )
            (block $do-once44
             (if
              (i32.eq
               (local.get $6)
               (local.get $10)
              )
              (block
               (local.set $7
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (call $_out_569
                (local.get $0)
                (local.get $3)
                (i32.const 1)
               )
               (if
                (i32.and
                 (local.get $19)
                 (i32.lt_s
                  (local.get $5)
                  (i32.const 1)
                 )
                )
                (block
                 (local.set $3
                  (local.get $7)
                 )
                 (br $do-once44)
                )
               )
               (call $_out_569
                (local.get $0)
                (i32.const 46514)
                (i32.const 1)
               )
               (local.set $3
                (local.get $7)
               )
              )
              (block
               (br_if $do-once44
                (i32.le_u
                 (local.get $3)
                 (local.get $14)
                )
               )
               (drop
                (call $_memset
                 (local.get $14)
                 (i32.const 48)
                 (i32.add
                  (local.get $3)
                  (local.get $18)
                 )
                )
               )
               (loop $while-in47
                (br_if $while-in47
                 (i32.gt_u
                  (local.tee $3
                   (i32.add
                    (local.get $3)
                    (i32.const -1)
                   )
                  )
                  (local.get $14)
                 )
                )
               )
              )
             )
            )
            (call $_out_569
             (local.get $0)
             (local.get $3)
             (select
              (local.tee $3
               (i32.sub
                (local.get $20)
                (local.get $3)
               )
              )
              (local.get $5)
              (i32.gt_s
               (local.get $5)
               (local.get $3)
              )
             )
            )
            (br_if $while-in43
             (i32.and
              (i32.lt_u
               (local.tee $6
                (i32.add
                 (local.get $6)
                 (i32.const 4)
                )
               )
               (local.get $11)
              )
              (i32.gt_s
               (local.tee $5
                (i32.sub
                 (local.get $5)
                 (local.get $3)
                )
               )
               (i32.const -1)
              )
             )
            )
            (local.get $5)
           )
          )
          (local.get $3)
         )
         (i32.const 18)
        )
        (i32.const 18)
        (i32.const 0)
       )
       (call $_out_569
        (local.get $0)
        (local.get $8)
        (i32.sub
         (local.get $15)
         (local.get $8)
        )
       )
      )
     )
     (call $_pad_575
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.get $13)
      (i32.xor
       (local.get $4)
       (i32.const 8192)
      )
     )
     (local.get $13)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $22)
  )
  (select
   (local.get $2)
   (local.get $0)
   (i32.lt_s
    (local.get $0)
    (local.get $2)
   )
  )
 )
 (func $_pop_arg_long_double (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local.set $3
   (f64.load
    (local.tee $2
     (i32.and
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 7)
      )
      (i32.const -8)
     )
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (f64.store
   (local.get $0)
   (local.get $3)
  )
 )
 (func $___vfprintf_internal (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 224)
   )
  )
  (i64.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 160)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $4)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $4)
   (i64.const 0)
  )
  (i64.store offset=24
   (local.get $4)
   (i64.const 0)
  )
  (i64.store offset=32
   (local.get $4)
   (i64.const 0)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $3)
     (i32.const 208)
    )
   )
   (i32.load
    (local.get $2)
   )
  )
  (local.set $0
   (if (result i32)
    (i32.lt_s
     (call $_printf_core
      (i32.const 0)
      (local.get $1)
      (local.get $5)
      (local.tee $2
       (i32.add
        (local.get $3)
        (i32.const 80)
       )
      )
      (local.get $4)
     )
     (i32.const 0)
    )
    (i32.const -1)
    (block (result i32)
     (drop
      (if (result i32)
       (i32.gt_s
        (i32.load offset=76
         (local.get $0)
        )
        (i32.const -1)
       )
       (i32.const 1)
       (i32.const 0)
      )
     )
     (local.set $6
      (i32.load
       (local.get $0)
      )
     )
     (if
      (i32.lt_s
       (i32.load8_s offset=74
        (local.get $0)
       )
       (i32.const 1)
      )
      (i32.store
       (local.get $0)
       (i32.and
        (local.get $6)
        (i32.const -33)
       )
      )
     )
     (if
      (i32.load offset=48
       (local.get $0)
      )
      (local.set $1
       (call $_printf_core
        (local.get $0)
        (local.get $1)
        (local.get $5)
        (local.get $2)
        (local.get $4)
       )
      )
      (block
       (local.set $7
        (i32.load offset=44
         (local.get $0)
        )
       )
       (i32.store offset=44
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=28
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=20
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=48
        (local.get $0)
        (i32.const 80)
       )
       (i32.store offset=16
        (local.get $0)
        (i32.add
         (local.get $3)
         (i32.const 80)
        )
       )
       (local.set $1
        (call $_printf_core
         (local.get $0)
         (local.get $1)
         (local.get $5)
         (local.get $2)
         (local.get $4)
        )
       )
       (if
        (local.get $7)
        (block
         (drop
          (call_indirect (type $i32_i32_i32_=>_i32)
           (local.get $0)
           (i32.const 0)
           (i32.const 0)
           (i32.add
            (i32.and
             (i32.load offset=36
              (local.get $0)
             )
             (i32.const 31)
            )
            (i32.const 82)
           )
          )
         )
         (local.set $1
          (select
           (local.get $1)
           (i32.const -1)
           (i32.load offset=20
            (local.get $0)
           )
          )
         )
         (i32.store offset=44
          (local.get $0)
          (local.get $7)
         )
         (i32.store offset=48
          (local.get $0)
          (i32.const 0)
         )
         (i32.store offset=16
          (local.get $0)
          (i32.const 0)
         )
         (i32.store offset=28
          (local.get $0)
          (i32.const 0)
         )
         (i32.store offset=20
          (local.get $0)
          (i32.const 0)
         )
        )
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.or
       (local.tee $0
        (i32.load
         (local.get $0)
        )
       )
       (i32.and
        (local.get $6)
        (i32.const 32)
       )
      )
     )
     (select
      (i32.const -1)
      (local.get $1)
      (i32.and
       (local.get $0)
       (i32.const 32)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_printf_core (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i64)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local.set $15
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $9
   (i32.add
    (local.get $15)
    (i32.const 40)
   )
  )
  (local.set $25
   (i32.add
    (local.get $15)
    (i32.const 48)
   )
  )
  (local.set $23
   (i32.add
    (local.get $15)
    (i32.const 60)
   )
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $15)
     (i32.const 56)
    )
   )
   (local.get $1)
  )
  (local.set $18
   (i32.ne
    (local.get $0)
    (i32.const 0)
   )
  )
  (local.set $19
   (local.tee $21
    (i32.add
     (local.get $15)
     (i32.const 40)
    )
   )
  )
  (local.set $24
   (i32.add
    (local.get $15)
    (i32.const 39)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (block $label$break$L123
   (block $__rjti$10
    (loop $label$continue$L1
     (block $label$break$L1
      (loop $while-in
       (if
        (i32.gt_s
         (local.get $8)
         (i32.const -1)
        )
        (local.set $8
         (if (result i32)
          (i32.gt_s
           (local.get $1)
           (i32.sub
            (i32.const 2147483647)
            (local.get $8)
           )
          )
          (block (result i32)
           (i32.store
            (i32.const 53312)
            (i32.const 61)
           )
           (i32.const -1)
          )
          (i32.add
           (local.get $1)
           (local.get $8)
          )
         )
        )
       )
       (br_if $__rjti$10
        (i32.eqz
         (local.tee $12
          (i32.load8_s
           (local.tee $10
            (i32.load
             (local.get $11)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (local.get $10)
       )
       (block $label$break$L15
        (block $__rjti$0
         (loop $label$continue$L12
          (block $label$break$L12
           (block $switch
            (br_table $label$break$L12 $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $__rjti$0 $switch
             (i32.shr_s
              (i32.shl
               (local.get $12)
               (i32.const 24)
              )
              (i32.const 24)
             )
            )
           )
           (i32.store
            (local.get $11)
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
           (local.set $12
            (i32.load8_s
             (local.get $1)
            )
           )
           (br $label$continue$L12)
          )
         )
         (br $label$break$L15)
        )
        (local.set $12
         (local.get $1)
        )
        (loop $while-in3
         (br_if $label$break$L15
          (i32.ne
           (i32.load8_s offset=1
            (local.get $12)
           )
           (i32.const 37)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.store
          (local.get $11)
          (local.tee $12
           (i32.add
            (local.get $12)
            (i32.const 2)
           )
          )
         )
         (br_if $while-in3
          (i32.eq
           (i32.load8_s
            (local.get $12)
           )
           (i32.const 37)
          )
         )
        )
       )
       (local.set $1
        (i32.sub
         (local.get $1)
         (local.get $10)
        )
       )
       (if
        (local.get $18)
        (call $_out_569
         (local.get $0)
         (local.get $10)
         (local.get $1)
        )
       )
       (br_if $while-in
        (local.get $1)
       )
      )
      (i32.store
       (local.get $11)
       (local.tee $1
        (i32.add
         (local.tee $1
          (i32.load
           (local.get $11)
          )
         )
         (if (result i32)
          (i32.ge_u
           (i32.add
            (i32.load8_s offset=1
             (i32.load
              (local.get $11)
             )
            )
            (i32.const -48)
           )
           (i32.const 10)
          )
          (block (result i32)
           (local.set $13
            (i32.const -1)
           )
           (i32.const 1)
          )
          (if (result i32)
           (i32.eq
            (i32.load8_s offset=2
             (local.get $1)
            )
            (i32.const 36)
           )
           (block (result i32)
            (local.set $13
             (i32.add
              (i32.load8_s offset=1
               (local.get $1)
              )
              (i32.const -48)
             )
            )
            (local.set $5
             (i32.const 1)
            )
            (i32.const 3)
           )
           (block (result i32)
            (local.set $13
             (i32.const -1)
            )
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (if
       (i32.or
        (i32.gt_u
         (local.tee $12
          (i32.add
           (local.tee $6
            (i32.load8_s
             (local.get $1)
            )
           )
           (i32.const -32)
          )
         )
         (i32.const 31)
        )
        (i32.eqz
         (i32.and
          (i32.shl
           (i32.const 1)
           (local.get $12)
          )
          (i32.const 75913)
         )
        )
       )
       (local.set $12
        (i32.const 0)
       )
       (block
        (local.set $6
         (i32.const 0)
        )
        (loop $while-in5
         (local.set $12
          (i32.or
           (local.get $6)
           (i32.shl
            (i32.const 1)
            (local.get $12)
           )
          )
         )
         (i32.store
          (local.get $11)
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
         (if
          (i32.eqz
           (i32.or
            (i32.gt_u
             (local.tee $7
              (i32.add
               (local.tee $6
                (i32.load8_s
                 (local.get $1)
                )
               )
               (i32.const -32)
              )
             )
             (i32.const 31)
            )
            (i32.eqz
             (i32.and
              (i32.shl
               (i32.const 1)
               (local.get $7)
              )
              (i32.const 75913)
             )
            )
           )
          )
          (block
           (local.set $6
            (local.get $12)
           )
           (local.set $12
            (local.get $7)
           )
           (br $while-in5)
          )
         )
        )
       )
      )
      (if
       (i32.eq
        (i32.and
         (local.get $6)
         (i32.const 255)
        )
        (i32.const 42)
       )
       (block
        (i32.store
         (local.get $11)
         (local.tee $5
          (block $__rjto$1 (result i32)
           (block $__rjti$1
            (br_if $__rjti$1
             (i32.ge_u
              (i32.add
               (i32.load8_s offset=1
                (local.get $1)
               )
               (i32.const -48)
              )
              (i32.const 10)
             )
            )
            (br_if $__rjti$1
             (i32.ne
              (i32.load8_s offset=2
               (local.tee $7
                (i32.load
                 (local.get $11)
                )
               )
              )
              (i32.const 36)
             )
            )
            (i32.store
             (i32.add
              (i32.shl
               (i32.add
                (i32.load8_s offset=1
                 (local.get $7)
                )
                (i32.const -48)
               )
               (i32.const 2)
              )
              (local.get $4)
             )
             (i32.const 10)
            )
            (local.set $1
             (i32.wrap_i64
              (i64.load
               (i32.add
                (i32.shl
                 (i32.add
                  (i32.load8_s offset=1
                   (local.get $7)
                  )
                  (i32.const -48)
                 )
                 (i32.const 3)
                )
                (local.get $3)
               )
              )
             )
            )
            (local.set $6
             (i32.const 1)
            )
            (br $__rjto$1
             (i32.add
              (local.get $7)
              (i32.const 3)
             )
            )
           )
           (if
            (local.get $5)
            (block
             (local.set $8
              (i32.const -1)
             )
             (br $label$break$L1)
            )
           )
           (if
            (local.get $18)
            (block
             (local.set $1
              (i32.load
               (local.tee $5
                (i32.and
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (local.get $2)
              (i32.add
               (local.get $5)
               (i32.const 4)
              )
             )
            )
            (local.set $1
             (i32.const 0)
            )
           )
           (local.set $6
            (i32.const 0)
           )
           (i32.add
            (i32.load
             (local.get $11)
            )
            (i32.const 1)
           )
          )
         )
        )
        (local.set $16
         (select
          (i32.sub
           (i32.const 0)
           (local.get $1)
          )
          (local.get $1)
          (local.tee $1
           (i32.lt_s
            (local.get $1)
            (i32.const 0)
           )
          )
         )
        )
        (local.set $14
         (select
          (i32.or
           (local.get $12)
           (i32.const 8192)
          )
          (local.get $12)
          (local.get $1)
         )
        )
        (local.set $12
         (local.get $6)
        )
       )
       (block
        (if
         (i32.lt_s
          (local.tee $16
           (call $_getint_570
            (local.get $11)
           )
          )
          (i32.const 0)
         )
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L1)
         )
        )
        (local.set $14
         (local.get $12)
        )
        (local.set $12
         (local.get $5)
        )
        (local.set $5
         (i32.load
          (local.get $11)
         )
        )
       )
      )
      (if
       (i32.eq
        (i32.load8_s
         (local.get $5)
        )
        (i32.const 46)
       )
       (block $do-once6
        (local.set $1
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (if
         (i32.ne
          (i32.load8_s offset=1
           (local.get $5)
          )
          (i32.const 42)
         )
         (block
          (i32.store
           (local.get $11)
           (local.get $1)
          )
          (local.set $1
           (call $_getint_570
            (local.get $11)
           )
          )
          (local.set $5
           (i32.load
            (local.get $11)
           )
          )
          (br $do-once6)
         )
        )
        (if
         (i32.lt_u
          (i32.add
           (i32.load8_s offset=2
            (local.get $5)
           )
           (i32.const -48)
          )
          (i32.const 10)
         )
         (if
          (i32.eq
           (i32.load8_s offset=3
            (local.tee $5
             (i32.load
              (local.get $11)
             )
            )
           )
           (i32.const 36)
          )
          (block
           (i32.store
            (i32.add
             (i32.shl
              (i32.add
               (i32.load8_s offset=2
                (local.get $5)
               )
               (i32.const -48)
              )
              (i32.const 2)
             )
             (local.get $4)
            )
            (i32.const 10)
           )
           (local.set $1
            (i32.wrap_i64
             (i64.load
              (i32.add
               (i32.shl
                (i32.add
                 (i32.load8_s offset=2
                  (local.get $5)
                 )
                 (i32.const -48)
                )
                (i32.const 3)
               )
               (local.get $3)
              )
             )
            )
           )
           (i32.store
            (local.get $11)
            (local.tee $5
             (i32.add
              (local.get $5)
              (i32.const 4)
             )
            )
           )
           (br $do-once6)
          )
         )
        )
        (if
         (local.get $12)
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L1)
         )
        )
        (if
         (local.get $18)
         (block
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.and
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 3)
              )
              (i32.const -4)
             )
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.get $5)
            (i32.const 4)
           )
          )
         )
         (local.set $1
          (i32.const 0)
         )
        )
        (i32.store
         (local.get $11)
         (local.tee $5
          (i32.add
           (i32.load
            (local.get $11)
           )
           (i32.const 2)
          )
         )
        )
       )
       (local.set $1
        (i32.const -1)
       )
      )
      (local.set $7
       (i32.const 0)
      )
      (loop $while-in9
       (if
        (i32.gt_u
         (i32.add
          (i32.load8_s
           (local.get $5)
          )
          (i32.const -65)
         )
         (i32.const 57)
        )
        (block
         (local.set $8
          (i32.const -1)
         )
         (br $label$break$L1)
        )
       )
       (i32.store
        (local.get $11)
        (local.tee $6
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
       )
       (if
        (i32.lt_u
         (i32.add
          (local.tee $5
           (i32.and
            (local.tee $17
             (i32.load8_s
              (i32.add
               (i32.add
                (i32.load8_s
                 (local.get $5)
                )
                (i32.mul
                 (local.get $7)
                 (i32.const 58)
                )
               )
               (i32.const 33327)
              )
             )
            )
            (i32.const 255)
           )
          )
          (i32.const -1)
         )
         (i32.const 8)
        )
        (block
         (local.set $7
          (local.get $5)
         )
         (local.set $5
          (local.get $6)
         )
         (br $while-in9)
        )
       )
      )
      (if
       (i32.eqz
        (local.get $17)
       )
       (block
        (local.set $8
         (i32.const -1)
        )
        (br $label$break$L1)
       )
      )
      (local.set $20
       (i32.gt_s
        (local.get $13)
        (i32.const -1)
       )
      )
      (block $label$break$L77
       (block $__rjti$9
        (if
         (i32.eq
          (local.get $17)
          (i32.const 19)
         )
         (if
          (local.get $20)
          (block
           (local.set $8
            (i32.const -1)
           )
           (br $label$break$L1)
          )
         )
         (block $__rjti$8
          (if
           (local.get $20)
           (block
            (i32.store
             (i32.add
              (i32.shl
               (local.get $13)
               (i32.const 2)
              )
              (local.get $4)
             )
             (local.get $5)
            )
            (i64.store
             (local.get $9)
             (i64.load
              (i32.add
               (i32.shl
                (local.get $13)
                (i32.const 3)
               )
               (local.get $3)
              )
             )
            )
            (br $__rjti$8)
           )
          )
          (if
           (i32.eqz
            (local.get $18)
           )
           (block
            (local.set $8
             (i32.const 0)
            )
            (br $label$break$L1)
           )
          )
          (call $_pop_arg_572
           (local.get $9)
           (local.get $5)
           (local.get $2)
          )
          (local.set $6
           (i32.load
            (local.get $11)
           )
          )
          (br $__rjti$9)
         )
        )
        (br_if $__rjti$9
         (local.get $18)
        )
        (local.set $1
         (i32.const 0)
        )
        (br $label$break$L77)
       )
       (local.set $5
        (select
         (local.tee $13
          (i32.and
           (local.get $14)
           (i32.const -65537)
          )
         )
         (local.get $14)
         (i32.and
          (local.get $14)
          (i32.const 8192)
         )
        )
       )
       (block $__rjto$7
        (block $__rjti$7
         (block $__rjti$6
          (block $__rjti$5
           (block $__rjti$4
            (block $__rjti$3
             (block $switch-default44
              (block $switch-case43
               (block $switch-case35
                (block $switch-case34
                 (block $switch-case33
                  (block $switch-case32
                   (block $switch-case31
                    (block $switch-case30
                     (block $switch-case28
                      (block $switch-case25
                       (block $switch-case24
                        (br_table $switch-case43 $switch-default44 $switch-case34 $switch-default44 $switch-case43 $switch-case43 $switch-case43 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case35 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $__rjti$3 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case43 $switch-default44 $switch-case32 $switch-case30 $switch-case43 $switch-case43 $switch-case43 $switch-default44 $switch-case30 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case24 $switch-case28 $switch-case25 $switch-default44 $switch-default44 $switch-case33 $switch-default44 $switch-case31 $switch-default44 $switch-default44 $__rjti$3 $switch-default44
                         (i32.sub
                          (local.tee $6
                           (select
                            (i32.and
                             (local.tee $6
                              (i32.load8_s
                               (i32.add
                                (local.get $6)
                                (i32.const -1)
                               )
                              )
                             )
                             (i32.const -33)
                            )
                            (local.get $6)
                            (i32.and
                             (i32.eq
                              (i32.and
                               (local.get $6)
                               (i32.const 15)
                              )
                              (i32.const 3)
                             )
                             (i32.ne
                              (local.get $7)
                              (i32.const 0)
                             )
                            )
                           )
                          )
                          (i32.const 65)
                         )
                        )
                       )
                       (block $switch-default23
                        (block $switch-case22
                         (block $switch-case21
                          (block $switch-case20
                           (block $switch-case19
                            (block $switch-case18
                             (block $switch-case17
                              (block $switch-case16
                               (br_table $switch-case16 $switch-case17 $switch-case18 $switch-case19 $switch-case20 $switch-default23 $switch-case21 $switch-case22 $switch-default23
                                (i32.shr_s
                                 (i32.shl
                                  (i32.and
                                   (local.get $7)
                                   (i32.const 255)
                                  )
                                  (i32.const 24)
                                 )
                                 (i32.const 24)
                                )
                               )
                              )
                              (i32.store
                               (i32.load
                                (local.get $9)
                               )
                               (local.get $8)
                              )
                              (local.set $1
                               (i32.const 0)
                              )
                              (br $label$break$L77)
                             )
                             (i32.store
                              (i32.load
                               (local.get $9)
                              )
                              (local.get $8)
                             )
                             (local.set $1
                              (i32.const 0)
                             )
                             (br $label$break$L77)
                            )
                            (i64.store
                             (i32.load
                              (local.get $9)
                             )
                             (i64.extend_i32_s
                              (local.get $8)
                             )
                            )
                            (local.set $1
                             (i32.const 0)
                            )
                            (br $label$break$L77)
                           )
                           (i32.store16
                            (i32.load
                             (local.get $9)
                            )
                            (local.get $8)
                           )
                           (local.set $1
                            (i32.const 0)
                           )
                           (br $label$break$L77)
                          )
                          (i32.store8
                           (i32.load
                            (local.get $9)
                           )
                           (local.get $8)
                          )
                          (local.set $1
                           (i32.const 0)
                          )
                          (br $label$break$L77)
                         )
                         (i32.store
                          (i32.load
                           (local.get $9)
                          )
                          (local.get $8)
                         )
                         (local.set $1
                          (i32.const 0)
                         )
                         (br $label$break$L77)
                        )
                        (i64.store
                         (i32.load
                          (local.get $9)
                         )
                         (i64.extend_i32_s
                          (local.get $8)
                         )
                        )
                        (local.set $1
                         (i32.const 0)
                        )
                        (br $label$break$L77)
                       )
                       (local.set $1
                        (i32.const 0)
                       )
                       (br $label$break$L77)
                      )
                      (local.set $6
                       (i32.const 120)
                      )
                      (local.set $1
                       (select
                        (local.get $1)
                        (i32.const 8)
                        (i32.gt_u
                         (local.get $1)
                         (i32.const 8)
                        )
                       )
                      )
                      (local.set $5
                       (i32.or
                        (local.get $5)
                        (i32.const 8)
                       )
                      )
                      (br $__rjti$3)
                     )
                     (local.set $6
                      (i32.sub
                       (local.get $19)
                       (local.tee $7
                        (call $_fmt_o
                         (i64.load
                          (local.get $9)
                         )
                         (local.get $21)
                        )
                       )
                      )
                     )
                     (local.set $10
                      (i32.const 0)
                     )
                     (local.set $14
                      (i32.const 46462)
                     )
                     (local.set $1
                      (select
                       (local.get $1)
                       (i32.add
                        (local.get $6)
                        (i32.const 1)
                       )
                       (i32.or
                        (i32.eqz
                         (i32.and
                          (local.get $5)
                          (i32.const 8)
                         )
                        )
                        (i32.gt_s
                         (local.get $1)
                         (local.get $6)
                        )
                       )
                      )
                     )
                     (br $__rjti$6)
                    )
                    (local.set $14
                     (if (result i32)
                      (i64.lt_s
                       (local.tee $22
                        (i64.load
                         (local.get $9)
                        )
                       )
                       (i64.const 0)
                      )
                      (block (result i32)
                       (i64.store
                        (local.get $9)
                        (local.tee $22
                         (i64.sub
                          (i64.const 0)
                          (local.get $22)
                         )
                        )
                       )
                       (local.set $10
                        (i32.const 1)
                       )
                       (i32.const 46462)
                      )
                      (block (result i32)
                       (local.set $10
                        (i32.ne
                         (i32.and
                          (local.get $5)
                          (i32.const 2049)
                         )
                         (i32.const 0)
                        )
                       )
                       (select
                        (i32.const 46463)
                        (select
                         (i32.const 46464)
                         (i32.const 46462)
                         (i32.and
                          (local.get $5)
                          (i32.const 1)
                         )
                        )
                        (i32.and
                         (local.get $5)
                         (i32.const 2048)
                        )
                       )
                      )
                     )
                    )
                    (br $__rjti$4)
                   )
                   (local.set $10
                    (i32.const 0)
                   )
                   (local.set $14
                    (i32.const 46462)
                   )
                   (local.set $22
                    (i64.load
                     (local.get $9)
                    )
                   )
                   (br $__rjti$4)
                  )
                  (i64.store8
                   (local.get $24)
                   (i64.load
                    (local.get $9)
                   )
                  )
                  (local.set $6
                   (local.get $24)
                  )
                  (local.set $10
                   (i32.const 0)
                  )
                  (local.set $14
                   (i32.const 46462)
                  )
                  (local.set $7
                   (i32.const 1)
                  )
                  (local.set $5
                   (local.get $13)
                  )
                  (local.set $1
                   (local.get $19)
                  )
                  (br $__rjto$7)
                 )
                 (local.set $20
                  (i32.eqz
                   (local.tee $17
                    (call $_memchr
                     (local.tee $6
                      (select
                       (local.tee $5
                        (i32.load
                         (local.get $9)
                        )
                       )
                       (i32.const 46472)
                       (local.get $5)
                      )
                     )
                     (local.get $1)
                    )
                   )
                  )
                 )
                 (local.set $10
                  (i32.const 0)
                 )
                 (local.set $14
                  (i32.const 46462)
                 )
                 (local.set $7
                  (select
                   (local.get $1)
                   (i32.sub
                    (local.get $17)
                    (local.get $6)
                   )
                   (local.get $20)
                  )
                 )
                 (local.set $5
                  (local.get $13)
                 )
                 (local.set $1
                  (select
                   (i32.add
                    (local.get $1)
                    (local.get $6)
                   )
                   (local.get $17)
                   (local.get $20)
                  )
                 )
                 (br $__rjto$7)
                )
                (i64.store32 offset=48
                 (local.get $15)
                 (i64.load
                  (local.get $9)
                 )
                )
                (i32.store offset=52
                 (local.get $15)
                 (i32.const 0)
                )
                (i32.store
                 (local.get $9)
                 (local.get $25)
                )
                (local.set $10
                 (i32.const -1)
                )
                (br $__rjti$5)
               )
               (if
                (local.get $1)
                (block
                 (local.set $10
                  (local.get $1)
                 )
                 (br $__rjti$5)
                )
                (block
                 (call $_pad_575
                  (local.get $0)
                  (i32.const 32)
                  (local.get $16)
                  (i32.const 0)
                  (local.get $5)
                 )
                 (local.set $1
                  (i32.const 0)
                 )
                 (br $__rjti$7)
                )
               )
              )
              (local.set $1
               (call_indirect (type $i32_f64_i32_i32_i32_i32_=>_i32)
                (local.get $0)
                (f64.load
                 (local.get $9)
                )
                (local.get $16)
                (local.get $1)
                (local.get $5)
                (local.get $6)
                (i32.const 65)
               )
              )
              (br $label$break$L77)
             )
             (local.set $6
              (local.get $10)
             )
             (local.set $10
              (i32.const 0)
             )
             (local.set $14
              (i32.const 46462)
             )
             (local.set $7
              (local.get $1)
             )
             (local.set $1
              (local.get $19)
             )
             (br $__rjto$7)
            )
            (local.set $7
             (call $_fmt_x
              (i64.load
               (local.get $9)
              )
              (local.get $21)
              (i32.and
               (local.get $6)
               (i32.const 32)
              )
             )
            )
            (local.set $10
             (select
              (i32.const 0)
              (i32.const 2)
              (local.tee $13
               (i32.or
                (i32.eqz
                 (i32.and
                  (local.get $5)
                  (i32.const 8)
                 )
                )
                (i64.eqz
                 (i64.load
                  (local.get $9)
                 )
                )
               )
              )
             )
            )
            (local.set $14
             (select
              (i32.const 46462)
              (i32.add
               (i32.shr_u
                (local.get $6)
                (i32.const 4)
               )
               (i32.const 46462)
              )
              (local.get $13)
             )
            )
            (br $__rjti$6)
           )
           (local.set $7
            (call $_fmt_u
             (local.get $22)
             (local.get $21)
            )
           )
           (br $__rjti$6)
          )
          (local.set $6
           (i32.load
            (local.get $9)
           )
          )
          (local.set $1
           (i32.const 0)
          )
          (block $__rjto$2
           (block $__rjti$2
            (loop $while-in47
             (if
              (local.tee $7
               (i32.load
                (local.get $6)
               )
              )
              (block
               (br_if $__rjti$2
                (i32.or
                 (local.tee $13
                  (i32.lt_s
                   (local.tee $7
                    (call $_wctomb
                     (local.get $23)
                     (local.get $7)
                    )
                   )
                   (i32.const 0)
                  )
                 )
                 (i32.gt_u
                  (local.get $7)
                  (i32.sub
                   (local.get $10)
                   (local.get $1)
                  )
                 )
                )
               )
               (local.set $6
                (i32.add
                 (local.get $6)
                 (i32.const 4)
                )
               )
               (br_if $while-in47
                (i32.gt_u
                 (local.get $10)
                 (local.tee $1
                  (i32.add
                   (local.get $1)
                   (local.get $7)
                  )
                 )
                )
               )
              )
             )
            )
            (br $__rjto$2)
           )
           (if
            (local.get $13)
            (block
             (local.set $8
              (i32.const -1)
             )
             (br $label$break$L1)
            )
           )
          )
          (call $_pad_575
           (local.get $0)
           (i32.const 32)
           (local.get $16)
           (local.get $1)
           (local.get $5)
          )
          (if
           (local.get $1)
           (block
            (local.set $6
             (i32.load
              (local.get $9)
             )
            )
            (local.set $10
             (i32.const 0)
            )
            (loop $while-in49
             (br_if $__rjti$7
              (i32.eqz
               (local.tee $7
                (i32.load
                 (local.get $6)
                )
               )
              )
             )
             (br_if $__rjti$7
              (i32.gt_s
               (local.tee $10
                (i32.add
                 (local.get $10)
                 (local.tee $7
                  (call $_wctomb
                   (local.get $23)
                   (local.get $7)
                  )
                 )
                )
               )
               (local.get $1)
              )
             )
             (local.set $6
              (i32.add
               (local.get $6)
               (i32.const 4)
              )
             )
             (call $_out_569
              (local.get $0)
              (local.get $23)
              (local.get $7)
             )
             (br_if $while-in49
              (i32.lt_u
               (local.get $10)
               (local.get $1)
              )
             )
            )
           )
           (local.set $1
            (i32.const 0)
           )
          )
          (br $__rjti$7)
         )
         (local.set $6
          (select
           (local.get $7)
           (local.get $21)
           (local.tee $17
            (i32.or
             (local.tee $13
              (i64.ne
               (i64.load
                (local.get $9)
               )
               (i64.const 0)
              )
             )
             (i32.ne
              (local.get $1)
              (i32.const 0)
             )
            )
           )
          )
         )
         (local.set $7
          (select
           (select
            (local.get $1)
            (local.tee $7
             (i32.add
              (i32.sub
               (local.get $19)
               (local.get $7)
              )
              (i32.xor
               (local.get $13)
               (i32.const 1)
              )
             )
            )
            (i32.gt_s
             (local.get $1)
             (local.get $7)
            )
           )
           (i32.const 0)
           (local.get $17)
          )
         )
         (local.set $5
          (select
           (i32.and
            (local.get $5)
            (i32.const -65537)
           )
           (local.get $5)
           (i32.gt_s
            (local.get $1)
            (i32.const -1)
           )
          )
         )
         (local.set $1
          (local.get $19)
         )
         (br $__rjto$7)
        )
        (call $_pad_575
         (local.get $0)
         (i32.const 32)
         (local.get $16)
         (local.get $1)
         (i32.xor
          (local.get $5)
          (i32.const 8192)
         )
        )
        (local.set $1
         (select
          (local.get $16)
          (local.get $1)
          (i32.gt_s
           (local.get $16)
           (local.get $1)
          )
         )
        )
        (br $label$break$L77)
       )
       (call $_pad_575
        (local.get $0)
        (i32.const 32)
        (local.tee $1
         (select
          (local.tee $7
           (i32.add
            (local.get $10)
            (local.tee $17
             (select
              (local.tee $13
               (i32.sub
                (local.get $1)
                (local.get $6)
               )
              )
              (local.get $7)
              (i32.lt_s
               (local.get $7)
               (local.get $13)
              )
             )
            )
           )
          )
          (local.get $16)
          (i32.lt_s
           (local.get $16)
           (local.get $7)
          )
         )
        )
        (local.get $7)
        (local.get $5)
       )
       (call $_out_569
        (local.get $0)
        (local.get $14)
        (local.get $10)
       )
       (call $_pad_575
        (local.get $0)
        (i32.const 48)
        (local.get $1)
        (local.get $7)
        (i32.xor
         (local.get $5)
         (i32.const 65536)
        )
       )
       (call $_pad_575
        (local.get $0)
        (i32.const 48)
        (local.get $17)
        (local.get $13)
        (i32.const 0)
       )
       (call $_out_569
        (local.get $0)
        (local.get $6)
        (local.get $13)
       )
       (call $_pad_575
        (local.get $0)
        (i32.const 32)
        (local.get $1)
        (local.get $7)
        (i32.xor
         (local.get $5)
         (i32.const 8192)
        )
       )
      )
      (local.set $5
       (local.get $12)
      )
      (br $label$continue$L1)
     )
    )
    (br $label$break$L123)
   )
   (if
    (i32.eqz
     (local.get $0)
    )
    (local.set $8
     (if (result i32)
      (local.get $5)
      (block (result i32)
       (local.set $0
        (i32.const 1)
       )
       (loop $while-in52
        (if
         (local.tee $1
          (i32.load
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 2)
            )
            (local.get $4)
           )
          )
         )
         (block
          (call $_pop_arg_572
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 3)
            )
            (local.get $3)
           )
           (local.get $1)
           (local.get $2)
          )
          (br_if $while-in52
           (i32.lt_u
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
            (i32.const 10)
           )
          )
          (local.set $8
           (i32.const 1)
          )
          (br $label$break$L123)
         )
        )
       )
       (loop $while-in54 (result i32)
        (if
         (i32.load
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L123)
         )
        )
        (br_if $while-in54
         (i32.lt_u
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (i32.const 10)
         )
        )
        (i32.const 1)
       )
      )
      (i32.const 0)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $15)
  )
  (local.get $8)
 )
 (func $_out_569 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 32)
    )
   )
   (drop
    (call $___fwritex
     (local.get $1)
     (local.get $2)
     (local.get $0)
    )
   )
  )
 )
 (func $_getint_570 (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (i32.lt_u
    (i32.add
     (i32.load8_s
      (i32.load
       (local.get $0)
      )
     )
     (i32.const -48)
    )
    (i32.const 10)
   )
   (loop $while-in
    (local.set $2
     (i32.add
      (i32.load8_s
       (local.tee $1
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.add
       (i32.mul
        (local.get $2)
        (i32.const 10)
       )
       (i32.const -48)
      )
     )
    )
    (i32.store
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
    (br_if $while-in
     (i32.lt_u
      (i32.add
       (i32.load8_s offset=1
        (local.get $1)
       )
       (i32.const -48)
      )
      (i32.const 10)
     )
    )
   )
  )
  (local.get $2)
 )
 (func $_pop_arg_572 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 f64)
  (if
   (i32.le_u
    (local.get $1)
    (i32.const 20)
   )
   (block $label$break$L1
    (block $switch-case9
     (block $switch-case8
      (block $switch-case7
       (block $switch-case6
        (block $switch-case5
         (block $switch-case4
          (block $switch-case3
           (block $switch-case2
            (block $switch-case1
             (block $switch-case
              (br_table $switch-case $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $switch-case6 $switch-case7 $switch-case8 $switch-case9 $label$break$L1
               (i32.sub
                (local.get $1)
                (i32.const 9)
               )
              )
             )
             (local.set $3
              (i32.load
               (local.tee $1
                (i32.and
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (local.get $2)
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
             (i32.store
              (local.get $0)
              (local.get $3)
             )
             (br $label$break$L1)
            )
            (local.set $3
             (i32.load
              (local.tee $1
               (i32.and
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 3)
                )
                (i32.const -4)
               )
              )
             )
            )
            (i32.store
             (local.get $2)
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (i64.store
             (local.get $0)
             (i64.extend_i32_s
              (local.get $3)
             )
            )
            (br $label$break$L1)
           )
           (local.set $3
            (i32.load
             (local.tee $1
              (i32.and
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 3)
               )
               (i32.const -4)
              )
             )
            )
           )
           (i32.store
            (local.get $2)
            (i32.add
             (local.get $1)
             (i32.const 4)
            )
           )
           (i64.store
            (local.get $0)
            (i64.extend_i32_u
             (local.get $3)
            )
           )
           (br $label$break$L1)
          )
          (local.set $4
           (i64.load
            (local.tee $1
             (i32.and
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 7)
              )
              (i32.const -8)
             )
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.get $1)
            (i32.const 8)
           )
          )
          (i64.store
           (local.get $0)
           (local.get $4)
          )
          (br $label$break$L1)
         )
         (local.set $3
          (i32.load
           (local.tee $1
            (i32.and
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 3)
             )
             (i32.const -4)
            )
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (i64.store
          (local.get $0)
          (i64.extend_i32_s
           (i32.shr_s
            (i32.shl
             (i32.and
              (local.get $3)
              (i32.const 65535)
             )
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
         (br $label$break$L1)
        )
        (local.set $3
         (i32.load
          (local.tee $1
           (i32.and
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (local.get $2)
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
        (i64.store
         (local.get $0)
         (i64.extend_i32_u
          (i32.and
           (local.get $3)
           (i32.const 65535)
          )
         )
        )
        (br $label$break$L1)
       )
       (local.set $3
        (i32.load
         (local.tee $1
          (i32.and
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 3)
           )
           (i32.const -4)
          )
         )
        )
       )
       (i32.store
        (local.get $2)
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (i64.store
        (local.get $0)
        (i64.extend_i32_s
         (i32.shr_s
          (i32.shl
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
           (i32.const 24)
          )
          (i32.const 24)
         )
        )
       )
       (br $label$break$L1)
      )
      (local.set $3
       (i32.load
        (local.tee $1
         (i32.and
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 3)
          )
          (i32.const -4)
         )
        )
       )
      )
      (i32.store
       (local.get $2)
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (i64.store
       (local.get $0)
       (i64.extend_i32_u
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
      )
      (br $label$break$L1)
     )
     (local.set $5
      (f64.load
       (local.tee $1
        (i32.and
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 7)
         )
         (i32.const -8)
        )
       )
      )
     )
     (i32.store
      (local.get $2)
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (f64.store
      (local.get $0)
      (local.get $5)
     )
     (br $label$break$L1)
    )
    (call_indirect (type $i32_i32_=>_none)
     (local.get $0)
     (local.get $2)
     (i32.const 434)
    )
   )
  )
 )
 (func $_fmt_x (; has Stack IR ;) (param $0 i64) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.eqz
    (i64.eqz
     (local.get $0)
    )
   )
   (loop $while-in
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (local.get $2)
      (i32.load8_u
       (i32.add
        (i32.and
         (i32.wrap_i64
          (local.get $0)
         )
         (i32.const 15)
        )
        (i32.const 33856)
       )
      )
     )
    )
    (br_if $while-in
     (i32.eqz
      (i64.eqz
       (local.tee $0
        (i64.shr_u
         (local.get $0)
         (i64.const 4)
        )
       )
      )
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_fmt_o (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (i64.eqz
     (local.get $0)
    )
   )
   (loop $while-in
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.and
       (i32.wrap_i64
        (local.get $0)
       )
       (i32.const 7)
      )
      (i32.const 48)
     )
    )
    (br_if $while-in
     (i32.eqz
      (i64.eqz
       (local.tee $0
        (i64.shr_u
         (local.get $0)
         (i64.const 3)
        )
       )
      )
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_fmt_u (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local.set $2
   (i32.wrap_i64
    (local.get $0)
   )
  )
  (if
   (i64.gt_u
    (local.get $0)
    (i64.const 4294967295)
   )
   (block
    (loop $while-in
     (i32.store8
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const -1)
       )
      )
      (i32.or
       (i32.and
        (i32.wrap_i64
         (i64.sub
          (local.get $0)
          (i64.mul
           (local.tee $3
            (i64.div_u
             (local.get $0)
             (i64.const 10)
            )
           )
           (i64.const 10)
          )
         )
        )
        (i32.const 255)
       )
       (i32.const 48)
      )
     )
     (if
      (i64.gt_u
       (local.get $0)
       (i64.const 42949672959)
      )
      (block
       (local.set $0
        (local.get $3)
       )
       (br $while-in)
      )
     )
    )
    (local.set $2
     (i32.wrap_i64
      (local.get $3)
     )
    )
   )
  )
  (if
   (local.get $2)
   (loop $while-in1
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.sub
       (local.get $2)
       (i32.mul
        (local.tee $4
         (i32.div_u
          (local.get $2)
          (i32.const 10)
         )
        )
        (i32.const 10)
       )
      )
      (i32.const 48)
     )
    )
    (if
     (i32.ge_u
      (local.get $2)
      (i32.const 10)
     )
     (block
      (local.set $2
       (local.get $4)
      )
      (br $while-in1)
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_pad_575 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.get $4)
      (i32.const 73728)
     )
    )
    (i32.gt_s
     (local.get $2)
     (local.get $3)
    )
   )
   (block
    (drop
     (call $_memset
      (local.get $5)
      (i32.shr_s
       (i32.shl
        (local.get $1)
        (i32.const 24)
       )
       (i32.const 24)
      )
      (select
       (local.tee $1
        (i32.sub
         (local.get $2)
         (local.get $3)
        )
       )
       (i32.const 256)
       (i32.lt_u
        (local.get $1)
        (i32.const 256)
       )
      )
     )
    )
    (if
     (i32.gt_u
      (local.get $1)
      (i32.const 255)
     )
     (block
      (local.set $2
       (i32.sub
        (local.get $2)
        (local.get $3)
       )
      )
      (loop $while-in
       (call $_out_569
        (local.get $0)
        (local.get $5)
        (i32.const 256)
       )
       (br_if $while-in
        (i32.gt_u
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const -256)
          )
         )
         (i32.const 255)
        )
       )
      )
      (local.set $1
       (i32.and
        (local.get $2)
        (i32.const 255)
       )
      )
     )
    )
    (call $_out_569
     (local.get $0)
     (local.get $5)
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_wctomb (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $0)
   (call $_wcrtomb
    (local.get $0)
    (local.get $1)
   )
   (i32.const 0)
  )
 )
 (func $_wcrtomb (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $0)
   (block $do-once (result i32)
    (if
     (i32.lt_u
      (local.get $1)
      (i32.const 128)
     )
     (block
      (i32.store8
       (local.get $0)
       (local.get $1)
      )
      (br $do-once
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.load
        (i32.const 37316)
       )
      )
     )
     (if
      (i32.eq
       (i32.and
        (local.get $1)
        (i32.const -128)
       )
       (i32.const 57216)
      )
      (block
       (i32.store8
        (local.get $0)
        (local.get $1)
       )
       (br $do-once
        (i32.const 1)
       )
      )
      (block
       (i32.store
        (i32.const 53312)
        (i32.const 25)
       )
       (br $do-once
        (i32.const -1)
       )
      )
     )
    )
    (if
     (i32.lt_u
      (local.get $1)
      (i32.const 2048)
     )
     (block
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 6)
        )
        (i32.const 192)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (br $do-once
       (i32.const 2)
      )
     )
    )
    (if
     (i32.or
      (i32.eq
       (i32.and
        (local.get $1)
        (i32.const -8192)
       )
       (i32.const 57344)
      )
      (i32.lt_u
       (local.get $1)
       (i32.const 55296)
      )
     )
     (block
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 12)
        )
        (i32.const 224)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 6)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=2
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (br $do-once
       (i32.const 3)
      )
     )
    )
    (if (result i32)
     (i32.lt_u
      (i32.add
       (local.get $1)
       (i32.const -65536)
      )
      (i32.const 1048576)
     )
     (block (result i32)
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 18)
        )
        (i32.const 240)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 12)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=2
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 6)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=3
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.const 4)
     )
     (block (result i32)
      (i32.store
       (i32.const 53312)
       (i32.const 25)
      )
      (i32.const -1)
     )
    )
   )
   (i32.const 1)
  )
 )
 (func $_frexp (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  (block $switch
   (block $switch-default
    (if
     (local.tee $4
      (i32.and
       (i32.wrap_i64
        (local.tee $3
         (i64.shr_u
          (local.tee $2
           (i64.reinterpret_f64
            (local.get $0)
           )
          )
          (i64.const 52)
         )
        )
       )
       (i32.const 2047)
      )
     )
     (if
      (i32.eq
       (local.get $4)
       (i32.const 2047)
      )
      (br $switch)
      (br $switch-default)
     )
    )
    (i32.store
     (local.get $1)
     (if (result i32)
      (f64.ne
       (local.get $0)
       (f64.const 0)
      )
      (block (result i32)
       (local.set $0
        (call $_frexp
         (f64.mul
          (local.get $0)
          (f64.const 18446744073709551615)
         )
         (local.get $1)
        )
       )
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const -64)
       )
      )
      (i32.const 0)
     )
    )
    (br $switch)
   )
   (i32.store
    (local.get $1)
    (i32.add
     (i32.and
      (i32.wrap_i64
       (local.get $3)
      )
      (i32.const 2047)
     )
     (i32.const -1022)
    )
   )
   (local.set $0
    (f64.reinterpret_i64
     (i64.or
      (i64.and
       (local.get $2)
       (i64.const -9218868437227405313)
      )
      (i64.const 4602678819172646912)
     )
    )
   )
  )
  (local.get $0)
 )
 (func $_snprintf (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (local.set $0
   (call $_vsnprintf
    (local.get $0)
    (i32.const 100)
    (i32.const 48837)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $0)
 )
 (func $_vsnprintf (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 160)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 144)
   )
  )
  (drop
   (call $_memcpy
    (local.get $4)
    (i32.const 35008)
    (i32.const 144)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_u
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
      (i32.const 2147483646)
     )
    )
    (local.set $0
     (if (result i32)
      (local.get $1)
      (block (result i32)
       (i32.store
        (i32.const 53312)
        (i32.const 61)
       )
       (i32.const -1)
      )
      (block
       (local.set $0
        (local.get $5)
       )
       (local.set $1
        (i32.const 1)
       )
       (br $__rjti$0)
      )
     )
    )
    (br $__rjto$0)
   )
   (i32.store offset=48
    (local.get $4)
    (local.tee $1
     (select
      (local.tee $5
       (i32.sub
        (i32.const -2)
        (local.get $0)
       )
      )
      (local.get $1)
      (i32.gt_u
       (local.get $1)
       (local.get $5)
      )
     )
    )
   )
   (i32.store offset=20
    (local.get $4)
    (local.get $0)
   )
   (i32.store offset=44
    (local.get $4)
    (local.get $0)
   )
   (i32.store offset=16
    (local.get $4)
    (local.tee $0
     (i32.add
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (i32.store offset=28
    (local.get $4)
    (local.get $0)
   )
   (local.set $0
    (call $_vfprintf
     (local.get $4)
     (local.get $2)
     (local.get $3)
    )
   )
   (if
    (local.get $1)
    (i32.store8
     (i32.add
      (local.tee $1
       (i32.load offset=20
        (local.get $4)
       )
      )
      (i32.shr_s
       (i32.shl
        (i32.eq
         (local.get $1)
         (i32.load offset=16
          (local.get $4)
         )
        )
        (i32.const 31)
       )
       (i32.const 31)
      )
     )
     (i32.const 0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $_sn_write (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (select
    (local.get $2)
    (local.tee $3
     (i32.sub
      (i32.load offset=16
       (local.get $0)
      )
      (local.tee $4
       (i32.load offset=20
        (local.get $0)
       )
      )
     )
    )
    (i32.gt_u
     (local.get $3)
     (local.get $2)
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $4)
    (local.get $1)
    (local.get $3)
   )
  )
  (i32.store offset=20
   (local.get $0)
   (i32.add
    (i32.load offset=20
     (local.get $0)
    )
    (local.get $3)
   )
  )
  (local.get $2)
 )
 (func $_freelocale (; has Stack IR ;) (param $0 i32)
  (if
   (i32.and
    (i32.and
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
     (i32.ne
      (local.get $0)
      (i32.const 53224)
     )
    )
    (i32.ne
     (local.get $0)
     (i32.const 37096)
    )
   )
   (call $_free
    (local.get $0)
   )
  )
 )
 (func $___newlocale (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (loop $while-in
   (local.set $4
    (i32.add
     (local.get $4)
     (i32.ne
      (local.tee $2
       (if (result i32)
        (i32.and
         (i32.eqz
          (local.tee $2
           (i32.and
            (i32.shl
             (i32.const 1)
             (local.get $0)
            )
            (i32.const 2147483647)
           )
          )
         )
         (i32.const 0)
        )
        (i32.load
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
        )
        (call $___get_locale
         (local.get $0)
         (select
          (i32.const 47353)
          (i32.const 55332)
          (local.get $2)
         )
        )
       )
      )
      (i32.const 0)
     )
    )
   )
   (i32.store
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
     (local.get $1)
    )
    (local.get $2)
   )
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 6)
    )
   )
  )
  (block $label$break$L1
   (block $switch-case0
    (block $switch-case
     (br_table $switch-case $switch-case0 $label$break$L1
      (i32.and
       (local.get $4)
       (i32.const 2147483647)
      )
     )
    )
    (local.set $3
     (i32.const 53224)
    )
    (br $label$break$L1)
   )
   (if
    (i32.eq
     (i32.load
      (local.get $1)
     )
     (i32.const 37068)
    )
    (local.set $3
     (i32.const 37096)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $3)
 )
 (func $___get_locale (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 272)
   )
  )
  (if
   (i32.eqz
    (i32.load8_s
     (local.get $1)
    )
   )
   (block $do-once
    (if
     (local.tee $1
      (call $_getenv
       (i32.const 46516)
      )
     )
     (br_if $do-once
      (i32.load8_s
       (local.get $1)
      )
     )
    )
    (if
     (local.tee $1
      (call $_getenv
       (i32.add
        (i32.mul
         (local.get $0)
         (i32.const 12)
        )
        (i32.const 33872)
       )
      )
     )
     (br_if $do-once
      (i32.load8_s
       (local.get $1)
      )
     )
    )
    (if
     (local.tee $1
      (call $_getenv
       (i32.const 46523)
      )
     )
     (br_if $do-once
      (i32.load8_s
       (local.get $1)
      )
     )
    )
    (local.set $1
     (i32.const 46528)
    )
   )
  )
  (local.set $4
   (i32.add
    (local.get $5)
    (i32.const 256)
   )
  )
  (local.set $3
   (loop $label$continue$L13 (result i32)
    (block $label$break$L13 (result i32)
     (block $switch
      (block $switch-case0
       (br_table $switch-case0 $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch-case0 $switch
        (i32.load8_s
         (i32.add
          (local.get $1)
          (local.get $2)
         )
        )
       )
      )
      (br $label$break$L13
       (local.get $2)
      )
     )
     (br_if $label$continue$L13
      (i32.lt_u
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.const 15)
      )
     )
     (i32.const 15)
    )
   )
  )
  (block $do-once8
   (block $__rjti$3
    (block $__rjti$2
     (if
      (i32.eq
       (local.tee $2
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.const 46)
      )
      (local.set $1
       (i32.const 46528)
      )
      (if
       (i32.load8_s
        (i32.add
         (local.get $1)
         (local.get $3)
        )
       )
       (local.set $1
        (i32.const 46528)
       )
       (br_if $__rjti$2
        (i32.ne
         (local.get $2)
         (i32.const 67)
        )
       )
      )
     )
     (br_if $__rjti$3
      (i32.eqz
       (i32.load8_s offset=1
        (local.get $1)
       )
      )
     )
    )
    (br_if $__rjti$3
     (i32.eqz
      (call $_strcmp
       (local.get $1)
       (i32.const 46528)
      )
     )
    )
    (br_if $__rjti$3
     (i32.eqz
      (call $_strcmp
       (local.get $1)
       (i32.const 46536)
      )
     )
    )
    (if
     (local.tee $2
      (i32.load
       (i32.const 53332)
      )
     )
     (loop $while-in
      (br_if $do-once8
       (i32.eqz
        (call $_strcmp
         (local.get $1)
         (i32.add
          (local.get $2)
          (i32.const 8)
         )
        )
       )
      )
      (br_if $while-in
       (local.tee $2
        (i32.load offset=24
         (local.get $2)
        )
       )
      )
     )
    )
    (if
     (local.tee $2
      (i32.load
       (i32.const 53332)
      )
     )
     (block $label$break$L32
      (loop $while-in4
       (if
        (call $_strcmp
         (local.get $1)
         (i32.add
          (local.get $2)
          (i32.const 8)
         )
        )
        (block
         (br_if $label$break$L32
          (i32.eqz
           (local.tee $2
            (i32.load offset=24
             (local.get $2)
            )
           )
          )
         )
         (br $while-in4)
        )
       )
      )
      (br $do-once8)
     )
    )
    (local.set $2
     (select
      (local.tee $1
       (block $__rjto$0 (result i32)
        (block $__rjti$0
         (br_if $__rjti$0
          (i32.load
           (i32.const 53256)
          )
         )
         (br_if $__rjti$0
          (i32.eqz
           (local.tee $2
            (call $_getenv
             (i32.const 46542)
            )
           )
          )
         )
         (br_if $__rjti$0
          (i32.eqz
           (i32.load8_s
            (local.get $2)
           )
          )
         )
         (local.set $8
          (i32.sub
           (i32.const 254)
           (local.get $3)
          )
         )
         (local.set $9
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (loop $while-in7
          (block $while-out6
           (br_if $while-in7
            (i32.load8_s
             (local.tee $2
              (i32.add
               (i32.ne
                (i32.and
                 (if (result i32)
                  (i32.lt_u
                   (local.tee $6
                    (i32.add
                     (i32.shr_s
                      (i32.shl
                       (i32.ne
                        (local.tee $10
                         (i32.load8_s
                          (local.tee $7
                           (call $___strchrnul
                            (local.get $2)
                           )
                          )
                         )
                        )
                        (i32.const 0)
                       )
                       (i32.const 31)
                      )
                      (i32.const 31)
                     )
                     (i32.sub
                      (local.get $7)
                      (local.get $2)
                     )
                    )
                   )
                   (local.get $8)
                  )
                  (block (result i32)
                   (drop
                    (call $_memcpy
                     (local.get $5)
                     (local.get $2)
                     (local.get $6)
                    )
                   )
                   (i32.store8
                    (local.tee $2
                     (i32.add
                      (local.get $5)
                      (local.get $6)
                     )
                    )
                    (i32.const 47)
                   )
                   (drop
                    (call $_memcpy
                     (i32.add
                      (local.get $2)
                      (i32.const 1)
                     )
                     (local.get $1)
                     (local.get $3)
                    )
                   )
                   (i32.store8
                    (i32.add
                     (local.get $5)
                     (i32.add
                      (local.get $6)
                      (local.get $9)
                     )
                    )
                    (i32.const 0)
                   )
                   (br_if $while-out6
                    (local.tee $6
                     (call $___map_file
                      (local.get $5)
                      (local.get $4)
                     )
                    )
                   )
                   (i32.load8_s
                    (local.get $7)
                   )
                  )
                  (local.get $10)
                 )
                 (i32.const 255)
                )
                (i32.const 0)
               )
               (local.get $7)
              )
             )
            )
           )
           (br $__rjti$0)
          )
         )
         (br $__rjto$0
          (if (result i32)
           (local.tee $2
            (call $_malloc
             (i32.const 28)
            )
           )
           (block (result i32)
            (i32.store
             (local.get $2)
             (local.get $6)
            )
            (i32.store offset=4
             (local.get $2)
             (i32.load
              (local.get $4)
             )
            )
            (drop
             (call $_memcpy
              (local.tee $4
               (i32.add
                (local.get $2)
                (i32.const 8)
               )
              )
              (local.get $1)
              (local.get $3)
             )
            )
            (i32.store8
             (i32.add
              (local.get $3)
              (local.get $4)
             )
             (i32.const 0)
            )
            (i32.store offset=24
             (local.get $2)
             (i32.load
              (i32.const 53332)
             )
            )
            (i32.store
             (i32.const 53332)
             (local.get $2)
            )
            (local.get $2)
           )
           (block
            (if
             (i32.gt_u
              (local.tee $2
               (call $___syscall91
                (local.get $6)
                (i32.load
                 (local.get $4)
                )
               )
              )
              (i32.const -4096)
             )
             (i32.store
              (i32.const 53312)
              (i32.sub
               (i32.const 0)
               (local.get $2)
              )
             )
            )
            (br $__rjti$0)
           )
          )
         )
        )
        (if
         (local.tee $2
          (call $_malloc
           (i32.const 28)
          )
         )
         (block
          (i32.store
           (local.get $2)
           (i32.load
            (i32.const 37068)
           )
          )
          (i32.store offset=4
           (local.get $2)
           (i32.load
            (i32.const 37072)
           )
          )
          (drop
           (call $_memcpy
            (local.tee $4
             (i32.add
              (local.get $2)
              (i32.const 8)
             )
            )
            (local.get $1)
            (local.get $3)
           )
          )
          (i32.store8
           (i32.add
            (local.get $3)
            (local.get $4)
           )
           (i32.const 0)
          )
          (i32.store offset=24
           (local.get $2)
           (i32.load
            (i32.const 53332)
           )
          )
          (i32.store
           (i32.const 53332)
           (local.get $2)
          )
         )
        )
        (local.get $2)
       )
      )
      (i32.const 37068)
      (i32.or
       (local.get $0)
       (local.get $1)
      )
     )
    )
    (br $do-once8)
   )
   (if
    (i32.eqz
     (local.get $0)
    )
    (if
     (i32.eq
      (i32.load8_s offset=1
       (local.get $1)
      )
      (i32.const 46)
     )
     (block
      (local.set $2
       (i32.const 37068)
      )
      (br $do-once8)
     )
    )
   )
   (local.set $2
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $2)
 )
 (func $_strtox (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (result i64)
  (local $4 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $4)
   (local.get $0)
  )
  (i32.store offset=44
   (local.get $4)
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $4)
   (select
    (i32.const -1)
    (i32.add
     (local.get $0)
     (i32.const 2147483647)
    )
    (i32.lt_s
     (local.get $0)
     (i32.const 0)
    )
   )
  )
  (i32.store offset=76
   (local.get $4)
   (i32.const -1)
  )
  (call $___shlim
   (local.get $4)
   (i64.const 0)
  )
  (local.set $3
   (call $___intscan
    (local.get $4)
    (local.get $2)
    (i32.const 1)
    (local.get $3)
   )
  )
  (if
   (local.get $1)
   (i32.store
    (local.get $1)
    (i32.add
     (local.get $0)
     (i32.sub
      (i32.add
       (i32.load offset=4
        (local.get $4)
       )
       (i32.wrap_i64
        (i64.load offset=120
         (local.get $4)
        )
       )
      )
      (i32.load offset=8
       (local.get $4)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $3)
 )
 (func $_wmemcpy (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (local.get $2)
   (block
    (local.set $3
     (local.get $1)
    )
    (local.set $1
     (local.get $0)
    )
    (loop $while-in
     (local.set $0
      (i32.add
       (local.get $3)
       (i32.const 4)
      )
     )
     (local.set $4
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $1)
      (i32.load
       (local.get $3)
      )
     )
     (if
      (local.tee $2
       (i32.add
        (local.get $2)
        (i32.const -1)
       )
      )
      (block
       (local.set $3
        (local.get $0)
       )
       (local.set $1
        (local.get $4)
       )
       (br $while-in)
      )
     )
    )
   )
  )
 )
 (func $_getc (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (block $do-once (result i32)
   (if
    (i32.ge_s
     (i32.load offset=76
      (local.get $0)
     )
     (i32.const 0)
    )
    (br $do-once
     (if (result i32)
      (i32.lt_u
       (local.tee $1
        (i32.load offset=4
         (local.get $0)
        )
       )
       (i32.load offset=8
        (local.get $0)
       )
      )
      (block (result i32)
       (i32.store offset=4
        (local.get $0)
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.load8_u
        (local.get $1)
       )
      )
      (call $___uflow
       (local.get $0)
      )
     )
    )
   )
   (if (result i32)
    (i32.lt_u
     (local.tee $1
      (i32.load offset=4
       (local.get $0)
      )
     )
     (i32.load offset=8
      (local.get $0)
     )
    )
    (block (result i32)
     (i32.store offset=4
      (local.get $0)
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.load8_u
      (local.get $1)
     )
    )
    (call $___uflow
     (local.get $0)
    )
   )
  )
 )
 (func $_mbsrtowcs (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local.set $5
   (i32.load
    (local.get $1)
   )
  )
  (local.set $3
   (block $label$break$L5 (result i32)
    (block $__rjti$6
     (br_if $__rjti$6
      (i32.eqz
       (local.get $3)
      )
     )
     (br_if $__rjti$6
      (i32.eqz
       (local.tee $4
        (i32.load
         (local.get $3)
        )
       )
      )
     )
     (br $label$break$L5
      (if (result i32)
       (local.get $0)
       (block (result i32)
        (i32.store
         (local.get $3)
         (i32.const 0)
        )
        (local.set $14
         (local.get $4)
        )
        (local.set $15
         (local.get $0)
        )
        (local.set $16
         (local.get $2)
        )
        (local.set $8
         (local.get $5)
        )
        (i32.const 48)
       )
       (block (result i32)
        (local.set $9
         (local.get $4)
        )
        (local.set $7
         (local.get $5)
        )
        (local.set $11
         (local.get $2)
        )
        (i32.const 26)
       )
      )
     )
    )
    (local.set $3
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
    )
    (if
     (i32.load
      (i32.load
       (i32.const 37316)
      )
     )
     (if
      (local.get $3)
      (block
       (local.set $18
        (local.get $0)
       )
       (local.set $17
        (local.get $2)
       )
       (local.set $12
        (local.get $5)
       )
       (br $label$break$L5
        (i32.const 33)
       )
      )
      (block
       (local.set $19
        (local.get $2)
       )
       (local.set $20
        (local.get $5)
       )
       (br $label$break$L5
        (i32.const 15)
       )
      )
     )
    )
    (if
     (i32.eqz
      (local.get $3)
     )
     (block
      (local.set $10
       (call $_strlen
        (local.get $5)
       )
      )
      (br $label$break$L5
       (i32.const 63)
      )
     )
    )
    (if
     (local.get $2)
     (block $label$break$L13
      (local.set $6
       (local.get $0)
      )
      (local.set $4
       (local.get $2)
      )
      (local.set $3
       (local.get $5)
      )
      (loop $while-in
       (if
        (local.tee $5
         (i32.load8_s
          (local.get $3)
         )
        )
        (block
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.store
          (local.get $6)
          (i32.and
           (local.get $5)
           (i32.const 57343)
          )
         )
         (br_if $label$break$L13
          (i32.eqz
           (local.tee $4
            (i32.add
             (local.get $4)
             (i32.const -1)
            )
           )
          )
         )
         (local.set $6
          (i32.add
           (local.get $6)
           (i32.const 4)
          )
         )
         (br $while-in)
        )
       )
      )
      (i32.store
       (local.get $6)
       (i32.const 0)
      )
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (local.set $10
       (i32.sub
        (local.get $2)
        (local.get $4)
       )
      )
      (br $label$break$L5
       (i32.const 63)
      )
     )
     (local.set $3
      (local.get $5)
     )
    )
    (i32.store
     (local.get $1)
     (local.get $3)
    )
    (local.set $10
     (local.get $2)
    )
    (i32.const 63)
   )
  )
  (loop $label$continue$L20
   (block $__rjto$5
    (block $__rjti$5
     (block $__rjti$4
      (block $__rjti$3
       (if
        (i32.eq
         (local.get $3)
         (i32.const 15)
        )
        (block
         (local.set $3
          (local.get $19)
         )
         (local.set $5
          (local.get $20)
         )
         (loop $while-in3
          (if
           (i32.lt_u
            (i32.add
             (local.tee $4
              (i32.and
               (if (result i32)
                (i32.lt_u
                 (i32.add
                  (i32.and
                   (local.tee $4
                    (i32.load8_s
                     (local.get $5)
                    )
                   )
                   (i32.const 255)
                  )
                  (i32.const -1)
                 )
                 (i32.const 127)
                )
                (if (result i32)
                 (i32.and
                  (local.get $5)
                  (i32.const 3)
                 )
                 (local.get $4)
                 (block (result i32)
                  (local.set $4
                   (i32.and
                    (local.tee $6
                     (i32.load
                      (local.get $5)
                     )
                    )
                    (i32.const 255)
                   )
                  )
                  (if (result i32)
                   (i32.and
                    (i32.or
                     (local.get $6)
                     (i32.add
                      (local.get $6)
                      (i32.const -16843009)
                     )
                    )
                    (i32.const -2139062144)
                   )
                   (local.get $4)
                   (block (result i32)
                    (loop $while-in5
                     (local.set $3
                      (i32.add
                       (local.get $3)
                       (i32.const -4)
                      )
                     )
                     (br_if $while-in5
                      (i32.eqz
                       (i32.and
                        (i32.or
                         (local.tee $4
                          (i32.load
                           (local.tee $5
                            (i32.add
                             (local.get $5)
                             (i32.const 4)
                            )
                           )
                          )
                         )
                         (i32.add
                          (local.get $4)
                          (i32.const -16843009)
                         )
                        )
                        (i32.const -2139062144)
                       )
                      )
                     )
                    )
                    (i32.and
                     (local.get $4)
                     (i32.const 255)
                    )
                   )
                  )
                 )
                )
                (local.get $4)
               )
               (i32.const 255)
              )
             )
             (i32.const -1)
            )
            (i32.const 127)
           )
           (block
            (local.set $3
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
            )
            (local.set $5
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (br $while-in3)
           )
          )
         )
         (if
          (i32.gt_u
           (local.tee $4
            (i32.add
             (local.get $4)
             (i32.const -194)
            )
           )
           (i32.const 50)
          )
          (block
           (local.set $4
            (local.get $5)
           )
           (local.set $6
            (local.get $0)
           )
           (br $__rjti$4)
          )
          (block
           (local.set $9
            (i32.load
             (i32.add
              (i32.shl
               (local.get $4)
               (i32.const 2)
              )
              (i32.const 29040)
             )
            )
           )
           (local.set $7
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.set $11
            (local.get $3)
           )
           (local.set $3
            (i32.const 26)
           )
           (br $label$continue$L20)
          )
         )
        )
        (if
         (i32.eq
          (local.get $3)
          (i32.const 26)
         )
         (if
          (i32.gt_u
           (i32.or
            (i32.add
             (local.tee $3
              (i32.shr_u
               (i32.load8_u
                (local.get $7)
               )
               (i32.const 3)
              )
             )
             (i32.const -16)
            )
            (i32.add
             (local.get $3)
             (i32.shr_s
              (local.get $9)
              (i32.const 26)
             )
            )
           )
           (i32.const 7)
          )
          (block
           (local.set $3
            (local.get $0)
           )
           (local.set $6
            (local.get $9)
           )
           (local.set $4
            (local.get $7)
           )
           (local.set $5
            (local.get $11)
           )
           (br $__rjti$3)
          )
          (block
           (local.set $3
            (i32.add
             (local.get $7)
             (i32.const 1)
            )
           )
           (local.set $20
            (if (result i32)
             (i32.and
              (local.get $9)
              (i32.const 33554432)
             )
             (block (result i32)
              (if
               (i32.ne
                (i32.and
                 (i32.load8_s
                  (local.get $3)
                 )
                 (i32.const 192)
                )
                (i32.const 128)
               )
               (block
                (local.set $3
                 (local.get $0)
                )
                (local.set $6
                 (local.get $9)
                )
                (local.set $4
                 (local.get $7)
                )
                (local.set $5
                 (local.get $11)
                )
                (br $__rjti$3)
               )
              )
              (local.set $3
               (i32.add
                (local.get $7)
                (i32.const 2)
               )
              )
              (if (result i32)
               (i32.and
                (local.get $9)
                (i32.const 524288)
               )
               (block (result i32)
                (if
                 (i32.ne
                  (i32.and
                   (i32.load8_s
                    (local.get $3)
                   )
                   (i32.const 192)
                  )
                  (i32.const 128)
                 )
                 (block
                  (local.set $3
                   (local.get $0)
                  )
                  (local.set $6
                   (local.get $9)
                  )
                  (local.set $4
                   (local.get $7)
                  )
                  (local.set $5
                   (local.get $11)
                  )
                  (br $__rjti$3)
                 )
                )
                (i32.add
                 (local.get $7)
                 (i32.const 3)
                )
               )
               (local.get $3)
              )
             )
             (local.get $3)
            )
           )
           (local.set $19
            (i32.add
             (local.get $11)
             (i32.const -1)
            )
           )
           (local.set $3
            (i32.const 15)
           )
           (br $label$continue$L20)
          )
         )
         (if
          (i32.eq
           (local.get $3)
           (i32.const 33)
          )
          (block
           (if
            (local.get $17)
            (block $label$break$L23
             (local.set $5
              (local.get $18)
             )
             (local.set $3
              (local.get $17)
             )
             (local.set $4
              (local.get $12)
             )
             (loop $while-in8
              (block $while-out7
               (block $__rjto$2
                (block $__rjti$2
                 (br_if $__rjti$2
                  (i32.ge_u
                   (local.tee $13
                    (i32.add
                     (local.tee $6
                      (i32.load8_u
                       (local.get $4)
                      )
                     )
                     (i32.const -1)
                    )
                   )
                   (i32.const 127)
                  )
                 )
                 (if
                  (i32.and
                   (i32.eqz
                    (i32.and
                     (local.get $4)
                     (i32.const 3)
                    )
                   )
                   (i32.gt_u
                    (local.get $3)
                    (i32.const 4)
                   )
                  )
                  (block
                   (local.set $13
                    (i32.add
                     (local.tee $6
                      (i32.and
                       (block $__rjto$1 (result i32)
                        (block $__rjti$1
                         (loop $while-in10
                          (br_if $__rjti$1
                           (i32.and
                            (i32.or
                             (local.tee $6
                              (i32.load
                               (local.get $4)
                              )
                             )
                             (i32.add
                              (local.get $6)
                              (i32.const -16843009)
                             )
                            )
                            (i32.const -2139062144)
                           )
                          )
                          (i32.store
                           (local.get $5)
                           (i32.and
                            (local.get $6)
                            (i32.const 255)
                           )
                          )
                          (i32.store offset=4
                           (local.get $5)
                           (i32.load8_u offset=1
                            (local.get $4)
                           )
                          )
                          (i32.store offset=8
                           (local.get $5)
                           (i32.load8_u offset=2
                            (local.get $4)
                           )
                          )
                          (local.set $13
                           (i32.add
                            (local.get $4)
                            (i32.const 4)
                           )
                          )
                          (local.set $6
                           (i32.add
                            (local.get $5)
                            (i32.const 16)
                           )
                          )
                          (i32.store offset=12
                           (local.get $5)
                           (i32.load8_u offset=3
                            (local.get $4)
                           )
                          )
                          (if
                           (i32.gt_u
                            (local.tee $3
                             (i32.add
                              (local.get $3)
                              (i32.const -4)
                             )
                            )
                            (i32.const 4)
                           )
                           (block
                            (local.set $5
                             (local.get $6)
                            )
                            (local.set $4
                             (local.get $13)
                            )
                            (br $while-in10)
                           )
                          )
                         )
                         (local.set $5
                          (local.get $6)
                         )
                         (br $__rjto$1
                          (i32.load8_s
                           (local.tee $4
                            (local.get $13)
                           )
                          )
                         )
                        )
                        (i32.and
                         (local.get $6)
                         (i32.const 255)
                        )
                       )
                       (i32.const 255)
                      )
                     )
                     (i32.const -1)
                    )
                   )
                   (br $__rjti$2)
                  )
                 )
                 (br $__rjto$2)
                )
                (br_if $while-out7
                 (i32.ge_u
                  (local.get $13)
                  (i32.const 127)
                 )
                )
               )
               (local.set $4
                (i32.add
                 (local.get $4)
                 (i32.const 1)
                )
               )
               (i32.store
                (local.get $5)
                (local.get $6)
               )
               (br_if $label$break$L23
                (i32.eqz
                 (local.tee $3
                  (i32.add
                   (local.get $3)
                   (i32.const -1)
                  )
                 )
                )
               )
               (local.set $5
                (i32.add
                 (local.get $5)
                 (i32.const 4)
                )
               )
               (br $while-in8)
              )
             )
             (if
              (i32.gt_u
               (local.tee $6
                (i32.add
                 (local.get $6)
                 (i32.const -194)
                )
               )
               (i32.const 50)
              )
              (block
               (local.set $6
                (local.get $5)
               )
               (br $__rjti$4)
              )
             )
             (local.set $14
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $6)
                 (i32.const 2)
                )
                (i32.const 29040)
               )
              )
             )
             (local.set $15
              (local.get $5)
             )
             (local.set $16
              (local.get $3)
             )
             (local.set $8
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
             (local.set $3
              (i32.const 48)
             )
             (br $label$continue$L20)
            )
            (local.set $4
             (local.get $12)
            )
           )
           (i32.store
            (local.get $1)
            (local.get $4)
           )
           (local.set $10
            (local.get $2)
           )
           (local.set $3
            (i32.const 63)
           )
           (br $label$continue$L20)
          )
          (if
           (i32.eq
            (local.get $3)
            (i32.const 48)
           )
           (if
            (i32.gt_u
             (i32.or
              (i32.add
               (local.tee $3
                (i32.shr_u
                 (local.tee $4
                  (i32.load8_u
                   (local.get $8)
                  )
                 )
                 (i32.const 3)
                )
               )
               (i32.const -16)
              )
              (i32.add
               (local.get $3)
               (i32.shr_s
                (local.get $14)
                (i32.const 26)
               )
              )
             )
             (i32.const 7)
            )
            (block
             (local.set $3
              (local.get $15)
             )
             (local.set $6
              (local.get $14)
             )
             (local.set $4
              (local.get $8)
             )
             (local.set $5
              (local.get $16)
             )
             (br $__rjti$3)
            )
            (block $label$break$L21
             (local.set $5
              (i32.add
               (local.get $8)
               (i32.const 1)
              )
             )
             (if
              (i32.lt_s
               (local.tee $3
                (i32.or
                 (i32.add
                  (local.get $4)
                  (i32.const -128)
                 )
                 (i32.shl
                  (local.get $14)
                  (i32.const 6)
                 )
                )
               )
               (i32.const 0)
              )
              (block $do-once
               (if
                (i32.le_u
                 (local.tee $4
                  (i32.add
                   (i32.load8_u
                    (local.get $5)
                   )
                   (i32.const -128)
                  )
                 )
                 (i32.const 63)
                )
                (block
                 (local.set $5
                  (i32.add
                   (local.get $8)
                   (i32.const 2)
                  )
                 )
                 (if
                  (i32.ge_s
                   (local.tee $3
                    (i32.or
                     (local.get $4)
                     (i32.shl
                      (local.get $3)
                      (i32.const 6)
                     )
                    )
                   )
                   (i32.const 0)
                  )
                  (block
                   (local.set $12
                    (local.get $5)
                   )
                   (br $do-once)
                  )
                 )
                 (if
                  (i32.le_u
                   (local.tee $5
                    (i32.add
                     (i32.load8_u
                      (local.get $5)
                     )
                     (i32.const -128)
                    )
                   )
                   (i32.const 63)
                  )
                  (block
                   (local.set $12
                    (i32.add
                     (local.get $8)
                     (i32.const 3)
                    )
                   )
                   (local.set $3
                    (i32.or
                     (local.get $5)
                     (i32.shl
                      (local.get $3)
                      (i32.const 6)
                     )
                    )
                   )
                   (br $do-once)
                  )
                 )
                )
               )
               (local.set $21
                (i32.add
                 (local.get $8)
                 (i32.const -1)
                )
               )
               (i32.store
                (i32.const 53312)
                (i32.const 25)
               )
               (br $label$break$L21)
              )
              (local.set $12
               (local.get $5)
              )
             )
             (i32.store
              (local.get $15)
              (local.get $3)
             )
             (local.set $18
              (i32.add
               (local.get $15)
               (i32.const 4)
              )
             )
             (local.set $17
              (i32.add
               (local.get $16)
               (i32.const -1)
              )
             )
             (local.set $3
              (i32.const 33)
             )
             (br $label$continue$L20)
            )
           )
           (if
            (i32.eq
             (local.get $3)
             (i32.const 63)
            )
            (return
             (local.get $10)
            )
           )
          )
         )
        )
       )
       (br $__rjto$5)
      )
      (local.set $4
       (i32.add
        (local.get $4)
        (i32.const -1)
       )
      )
      (br_if $__rjti$5
       (local.get $6)
      )
      (local.set $6
       (local.get $3)
      )
      (local.set $3
       (local.get $5)
      )
     )
     (local.set $3
      (if (result i32)
       (i32.load8_s
        (local.get $4)
       )
       (local.get $6)
       (block
        (if
         (local.get $6)
         (block
          (i32.store
           (local.get $6)
           (i32.const 0)
          )
          (i32.store
           (local.get $1)
           (i32.const 0)
          )
         )
        )
        (local.set $10
         (i32.sub
          (local.get $2)
          (local.get $3)
         )
        )
        (local.set $3
         (i32.const 63)
        )
        (br $label$continue$L20)
       )
      )
     )
    )
    (i32.store
     (i32.const 53312)
     (i32.const 25)
    )
    (local.set $21
     (if (result i32)
      (local.get $3)
      (local.get $4)
      (block
       (local.set $10
        (i32.const -1)
       )
       (local.set $3
        (i32.const 63)
       )
       (br $label$continue$L20)
      )
     )
    )
   )
   (i32.store
    (local.get $1)
    (local.get $21)
   )
   (local.set $10
    (i32.const -1)
   )
   (local.set $3
    (i32.const 63)
   )
   (br $label$continue$L20)
  )
 )
 (func $_strtoull_l (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i64)
  (call $_strtox
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (i64.const -1)
  )
 )
 (func $_strtoll_l (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i64)
  (call $_strtox
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (i64.const -9223372036854775808)
  )
 )
 (func $___sin (; has Stack IR ;) (param $0 f64) (param $1 f64) (param $2 i32) (result f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local.set $5
   (f64.add
    (f64.mul
     (f64.mul
      (local.tee $3
       (f64.mul
        (local.get $0)
        (local.get $0)
       )
      )
      (f64.mul
       (local.get $3)
       (local.get $3)
      )
     )
     (f64.add
      (f64.mul
       (local.get $3)
       (f64.const 1.58969099521155e-10)
      )
      (f64.const -2.5050760253406863e-08)
     )
    )
    (f64.add
     (f64.mul
      (local.get $3)
      (f64.add
       (f64.mul
        (local.get $3)
        (f64.const 2.7557313707070068e-06)
       )
       (f64.const -1.984126982985795e-04)
      )
     )
     (f64.const 0.00833333333332249)
    )
   )
  )
  (local.set $4
   (f64.mul
    (local.get $3)
    (local.get $0)
   )
  )
  (if (result f64)
   (local.get $2)
   (f64.sub
    (local.get $0)
    (f64.add
     (f64.mul
      (local.get $4)
      (f64.const 0.16666666666666632)
     )
     (f64.sub
      (f64.mul
       (local.get $3)
       (f64.sub
        (f64.mul
         (local.get $1)
         (f64.const 0.5)
        )
        (f64.mul
         (local.get $4)
         (local.get $5)
        )
       )
      )
      (local.get $1)
     )
    )
   )
   (f64.add
    (f64.mul
     (local.get $4)
     (f64.add
      (f64.mul
       (local.get $3)
       (local.get $5)
      )
      (f64.const -0.16666666666666632)
     )
    )
    (local.get $0)
   )
  )
 )
 (func $___cos (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local.set $3
   (f64.mul
    (local.tee $2
     (f64.mul
      (local.get $0)
      (local.get $0)
     )
    )
    (local.get $2)
   )
  )
  (f64.add
   (local.tee $5
    (f64.sub
     (f64.const 1)
     (local.tee $4
      (f64.mul
       (local.get $2)
       (f64.const 0.5)
      )
     )
    )
   )
   (f64.add
    (f64.sub
     (f64.sub
      (f64.const 1)
      (local.get $5)
     )
     (local.get $4)
    )
    (f64.sub
     (f64.mul
      (local.get $2)
      (f64.add
       (f64.mul
        (local.get $2)
        (f64.add
         (f64.mul
          (local.get $2)
          (f64.add
           (f64.mul
            (local.get $2)
            (f64.const 2.480158728947673e-05)
           )
           (f64.const -0.001388888888887411)
          )
         )
         (f64.const 0.0416666666666666)
        )
       )
       (f64.mul
        (f64.mul
         (local.get $3)
         (local.get $3)
        )
        (f64.add
         (f64.mul
          (local.get $2)
          (f64.sub
           (f64.const 2.087572321298175e-09)
           (f64.mul
            (local.get $2)
            (f64.const 1.1359647557788195e-11)
           )
          )
         )
         (f64.const -2.7557314351390663e-07)
        )
       )
      )
     )
     (f64.mul
      (local.get $0)
      (local.get $1)
     )
    )
   )
  )
 )
 (func $___rem_pio2 (; has Stack IR ;) (param $0 f64) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  (local $11 i32)
  (local $12 i64)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 16)
   )
  )
  (local.set $9
   (i32.wrap_i64
    (i64.shr_u
     (local.tee $12
      (i64.reinterpret_f64
       (local.get $0)
      )
     )
     (i64.const 63)
    )
   )
  )
  (local.set $1
   (block $__rjto$0 (result i32)
    (block $__rjti$0
     (br $__rjto$0
      (if (result i32)
       (i32.lt_u
        (local.tee $4
         (i32.and
          (local.tee $3
           (i32.wrap_i64
            (i64.shr_u
             (local.get $12)
             (i64.const 32)
            )
           )
          )
          (i32.const 2147483647)
         )
        )
        (i32.const 1074752123)
       )
       (block (result i32)
        (br_if $__rjti$0
         (i32.eq
          (i32.and
           (local.get $3)
           (i32.const 1048575)
          )
          (i32.const 598523)
         )
        )
        (local.set $3
         (i32.ne
          (local.get $9)
          (i32.const 0)
         )
        )
        (if (result i32)
         (i32.lt_u
          (local.get $4)
          (i32.const 1073928573)
         )
         (if (result i32)
          (local.get $3)
          (block (result i32)
           (f64.store
            (local.get $1)
            (local.tee $2
             (f64.add
              (local.tee $0
               (f64.add
                (local.get $0)
                (f64.const 1.5707963267341256)
               )
              )
              (f64.const 6.077100506506192e-11)
             )
            )
           )
           (f64.store offset=8
            (local.get $1)
            (f64.add
             (f64.sub
              (local.get $0)
              (local.get $2)
             )
             (f64.const 6.077100506506192e-11)
            )
           )
           (i32.const -1)
          )
          (block (result i32)
           (f64.store
            (local.get $1)
            (local.tee $2
             (f64.add
              (local.tee $0
               (f64.add
                (local.get $0)
                (f64.const -1.5707963267341256)
               )
              )
              (f64.const -6.077100506506192e-11)
             )
            )
           )
           (f64.store offset=8
            (local.get $1)
            (f64.add
             (f64.sub
              (local.get $0)
              (local.get $2)
             )
             (f64.const -6.077100506506192e-11)
            )
           )
           (i32.const 1)
          )
         )
         (if (result i32)
          (local.get $3)
          (block (result i32)
           (f64.store
            (local.get $1)
            (local.tee $2
             (f64.add
              (local.tee $0
               (f64.add
                (local.get $0)
                (f64.const 3.1415926534682512)
               )
              )
              (f64.const 1.2154201013012384e-10)
             )
            )
           )
           (f64.store offset=8
            (local.get $1)
            (f64.add
             (f64.sub
              (local.get $0)
              (local.get $2)
             )
             (f64.const 1.2154201013012384e-10)
            )
           )
           (i32.const -2)
          )
          (block (result i32)
           (f64.store
            (local.get $1)
            (local.tee $2
             (f64.add
              (local.tee $0
               (f64.add
                (local.get $0)
                (f64.const -3.1415926534682512)
               )
              )
              (f64.const -1.2154201013012384e-10)
             )
            )
           )
           (f64.store offset=8
            (local.get $1)
            (f64.add
             (f64.sub
              (local.get $0)
              (local.get $2)
             )
             (f64.const -1.2154201013012384e-10)
            )
           )
           (i32.const 2)
          )
         )
        )
       )
       (block $do-once (result i32)
        (if
         (i32.lt_u
          (local.get $4)
          (i32.const 1075594812)
         )
         (if
          (i32.lt_u
           (local.get $4)
           (i32.const 1075183037)
          )
          (block
           (br_if $__rjti$0
            (i32.eq
             (local.get $4)
             (i32.const 1074977148)
            )
           )
           (if
            (local.get $9)
            (block
             (f64.store
              (local.get $1)
              (local.tee $2
               (f64.add
                (local.tee $0
                 (f64.add
                  (local.get $0)
                  (f64.const 4.712388980202377)
                 )
                )
                (f64.const 1.8231301519518578e-10)
               )
              )
             )
             (f64.store offset=8
              (local.get $1)
              (f64.add
               (f64.sub
                (local.get $0)
                (local.get $2)
               )
               (f64.const 1.8231301519518578e-10)
              )
             )
             (br $do-once
              (i32.const -3)
             )
            )
            (block
             (f64.store
              (local.get $1)
              (local.tee $2
               (f64.add
                (local.tee $0
                 (f64.add
                  (local.get $0)
                  (f64.const -4.712388980202377)
                 )
                )
                (f64.const -1.8231301519518578e-10)
               )
              )
             )
             (f64.store offset=8
              (local.get $1)
              (f64.add
               (f64.sub
                (local.get $0)
                (local.get $2)
               )
               (f64.const -1.8231301519518578e-10)
              )
             )
             (br $do-once
              (i32.const 3)
             )
            )
           )
          )
          (block
           (br_if $__rjti$0
            (i32.eq
             (local.get $4)
             (i32.const 1075388923)
            )
           )
           (if
            (local.get $9)
            (block
             (f64.store
              (local.get $1)
              (local.tee $2
               (f64.add
                (local.tee $0
                 (f64.add
                  (local.get $0)
                  (f64.const 6.2831853069365025)
                 )
                )
                (f64.const 2.430840202602477e-10)
               )
              )
             )
             (f64.store offset=8
              (local.get $1)
              (f64.add
               (f64.sub
                (local.get $0)
                (local.get $2)
               )
               (f64.const 2.430840202602477e-10)
              )
             )
             (br $do-once
              (i32.const -4)
             )
            )
            (block
             (f64.store
              (local.get $1)
              (local.tee $2
               (f64.add
                (local.tee $0
                 (f64.add
                  (local.get $0)
                  (f64.const -6.2831853069365025)
                 )
                )
                (f64.const -2.430840202602477e-10)
               )
              )
             )
             (f64.store offset=8
              (local.get $1)
              (f64.add
               (f64.sub
                (local.get $0)
                (local.get $2)
               )
               (f64.const -2.430840202602477e-10)
              )
             )
             (br $do-once
              (i32.const 4)
             )
            )
           )
          )
         )
        )
        (br_if $__rjti$0
         (i32.lt_u
          (local.get $4)
          (i32.const 1094263291)
         )
        )
        (if
         (i32.gt_u
          (local.get $4)
          (i32.const 2146435071)
         )
         (block
          (f64.store offset=8
           (local.get $1)
           (local.tee $0
            (f64.sub
             (local.get $0)
             (local.get $0)
            )
           )
          )
          (f64.store
           (local.get $1)
           (local.get $0)
          )
          (br $do-once
           (i32.const 0)
          )
         )
        )
        (local.set $0
         (f64.reinterpret_i64
          (i64.or
           (i64.and
            (local.get $12)
            (i64.const 4503599627370495)
           )
           (i64.const 4710765210229538816)
          )
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in
         (f64.store
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 3)
           )
           (local.get $8)
          )
          (local.tee $2
           (f64.convert_i32_s
            (i32.trunc_f64_s
             (local.get $0)
            )
           )
          )
         )
         (local.set $0
          (f64.mul
           (f64.sub
            (local.get $0)
            (local.get $2)
           )
           (f64.const 16777216)
          )
         )
         (br_if $while-in
          (i32.ne
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (i32.const 2)
          )
         )
        )
        (f64.store offset=16
         (local.get $8)
         (local.get $0)
        )
        (if
         (f64.eq
          (local.get $0)
          (f64.const 0)
         )
         (block
          (local.set $3
           (i32.const 1)
          )
          (loop $while-in1
           (local.set $11
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
           (if
            (f64.eq
             (f64.load
              (i32.add
               (i32.shl
                (local.get $3)
                (i32.const 3)
               )
               (local.get $8)
              )
             )
             (f64.const 0)
            )
            (block
             (local.set $3
              (local.get $11)
             )
             (br $while-in1)
            )
           )
          )
         )
         (local.set $3
          (i32.const 2)
         )
        )
        (local.set $3
         (call $___rem_pio2_large
          (local.get $8)
          (local.get $6)
          (i32.add
           (i32.shr_u
            (local.get $4)
            (i32.const 20)
           )
           (i32.const -1046)
          )
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
        )
        (local.set $0
         (f64.load
          (local.get $6)
         )
        )
        (if (result i32)
         (local.get $9)
         (block (result i32)
          (f64.store
           (local.get $1)
           (f64.neg
            (local.get $0)
           )
          )
          (f64.store offset=8
           (local.get $1)
           (f64.neg
            (f64.load offset=8
             (local.get $6)
            )
           )
          )
          (i32.sub
           (i32.const 0)
           (local.get $3)
          )
         )
         (block (result i32)
          (f64.store
           (local.get $1)
           (local.get $0)
          )
          (f64.store offset=8
           (local.get $1)
           (f64.load offset=8
            (local.get $6)
           )
          )
          (local.get $3)
         )
        )
       )
      )
     )
    )
    (local.set $3
     (i32.trunc_f64_s
      (local.tee $5
       (f64.add
        (f64.add
         (f64.mul
          (local.get $0)
          (f64.const 0.6366197723675814)
         )
         (f64.const 6755399441055744)
        )
        (f64.const -6755399441055744)
       )
      )
     )
    )
    (f64.store
     (local.get $1)
     (local.tee $7
      (f64.sub
       (local.tee $2
        (f64.sub
         (local.get $0)
         (f64.mul
          (local.get $5)
          (f64.const 1.5707963267341256)
         )
        )
       )
       (local.tee $0
        (f64.mul
         (local.get $5)
         (f64.const 6.077100506506192e-11)
        )
       )
      )
     )
    )
    (if
     (i32.gt_s
      (i32.sub
       (local.tee $11
        (i32.shr_u
         (local.get $4)
         (i32.const 20)
        )
       )
       (i32.and
        (i32.wrap_i64
         (i64.shr_u
          (i64.reinterpret_f64
           (local.get $7)
          )
          (i64.const 52)
         )
        )
        (i32.const 2047)
       )
      )
      (i32.const 16)
     )
     (block
      (local.set $0
       (f64.sub
        (f64.mul
         (local.get $5)
         (f64.const 2.0222662487959506e-21)
        )
        (f64.sub
         (f64.sub
          (local.get $2)
          (local.tee $2
           (f64.sub
            (local.get $2)
            (local.tee $0
             (f64.mul
              (local.get $5)
              (f64.const 6.077100506303966e-11)
             )
            )
           )
          )
         )
         (local.get $0)
        )
       )
      )
      (f64.store
       (local.get $1)
       (local.tee $7
        (f64.sub
         (local.get $2)
         (local.get $0)
        )
       )
      )
      (local.set $10
       (f64.sub
        (f64.mul
         (local.get $5)
         (f64.const 8.4784276603689e-32)
        )
        (f64.sub
         (f64.sub
          (local.get $2)
          (local.tee $5
           (f64.sub
            (local.get $2)
            (local.tee $10
             (f64.mul
              (local.get $5)
              (f64.const 2.0222662487111665e-21)
             )
            )
           )
          )
         )
         (local.get $10)
        )
       )
      )
      (if
       (i32.gt_s
        (i32.sub
         (local.get $11)
         (i32.and
          (i32.wrap_i64
           (i64.shr_u
            (i64.reinterpret_f64
             (local.get $7)
            )
            (i64.const 52)
           )
          )
          (i32.const 2047)
         )
        )
        (i32.const 49)
       )
       (block
        (f64.store
         (local.get $1)
         (local.tee $7
          (f64.sub
           (local.get $5)
           (local.get $10)
          )
         )
        )
        (local.set $0
         (local.get $10)
        )
        (local.set $2
         (local.get $5)
        )
       )
      )
     )
    )
    (f64.store offset=8
     (local.get $1)
     (f64.sub
      (f64.sub
       (local.get $2)
       (local.get $7)
      )
      (local.get $0)
     )
    )
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $1)
 )
 (func $___rem_pio2_large (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local.set $12
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 560)
   )
  )
  (local.set $15
   (i32.add
    (local.get $12)
    (i32.const 320)
   )
  )
  (local.set $17
   (select
    (local.tee $5
     (i32.div_s
      (i32.add
       (local.get $2)
       (i32.const -3)
      )
      (i32.const 24)
     )
    )
    (i32.const 0)
    (i32.gt_s
     (local.get $5)
     (i32.const 0)
    )
   )
  )
  (if
   (i32.ge_s
    (i32.add
     (local.tee $14
      (i32.load
       (i32.const 33956)
      )
     )
     (local.tee $8
      (i32.add
       (local.get $3)
       (i32.const -1)
      )
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $9
     (i32.add
      (local.get $3)
      (local.get $14)
     )
    )
    (local.set $5
     (i32.sub
      (local.get $17)
      (local.get $8)
     )
    )
    (loop $while-in
     (f64.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 3)
       )
       (local.get $15)
      )
      (if (result f64)
       (i32.lt_s
        (local.get $5)
        (i32.const 0)
       )
       (f64.const 0)
       (f64.convert_i32_s
        (i32.load
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (i32.const 33968)
         )
        )
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.get $9)
      )
     )
    )
   )
  )
  (local.set $10
   (i32.add
    (local.get $12)
    (i32.const 480)
   )
  )
  (local.set $16
   (i32.add
    (local.get $12)
    (i32.const 160)
   )
  )
  (local.set $9
   (i32.add
    (local.tee $21
     (i32.mul
      (local.get $17)
      (i32.const -24)
     )
    )
    (i32.add
     (local.get $2)
     (i32.const -24)
    )
   )
  )
  (local.set $7
   (i32.gt_s
    (local.get $3)
    (i32.const 0)
   )
  )
  (local.set $5
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (local.get $7)
    (block
     (local.set $11
      (i32.add
       (local.get $5)
       (local.get $8)
      )
     )
     (local.set $4
      (f64.const 0)
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in3
      (local.set $4
       (f64.add
        (local.get $4)
        (f64.mul
         (f64.load
          (i32.add
           (i32.shl
            (local.get $6)
            (i32.const 3)
           )
           (local.get $0)
          )
         )
         (f64.load
          (i32.add
           (i32.shl
            (i32.sub
             (local.get $11)
             (local.get $6)
            )
            (i32.const 3)
           )
           (local.get $15)
          )
         )
        )
       )
      )
      (br_if $while-in3
       (i32.ne
        (local.tee $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
      )
     )
    )
    (local.set $4
     (f64.const 0)
    )
   )
   (f64.store
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 3)
     )
     (local.get $12)
    )
    (local.get $4)
   )
   (local.set $6
    (i32.add
     (local.get $5)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (local.get $5)
     (local.get $14)
    )
    (block
     (local.set $5
      (local.get $6)
     )
     (br $while-in1)
    )
   )
  )
  (local.set $18
   (i32.gt_s
    (local.get $9)
    (i32.const 0)
   )
  )
  (local.set $19
   (i32.sub
    (i32.const 24)
    (local.get $9)
   )
  )
  (local.set $22
   (i32.sub
    (i32.const 23)
    (local.get $9)
   )
  )
  (local.set $23
   (i32.eqz
    (local.get $9)
   )
  )
  (local.set $24
   (i32.gt_s
    (local.get $3)
    (i32.const 0)
   )
  )
  (local.set $5
   (local.get $14)
  )
  (block $__rjto$4
   (block $__rjti$4
    (loop $while-in5
     (block $__rjti$3
      (local.set $4
       (f64.load
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 3)
         )
         (local.get $12)
        )
       )
      )
      (if
       (local.tee $13
        (i32.gt_s
         (local.get $5)
         (i32.const 0)
        )
       )
       (block
        (local.set $6
         (local.get $5)
        )
        (local.set $7
         (i32.const 0)
        )
        (loop $while-in7
         (i32.store
          (i32.add
           (i32.shl
            (local.get $7)
            (i32.const 2)
           )
           (local.get $10)
          )
          (i32.trunc_f64_s
           (f64.sub
            (local.get $4)
            (f64.mul
             (local.tee $4
              (f64.convert_i32_s
               (i32.trunc_f64_s
                (f64.mul
                 (local.get $4)
                 (f64.const 5.9604644775390625e-08)
                )
               )
              )
             )
             (f64.const 16777216)
            )
           )
          )
         )
         (local.set $4
          (f64.add
           (f64.load
            (i32.add
             (i32.shl
              (local.tee $8
               (i32.add
                (local.get $6)
                (i32.const -1)
               )
              )
              (i32.const 3)
             )
             (local.get $12)
            )
           )
           (local.get $4)
          )
         )
         (local.set $7
          (i32.add
           (local.get $7)
           (i32.const 1)
          )
         )
         (if
          (i32.gt_s
           (local.get $6)
           (i32.const 1)
          )
          (block
           (local.set $6
            (local.get $8)
           )
           (br $while-in7)
          )
         )
        )
       )
      )
      (local.set $6
       (i32.trunc_f64_s
        (local.tee $4
         (f64.sub
          (local.tee $4
           (call $_scalbn
            (local.get $4)
            (local.get $9)
           )
          )
          (f64.mul
           (f64.floor
            (f64.mul
             (local.get $4)
             (f64.const 0.125)
            )
           )
           (f64.const 8)
          )
         )
        )
       )
      )
      (local.set $4
       (f64.sub
        (local.get $4)
        (f64.convert_i32_s
         (local.get $6)
        )
       )
      )
      (block $__rjto$2
       (block $__rjti$2
        (block $__rjti$1
         (local.set $11
          (if (result i32)
           (local.get $18)
           (block
            (local.set $8
             (i32.shr_s
              (local.tee $11
               (i32.load
                (local.tee $7
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $5)
                    (i32.const -1)
                   )
                   (i32.const 2)
                  )
                  (local.get $10)
                 )
                )
               )
              )
              (local.get $19)
             )
            )
            (i32.store
             (local.get $7)
             (local.tee $7
              (i32.sub
               (local.get $11)
               (i32.shl
                (local.get $8)
                (local.get $19)
               )
              )
             )
            )
            (local.set $11
             (i32.shr_s
              (local.get $7)
              (local.get $22)
             )
            )
            (local.set $6
             (i32.add
              (local.get $6)
              (local.get $8)
             )
            )
            (br $__rjti$1)
           )
           (if (result i32)
            (local.get $23)
            (block
             (local.set $11
              (i32.shr_s
               (i32.load
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $5)
                   (i32.const -1)
                  )
                  (i32.const 2)
                 )
                 (local.get $10)
                )
               )
               (i32.const 23)
              )
             )
             (br $__rjti$1)
            )
            (if (result i32)
             (f64.ge
              (local.get $4)
              (f64.const 0.5)
             )
             (block
              (local.set $11
               (i32.const 2)
              )
              (br $__rjti$2)
             )
             (i32.const 0)
            )
           )
          )
         )
         (br $__rjto$2)
        )
        (br_if $__rjti$2
         (i32.gt_s
          (local.get $11)
          (i32.const 0)
         )
        )
        (br $__rjto$2)
       )
       (local.set $8
        (local.get $6)
       )
       (local.set $7
        (if (result i32)
         (local.get $13)
         (block (result i32)
          (local.set $6
           (i32.const 0)
          )
          (local.set $13
           (i32.const 0)
          )
          (loop $while-in9 (result i32)
           (local.set $7
            (i32.load
             (local.tee $25
              (i32.add
               (i32.shl
                (local.get $13)
                (i32.const 2)
               )
               (local.get $10)
              )
             )
            )
           )
           (block $__rjto$0
            (block $__rjti$0
             (local.set $6
              (if (result i32)
               (local.get $6)
               (block
                (local.set $20
                 (i32.const 16777215)
                )
                (br $__rjti$0)
               )
               (if (result i32)
                (local.get $7)
                (block
                 (local.set $6
                  (i32.const 1)
                 )
                 (local.set $20
                  (i32.const 16777216)
                 )
                 (br $__rjti$0)
                )
                (i32.const 0)
               )
              )
             )
             (br $__rjto$0)
            )
            (i32.store
             (local.get $25)
             (i32.sub
              (local.get $20)
              (local.get $7)
             )
            )
           )
           (br_if $while-in9
            (i32.ne
             (local.tee $13
              (i32.add
               (local.get $13)
               (i32.const 1)
              )
             )
             (local.get $5)
            )
           )
           (local.get $6)
          )
         )
         (i32.const 0)
        )
       )
       (if
        (local.get $18)
        (block $label$break$L44
         (block $switch-case11
          (block $switch-case
           (br_table $switch-case $switch-case11 $label$break$L44
            (i32.sub
             (local.get $9)
             (i32.const 1)
            )
           )
          )
          (i32.store
           (local.tee $6
            (i32.add
             (i32.shl
              (i32.add
               (local.get $5)
               (i32.const -1)
              )
              (i32.const 2)
             )
             (local.get $10)
            )
           )
           (i32.and
            (i32.load
             (local.get $6)
            )
            (i32.const 8388607)
           )
          )
          (br $label$break$L44)
         )
         (i32.store
          (local.tee $6
           (i32.add
            (i32.shl
             (i32.add
              (local.get $5)
              (i32.const -1)
             )
             (i32.const 2)
            )
            (local.get $10)
           )
          )
          (i32.and
           (i32.load
            (local.get $6)
           )
           (i32.const 4194303)
          )
         )
        )
       )
       (local.set $6
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (if
        (i32.eq
         (local.get $11)
         (i32.const 2)
        )
        (block
         (local.set $4
          (f64.sub
           (f64.const 1)
           (local.get $4)
          )
         )
         (if
          (local.get $7)
          (local.set $4
           (f64.sub
            (local.get $4)
            (call $_scalbn
             (f64.const 1)
             (local.get $9)
            )
           )
          )
         )
         (local.set $11
          (i32.const 2)
         )
        )
       )
      )
      (br_if $__rjti$4
       (f64.ne
        (local.get $4)
        (f64.const 0)
       )
      )
      (if
       (i32.gt_s
        (local.get $5)
        (local.get $14)
       )
       (block
        (local.set $13
         (i32.const 0)
        )
        (local.set $7
         (local.get $5)
        )
        (loop $while-in13
         (local.set $13
          (i32.or
           (local.get $13)
           (i32.load
            (i32.add
             (i32.shl
              (local.tee $7
               (i32.add
                (local.get $7)
                (i32.const -1)
               )
              )
              (i32.const 2)
             )
             (local.get $10)
            )
           )
          )
         )
         (br_if $while-in13
          (i32.gt_s
           (local.get $7)
           (local.get $14)
          )
         )
        )
        (br_if $__rjti$3
         (local.get $13)
        )
       )
      )
      (local.set $6
       (i32.const 1)
      )
      (loop $while-in15
       (local.set $8
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (if
        (i32.eqz
         (i32.load
          (i32.add
           (i32.shl
            (i32.sub
             (local.get $14)
             (local.get $6)
            )
            (i32.const 2)
           )
           (local.get $10)
          )
         )
        )
        (block
         (local.set $6
          (local.get $8)
         )
         (br $while-in15)
        )
       )
      )
      (local.set $8
       (i32.add
        (local.get $5)
        (local.get $6)
       )
      )
      (loop $while-in17
       (f64.store
        (i32.add
         (i32.shl
          (local.tee $7
           (i32.add
            (local.get $3)
            (local.get $5)
           )
          )
          (i32.const 3)
         )
         (local.get $15)
        )
        (f64.convert_i32_s
         (i32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.tee $6
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (local.get $17)
            )
            (i32.const 2)
           )
           (i32.const 33968)
          )
         )
        )
       )
       (if
        (local.get $24)
        (block
         (local.set $4
          (f64.const 0)
         )
         (local.set $5
          (i32.const 0)
         )
         (loop $while-in19
          (local.set $4
           (f64.add
            (local.get $4)
            (f64.mul
             (f64.load
              (i32.add
               (i32.shl
                (local.get $5)
                (i32.const 3)
               )
               (local.get $0)
              )
             )
             (f64.load
              (i32.add
               (i32.shl
                (i32.sub
                 (local.get $7)
                 (local.get $5)
                )
                (i32.const 3)
               )
               (local.get $15)
              )
             )
            )
           )
          )
          (br_if $while-in19
           (i32.ne
            (local.tee $5
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.get $3)
           )
          )
         )
        )
        (local.set $4
         (f64.const 0)
        )
       )
       (f64.store
        (i32.add
         (i32.shl
          (local.get $6)
          (i32.const 3)
         )
         (local.get $12)
        )
        (local.get $4)
       )
       (if
        (i32.lt_s
         (local.get $6)
         (local.get $8)
        )
        (block
         (local.set $5
          (local.get $6)
         )
         (br $while-in17)
        )
       )
      )
      (local.set $5
       (local.get $8)
      )
      (br $while-in5)
     )
    )
    (local.set $0
     (local.get $9)
    )
    (local.set $0
     (loop $while-in21 (result i32)
      (local.set $0
       (i32.add
        (local.get $0)
        (i32.const -24)
       )
      )
      (br_if $while-in21
       (i32.eqz
        (i32.load
         (i32.add
          (i32.shl
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const -1)
            )
           )
           (i32.const 2)
          )
          (local.get $10)
         )
        )
       )
      )
      (local.set $2
       (local.get $0)
      )
      (local.get $5)
     )
    )
    (br $__rjto$4)
   )
   (i32.store
    (i32.add
     (i32.shl
      (local.tee $0
       (if (result i32)
        (f64.ge
         (local.tee $4
          (call $_scalbn
           (local.get $4)
           (i32.sub
            (i32.const 0)
            (local.get $9)
           )
          )
         )
         (f64.const 16777216)
        )
        (block (result i32)
         (i32.store
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 2)
           )
           (local.get $10)
          )
          (i32.trunc_f64_s
           (f64.sub
            (local.get $4)
            (f64.mul
             (f64.convert_i32_s
              (local.tee $3
               (i32.trunc_f64_s
                (f64.mul
                 (local.get $4)
                 (f64.const 5.9604644775390625e-08)
                )
               )
              )
             )
             (f64.const 16777216)
            )
           )
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (local.get $21)
          )
         )
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (block (result i32)
         (local.set $2
          (local.get $9)
         )
         (local.set $3
          (i32.trunc_f64_s
           (local.get $4)
          )
         )
         (local.get $5)
        )
       )
      )
      (i32.const 2)
     )
     (local.get $10)
    )
    (local.get $3)
   )
  )
  (local.set $4
   (call $_scalbn
    (f64.const 1)
    (local.get $2)
   )
  )
  (if
   (local.tee $9
    (i32.gt_s
     (local.get $0)
     (i32.const -1)
    )
   )
   (block
    (local.set $2
     (local.get $0)
    )
    (loop $while-in23
     (f64.store
      (i32.add
       (i32.shl
        (local.get $2)
        (i32.const 3)
       )
       (local.get $12)
      )
      (f64.mul
       (local.get $4)
       (f64.convert_i32_s
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (local.get $10)
         )
        )
       )
      )
     )
     (local.set $4
      (f64.mul
       (local.get $4)
       (f64.const 5.9604644775390625e-08)
      )
     )
     (local.set $3
      (i32.add
       (local.get $2)
       (i32.const -1)
      )
     )
     (if
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       (local.set $2
        (local.get $3)
       )
       (br $while-in23)
      )
     )
    )
    (if
     (local.get $9)
     (block
      (local.set $2
       (local.get $0)
      )
      (loop $while-in25
       (local.set $8
        (i32.sub
         (local.get $0)
         (local.get $2)
        )
       )
       (local.set $3
        (i32.const 0)
       )
       (local.set $4
        (f64.const 0)
       )
       (loop $while-in27
        (local.set $4
         (f64.add
          (local.get $4)
          (f64.mul
           (f64.load
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 3)
             )
             (i32.const 34240)
            )
           )
           (f64.load
            (i32.add
             (i32.shl
              (i32.add
               (local.get $2)
               (local.get $3)
              )
              (i32.const 3)
             )
             (local.get $12)
            )
           )
          )
         )
        )
        (local.set $5
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (if
         (i32.eqz
          (i32.or
           (i32.ge_s
            (local.get $3)
            (local.get $14)
           )
           (i32.ge_u
            (local.get $3)
            (local.get $8)
           )
          )
         )
         (block
          (local.set $3
           (local.get $5)
          )
          (br $while-in27)
         )
        )
       )
       (f64.store
        (i32.add
         (i32.shl
          (local.get $8)
          (i32.const 3)
         )
         (local.get $16)
        )
        (local.get $4)
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
       (if
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
        (block
         (local.set $2
          (local.get $3)
         )
         (br $while-in25)
        )
       )
      )
     )
    )
   )
  )
  (if
   (local.get $9)
   (block
    (local.set $4
     (f64.const 0)
    )
    (local.set $2
     (local.get $0)
    )
    (loop $while-in35
     (local.set $4
      (f64.add
       (local.get $4)
       (f64.load
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 3)
         )
         (local.get $16)
        )
       )
      )
     )
     (local.set $3
      (i32.add
       (local.get $2)
       (i32.const -1)
      )
     )
     (if
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       (local.set $2
        (local.get $3)
       )
       (br $while-in35)
      )
     )
    )
   )
   (local.set $4
    (f64.const 0)
   )
  )
  (f64.store
   (local.get $1)
   (select
    (local.get $4)
    (f64.neg
     (local.get $4)
    )
    (local.tee $5
     (i32.eqz
      (local.get $11)
     )
    )
   )
  )
  (local.set $4
   (f64.sub
    (f64.load
     (local.get $16)
    )
    (local.get $4)
   )
  )
  (if
   (i32.ge_s
    (local.get $0)
    (i32.const 1)
   )
   (block
    (local.set $2
     (i32.const 1)
    )
    (loop $while-in37
     (local.set $4
      (f64.add
       (local.get $4)
       (f64.load
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 3)
         )
         (local.get $16)
        )
       )
      )
     )
     (local.set $3
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (if
      (i32.ne
       (local.get $0)
       (local.get $2)
      )
      (block
       (local.set $2
        (local.get $3)
       )
       (br $while-in37)
      )
     )
    )
   )
  )
  (f64.store offset=8
   (local.get $1)
   (select
    (local.get $4)
    (f64.neg
     (local.get $4)
    )
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $12)
  )
  (i32.and
   (local.get $6)
   (i32.const 7)
  )
 )
 (func $_ungetc (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if
   (i32.eq
    (local.get $0)
    (i32.const -1)
   )
   (local.set $0
    (i32.const -1)
   )
   (block $do-once
    (drop
     (if (result i32)
      (i32.gt_s
       (i32.load offset=76
        (local.get $1)
       )
       (i32.const -1)
      )
      (i32.const 1)
      (i32.const 0)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (local.tee $2
        (i32.load offset=4
         (local.get $1)
        )
       )
      )
      (drop
       (call $___toread
        (local.get $1)
       )
      )
      (br_if $__rjti$0
       (local.tee $2
        (i32.load offset=4
         (local.get $1)
        )
       )
      )
      (br $__rjto$0)
     )
     (if
      (i32.gt_u
       (local.get $2)
       (i32.add
        (i32.load offset=44
         (local.get $1)
        )
        (i32.const -8)
       )
      )
      (block
       (i32.store offset=4
        (local.get $1)
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const -1)
         )
        )
       )
       (i32.store8
        (local.get $2)
        (local.get $0)
       )
       (i32.store
        (local.get $1)
        (i32.and
         (i32.load
          (local.get $1)
         )
         (i32.const -17)
        )
       )
       (br $do-once)
      )
     )
    )
    (local.set $0
     (i32.const -1)
    )
   )
  )
  (local.get $0)
 )
 (func $_vasprintf (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (i32.load
    (local.get $2)
   )
  )
  (local.set $0
   (if (result i32)
    (i32.lt_s
     (local.tee $4
      (call $_vsnprintf
       (i32.const 0)
       (i32.const 0)
       (local.get $1)
       (local.get $3)
      )
     )
     (i32.const 0)
    )
    (i32.const -1)
    (block (result i32)
     (i32.store
      (local.get $0)
      (local.tee $0
       (call $_malloc
        (local.tee $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
       )
      )
     )
     (if (result i32)
      (local.get $0)
      (call $_vsnprintf
       (local.get $0)
       (local.get $4)
       (local.get $1)
       (local.get $2)
      )
      (i32.const -1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_wcsrtombs (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (block $label$break$L1
   (if
    (local.get $0)
    (block
     (if
      (i32.gt_u
       (local.get $2)
       (i32.const 3)
      )
      (block $label$break$L10
       (local.set $3
        (local.get $2)
       )
       (local.set $4
        (i32.load
         (local.get $1)
        )
       )
       (loop $while-in2
        (block $while-out1
         (local.set $0
          (if (result i32)
           (i32.gt_u
            (i32.add
             (local.tee $5
              (i32.load
               (local.get $4)
              )
             )
             (i32.const -1)
            )
            (i32.const 126)
           )
           (block (result i32)
            (br_if $while-out1
             (i32.eqz
              (local.get $5)
             )
            )
            (if
             (i32.eq
              (local.tee $5
               (call $_wcrtomb
                (local.get $0)
                (local.get $5)
               )
              )
              (i32.const -1)
             )
             (block
              (local.set $2
               (i32.const -1)
              )
              (br $label$break$L1)
             )
            )
            (local.set $3
             (i32.sub
              (local.get $3)
              (local.get $5)
             )
            )
            (i32.add
             (local.get $0)
             (local.get $5)
            )
           )
           (block (result i32)
            (i32.store8
             (local.get $0)
             (local.get $5)
            )
            (local.set $3
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
            )
            (local.set $4
             (i32.load
              (local.get $1)
             )
            )
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
          )
         )
         (i32.store
          (local.get $1)
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 4)
           )
          )
         )
         (br_if $while-in2
          (i32.gt_u
           (local.get $3)
           (i32.const 3)
          )
         )
         (local.set $4
          (local.get $3)
         )
         (br $label$break$L10)
        )
       )
       (i32.store8
        (local.get $0)
        (i32.const 0)
       )
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (local.set $2
        (i32.sub
         (local.get $2)
         (local.get $3)
        )
       )
       (br $label$break$L1)
      )
      (local.set $4
       (local.get $2)
      )
     )
     (if
      (local.get $4)
      (block
       (local.set $3
        (local.get $0)
       )
       (local.set $0
        (i32.load
         (local.get $1)
        )
       )
       (block $__rjti$1
        (loop $while-in4
         (block $__rjti$0
          (local.set $4
           (if (result i32)
            (i32.gt_u
             (i32.add
              (local.tee $5
               (i32.load
                (local.get $0)
               )
              )
              (i32.const -1)
             )
             (i32.const 126)
            )
            (block (result i32)
             (br_if $__rjti$0
              (i32.eqz
               (local.get $5)
              )
             )
             (if
              (i32.eq
               (local.tee $5
                (call $_wcrtomb
                 (local.get $6)
                 (local.get $5)
                )
               )
               (i32.const -1)
              )
              (block
               (local.set $2
                (i32.const -1)
               )
               (br $label$break$L1)
              )
             )
             (br_if $__rjti$1
              (i32.lt_u
               (local.get $4)
               (local.get $5)
              )
             )
             (drop
              (call $_wcrtomb
               (local.get $3)
               (i32.load
                (local.get $0)
               )
              )
             )
             (local.set $3
              (i32.add
               (local.get $3)
               (local.get $5)
              )
             )
             (i32.sub
              (local.get $4)
              (local.get $5)
             )
            )
            (block (result i32)
             (i32.store8
              (local.get $3)
              (local.get $5)
             )
             (local.set $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.set $0
              (i32.load
               (local.get $1)
              )
             )
             (i32.add
              (local.get $4)
              (i32.const -1)
             )
            )
           )
          )
          (i32.store
           (local.get $1)
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 4)
            )
           )
          )
          (br_if $while-in4
           (local.get $4)
          )
          (br $label$break$L1)
         )
        )
        (i32.store8
         (local.get $3)
         (i32.const 0)
        )
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (local.set $2
         (i32.sub
          (local.get $2)
          (local.get $4)
         )
        )
        (br $label$break$L1)
       )
       (local.set $2
        (i32.sub
         (local.get $2)
         (local.get $4)
        )
       )
      )
     )
    )
    (if
     (local.tee $1
      (i32.load
       (local.tee $0
        (i32.load
         (local.get $1)
        )
       )
      )
     )
     (block
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in
       (if
        (i32.gt_u
         (local.get $1)
         (i32.const 127)
        )
        (if
         (i32.eq
          (local.tee $1
           (call $_wcrtomb
            (local.get $6)
            (local.get $1)
           )
          )
          (i32.const -1)
         )
         (block
          (local.set $2
           (i32.const -1)
          )
          (br $label$break$L1)
         )
        )
        (local.set $1
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.add
         (local.get $1)
         (local.get $2)
        )
       )
       (br_if $while-in
        (local.tee $1
         (i32.load
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 4)
           )
          )
         )
        )
       )
      )
     )
     (local.set $2
      (i32.const 0)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $2)
 )
 (func $_mbsnrtowcs (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1040)
   )
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $5)
     (i32.const 1024)
    )
   )
   (local.tee $6
    (i32.load
     (local.get $1)
    )
   )
  )
  (local.set $7
   (select
    (local.get $3)
    (i32.const 256)
    (local.tee $9
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $3
   (select
    (local.get $0)
    (local.tee $10
     (local.get $5)
    )
    (local.get $9)
   )
  )
  (if
   (i32.and
    (i32.ne
     (local.get $7)
     (i32.const 0)
    )
    (i32.ne
     (local.tee $5
      (local.get $6)
     )
     (i32.const 0)
    )
   )
   (block $label$break$L1
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (block $while-out
      (br_if $label$break$L1
       (i32.eqz
        (i32.or
         (local.tee $11
          (i32.ge_u
           (local.tee $6
            (i32.shr_u
             (local.get $2)
             (i32.const 2)
            )
           )
           (local.get $7)
          )
         )
         (i32.gt_u
          (local.get $2)
          (i32.const 131)
         )
        )
       )
      )
      (local.set $2
       (i32.sub
        (local.get $2)
        (local.tee $5
         (select
          (local.get $7)
          (local.get $6)
          (local.get $11)
         )
        )
       )
      )
      (br_if $while-out
       (i32.eq
        (local.tee $5
         (call $_mbsrtowcs
          (local.get $3)
          (local.get $8)
          (local.get $5)
          (local.get $4)
         )
        )
        (i32.const -1)
       )
      )
      (local.set $7
       (i32.sub
        (local.get $7)
        (select
         (i32.const 0)
         (local.get $5)
         (local.tee $6
          (i32.eq
           (local.get $3)
           (local.get $10)
          )
         )
        )
       )
      )
      (local.set $3
       (select
        (local.get $3)
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 2)
         )
         (local.get $3)
        )
        (local.get $6)
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (local.get $5)
       )
      )
      (br_if $while-in
       (i32.and
        (i32.ne
         (local.tee $5
          (i32.load
           (local.get $8)
          )
         )
         (i32.const 0)
        )
        (i32.ne
         (local.get $7)
         (i32.const 0)
        )
       )
      )
      (br $label$break$L1)
     )
    )
    (local.set $0
     (i32.const -1)
    )
    (local.set $7
     (i32.const 0)
    )
    (local.set $5
     (i32.load
      (local.get $8)
     )
    )
   )
   (local.set $0
    (i32.const 0)
   )
  )
  (if
   (local.get $5)
   (if
    (i32.and
     (i32.ne
      (local.get $7)
      (i32.const 0)
     )
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
    (block $label$break$L9
     (loop $while-in2
      (if
       (i32.ge_u
        (i32.add
         (local.tee $6
          (call $_mbrtowc
           (local.get $3)
           (local.get $5)
           (local.get $2)
           (local.get $4)
          )
         )
         (i32.const 2)
        )
        (i32.const 3)
       )
       (block
        (i32.store
         (local.get $8)
         (local.tee $5
          (i32.add
           (local.get $6)
           (i32.load
            (local.get $8)
           )
          )
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 4)
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (br_if $while-in2
         (i32.and
          (i32.ne
           (local.tee $7
            (i32.add
             (local.get $7)
             (i32.const -1)
            )
           )
           (i32.const 0)
          )
          (i32.ne
           (local.tee $2
            (i32.sub
             (local.get $2)
             (local.get $6)
            )
           )
           (i32.const 0)
          )
         )
        )
        (br $label$break$L9)
       )
      )
     )
     (block $switch-default
      (block $switch-case3
       (block $switch-case
        (br_table $switch-case $switch-case3 $switch-default
         (i32.sub
          (local.get $6)
          (i32.const -1)
         )
        )
       )
       (local.set $0
        (local.get $6)
       )
       (br $label$break$L9)
      )
      (i32.store
       (local.get $8)
       (i32.const 0)
      )
      (br $label$break$L9)
     )
     (i32.store
      (local.get $4)
      (i32.const 0)
     )
    )
   )
  )
  (if
   (local.get $9)
   (i32.store
    (local.get $1)
    (i32.load
     (local.get $8)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
  (local.get $0)
 )
 (func $_strtox_722 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 i32)
  (local $4 i64)
  (local $5 f64)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (drop
   (call $_memset
    (local.get $3)
    (i32.const 0)
    (i32.const 144)
   )
  )
  (i32.store offset=4
   (local.get $3)
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $3)
   (i32.const -1)
  )
  (i32.store offset=44
   (local.get $3)
   (local.get $0)
  )
  (i32.store offset=76
   (local.get $3)
   (i32.const -1)
  )
  (call $___shlim
   (local.get $3)
   (i64.const 0)
  )
  (local.set $5
   (call $___floatscan
    (local.get $3)
    (local.get $2)
    (i32.const 1)
   )
  )
  (local.set $4
   (i64.add
    (i64.load offset=120
     (local.get $3)
    )
    (i64.extend_i32_s
     (i32.sub
      (i32.load offset=4
       (local.get $3)
      )
      (i32.load offset=8
       (local.get $3)
      )
     )
    )
   )
  )
  (if
   (local.get $1)
   (i32.store
    (local.get $1)
    (select
     (local.get $0)
     (i32.add
      (local.get $0)
      (i32.wrap_i64
       (local.get $4)
      )
     )
     (i64.eqz
      (local.get $4)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $5)
 )
 (func $_wmemset (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (if
   (local.get $2)
   (loop $while-in
    (local.set $3
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $1)
    )
    (if
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const -1)
      )
     )
     (block
      (local.set $0
       (local.get $3)
      )
      (br $while-in)
     )
    )
   )
  )
 )
 (func $_wmemmove (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.lt_u
    (i32.shr_s
     (i32.sub
      (local.get $0)
      (local.get $1)
     )
     (i32.const 2)
    )
    (local.get $2)
   )
   (loop $while-in
    (i32.store
     (i32.add
      (i32.shl
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
       (i32.const 2)
      )
      (local.get $0)
     )
     (i32.load
      (i32.add
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
       (local.get $1)
      )
     )
    )
    (br_if $while-in
     (local.get $2)
    )
   )
   (if
    (local.get $2)
    (loop $while-in1
     (local.set $3
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (local.set $4
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (i32.load
       (local.get $1)
      )
     )
     (if
      (local.tee $2
       (i32.add
        (local.get $2)
        (i32.const -1)
       )
      )
      (block
       (local.set $1
        (local.get $3)
       )
       (local.set $0
        (local.get $4)
       )
       (br $while-in1)
      )
     )
    )
   )
  )
 )
 (func $_wcsnrtombs (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 272)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $8)
     (i32.const 256)
    )
   )
   (local.tee $4
    (i32.load
     (local.get $1)
    )
   )
  )
  (local.set $5
   (select
    (local.get $3)
    (i32.const 256)
    (local.tee $9
     (i32.ne
      (local.get $0)
      (i32.const 0)
     )
    )
   )
  )
  (local.set $0
   (select
    (local.get $0)
    (local.get $8)
    (local.get $9)
   )
  )
  (if
   (i32.and
    (i32.ne
     (local.get $5)
     (i32.const 0)
    )
    (i32.ne
     (local.get $4)
     (i32.const 0)
    )
   )
   (block $label$break$L1
    (local.set $3
     (i32.const 0)
    )
    (loop $while-in
     (block $while-out
      (br_if $label$break$L1
       (i32.eqz
        (i32.or
         (local.tee $6
          (i32.ge_u
           (local.get $2)
           (local.get $5)
          )
         )
         (i32.gt_u
          (local.get $2)
          (i32.const 32)
         )
        )
       )
      )
      (local.set $2
       (i32.sub
        (local.get $2)
        (local.tee $4
         (select
          (local.get $5)
          (local.get $2)
          (local.get $6)
         )
        )
       )
      )
      (br_if $while-out
       (i32.eq
        (local.tee $4
         (call $_wcsrtombs
          (local.get $0)
          (local.get $7)
          (local.get $4)
         )
        )
        (i32.const -1)
       )
      )
      (local.set $5
       (i32.sub
        (local.get $5)
        (select
         (i32.const 0)
         (local.get $4)
         (local.tee $6
          (i32.eq
           (local.get $0)
           (local.get $8)
          )
         )
        )
       )
      )
      (local.set $0
       (select
        (local.get $0)
        (i32.add
         (local.get $0)
         (local.get $4)
        )
        (local.get $6)
       )
      )
      (local.set $3
       (i32.add
        (local.get $3)
        (local.get $4)
       )
      )
      (br_if $while-in
       (i32.and
        (i32.ne
         (local.tee $4
          (i32.load
           (local.get $7)
          )
         )
         (i32.const 0)
        )
        (i32.ne
         (local.get $5)
         (i32.const 0)
        )
       )
      )
      (br $label$break$L1)
     )
    )
    (local.set $3
     (i32.const -1)
    )
    (local.set $5
     (i32.const 0)
    )
    (local.set $4
     (i32.load
      (local.get $7)
     )
    )
   )
   (local.set $3
    (i32.const 0)
   )
  )
  (if
   (local.get $4)
   (if
    (i32.and
     (i32.ne
      (local.get $5)
      (i32.const 0)
     )
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
    (block $label$break$L9
     (loop $while-in2
      (if
       (i32.ge_u
        (i32.add
         (local.tee $6
          (call $_wcrtomb
           (local.get $0)
           (i32.load
            (local.get $4)
           )
          )
         )
         (i32.const 1)
        )
        (i32.const 2)
       )
       (block
        (i32.store
         (local.get $7)
         (local.tee $4
          (i32.add
           (i32.load
            (local.get $7)
           )
           (i32.const 4)
          )
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (local.get $6)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (local.get $6)
         )
        )
        (br_if $while-in2
         (i32.and
          (i32.ne
           (local.tee $5
            (i32.sub
             (local.get $5)
             (local.get $6)
            )
           )
           (i32.const 0)
          )
          (i32.ne
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
           (i32.const 0)
          )
         )
        )
        (br $label$break$L9)
       )
      )
     )
     (if
      (local.get $6)
      (local.set $3
       (i32.const -1)
      )
      (i32.store
       (local.get $7)
       (i32.const 0)
      )
     )
    )
   )
  )
  (if
   (local.get $9)
   (i32.store
    (local.get $1)
    (i32.load
     (local.get $7)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
  (local.get $3)
 )
 (func $_cos (; has Stack IR ;) (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result f64)
    (i32.lt_u
     (local.tee $2
      (i32.and
       (i32.wrap_i64
        (i64.shr_u
         (i64.reinterpret_f64
          (local.get $0)
         )
         (i64.const 32)
        )
       )
       (i32.const 2147483647)
      )
     )
     (i32.const 1072243196)
    )
    (if (result f64)
     (i32.lt_u
      (local.get $2)
      (i32.const 1044816030)
     )
     (f64.const 1)
     (call $___cos
      (local.get $0)
      (f64.const 0)
     )
    )
    (block $label$break$L1 (result f64)
     (drop
      (br_if $label$break$L1
       (f64.sub
        (local.get $0)
        (local.get $0)
       )
       (i32.gt_u
        (local.get $2)
        (i32.const 2146435071)
       )
      )
     )
     (block $switch-default
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-default
          (i32.and
           (call $___rem_pio2
            (local.get $0)
            (local.get $1)
           )
           (i32.const 3)
          )
         )
        )
        (br $label$break$L1
         (call $___cos
          (f64.load
           (local.get $1)
          )
          (f64.load offset=8
           (local.get $1)
          )
         )
        )
       )
       (br $label$break$L1
        (f64.neg
         (call $___sin
          (f64.load
           (local.get $1)
          )
          (f64.load offset=8
           (local.get $1)
          )
          (i32.const 1)
         )
        )
       )
      )
      (br $label$break$L1
       (f64.neg
        (call $___cos
         (f64.load
          (local.get $1)
         )
         (f64.load offset=8
          (local.get $1)
         )
        )
       )
      )
     )
     (call $___sin
      (f64.load
       (local.get $1)
      )
      (f64.load offset=8
       (local.get $1)
      )
      (i32.const 1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $_sin (; has Stack IR ;) (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_u
    (local.tee $2
     (i32.and
      (i32.wrap_i64
       (i64.shr_u
        (i64.reinterpret_f64
         (local.get $0)
        )
        (i64.const 32)
       )
      )
      (i32.const 2147483647)
     )
    )
    (i32.const 1072243196)
   )
   (if
    (i32.ge_u
     (local.get $2)
     (i32.const 1045430272)
    )
    (local.set $0
     (call $___sin
      (local.get $0)
      (f64.const 0)
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (block $label$break$L1 (result f64)
     (drop
      (br_if $label$break$L1
       (f64.sub
        (local.get $0)
        (local.get $0)
       )
       (i32.gt_u
        (local.get $2)
        (i32.const 2146435071)
       )
      )
     )
     (block $switch-default
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-default
          (i32.and
           (call $___rem_pio2
            (local.get $0)
            (local.get $1)
           )
           (i32.const 3)
          )
         )
        )
        (br $label$break$L1
         (call $___sin
          (f64.load
           (local.get $1)
          )
          (f64.load offset=8
           (local.get $1)
          )
          (i32.const 1)
         )
        )
       )
       (br $label$break$L1
        (call $___cos
         (f64.load
          (local.get $1)
         )
         (f64.load offset=8
          (local.get $1)
         )
        )
       )
      )
      (br $label$break$L1
       (f64.neg
        (call $___sin
         (f64.load
          (local.get $1)
         )
         (f64.load offset=8
          (local.get $1)
         )
         (i32.const 1)
        )
       )
      )
     )
     (f64.neg
      (call $___cos
       (f64.load
        (local.get $1)
       )
       (f64.load offset=8
        (local.get $1)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $_exp (; has Stack IR ;) (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f64)
  (local $5 f64)
  (local.set $1
   (i32.wrap_i64
    (i64.shr_u
     (local.tee $3
      (i64.reinterpret_f64
       (local.get $0)
      )
     )
     (i64.const 63)
    )
   )
  )
  (block $__rjto$1
   (local.set $0
    (f64.sub
     (local.tee $5
      (f64.sub
       (local.get $0)
       (f64.mul
        (local.tee $0
         (f64.convert_i32_s
          (local.tee $1
           (block $__rjti$1 (result i32)
            (block $__rjti$0
             (local.set $5
              (if (result f64)
               (i32.gt_u
                (local.tee $2
                 (i32.and
                  (i32.wrap_i64
                   (i64.shr_u
                    (local.get $3)
                    (i64.const 32)
                   )
                  )
                  (i32.const 2147483647)
                 )
                )
                (i32.const 1082532650)
               )
               (block
                (if
                 (i64.gt_u
                  (i64.and
                   (local.get $3)
                   (i64.const 9223372036854775807)
                  )
                  (i64.const 9218868437227405312)
                 )
                 (return
                  (local.get $0)
                 )
                )
                (if
                 (f64.gt
                  (local.get $0)
                  (f64.const 709.782712893384)
                 )
                 (return
                  (f64.mul
                   (local.get $0)
                   (f64.const 8988465674311579538646525e283)
                  )
                 )
                 (block
                  (br_if $__rjti$0
                   (i32.eqz
                    (i32.and
                     (f64.lt
                      (local.get $0)
                      (f64.const -708.3964185322641)
                     )
                     (f64.lt
                      (local.get $0)
                      (f64.const -745.1332191019411)
                     )
                    )
                   )
                  )
                  (return
                   (f64.const 0)
                  )
                 )
                )
               )
               (block (result f64)
                (if
                 (i32.gt_u
                  (local.get $2)
                  (i32.const 1071001154)
                 )
                 (block
                  (br_if $__rjti$0
                   (i32.gt_u
                    (local.get $2)
                    (i32.const 1072734897)
                   )
                  )
                  (br $__rjti$1
                   (i32.sub
                    (i32.xor
                     (local.get $1)
                     (i32.const 1)
                    )
                    (local.get $1)
                   )
                  )
                 )
                )
                (if (result f64)
                 (i32.gt_u
                  (local.get $2)
                  (i32.const 1043333120)
                 )
                 (block (result f64)
                  (local.set $1
                   (i32.const 0)
                  )
                  (local.get $0)
                 )
                 (return
                  (f64.add
                   (local.get $0)
                   (f64.const 1)
                  )
                 )
                )
               )
              )
             )
             (br $__rjto$1)
            )
            (i32.trunc_f64_s
             (f64.add
              (f64.mul
               (local.get $0)
               (f64.const 1.4426950408889634)
              )
              (f64.load
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 3)
                )
                (i32.const 34304)
               )
              )
             )
            )
           )
          )
         )
        )
        (f64.const 0.6931471803691238)
       )
      )
     )
     (local.tee $4
      (f64.mul
       (local.get $0)
       (f64.const 1.9082149292705877e-10)
      )
     )
    )
   )
  )
  (local.set $0
   (f64.add
    (f64.add
     (local.get $5)
     (f64.sub
      (f64.div
       (f64.mul
        (local.get $0)
        (local.tee $0
         (f64.sub
          (local.get $0)
          (f64.mul
           (local.tee $0
            (f64.mul
             (local.get $0)
             (local.get $0)
            )
           )
           (f64.add
            (f64.mul
             (local.get $0)
             (f64.add
              (f64.mul
               (local.get $0)
               (f64.add
                (f64.mul
                 (local.get $0)
                 (f64.add
                  (f64.mul
                   (local.get $0)
                   (f64.const 4.1381367970572385e-08)
                  )
                  (f64.const -1.6533902205465252e-06)
                 )
                )
                (f64.const 6.613756321437934e-05)
               )
              )
              (f64.const -2.7777777777015593e-03)
             )
            )
            (f64.const 0.16666666666666602)
           )
          )
         )
        )
       )
       (f64.sub
        (f64.const 2)
        (local.get $0)
       )
      )
      (local.get $4)
     )
    )
    (f64.const 1)
   )
  )
  (if
   (i32.eqz
    (local.get $1)
   )
   (return
    (local.get $0)
   )
  )
  (call $_scalbn
   (local.get $0)
   (local.get $1)
  )
 )
 (func $__ZN10__cxxabiv116__shim_type_infoD2Ev (; has Stack IR ;) (param $0 i32)
  (nop)
 )
 (func $__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $0
   (if (result i32)
    (call $__ZL8is_equalPKSt9type_infoS1_b
     (local.get $0)
     (local.get $1)
     (i32.const 0)
    )
    (i32.const 1)
    (if (result i32)
     (local.get $1)
     (if (result i32)
      (local.tee $1
       (call $___dynamic_cast
        (local.get $1)
       )
      )
      (block (result i32)
       (i32.store
        (local.get $3)
        (local.get $1)
       )
       (i32.store offset=4
        (local.get $3)
        (i32.const 0)
       )
       (i32.store offset=8
        (local.get $3)
        (local.get $0)
       )
       (i32.store offset=12
        (local.get $3)
        (i32.const -1)
       )
       (i64.store offset=16 align=4
        (local.get $3)
        (i64.const 0)
       )
       (i64.store offset=24 align=4
        (local.get $3)
        (i64.const 0)
       )
       (i64.store offset=32 align=4
        (local.get $3)
        (i64.const 0)
       )
       (i64.store offset=40 align=4
        (local.get $3)
        (i64.const 0)
       )
       (i32.store offset=48
        (local.get $3)
        (i32.const 0)
       )
       (i32.store16 offset=52
        (local.get $3)
        (i32.const 0)
       )
       (i32.store8 offset=54
        (local.get $3)
        (i32.const 0)
       )
       (i32.store offset=48
        (local.get $3)
        (i32.const 1)
       )
       (local.set $0
        (i32.load offset=28
         (i32.load
          (local.get $1)
         )
        )
       )
       (call_indirect (type $i32_i32_i32_i32_=>_none)
        (local.get $1)
        (local.get $3)
        (i32.load
         (local.get $2)
        )
        (i32.const 1)
        (i32.add
         (i32.and
          (local.get $0)
          (i32.const 7)
         )
         (i32.const 460)
        )
       )
       (if (result i32)
        (i32.eq
         (i32.load offset=24
          (local.get $3)
         )
         (i32.const 1)
        )
        (block (result i32)
         (i32.store
          (local.get $2)
          (i32.load offset=16
           (local.get $3)
          )
         )
         (i32.const 1)
        )
        (i32.const 0)
       )
      )
      (i32.const 0)
     )
     (i32.const 0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (if
   (call $__ZL8is_equalPKSt9type_infoS1_b
    (local.get $0)
    (i32.load offset=8
     (local.get $1)
    )
    (local.get $5)
   )
   (call $__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
   )
  )
 )
 (func $__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (if
   (call $__ZL8is_equalPKSt9type_infoS1_b
    (local.get $0)
    (i32.load offset=8
     (local.get $1)
    )
    (local.get $4)
   )
   (if
    (i32.eq
     (local.get $2)
     (i32.load offset=4
      (local.get $1)
     )
    )
    (if
     (i32.ne
      (i32.load offset=28
       (local.get $1)
      )
      (i32.const 1)
     )
     (i32.store offset=28
      (local.get $1)
      (local.get $3)
     )
    )
   )
   (if
    (call $__ZL8is_equalPKSt9type_infoS1_b
     (local.get $0)
     (i32.load
      (local.get $1)
     )
     (local.get $4)
    )
    (block $do-once
     (if
      (i32.ne
       (i32.load offset=16
        (local.get $1)
       )
       (local.get $2)
      )
      (if
       (i32.ne
        (i32.load offset=20
         (local.get $1)
        )
        (local.get $2)
       )
       (block
        (i32.store offset=32
         (local.get $1)
         (local.get $3)
        )
        (i32.store offset=20
         (local.get $1)
         (local.get $2)
        )
        (i32.store offset=40
         (local.get $1)
         (i32.add
          (i32.load offset=40
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (if
         (i32.eq
          (i32.load offset=36
           (local.get $1)
          )
          (i32.const 1)
         )
         (if
          (i32.eq
           (i32.load offset=24
            (local.get $1)
           )
           (i32.const 2)
          )
          (i32.store8 offset=54
           (local.get $1)
           (i32.const 1)
          )
         )
        )
        (i32.store offset=44
         (local.get $1)
         (i32.const 4)
        )
        (br $do-once)
       )
      )
     )
     (if
      (i32.eq
       (local.get $3)
       (i32.const 1)
      )
      (i32.store offset=32
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
 )
 (func $__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (if
   (call $__ZL8is_equalPKSt9type_infoS1_b
    (local.get $0)
    (i32.load offset=8
     (local.get $1)
    )
    (i32.const 0)
   )
   (call $__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
  )
 )
 (func $__ZL8is_equalPKSt9type_infoS1_b (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if (result i32)
   (local.get $2)
   (if (result i32)
    (i32.eq
     (local.get $0)
     (local.get $1)
    )
    (i32.const 1)
    (i32.eqz
     (call $_strcmp
      (i32.load offset=4
       (local.get $0)
      )
      (i32.load offset=4
       (local.get $1)
      )
     )
    )
   )
   (i32.eq
    (i32.load offset=4
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $1)
    )
   )
  )
 )
 (func $__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (if
   (local.tee $3
    (i32.load offset=16
     (local.get $0)
    )
   )
   (block $do-once
    (if
     (i32.ne
      (local.get $1)
      (local.get $3)
     )
     (block
      (i32.store offset=36
       (local.get $0)
       (i32.add
        (i32.load offset=36
         (local.get $0)
        )
        (i32.const 1)
       )
      )
      (i32.store offset=24
       (local.get $0)
       (i32.const 2)
      )
      (i32.store8 offset=54
       (local.get $0)
       (i32.const 1)
      )
      (br $do-once)
     )
    )
    (if
     (i32.eq
      (i32.load offset=24
       (local.get $0)
      )
      (i32.const 2)
     )
     (i32.store offset=24
      (local.get $0)
      (local.get $2)
     )
    )
   )
   (block
    (i32.store offset=16
     (local.get $0)
     (local.get $1)
    )
    (i32.store offset=24
     (local.get $0)
     (local.get $2)
    )
    (i32.store offset=36
     (local.get $0)
     (i32.const 1)
    )
   )
  )
 )
 (func $__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i32.store8 offset=53
   (local.get $0)
   (i32.const 1)
  )
  (if
   (i32.eq
    (local.get $2)
    (i32.load offset=4
     (local.get $0)
    )
   )
   (block $do-once
    (i32.store8 offset=52
     (local.get $0)
     (i32.const 1)
    )
    (if
     (i32.eqz
      (local.tee $2
       (i32.load offset=16
        (local.get $0)
       )
      )
     )
     (block
      (i32.store offset=16
       (local.get $0)
       (local.get $1)
      )
      (i32.store offset=24
       (local.get $0)
       (local.get $3)
      )
      (i32.store offset=36
       (local.get $0)
       (i32.const 1)
      )
      (br_if $do-once
       (i32.eqz
        (i32.and
         (i32.eq
          (i32.load offset=48
           (local.get $0)
          )
          (i32.const 1)
         )
         (i32.eq
          (local.get $3)
          (i32.const 1)
         )
        )
       )
      )
      (i32.store8 offset=54
       (local.get $0)
       (i32.const 1)
      )
      (br $do-once)
     )
    )
    (if
     (i32.ne
      (local.get $1)
      (local.get $2)
     )
     (block
      (i32.store offset=36
       (local.get $0)
       (i32.add
        (i32.load offset=36
         (local.get $0)
        )
        (i32.const 1)
       )
      )
      (i32.store8 offset=54
       (local.get $0)
       (i32.const 1)
      )
      (br $do-once)
     )
    )
    (if
     (i32.eq
      (local.tee $1
       (i32.load offset=24
        (local.get $0)
       )
      )
      (i32.const 2)
     )
     (i32.store offset=24
      (local.get $0)
      (local.get $3)
     )
     (local.set $3
      (local.get $1)
     )
    )
    (if
     (i32.and
      (i32.eq
       (i32.load offset=48
        (local.get $0)
       )
       (i32.const 1)
      )
      (i32.eq
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.store8 offset=54
      (local.get $0)
      (i32.const 1)
     )
    )
   )
  )
 )
 (func $___dynamic_cast (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.load
     (i32.add
      (local.tee $2
       (i32.load
        (local.get $0)
       )
      )
      (i32.const -8)
     )
    )
   )
  )
  (local.set $2
   (i32.load
    (i32.add
     (local.get $2)
     (i32.const -4)
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 35152)
  )
  (i32.store offset=4
   (local.get $1)
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $1)
   (i32.const 35168)
  )
  (i32.store offset=12
   (local.get $1)
   (i32.const 0)
  )
  (i64.store offset=16 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i64.store offset=24 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i64.store offset=32 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i64.store offset=40 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i32.store offset=48
   (local.get $1)
   (i32.const 0)
  )
  (i32.store16 offset=52
   (local.get $1)
   (i32.const 0)
  )
  (i32.store8 offset=54
   (local.get $1)
   (i32.const 0)
  )
  (local.set $0
   (if (result i32)
    (call $__ZL8is_equalPKSt9type_infoS1_b
     (local.get $2)
     (i32.const 35152)
     (i32.const 0)
    )
    (block (result i32)
     (i32.store offset=48
      (local.get $1)
      (i32.const 1)
     )
     (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_none)
      (local.get $2)
      (local.get $1)
      (local.get $3)
      (local.get $3)
      (i32.const 1)
      (i32.const 0)
      (i32.add
       (i32.and
        (i32.load offset=20
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 7)
       )
       (i32.const 472)
      )
     )
     (select
      (local.get $3)
      (i32.const 0)
      (i32.eq
       (i32.load offset=24
        (local.get $1)
       )
       (i32.const 1)
      )
     )
    )
    (block $label$break$L1 (result i32)
     (call_indirect (type $i32_i32_i32_i32_i32_=>_none)
      (local.get $2)
      (local.get $1)
      (local.get $3)
      (i32.const 1)
      (i32.const 0)
      (i32.add
       (i32.and
        (i32.load offset=24
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 3)
       )
       (i32.const 468)
      )
     )
     (block $switch
      (block $switch-default
       (block $switch-case
        (br_table $switch-case $switch $switch-default
         (i32.load offset=36
          (local.get $1)
         )
        )
       )
       (br $label$break$L1
        (select
         (i32.load offset=20
          (local.get $1)
         )
         (i32.const 0)
         (i32.and
          (i32.and
           (i32.eq
            (i32.load offset=40
             (local.get $1)
            )
            (i32.const 1)
           )
           (i32.eq
            (i32.load offset=28
             (local.get $1)
            )
            (i32.const 1)
           )
          )
          (i32.eq
           (i32.load offset=32
            (local.get $1)
           )
           (i32.const 1)
          )
         )
        )
       )
      )
      (br $label$break$L1
       (i32.const 0)
      )
     )
     (if
      (i32.ne
       (i32.load offset=24
        (local.get $1)
       )
       (i32.const 1)
      )
      (drop
       (br_if $label$break$L1
        (i32.const 0)
        (i32.eqz
         (i32.and
          (i32.and
           (i32.eqz
            (i32.load offset=40
             (local.get $1)
            )
           )
           (i32.eq
            (i32.load offset=28
             (local.get $1)
            )
            (i32.const 1)
           )
          )
          (i32.eq
           (i32.load offset=32
            (local.get $1)
           )
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (i32.load offset=16
      (local.get $1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (if
   (call $__ZL8is_equalPKSt9type_infoS1_b
    (local.get $0)
    (i32.load offset=8
     (local.get $1)
    )
    (local.get $5)
   )
   (call $__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
   )
   (block
    (local.set $6
     (i32.load offset=20
      (i32.load
       (local.tee $0
        (i32.load offset=8
         (local.get $0)
        )
       )
      )
     )
    )
    (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_none)
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (local.get $4)
     (local.get $5)
     (i32.add
      (i32.and
       (local.get $6)
       (i32.const 7)
      )
      (i32.const 472)
     )
    )
   )
  )
 )
 (func $__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (if
   (call $__ZL8is_equalPKSt9type_infoS1_b
    (local.get $0)
    (i32.load offset=8
     (local.get $1)
    )
    (local.get $4)
   )
   (if
    (i32.eq
     (local.get $2)
     (i32.load offset=4
      (local.get $1)
     )
    )
    (if
     (i32.ne
      (i32.load offset=28
       (local.get $1)
      )
      (i32.const 1)
     )
     (i32.store offset=28
      (local.get $1)
      (local.get $3)
     )
    )
   )
   (block $label$break$L1
    (if
     (i32.eqz
      (call $__ZL8is_equalPKSt9type_infoS1_b
       (local.get $0)
       (i32.load
        (local.get $1)
       )
       (local.get $4)
      )
     )
     (block
      (local.set $5
       (i32.load offset=24
        (i32.load
         (local.tee $0
          (i32.load offset=8
           (local.get $0)
          )
         )
        )
       )
      )
      (call_indirect (type $i32_i32_i32_i32_i32_=>_none)
       (local.get $0)
       (local.get $1)
       (local.get $2)
       (local.get $3)
       (local.get $4)
       (i32.add
        (i32.and
         (local.get $5)
         (i32.const 3)
        )
        (i32.const 468)
       )
      )
      (br $label$break$L1)
     )
    )
    (if
     (i32.ne
      (i32.load offset=16
       (local.get $1)
      )
      (local.get $2)
     )
     (if
      (i32.ne
       (i32.load offset=20
        (local.get $1)
       )
       (local.get $2)
      )
      (block
       (i32.store offset=32
        (local.get $1)
        (local.get $3)
       )
       (if
        (i32.ne
         (i32.load offset=44
          (local.get $1)
         )
         (i32.const 4)
        )
        (block
         (i32.store8 offset=52
          (local.get $1)
          (i32.const 0)
         )
         (i32.store8 offset=53
          (local.get $1)
          (i32.const 0)
         )
         (local.set $3
          (i32.load offset=20
           (i32.load
            (local.tee $0
             (i32.load offset=8
              (local.get $0)
             )
            )
           )
          )
         )
         (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_none)
          (local.get $0)
          (local.get $1)
          (local.get $2)
          (local.get $2)
          (i32.const 1)
          (local.get $4)
          (i32.add
           (i32.and
            (local.get $3)
            (i32.const 7)
           )
           (i32.const 472)
          )
         )
         (if
          (i32.load8_s offset=53
           (local.get $1)
          )
          (block
           (local.set $0
            (i32.eqz
             (i32.load8_s offset=52
              (local.get $1)
             )
            )
           )
           (i32.store offset=44
            (local.get $1)
            (i32.const 3)
           )
           (br_if $label$break$L1
            (i32.eqz
             (local.get $0)
            )
           )
          )
          (i32.store offset=44
           (local.get $1)
           (i32.const 4)
          )
         )
        )
       )
       (i32.store offset=20
        (local.get $1)
        (local.get $2)
       )
       (i32.store offset=40
        (local.get $1)
        (i32.add
         (i32.load offset=40
          (local.get $1)
         )
         (i32.const 1)
        )
       )
       (br_if $label$break$L1
        (i32.ne
         (i32.load offset=36
          (local.get $1)
         )
         (i32.const 1)
        )
       )
       (br_if $label$break$L1
        (i32.ne
         (i32.load offset=24
          (local.get $1)
         )
         (i32.const 2)
        )
       )
       (i32.store8 offset=54
        (local.get $1)
        (i32.const 1)
       )
       (br $label$break$L1)
      )
     )
    )
    (if
     (i32.eq
      (local.get $3)
      (i32.const 1)
     )
     (i32.store offset=32
      (local.get $1)
      (i32.const 1)
     )
    )
   )
  )
 )
 (func $__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (if
   (call $__ZL8is_equalPKSt9type_infoS1_b
    (local.get $0)
    (i32.load offset=8
     (local.get $1)
    )
    (i32.const 0)
   )
   (call $__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
   (block
    (local.set $4
     (i32.load offset=28
      (i32.load
       (local.tee $0
        (i32.load offset=8
         (local.get $0)
        )
       )
      )
     )
    )
    (call_indirect (type $i32_i32_i32_i32_=>_none)
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (i32.add
      (i32.and
       (local.get $4)
       (i32.const 7)
      )
      (i32.const 460)
     )
    )
   )
  )
 )
 (func $__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (if
   (call $__ZL8is_equalPKSt9type_infoS1_b
    (local.get $0)
    (i32.load offset=8
     (local.get $1)
    )
    (local.get $5)
   )
   (call $__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
   )
   (block
    (local.set $8
     (i32.load8_s offset=52
      (local.get $1)
     )
    )
    (local.set $6
     (i32.load8_s offset=53
      (local.get $1)
     )
    )
    (local.set $12
     (i32.add
      (i32.add
       (local.get $0)
       (i32.const 16)
      )
      (i32.shl
       (local.tee $7
        (i32.load offset=12
         (local.get $0)
        )
       )
       (i32.const 3)
      )
     )
    )
    (i32.store8 offset=52
     (local.get $1)
     (i32.const 0)
    )
    (i32.store8 offset=53
     (local.get $1)
     (i32.const 0)
    )
    (call $__ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib
     (i32.add
      (local.get $0)
      (i32.const 16)
     )
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (local.get $4)
     (local.get $5)
    )
    (local.set $9
     (i32.or
      (local.get $8)
      (local.tee $11
       (i32.load8_s offset=52
        (local.get $1)
       )
      )
     )
    )
    (local.set $6
     (i32.or
      (local.get $6)
      (local.tee $8
       (i32.load8_s offset=53
        (local.get $1)
       )
      )
     )
    )
    (local.set $0
     (if (result i32)
      (i32.gt_s
       (local.get $7)
       (i32.const 1)
      )
      (block $label$break$L4 (result i32)
       (local.set $10
        (i32.add
         (local.get $0)
         (i32.const 24)
        )
       )
       (loop $while-in (result i32)
        (local.set $7
         (i32.and
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.set $6
         (i32.and
          (local.get $9)
          (i32.const 1)
         )
        )
        (if
         (i32.load8_s offset=54
          (local.get $1)
         )
         (block
          (local.set $2
           (local.get $6)
          )
          (br $label$break$L4
           (local.get $7)
          )
         )
        )
        (if
         (i32.and
          (local.get $11)
          (i32.const 255)
         )
         (block
          (if
           (i32.eq
            (i32.load offset=24
             (local.get $1)
            )
            (i32.const 1)
           )
           (block
            (local.set $2
             (local.get $6)
            )
            (br $label$break$L4
             (local.get $7)
            )
           )
          )
          (if
           (i32.eqz
            (i32.and
             (i32.load offset=8
              (local.get $0)
             )
             (i32.const 2)
            )
           )
           (block
            (local.set $2
             (local.get $6)
            )
            (br $label$break$L4
             (local.get $7)
            )
           )
          )
         )
         (if
          (i32.and
           (local.get $8)
           (i32.const 255)
          )
          (if
           (i32.eqz
            (i32.and
             (i32.load offset=8
              (local.get $0)
             )
             (i32.const 1)
            )
           )
           (block
            (local.set $2
             (local.get $6)
            )
            (br $label$break$L4
             (local.get $7)
            )
           )
          )
         )
        )
        (i32.store8 offset=52
         (local.get $1)
         (i32.const 0)
        )
        (i32.store8 offset=53
         (local.get $1)
         (i32.const 0)
        )
        (call $__ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib
         (local.get $10)
         (local.get $1)
         (local.get $2)
         (local.get $3)
         (local.get $4)
         (local.get $5)
        )
        (local.set $8
         (i32.or
          (local.get $6)
          (local.tee $11
           (i32.load8_s offset=52
            (local.get $1)
           )
          )
         )
        )
        (local.set $6
         (i32.or
          (local.get $7)
          (local.tee $13
           (i32.load8_s offset=53
            (local.get $1)
           )
          )
         )
        )
        (if (result i32)
         (i32.lt_u
          (local.tee $7
           (i32.add
            (local.get $10)
            (i32.const 8)
           )
          )
          (local.get $12)
         )
         (block
          (local.set $10
           (local.get $7)
          )
          (local.set $9
           (local.get $8)
          )
          (local.set $8
           (local.get $13)
          )
          (br $while-in)
         )
         (block (result i32)
          (local.set $2
           (local.get $8)
          )
          (local.get $6)
         )
        )
       )
      )
      (block (result i32)
       (local.set $2
        (local.get $9)
       )
       (local.get $6)
      )
     )
    )
    (i32.store8 offset=52
     (local.get $1)
     (i32.ne
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
      (i32.const 0)
     )
    )
    (i32.store8 offset=53
     (local.get $1)
     (i32.ne
      (i32.and
       (local.get $0)
       (i32.const 255)
      )
      (i32.const 0)
     )
    )
   )
  )
 )
 (func $__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (call $__ZL8is_equalPKSt9type_infoS1_b
    (local.get $0)
    (i32.load offset=8
     (local.get $1)
    )
    (local.get $4)
   )
   (if
    (i32.eq
     (local.get $2)
     (i32.load offset=4
      (local.get $1)
     )
    )
    (if
     (i32.ne
      (i32.load offset=28
       (local.get $1)
      )
      (i32.const 1)
     )
     (i32.store offset=28
      (local.get $1)
      (local.get $3)
     )
    )
   )
   (block $label$break$L1
    (if
     (i32.eqz
      (call $__ZL8is_equalPKSt9type_infoS1_b
       (local.get $0)
       (i32.load
        (local.get $1)
       )
       (local.get $4)
      )
     )
     (block
      (local.set $6
       (i32.add
        (i32.add
         (local.get $0)
         (i32.const 16)
        )
        (i32.shl
         (local.tee $5
          (i32.load offset=12
           (local.get $0)
          )
         )
         (i32.const 3)
        )
       )
      )
      (call $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
       (i32.add
        (local.get $0)
        (i32.const 16)
       )
       (local.get $1)
       (local.get $2)
       (local.get $3)
       (local.get $4)
      )
      (br_if $label$break$L1
       (i32.le_s
        (local.get $5)
        (i32.const 1)
       )
      )
      (local.set $5
       (i32.add
        (local.get $0)
        (i32.const 24)
       )
      )
      (if
       (i32.eqz
        (i32.and
         (local.tee $0
          (i32.load offset=8
           (local.get $0)
          )
         )
         (i32.const 2)
        )
       )
       (if
        (i32.ne
         (i32.load offset=36
          (local.get $1)
         )
         (i32.const 1)
        )
        (block
         (if
          (i32.eqz
           (i32.and
            (local.get $0)
            (i32.const 1)
           )
          )
          (loop $while-in
           (br_if $label$break$L1
            (i32.load8_s offset=54
             (local.get $1)
            )
           )
           (br_if $label$break$L1
            (i32.eq
             (i32.load offset=36
              (local.get $1)
             )
             (i32.const 1)
            )
           )
           (call $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
            (local.get $5)
            (local.get $1)
            (local.get $2)
            (local.get $3)
            (local.get $4)
           )
           (br_if $while-in
            (i32.lt_u
             (local.tee $5
              (i32.add
               (local.get $5)
               (i32.const 8)
              )
             )
             (local.get $6)
            )
           )
           (br $label$break$L1)
          )
         )
         (loop $while-in1
          (br_if $label$break$L1
           (i32.load8_s offset=54
            (local.get $1)
           )
          )
          (if
           (i32.eq
            (i32.load offset=36
             (local.get $1)
            )
            (i32.const 1)
           )
           (br_if $label$break$L1
            (i32.eq
             (i32.load offset=24
              (local.get $1)
             )
             (i32.const 1)
            )
           )
          )
          (call $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
           (local.get $5)
           (local.get $1)
           (local.get $2)
           (local.get $3)
           (local.get $4)
          )
          (br_if $while-in1
           (i32.lt_u
            (local.tee $5
             (i32.add
              (local.get $5)
              (i32.const 8)
             )
            )
            (local.get $6)
           )
          )
         )
         (br $label$break$L1)
        )
       )
      )
      (loop $while-in3
       (br_if $label$break$L1
        (i32.load8_s offset=54
         (local.get $1)
        )
       )
       (call $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
        (local.get $5)
        (local.get $1)
        (local.get $2)
        (local.get $3)
        (local.get $4)
       )
       (br_if $while-in3
        (i32.lt_u
         (local.tee $5
          (i32.add
           (local.get $5)
           (i32.const 8)
          )
         )
         (local.get $6)
        )
       )
      )
      (br $label$break$L1)
     )
    )
    (if
     (i32.ne
      (i32.load offset=16
       (local.get $1)
      )
      (local.get $2)
     )
     (if
      (i32.ne
       (i32.load offset=20
        (local.get $1)
       )
       (local.get $2)
      )
      (block
       (i32.store offset=32
        (local.get $1)
        (local.get $3)
       )
       (if
        (i32.ne
         (i32.load offset=44
          (local.get $1)
         )
         (i32.const 4)
        )
        (block
         (local.set $7
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 16)
           )
           (i32.shl
            (i32.load offset=12
             (local.get $0)
            )
            (i32.const 3)
           )
          )
         )
         (local.set $3
          (i32.const 0)
         )
         (local.set $6
          (i32.add
           (local.get $0)
           (i32.const 16)
          )
         )
         (i32.store offset=44
          (local.get $1)
          (block $__rjto$1 (result i32)
           (block $__rjti$1
            (loop $label$continue$L33
             (block $__rjti$0
              (br_if $__rjti$0
               (i32.ge_u
                (local.get $6)
                (local.get $7)
               )
              )
              (i32.store8 offset=52
               (local.get $1)
               (i32.const 0)
              )
              (i32.store8 offset=53
               (local.get $1)
               (i32.const 0)
              )
              (call $__ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib
               (local.get $6)
               (local.get $1)
               (local.get $2)
               (local.get $2)
               (i32.const 1)
               (local.get $4)
              )
              (br_if $__rjti$0
               (i32.load8_s offset=54
                (local.get $1)
               )
              )
              (if
               (i32.load8_s offset=53
                (local.get $1)
               )
               (block $do-once
                (if
                 (i32.eqz
                  (i32.load8_s offset=52
                   (local.get $1)
                  )
                 )
                 (if
                  (i32.and
                   (i32.load offset=8
                    (local.get $0)
                   )
                   (i32.const 1)
                  )
                  (block
                   (local.set $5
                    (i32.const 1)
                   )
                   (br $do-once)
                  )
                  (br $__rjti$1)
                 )
                )
                (if
                 (i32.eq
                  (i32.load offset=24
                   (local.get $1)
                  )
                  (i32.const 1)
                 )
                 (block
                  (local.set $3
                   (i32.const 1)
                  )
                  (br $__rjti$1)
                 )
                )
                (local.set $3
                 (if (result i32)
                  (i32.and
                   (i32.load offset=8
                    (local.get $0)
                   )
                   (i32.const 2)
                  )
                  (block (result i32)
                   (local.set $5
                    (i32.const 1)
                   )
                   (i32.const 1)
                  )
                  (block
                   (local.set $3
                    (i32.const 1)
                   )
                   (br $__rjti$1)
                  )
                 )
                )
               )
              )
              (local.set $6
               (i32.add
                (local.get $6)
                (i32.const 8)
               )
              )
              (br $label$continue$L33)
             )
            )
            (br $__rjto$1
             (if (result i32)
              (local.get $5)
              (br $__rjti$1)
              (i32.const 4)
             )
            )
           )
           (i32.const 3)
          )
         )
         (br_if $label$break$L1
          (i32.and
           (local.get $3)
           (i32.const 1)
          )
         )
        )
       )
       (i32.store offset=20
        (local.get $1)
        (local.get $2)
       )
       (i32.store offset=40
        (local.get $1)
        (i32.add
         (i32.load offset=40
          (local.get $1)
         )
         (i32.const 1)
        )
       )
       (br_if $label$break$L1
        (i32.ne
         (i32.load offset=36
          (local.get $1)
         )
         (i32.const 1)
        )
       )
       (br_if $label$break$L1
        (i32.ne
         (i32.load offset=24
          (local.get $1)
         )
         (i32.const 2)
        )
       )
       (i32.store8 offset=54
        (local.get $1)
        (i32.const 1)
       )
       (br $label$break$L1)
      )
     )
    )
    (if
     (i32.eq
      (local.get $3)
      (i32.const 1)
     )
     (i32.store offset=32
      (local.get $1)
      (i32.const 1)
     )
    )
   )
  )
 )
 (func $__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (call $__ZL8is_equalPKSt9type_infoS1_b
    (local.get $0)
    (i32.load offset=8
     (local.get $1)
    )
    (i32.const 0)
   )
   (call $__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
   (block $label$break$L1
    (local.set $5
     (i32.add
      (i32.add
       (local.get $0)
       (i32.const 16)
      )
      (i32.shl
       (local.tee $4
        (i32.load offset=12
         (local.get $0)
        )
       )
       (i32.const 3)
      )
     )
    )
    (call $__ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi
     (i32.add
      (local.get $0)
      (i32.const 16)
     )
     (local.get $1)
     (local.get $2)
     (local.get $3)
    )
    (if
     (i32.gt_s
      (local.get $4)
      (i32.const 1)
     )
     (block
      (local.set $0
       (i32.add
        (local.get $0)
        (i32.const 24)
       )
      )
      (loop $while-in
       (call $__ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi
        (local.get $0)
        (local.get $1)
        (local.get $2)
        (local.get $3)
       )
       (br_if $label$break$L1
        (i32.load8_s offset=54
         (local.get $1)
        )
       )
       (br_if $while-in
        (i32.lt_u
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
         (local.get $5)
        )
       )
      )
     )
    )
   )
  )
 )
 (func $__ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (i32.load offset=4
    (local.get $0)
   )
  )
  (if
   (local.get $2)
   (block
    (local.set $4
     (i32.shr_s
      (local.get $5)
      (i32.const 8)
     )
    )
    (if
     (i32.and
      (local.get $5)
      (i32.const 1)
     )
     (local.set $4
      (i32.load
       (i32.add
        (local.get $4)
        (i32.load
         (local.get $2)
        )
       )
      )
     )
    )
   )
  )
  (local.set $6
   (i32.load offset=28
    (i32.load
     (local.tee $0
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
  (call_indirect (type $i32_i32_i32_i32_=>_none)
   (local.get $0)
   (local.get $1)
   (i32.add
    (local.get $2)
    (local.get $4)
   )
   (select
    (local.get $3)
    (i32.const 2)
    (i32.and
     (local.get $5)
     (i32.const 2)
    )
   )
   (i32.add
    (i32.and
     (local.get $6)
     (i32.const 7)
    )
    (i32.const 460)
   )
  )
 )
 (func $__ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (i32.shr_s
    (local.tee $7
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.const 8)
   )
  )
  (if
   (i32.and
    (local.get $7)
    (i32.const 1)
   )
   (local.set $6
    (i32.load
     (i32.add
      (i32.load
       (local.get $3)
      )
      (local.get $6)
     )
    )
   )
  )
  (local.set $8
   (i32.load offset=20
    (i32.load
     (local.tee $0
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
  (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_none)
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (i32.add
    (local.get $3)
    (local.get $6)
   )
   (select
    (local.get $4)
    (i32.const 2)
    (i32.and
     (local.get $7)
     (i32.const 2)
    )
   )
   (local.get $5)
   (i32.add
    (i32.and
     (local.get $8)
     (i32.const 7)
    )
    (i32.const 472)
   )
  )
 )
 (func $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $5
   (i32.shr_s
    (local.tee $6
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.const 8)
   )
  )
  (if
   (i32.and
    (local.get $6)
    (i32.const 1)
   )
   (local.set $5
    (i32.load
     (i32.add
      (i32.load
       (local.get $2)
      )
      (local.get $5)
     )
    )
   )
  )
  (local.set $7
   (i32.load offset=24
    (i32.load
     (local.tee $0
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
  (call_indirect (type $i32_i32_i32_i32_i32_=>_none)
   (local.get $0)
   (local.get $1)
   (i32.add
    (local.get $2)
    (local.get $5)
   )
   (select
    (local.get $3)
    (i32.const 2)
    (i32.and
     (local.get $6)
     (i32.const 2)
    )
   )
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $7)
     (i32.const 3)
    )
    (i32.const 468)
   )
  )
 )
 (func $___cxa_guard_acquire (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (i32.store offset=4
   (local.get $1)
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $1)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store offset=12
   (local.get $1)
   (i32.const 0)
  )
  (local.set $0
   (call $__ZN10__cxxabiv112_GLOBAL__N_111GuardObjectINS0_17InitByteNoThreadsEE17cxa_guard_acquireEv
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $__ZN10__cxxabiv112_GLOBAL__N_111GuardObjectINS0_17InitByteNoThreadsEE17cxa_guard_acquireEv (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $0
   (if (result i32)
    (i32.load8_u
     (i32.load
      (local.get $1)
     )
    )
    (i32.const 0)
    (call $__ZN10__cxxabiv112_GLOBAL__N_117InitByteNoThreads17acquire_init_byteEv
     (local.get $0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $__ZN10__cxxabiv112_GLOBAL__N_117InitByteNoThreads17acquire_init_byteEv (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ne
    (local.tee $2
     (i32.load8_s
      (local.tee $0
       (i32.load offset=8
        (local.get $0)
       )
      )
     )
    )
    (i32.const 1)
   )
   (if
    (i32.and
     (local.get $2)
     (i32.const 2)
    )
    (call $_llvm_trap)
    (block
     (i32.store8
      (local.get $0)
      (i32.const 2)
     )
     (local.set $3
      (i32.const 1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $3)
 )
 (func $___cxa_guard_release (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (i32.store offset=4
   (local.get $1)
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $1)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store offset=12
   (local.get $1)
   (i32.const 0)
  )
  (call $__ZN10__cxxabiv112_GLOBAL__N_111GuardObjectINS0_17InitByteNoThreadsEE17cxa_guard_releaseEv
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $__ZN10__cxxabiv112_GLOBAL__N_111GuardObjectINS0_17InitByteNoThreadsEE17cxa_guard_releaseEv (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (i32.store8
   (i32.load
    (local.get $1)
   )
   (i32.const 1)
  )
  (i32.store8
   (i32.load offset=8
    (local.get $0)
   )
   (i32.const 1)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $__Znwm (; has Stack IR ;) (param $0 i32) (result i32)
  (block $__rjto$1
   (if
    (i32.eqz
     (local.tee $0
      (call $_malloc
       (select
        (local.get $0)
        (i32.const 1)
        (local.get $0)
       )
      )
     )
    )
    (block
     (call $_abort)
     (br $__rjto$1)
    )
   )
   (return
    (local.get $0)
   )
  )
  (i32.const 0)
 )
 (func $__ZNSt3__28ios_baseD2Ev (; has Stack IR ;) (param $0 i32)
  (i32.store
   (local.get $0)
   (i32.const 37516)
  )
  (call $__ZNSt3__28ios_base16__call_callbacksENS0_5eventE
   (local.get $0)
  )
  (call $__ZNSt3__26localeD2Ev
   (i32.add
    (local.get $0)
    (i32.const 28)
   )
  )
  (call $_free
   (i32.load offset=32
    (local.get $0)
   )
  )
  (call $_free
   (i32.load offset=36
    (local.get $0)
   )
  )
  (call $_free
   (i32.load offset=48
    (local.get $0)
   )
  )
  (call $_free
   (i32.load offset=60
    (local.get $0)
   )
  )
 )
 (func $__ZNSt3__28ios_base16__call_callbacksENS0_5eventE (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local.set $1
   (i32.load offset=40
    (local.get $0)
   )
  )
  (loop $while-in
   (if
    (local.get $1)
    (block
     (drop
      (i32.load
       (i32.add
        (i32.load offset=32
         (local.get $0)
        )
        (i32.shl
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
         (i32.const 2)
        )
       )
      )
     )
     (call_indirect (type $i32_i32_i32_=>_none)
      (i32.const 0)
      (local.get $0)
      (i32.load
       (i32.add
        (i32.load offset=36
         (local.get $0)
        )
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
       )
      )
      (i32.const 459)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $__ZNSt3__28ios_baseD0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__28ios_baseD2Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev (; has Stack IR ;) (param $0 i32)
  (i32.store
   (local.get $0)
   (i32.const 37532)
  )
  (call $__ZNSt3__26localeD2Ev
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (nop)
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local.get $0)
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (param $4 i32)
  (i64.store
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $0)
   (i64.const -1)
  )
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i64.store
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $0)
   (i64.const -1)
  )
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.ge_s
      (local.get $4)
      (local.get $2)
     )
    )
    (local.set $1
     (if (result i32)
      (i32.lt_u
       (local.tee $3
        (i32.load offset=12
         (local.get $0)
        )
       )
       (local.tee $5
        (i32.load offset=16
         (local.get $0)
        )
       )
      )
      (block (result i32)
       (call $__ZNSt3__211char_traitsIcE4copyEPcPKcm
        (local.get $1)
        (local.get $3)
        (local.tee $3
         (select
          (local.tee $6
           (i32.sub
            (local.get $2)
            (local.get $4)
           )
          )
          (local.tee $3
           (i32.sub
            (local.get $5)
            (local.get $3)
           )
          )
          (i32.lt_s
           (local.get $6)
           (local.get $3)
          )
         )
        )
       )
       (i32.store offset=12
        (local.get $0)
        (i32.add
         (local.get $3)
         (i32.load offset=12
          (local.get $0)
         )
        )
       )
       (i32.add
        (local.get $1)
        (local.get $3)
       )
      )
      (block (result i32)
       (br_if $while-out
        (i32.eq
         (local.tee $3
          (call_indirect (type $i32_=>_i32)
           (local.get $0)
           (i32.and
            (i32.load offset=40
             (i32.load
              (local.get $0)
             )
            )
            (i32.const 63)
           )
          )
         )
         (i32.const -1)
        )
       )
       (i32.store8
        (local.get $1)
        (local.get $3)
       )
       (local.set $3
        (i32.const 1)
       )
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (local.set $4
     (i32.add
      (local.get $3)
      (local.get $4)
     )
    )
    (br $while-in)
   )
  )
  (local.get $4)
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.const -1)
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.eq
    (call_indirect (type $i32_=>_i32)
     (local.get $0)
     (i32.and
      (i32.load offset=36
       (i32.load
        (local.get $0)
       )
      )
      (i32.const 63)
     )
    )
    (i32.const -1)
   )
   (i32.const -1)
   (block (result i32)
    (i32.store offset=12
     (local.get $0)
     (i32.add
      (local.tee $0
       (i32.load offset=12
        (local.get $0)
       )
      )
      (i32.const 1)
     )
    )
    (i32.load8_u
     (local.get $0)
    )
   )
  )
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (i32.const -1)
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.ge_s
      (local.get $4)
      (local.get $2)
     )
    )
    (local.set $1
     (if (result i32)
      (i32.lt_u
       (local.tee $3
        (i32.load offset=24
         (local.get $0)
        )
       )
       (local.tee $5
        (i32.load offset=28
         (local.get $0)
        )
       )
      )
      (block (result i32)
       (call $__ZNSt3__211char_traitsIcE4copyEPcPKcm
        (local.get $3)
        (local.get $1)
        (local.tee $3
         (select
          (local.tee $6
           (i32.sub
            (local.get $2)
            (local.get $4)
           )
          )
          (local.tee $3
           (i32.sub
            (local.get $5)
            (local.get $3)
           )
          )
          (i32.lt_s
           (local.get $6)
           (local.get $3)
          )
         )
        )
       )
       (i32.store offset=24
        (local.get $0)
        (i32.add
         (local.get $3)
         (i32.load offset=24
          (local.get $0)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $3)
         (local.get $4)
        )
       )
       (i32.add
        (local.get $1)
        (local.get $3)
       )
      )
      (block (result i32)
       (br_if $while-out
        (i32.eq
         (call_indirect (type $i32_i32_=>_i32)
          (local.get $0)
          (i32.load8_u
           (local.get $1)
          )
          (i32.add
           (i32.and
            (i32.load offset=52
             (i32.load
              (local.get $0)
             )
            )
            (i32.const 15)
           )
           (i32.const 66)
          )
         )
         (i32.const -1)
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
    (br $while-in)
   )
  )
  (local.get $4)
 )
 (func $__ZNSt3__211char_traitsIcE4copyEPcPKcm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (local.get $2)
   (drop
    (call $_memcpy
     (local.get $0)
     (local.get $1)
     (local.get $2)
    )
   )
  )
 )
 (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev (; has Stack IR ;) (param $0 i32)
  (i32.store
   (local.get $0)
   (i32.const 37596)
  )
  (call $__ZNSt3__26localeD2Ev
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
 )
 (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.ge_s
      (local.get $4)
      (local.get $2)
     )
    )
    (local.set $1
     (if (result i32)
      (i32.lt_u
       (local.tee $3
        (i32.load offset=12
         (local.get $0)
        )
       )
       (local.tee $5
        (i32.load offset=16
         (local.get $0)
        )
       )
      )
      (block (result i32)
       (call $__ZNSt3__211char_traitsIwE4copyEPwPKwm
        (local.get $1)
        (local.get $3)
        (local.tee $3
         (select
          (local.tee $6
           (i32.sub
            (local.get $2)
            (local.get $4)
           )
          )
          (local.tee $3
           (i32.shr_s
            (i32.sub
             (local.get $5)
             (local.get $3)
            )
            (i32.const 2)
           )
          )
          (i32.lt_s
           (local.get $6)
           (local.get $3)
          )
         )
        )
       )
       (i32.store offset=12
        (local.get $0)
        (i32.add
         (i32.load offset=12
          (local.get $0)
         )
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
        )
       )
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
      (block (result i32)
       (br_if $while-out
        (i32.eq
         (local.tee $3
          (call_indirect (type $i32_=>_i32)
           (local.get $0)
           (i32.and
            (i32.load offset=40
             (i32.load
              (local.get $0)
             )
            )
            (i32.const 63)
           )
          )
         )
         (i32.const -1)
        )
       )
       (i32.store
        (local.get $1)
        (local.get $3)
       )
       (local.set $3
        (i32.const 1)
       )
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
     )
    )
    (local.set $4
     (i32.add
      (local.get $3)
      (local.get $4)
     )
    )
    (br $while-in)
   )
  )
  (local.get $4)
 )
 (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.eq
    (call_indirect (type $i32_=>_i32)
     (local.get $0)
     (i32.and
      (i32.load offset=36
       (i32.load
        (local.get $0)
       )
      )
      (i32.const 63)
     )
    )
    (i32.const -1)
   )
   (i32.const -1)
   (block (result i32)
    (i32.store offset=12
     (local.get $0)
     (i32.add
      (local.tee $0
       (i32.load offset=12
        (local.get $0)
       )
      )
      (i32.const 4)
     )
    )
    (i32.load
     (local.get $0)
    )
   )
  )
 )
 (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.ge_s
      (local.get $4)
      (local.get $2)
     )
    )
    (local.set $1
     (if (result i32)
      (i32.lt_u
       (local.tee $3
        (i32.load offset=24
         (local.get $0)
        )
       )
       (local.tee $5
        (i32.load offset=28
         (local.get $0)
        )
       )
      )
      (block (result i32)
       (call $__ZNSt3__211char_traitsIwE4copyEPwPKwm
        (local.get $3)
        (local.get $1)
        (local.tee $3
         (select
          (local.tee $6
           (i32.sub
            (local.get $2)
            (local.get $4)
           )
          )
          (local.tee $3
           (i32.shr_s
            (i32.sub
             (local.get $5)
             (local.get $3)
            )
            (i32.const 2)
           )
          )
          (i32.lt_s
           (local.get $6)
           (local.get $3)
          )
         )
        )
       )
       (i32.store offset=24
        (local.get $0)
        (i32.add
         (i32.load offset=24
          (local.get $0)
         )
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $3)
         (local.get $4)
        )
       )
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
      (block (result i32)
       (br_if $while-out
        (i32.eq
         (call_indirect (type $i32_i32_=>_i32)
          (local.get $0)
          (i32.load
           (local.get $1)
          )
          (i32.add
           (i32.and
            (i32.load offset=52
             (i32.load
              (local.get $0)
             )
            )
            (i32.const 15)
           )
           (i32.const 66)
          )
         )
         (i32.const -1)
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
     )
    )
    (br $while-in)
   )
  )
  (local.get $4)
 )
 (func $__ZNSt3__211char_traitsIwE4copyEPwPKwm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (local.get $2)
   (call $_wmemcpy
    (local.get $0)
    (local.get $1)
    (local.get $2)
   )
  )
 )
 (func $__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__28ios_baseD2Ev
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
 )
 (func $__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev
   (i32.add
    (local.get $0)
    (i32.load
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.const -12)
     )
    )
   )
  )
 )
 (func $__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev
   (i32.add
    (local.get $0)
    (i32.load
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.const -12)
     )
    )
   )
  )
 )
 (func $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__28ios_baseD2Ev
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
 )
 (func $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev
   (i32.add
    (local.get $0)
    (i32.load
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.const -12)
     )
    )
   )
  )
 )
 (func $__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev
   (i32.add
    (local.get $0)
    (i32.load
     (i32.add
      (i32.load
       (local.get $0)
      )
      (i32.const -12)
     )
    )
   )
  )
 )
 (func $__ZNSt3__28ios_base4initEPv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (i32.store offset=24
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=16
   (local.get $0)
   (i32.eqz
    (local.get $1)
   )
  )
  (i32.store offset=20
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 4098)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 6)
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=64 align=4
   (local.get $0)
   (i64.const 0)
  )
  (call $__ZNSt3__26localeC2Ev
   (i32.add
    (local.get $0)
    (i32.const 28)
   )
  )
 )
 (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev (; has Stack IR ;) (param $0 i32)
  (i32.store
   (local.get $0)
   (i32.const 37532)
  )
  (call $__ZNSt3__26localeC2Ev
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 8)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.const 0)
  )
 )
 (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev (; has Stack IR ;) (param $0 i32)
  (i32.store
   (local.get $0)
   (i32.const 37596)
  )
  (call $__ZNSt3__26localeC2Ev
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (local.get $0)
     (i32.const 8)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.const 0)
  )
 )
 (func $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (local.tee $6
    (i32.load
     (local.get $0)
    )
   )
   (block $label$break$L1
    (local.set $8
     (i32.load offset=12
      (local.get $4)
     )
    )
    (if
     (i32.gt_s
      (local.tee $9
       (i32.sub
        (local.get $2)
        (local.get $1)
       )
      )
      (i32.const 0)
     )
     (block
      (local.set $10
       (i32.load offset=48
        (i32.load
         (local.get $6)
        )
       )
      )
      (if
       (i32.ne
        (call_indirect (type $i32_i32_i32_=>_i32)
         (local.get $6)
         (local.get $1)
         (local.get $9)
         (i32.add
          (i32.and
           (local.get $10)
           (i32.const 31)
          )
          (i32.const 82)
         )
        )
        (local.get $9)
       )
       (block
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L1)
       )
      )
     )
    )
    (if
     (i32.gt_s
      (local.tee $1
       (select
        (i32.sub
         (local.get $8)
         (local.tee $1
          (i32.sub
           (local.get $3)
           (local.get $1)
          )
         )
        )
        (i32.const 0)
        (i32.gt_s
         (local.get $8)
         (local.get $1)
        )
       )
      )
      (i32.const 0)
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc
       (local.get $7)
       (local.get $1)
       (local.get $5)
      )
      (local.set $5
       (i32.load offset=48
        (i32.load
         (local.get $6)
        )
       )
      )
      (if
       (i32.eq
        (call_indirect (type $i32_i32_i32_=>_i32)
         (local.get $6)
         (select
          (i32.load
           (local.get $7)
          )
          (local.get $7)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $7)
           )
           (i32.const 0)
          )
         )
         (local.get $1)
         (i32.add
          (i32.and
           (local.get $5)
           (i32.const 31)
          )
          (i32.const 82)
         )
        )
        (local.get $1)
       )
       (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
        (local.get $7)
       )
       (block
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
         (local.get $7)
        )
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L1)
       )
      )
     )
    )
    (if
     (i32.gt_s
      (local.tee $1
       (i32.sub
        (local.get $3)
        (local.get $2)
       )
      )
      (i32.const 0)
     )
     (block
      (local.set $3
       (i32.load offset=48
        (i32.load
         (local.get $6)
        )
       )
      )
      (if
       (i32.ne
        (call_indirect (type $i32_i32_i32_=>_i32)
         (local.get $6)
         (local.get $2)
         (local.get $1)
         (i32.add
          (i32.and
           (local.get $3)
           (i32.const 31)
          )
          (i32.const 82)
         )
        )
        (local.get $1)
       )
       (block
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L1)
       )
      )
     )
    )
    (i32.store offset=12
     (local.get $4)
     (i32.const 0)
    )
   )
   (local.set $6
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $6)
 )
 (func $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (local.tee $6
    (i32.load
     (local.get $0)
    )
   )
   (block $label$break$L1
    (local.set $9
     (i32.load offset=12
      (local.get $4)
     )
    )
    (local.set $10
     (i32.shr_s
      (local.tee $8
       (i32.sub
        (local.get $2)
        (local.get $1)
       )
      )
      (i32.const 2)
     )
    )
    (if
     (i32.gt_s
      (local.get $8)
      (i32.const 0)
     )
     (block
      (local.set $8
       (i32.load offset=48
        (i32.load
         (local.get $6)
        )
       )
      )
      (if
       (i32.ne
        (call_indirect (type $i32_i32_i32_=>_i32)
         (local.get $6)
         (local.get $1)
         (local.get $10)
         (i32.add
          (i32.and
           (local.get $8)
           (i32.const 31)
          )
          (i32.const 82)
         )
        )
        (local.get $10)
       )
       (block
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L1)
       )
      )
     )
    )
    (if
     (i32.gt_s
      (local.tee $1
       (select
        (i32.sub
         (local.get $9)
         (local.tee $1
          (i32.shr_s
           (i32.sub
            (local.get $3)
            (local.get $1)
           )
           (i32.const 2)
          )
         )
        )
        (i32.const 0)
        (i32.gt_s
         (local.get $9)
         (local.get $1)
        )
       )
      )
      (i32.const 0)
     )
     (block
      (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw
       (local.get $7)
       (local.get $1)
       (local.get $5)
      )
      (local.set $5
       (i32.load offset=48
        (i32.load
         (local.get $6)
        )
       )
      )
      (if
       (i32.eq
        (call_indirect (type $i32_i32_i32_=>_i32)
         (local.get $6)
         (select
          (i32.load
           (local.get $7)
          )
          (local.get $7)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $7)
           )
           (i32.const 0)
          )
         )
         (local.get $1)
         (i32.add
          (i32.and
           (local.get $5)
           (i32.const 31)
          )
          (i32.const 82)
         )
        )
        (local.get $1)
       )
       (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
        (local.get $7)
       )
       (block
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
         (local.get $7)
        )
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L1)
       )
      )
     )
    )
    (local.set $1
     (i32.shr_s
      (local.tee $3
       (i32.sub
        (local.get $3)
        (local.get $2)
       )
      )
      (i32.const 2)
     )
    )
    (if
     (i32.gt_s
      (local.get $3)
      (i32.const 0)
     )
     (block
      (local.set $3
       (i32.load offset=48
        (i32.load
         (local.get $6)
        )
       )
      )
      (if
       (i32.ne
        (call_indirect (type $i32_i32_i32_=>_i32)
         (local.get $6)
         (local.get $2)
         (local.get $1)
         (i32.add
          (i32.and
           (local.get $3)
           (i32.const 31)
          )
          (i32.const 82)
         )
        )
        (local.get $1)
       )
       (block
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L1)
       )
      )
     )
    )
    (i32.store offset=12
     (local.get $4)
     (i32.const 0)
    )
   )
   (local.set $6
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $6)
 )
 (func $__ZNSt3__29DoIOSInitC2Ev (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (call $__ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t
   (local.tee $0
    (i32.load
     (i32.const 37124)
    )
   )
  )
  (i32.store
   (i32.const 53352)
   (i32.const 37664)
  )
  (i32.store
   (i32.const 53360)
   (i32.const 37684)
  )
  (i32.store
   (i32.const 53356)
   (i32.const 0)
  )
  (call $__ZNSt3__28ios_base4initEPv
   (i32.const 53360)
   (i32.const 54032)
  )
  (i32.store
   (i32.const 53432)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53436)
   (i32.const -1)
  )
  (call $__ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t
   (local.get $0)
  )
  (i32.store
   (i32.const 53440)
   (i32.const 37712)
  )
  (i32.store
   (i32.const 53448)
   (i32.const 37732)
  )
  (i32.store
   (i32.const 53444)
   (i32.const 0)
  )
  (call $__ZNSt3__28ios_base4initEPv
   (i32.const 53448)
   (i32.const 54096)
  )
  (i32.store
   (i32.const 53520)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53524)
   (i32.const -1)
  )
  (call $__ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t
   (i32.const 54160)
   (local.tee $0
    (i32.load
     (i32.const 37128)
    )
   )
   (i32.const 54208)
  )
  (i32.store
   (i32.const 53528)
   (i32.const 37760)
  )
  (i32.store
   (i32.const 53532)
   (i32.const 37780)
  )
  (call $__ZNSt3__28ios_base4initEPv
   (i32.const 53532)
   (i32.const 54160)
  )
  (i32.store
   (i32.const 53604)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53608)
   (i32.const -1)
  )
  (call $__ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t
   (i32.const 54216)
   (local.get $0)
   (i32.const 54264)
  )
  (i32.store
   (i32.const 53612)
   (i32.const 37808)
  )
  (i32.store
   (i32.const 53616)
   (i32.const 37828)
  )
  (call $__ZNSt3__28ios_base4initEPv
   (i32.const 53616)
   (i32.const 54216)
  )
  (i32.store
   (i32.const 53688)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53692)
   (i32.const -1)
  )
  (call $__ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t
   (i32.const 54272)
   (local.tee $0
    (i32.load
     (i32.const 37120)
    )
   )
   (i32.const 54320)
  )
  (i32.store
   (i32.const 53696)
   (i32.const 37760)
  )
  (i32.store
   (i32.const 53700)
   (i32.const 37780)
  )
  (call $__ZNSt3__28ios_base4initEPv
   (i32.const 53700)
   (i32.const 54272)
  )
  (i32.store
   (i32.const 53772)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53776)
   (i32.const -1)
  )
  (local.set $1
   (i32.load offset=24
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (i32.const 53696)
       )
       (i32.const -12)
      )
     )
     (i32.const 53696)
    )
   )
  )
  (i32.store
   (i32.const 53864)
   (i32.const 37760)
  )
  (i32.store
   (i32.const 53868)
   (i32.const 37780)
  )
  (call $__ZNSt3__28ios_base4initEPv
   (i32.const 53868)
   (local.get $1)
  )
  (i32.store
   (i32.const 53940)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53944)
   (i32.const -1)
  )
  (call $__ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t
   (i32.const 54328)
   (local.get $0)
   (i32.const 54376)
  )
  (i32.store
   (i32.const 53780)
   (i32.const 37808)
  )
  (i32.store
   (i32.const 53784)
   (i32.const 37828)
  )
  (call $__ZNSt3__28ios_base4initEPv
   (i32.const 53784)
   (i32.const 54328)
  )
  (i32.store
   (i32.const 53856)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53860)
   (i32.const -1)
  )
  (local.set $0
   (i32.load offset=24
    (i32.add
     (i32.load
      (i32.add
       (i32.load
        (i32.const 53780)
       )
       (i32.const -12)
      )
     )
     (i32.const 53780)
    )
   )
  )
  (i32.store
   (i32.const 53948)
   (i32.const 37808)
  )
  (i32.store
   (i32.const 53952)
   (i32.const 37828)
  )
  (call $__ZNSt3__28ios_base4initEPv
   (i32.const 53952)
   (local.get $0)
  )
  (i32.store
   (i32.const 54024)
   (i32.const 0)
  )
  (i32.store
   (i32.const 54028)
   (i32.const -1)
  )
  (i32.store offset=72
   (i32.add
    (i32.load
     (i32.add
      (i32.load
       (i32.const 53352)
      )
      (i32.const -12)
     )
    )
    (i32.const 53352)
   )
   (i32.const 53528)
  )
  (i32.store offset=72
   (i32.add
    (i32.load
     (i32.add
      (i32.load
       (i32.const 53440)
      )
      (i32.const -12)
     )
    )
    (i32.const 53440)
   )
   (i32.const 53612)
  )
  (i32.store offset=4
   (local.tee $1
    (i32.add
     (i32.load
      (local.tee $0
       (i32.add
        (i32.load
         (i32.const 53696)
        )
        (i32.const -12)
       )
      )
     )
     (i32.const 53696)
    )
   )
   (i32.or
    (i32.load offset=4
     (local.get $1)
    )
    (i32.const 8192)
   )
  )
  (i32.store offset=4
   (local.tee $2
    (i32.add
     (i32.load
      (local.tee $1
       (i32.add
        (i32.load
         (i32.const 53780)
        )
        (i32.const -12)
       )
      )
     )
     (i32.const 53780)
    )
   )
   (i32.or
    (i32.load offset=4
     (local.get $2)
    )
    (i32.const 8192)
   )
  )
  (i32.store offset=72
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.const 53696)
   )
   (i32.const 53528)
  )
  (i32.store offset=72
   (i32.add
    (i32.load
     (local.get $1)
    )
    (i32.const 53780)
   )
   (i32.const 53612)
  )
 )
 (func $__ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (call $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev
   (i32.const 54032)
  )
  (i32.store
   (i32.const 54032)
   (i32.const 38044)
  )
  (i32.store
   (i32.const 54064)
   (local.get $0)
  )
  (i32.store
   (i32.const 54072)
   (i32.const 54088)
  )
  (i32.store
   (i32.const 54080)
   (i32.const -1)
  )
  (i32.store8
   (i32.const 54084)
   (i32.const 0)
  )
  (local.set $2
   (i32.load offset=8
    (i32.load
     (i32.const 54032)
    )
   )
  )
  (i32.store
   (local.get $1)
   (local.tee $0
    (i32.load
     (i32.const 54036)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (i32.const 54032)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $2)
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $__ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev
   (i32.const 54096)
  )
  (i32.store
   (i32.const 54096)
   (i32.const 37980)
  )
  (i32.store
   (i32.const 54128)
   (local.get $0)
  )
  (i32.store
   (i32.const 54136)
   (i32.const 54152)
  )
  (i32.store
   (i32.const 54144)
   (i32.const -1)
  )
  (i32.store8
   (i32.const 54148)
   (i32.const 0)
  )
  (local.set $2
   (i32.load offset=8
    (i32.load
     (i32.const 54096)
    )
   )
  )
  (i32.store
   (local.get $1)
   (local.tee $0
    (i32.load
     (i32.const 54100)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (i32.const 54096)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $2)
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $__ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (call $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev
   (local.get $0)
  )
  (i32.store
   (local.get $0)
   (i32.const 37916)
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $1)
  )
  (i32.store
   (local.get $3)
   (local.tee $1
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.add
    (i32.load offset=4
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (local.set $1
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $3)
    (i32.const 54704)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $3)
  )
  (i32.store offset=36
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=40
   (local.get $0)
   (local.get $2)
  )
  (i32.store8 offset=44
   (local.get $0)
   (i32.and
    (call_indirect (type $i32_=>_i32)
     (local.get $1)
     (i32.and
      (i32.load offset=28
       (i32.load
        (local.get $1)
       )
      )
      (i32.const 63)
     )
    )
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev
   (local.get $0)
  )
  (i32.store
   (local.get $0)
   (i32.const 37852)
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $1)
  )
  (i32.store
   (local.get $3)
   (local.tee $1
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.add
    (i32.load offset=4
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (local.set $1
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $3)
    (i32.const 54712)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $3)
  )
  (i32.store offset=36
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=40
   (local.get $0)
   (local.get $2)
  )
  (i32.store8 offset=44
   (local.get $0)
   (i32.and
    (call_indirect (type $i32_=>_i32)
     (local.get $1)
     (i32.and
      (i32.load offset=28
       (i32.load
        (local.get $1)
       )
      )
      (i32.const 63)
     )
    )
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (i32.load offset=24
    (i32.load
     (local.get $0)
    )
   )
  )
  (drop
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (local.get $2)
     (i32.const 63)
    )
   )
  )
  (i32.store offset=36
   (local.get $0)
   (local.tee $1
    (call $__ZNKSt3__26locale9use_facetERNS0_2idE
     (local.get $1)
     (i32.const 54712)
    )
   )
  )
  (local.set $2
   (i32.load offset=28
    (i32.load
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=44
   (local.get $0)
   (i32.and
    (call_indirect (type $i32_=>_i32)
     (local.get $1)
     (i32.and
      (local.get $2)
      (i32.const 63)
     )
    )
    (i32.const 1)
   )
  )
 )
 (func $__ZNSt3__211__stdoutbufIwE4syncEv (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.tee $2
     (i32.add
      (local.get $1)
      (i32.const 8)
     )
    )
    (i32.const 8)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $label$continue$L1
     (local.set $4
      (i32.load offset=20
       (i32.load
        (local.tee $3
         (i32.load offset=36
          (local.get $0)
         )
        )
       )
      )
     )
     (local.set $3
      (call_indirect (type $i32_i32_i32_i32_i32_=>_i32)
       (local.get $3)
       (i32.load offset=40
        (local.get $0)
       )
       (local.get $2)
       (local.get $5)
       (local.get $1)
       (i32.add
        (i32.and
         (local.get $4)
         (i32.const 31)
        )
        (i32.const 130)
       )
      )
     )
     (block $label$break$L1
      (br_if $label$break$L1
       (i32.ne
        (local.tee $4
         (i32.sub
          (i32.load
           (local.get $1)
          )
          (local.get $2)
         )
        )
        (call $_fwrite
         (local.get $2)
         (i32.const 1)
         (local.get $4)
         (i32.load offset=32
          (local.get $0)
         )
        )
       )
      )
      (block $switch
       (br_table $switch $label$break$L1 $__rjti$0
        (i32.sub
         (local.get $3)
         (i32.const 1)
        )
       )
      )
      (br $label$continue$L1)
     )
    )
    (local.set $0
     (i32.const -1)
    )
    (br $__rjto$0)
   )
   (local.set $0
    (i32.shr_s
     (i32.shl
      (i32.ne
       (call $_fflush
        (i32.load offset=32
         (local.get $0)
        )
       )
       (i32.const 0)
      )
      (i32.const 31)
     )
     (i32.const 31)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $__ZNSt3__211__stdoutbufIwE6xsputnEPKwl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.load8_s offset=44
    (local.get $0)
   )
   (local.set $3
    (call $_fwrite
     (local.get $1)
     (i32.const 4)
     (local.get $2)
     (i32.load offset=32
      (local.get $0)
     )
    )
   )
   (loop $while-in
    (if
     (i32.lt_s
      (local.get $3)
      (local.get $2)
     )
     (if
      (i32.ne
       (call_indirect (type $i32_i32_=>_i32)
        (local.get $0)
        (i32.load
         (local.get $1)
        )
        (i32.add
         (i32.and
          (i32.load offset=52
           (i32.load
            (local.get $0)
           )
          )
          (i32.const 15)
         )
         (i32.const 66)
        )
       )
       (i32.const -1)
      )
      (block
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (local.get $3)
 )
 (func $__ZNSt3__211__stdoutbufIwE8overflowEj (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (local.set $0
   (block $__rjto$3 (result i32)
    (block $__rjti$3
     (br_if $__rjti$3
      (i32.eq
       (local.get $1)
       (i32.const -1)
      )
     )
     (br $__rjto$3
      (block $do-once (result i32)
       (i32.store
        (local.get $2)
        (local.get $1)
       )
       (if
        (i32.load8_s offset=44
         (local.get $0)
        )
        (block
         (br_if $__rjti$3
          (i32.eq
           (call $_fwrite
            (local.get $2)
            (i32.const 4)
            (i32.const 1)
            (i32.load offset=32
             (local.get $0)
            )
           )
           (i32.const 1)
          )
         )
         (br $do-once
          (i32.const -1)
         )
        )
       )
       (i32.store
        (local.get $6)
        (local.get $4)
       )
       (local.set $7
        (i32.add
         (local.get $2)
         (i32.const 4)
        )
       )
       (local.set $8
        (i32.add
         (local.get $4)
         (i32.const 8)
        )
       )
       (block $__rjti$2
        (loop $while-in
         (block $__rjti$0
          (local.set $9
           (i32.load offset=12
            (i32.load
             (local.tee $5
              (i32.load offset=36
               (local.get $0)
              )
             )
            )
           )
          )
          (local.set $5
           (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
            (local.get $5)
            (i32.load offset=40
             (local.get $0)
            )
            (local.get $2)
            (local.get $7)
            (local.get $3)
            (local.get $4)
            (local.get $8)
            (local.get $6)
            (i32.add
             (i32.and
              (local.get $9)
              (i32.const 15)
             )
             (i32.const 238)
            )
           )
          )
          (br_if $__rjti$2
           (i32.eq
            (local.get $2)
            (i32.load
             (local.get $3)
            )
           )
          )
          (br_if $__rjti$0
           (i32.eq
            (local.get $5)
            (i32.const 3)
           )
          )
          (br_if $__rjti$2
           (i32.ge_u
            (local.get $5)
            (i32.const 2)
           )
          )
          (br_if $__rjti$2
           (i32.ne
            (local.tee $2
             (i32.sub
              (i32.load
               (local.get $6)
              )
              (local.get $4)
             )
            )
            (call $_fwrite
             (local.get $4)
             (i32.const 1)
             (local.get $2)
             (i32.load offset=32
              (local.get $0)
             )
            )
           )
          )
          (local.set $2
           (i32.load
            (local.get $3)
           )
          )
          (br_if $while-in
           (i32.eq
            (local.get $5)
            (i32.const 1)
           )
          )
          (br $__rjti$3)
         )
        )
        (br_if $__rjti$2
         (i32.ne
          (call $_fwrite
           (local.get $2)
           (i32.const 1)
           (i32.const 1)
           (i32.load offset=32
            (local.get $0)
           )
          )
          (i32.const 1)
         )
        )
        (br $__rjti$3)
       )
       (i32.const -1)
      )
     )
    )
    (select
     (i32.const 0)
     (local.get $1)
     (i32.eq
      (local.get $1)
      (i32.const -1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (i32.load offset=24
    (i32.load
     (local.get $0)
    )
   )
  )
  (drop
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (local.get $2)
     (i32.const 63)
    )
   )
  )
  (i32.store offset=36
   (local.get $0)
   (local.tee $1
    (call $__ZNKSt3__26locale9use_facetERNS0_2idE
     (local.get $1)
     (i32.const 54704)
    )
   )
  )
  (local.set $2
   (i32.load offset=28
    (i32.load
     (local.get $1)
    )
   )
  )
  (i32.store8 offset=44
   (local.get $0)
   (i32.and
    (call_indirect (type $i32_=>_i32)
     (local.get $1)
     (i32.and
      (local.get $2)
      (i32.const 63)
     )
    )
    (i32.const 1)
   )
  )
 )
 (func $__ZNSt3__211__stdoutbufIcE6xsputnEPKcl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.load8_s offset=44
    (local.get $0)
   )
   (local.set $3
    (call $_fwrite
     (local.get $1)
     (i32.const 1)
     (local.get $2)
     (i32.load offset=32
      (local.get $0)
     )
    )
   )
   (loop $while-in
    (if
     (i32.lt_s
      (local.get $3)
      (local.get $2)
     )
     (if
      (i32.ne
       (call_indirect (type $i32_i32_=>_i32)
        (local.get $0)
        (i32.load8_u
         (local.get $1)
        )
        (i32.add
         (i32.and
          (i32.load offset=52
           (i32.load
            (local.get $0)
           )
          )
          (i32.const 15)
         )
         (i32.const 66)
        )
       )
       (i32.const -1)
      )
      (block
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (local.get $3)
 )
 (func $__ZNSt3__211__stdoutbufIcE8overflowEi (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (local.set $0
   (block $__rjto$3 (result i32)
    (block $__rjti$3
     (br_if $__rjti$3
      (i32.eq
       (local.get $1)
       (i32.const -1)
      )
     )
     (br $__rjto$3
      (block $do-once (result i32)
       (i32.store8
        (local.get $2)
        (local.get $1)
       )
       (if
        (i32.load8_s offset=44
         (local.get $0)
        )
        (block
         (br_if $__rjti$3
          (i32.eq
           (call $_fwrite
            (local.get $2)
            (i32.const 1)
            (i32.const 1)
            (i32.load offset=32
             (local.get $0)
            )
           )
           (i32.const 1)
          )
         )
         (br $do-once
          (i32.const -1)
         )
        )
       )
       (i32.store
        (local.get $6)
        (local.get $4)
       )
       (local.set $7
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $8
        (i32.add
         (local.get $4)
         (i32.const 8)
        )
       )
       (block $__rjti$2
        (loop $while-in
         (block $__rjti$0
          (local.set $9
           (i32.load offset=12
            (i32.load
             (local.tee $5
              (i32.load offset=36
               (local.get $0)
              )
             )
            )
           )
          )
          (local.set $5
           (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
            (local.get $5)
            (i32.load offset=40
             (local.get $0)
            )
            (local.get $2)
            (local.get $7)
            (local.get $3)
            (local.get $4)
            (local.get $8)
            (local.get $6)
            (i32.add
             (i32.and
              (local.get $9)
              (i32.const 15)
             )
             (i32.const 238)
            )
           )
          )
          (br_if $__rjti$2
           (i32.eq
            (local.get $2)
            (i32.load
             (local.get $3)
            )
           )
          )
          (br_if $__rjti$0
           (i32.eq
            (local.get $5)
            (i32.const 3)
           )
          )
          (br_if $__rjti$2
           (i32.ge_u
            (local.get $5)
            (i32.const 2)
           )
          )
          (br_if $__rjti$2
           (i32.ne
            (local.tee $2
             (i32.sub
              (i32.load
               (local.get $6)
              )
              (local.get $4)
             )
            )
            (call $_fwrite
             (local.get $4)
             (i32.const 1)
             (local.get $2)
             (i32.load offset=32
              (local.get $0)
             )
            )
           )
          )
          (local.set $2
           (i32.load
            (local.get $3)
           )
          )
          (br_if $while-in
           (i32.eq
            (local.get $5)
            (i32.const 1)
           )
          )
          (br $__rjti$3)
         )
        )
        (br_if $__rjti$2
         (i32.ne
          (call $_fwrite
           (local.get $2)
           (i32.const 1)
           (i32.const 1)
           (i32.load offset=32
            (local.get $0)
           )
          )
          (i32.const 1)
         )
        )
        (br $__rjti$3)
       )
       (i32.const -1)
      )
     )
    )
    (select
     (i32.const 0)
     (local.get $1)
     (i32.eq
      (local.get $1)
      (i32.const -1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (i32.store offset=36
   (local.get $0)
   (local.tee $1
    (call $__ZNKSt3__26locale9use_facetERNS0_2idE
     (local.get $1)
     (i32.const 54712)
    )
   )
  )
  (i32.store offset=44
   (local.get $0)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=24
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (local.set $2
   (i32.load offset=28
    (i32.load
     (local.tee $1
      (i32.load offset=36
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store8 offset=53
   (local.get $0)
   (i32.and
    (call_indirect (type $i32_=>_i32)
     (local.get $1)
     (i32.and
      (local.get $2)
      (i32.const 63)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.gt_s
    (i32.load offset=44
     (local.get $0)
    )
    (i32.const 8)
   )
   (call $_abort)
  )
 )
 (func $__ZNSt3__210__stdinbufIwE9underflowEv (; has Stack IR ;) (param $0 i32) (result i32)
  (call $__ZNSt3__210__stdinbufIwE9__getcharEb
   (local.get $0)
   (i32.const 0)
  )
 )
 (func $__ZNSt3__210__stdinbufIwE5uflowEv (; has Stack IR ;) (param $0 i32) (result i32)
  (call $__ZNSt3__210__stdinbufIwE9__getcharEb
   (local.get $0)
   (i32.const 1)
  )
 )
 (func $__ZNSt3__210__stdinbufIwE9pbackfailEj (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (local.set $2
   (i32.ne
    (i32.load8_s offset=52
     (local.get $0)
    )
    (i32.const 0)
   )
  )
  (if
   (i32.eq
    (local.get $1)
    (i32.const -1)
   )
   (if
    (i32.eqz
     (local.get $2)
    )
    (i32.store8 offset=52
     (local.get $0)
     (i32.xor
      (i32.eq
       (local.tee $1
        (i32.load offset=48
         (local.get $0)
        )
       )
       (i32.const -1)
      )
      (i32.const 1)
     )
    )
   )
   (block $do-once
    (if
     (local.get $2)
     (block
      (i32.store
       (local.get $6)
       (i32.load
        (local.tee $7
         (i32.add
          (local.get $0)
          (i32.const 48)
         )
        )
       )
      )
      (local.set $2
       (i32.load offset=12
        (i32.load
         (local.tee $8
          (i32.load offset=36
           (local.get $0)
          )
         )
        )
       )
      )
      (if
       (i32.eqz
        (block $__rjto$1 (result i32)
         (block $__rjti$1
          (block $__rjti$0
           (block $switch-case1
            (br_table $__rjti$1 $__rjti$1 $switch-case1 $__rjti$0
             (i32.sub
              (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
               (local.get $8)
               (i32.load offset=40
                (local.get $0)
               )
               (local.get $6)
               (i32.add
                (local.get $6)
                (i32.const 4)
               )
               (local.get $3)
               (local.get $4)
               (i32.add
                (local.get $4)
                (i32.const 8)
               )
               (local.get $5)
               (i32.add
                (i32.and
                 (local.get $2)
                 (i32.const 15)
                )
                (i32.const 238)
               )
              )
              (i32.const 1)
             )
            )
           )
           (i32.store8
            (local.get $4)
            (i32.load offset=48
             (local.get $0)
            )
           )
           (i32.store
            (local.get $5)
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
          )
          (loop $while-in
           (if
            (i32.le_u
             (local.tee $2
              (i32.load
               (local.get $5)
              )
             )
             (local.get $4)
            )
            (block
             (local.set $2
              (i32.const 0)
             )
             (br $__rjto$1
              (i32.const 1)
             )
            )
           )
           (i32.store
            (local.get $5)
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const -1)
             )
            )
           )
           (br_if $while-in
            (i32.ne
             (call $_ungetc
              (i32.load8_s
               (local.get $2)
              )
              (i32.load offset=32
               (local.get $0)
              )
             )
             (i32.const -1)
            )
           )
          )
         )
         (local.set $2
          (i32.const -1)
         )
         (i32.const 0)
        )
       )
       (block
        (local.set $1
         (local.get $2)
        )
        (br $do-once)
       )
      )
     )
     (local.set $7
      (i32.add
       (local.get $0)
       (i32.const 48)
      )
     )
    )
    (i32.store
     (local.get $7)
     (local.get $1)
    )
    (i32.store8 offset=52
     (local.get $0)
     (i32.const 1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $1)
 )
 (func $__ZNSt3__210__stdinbufIwE9__getcharEb (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $3
   (i32.add
    (local.get $5)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.add
    (local.get $5)
    (i32.const 8)
   )
  )
  (local.set $9
   (i32.add
    (local.get $5)
    (i32.const 4)
   )
  )
  (if
   (i32.load8_s offset=52
    (local.get $0)
   )
   (block
    (local.set $2
     (i32.load offset=48
      (local.get $0)
     )
    )
    (if
     (local.get $1)
     (block
      (i32.store offset=48
       (local.get $0)
       (i32.const -1)
      )
      (i32.store8 offset=52
       (local.get $0)
       (i32.const 0)
      )
     )
    )
    (local.set $0
     (local.get $2)
    )
   )
   (block
    (local.set $2
     (select
      (local.tee $2
       (i32.load offset=44
        (local.get $0)
       )
      )
      (i32.const 1)
      (i32.gt_s
       (local.get $2)
       (i32.const 1)
      )
     )
    )
    (block $__rjto$4
     (block $__rjti$4
      (loop $while-in
       (br_if $__rjti$4
        (i32.ge_u
         (local.get $6)
         (local.get $2)
        )
       )
       (if
        (i32.ne
         (local.tee $7
          (call $_getc
           (i32.load offset=32
            (local.get $0)
           )
          )
         )
         (i32.const -1)
        )
        (block
         (i32.store8
          (i32.add
           (local.get $3)
           (local.get $6)
          )
          (local.get $7)
         )
         (local.set $6
          (i32.add
           (local.get $6)
           (i32.const 1)
          )
         )
         (br $while-in)
        )
       )
      )
      (local.set $0
       (i32.const -1)
      )
      (br $__rjto$4)
     )
     (block $label$break$L21
      (block $__rjti$2
       (if
        (i32.load8_s offset=53
         (local.get $0)
        )
        (block
         (i32.store
          (local.get $4)
          (i32.load8_s
           (local.get $3)
          )
         )
         (br $__rjti$2)
        )
        (block $do-once
         (local.set $6
          (i32.add
           (local.get $4)
           (i32.const 4)
          )
         )
         (block $__rjto$1
          (block $__rjti$1
           (block $__rjti$0
            (loop $label$continue$L11
             (block $label$break$L11
              (local.set $10
               (i64.load align=4
                (local.tee $7
                 (i32.load offset=40
                  (local.get $0)
                 )
                )
               )
              )
              (local.set $11
               (i32.load offset=16
                (i32.load
                 (local.tee $8
                  (i32.load offset=36
                   (local.get $0)
                  )
                 )
                )
               )
              )
              (block $switch
               (br_table $switch $__rjti$1 $__rjti$0 $label$break$L11
                (i32.sub
                 (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
                  (local.get $8)
                  (local.get $7)
                  (local.get $3)
                  (local.tee $7
                   (i32.add
                    (local.get $2)
                    (local.get $3)
                   )
                  )
                  (local.get $9)
                  (local.get $4)
                  (local.get $6)
                  (local.get $5)
                  (i32.add
                   (i32.and
                    (local.get $11)
                    (i32.const 15)
                   )
                   (i32.const 238)
                  )
                 )
                 (i32.const 1)
                )
               )
              )
              (i64.store align=4
               (i32.load offset=40
                (local.get $0)
               )
               (local.get $10)
              )
              (br_if $__rjti$1
               (i32.eq
                (local.get $2)
                (i32.const 8)
               )
              )
              (br_if $__rjti$1
               (i32.eq
                (local.tee $8
                 (call $_getc
                  (i32.load offset=32
                   (local.get $0)
                  )
                 )
                )
                (i32.const -1)
               )
              )
              (i32.store8
               (local.get $7)
               (local.get $8)
              )
              (local.set $2
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
              )
              (br $label$continue$L11)
             )
            )
            (br $__rjto$1)
           )
           (i32.store
            (local.get $4)
            (i32.load8_s
             (local.get $3)
            )
           )
           (br $__rjto$1)
          )
          (local.set $0
           (i32.const -1)
          )
          (br $do-once)
         )
         (br $__rjti$2)
        )
       )
       (br $label$break$L21)
      )
      (if
       (local.get $1)
       (i32.store offset=48
        (local.get $0)
        (i32.load
         (local.get $4)
        )
       )
       (block $label$break$L23
        (loop $while-in5
         (br_if $label$break$L23
          (i32.le_s
           (local.get $2)
           (i32.const 0)
          )
         )
         (br_if $while-in5
          (i32.ne
           (call $_ungetc
            (i32.load8_s
             (i32.add
              (local.get $3)
              (local.tee $2
               (i32.add
                (local.get $2)
                (i32.const -1)
               )
              )
             )
            )
            (i32.load offset=32
             (local.get $0)
            )
           )
           (i32.const -1)
          )
         )
        )
        (local.set $0
         (i32.const -1)
        )
        (br $label$break$L21)
       )
      )
      (local.set $0
       (i32.load
        (local.get $4)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (i32.store offset=36
   (local.get $0)
   (local.tee $1
    (call $__ZNKSt3__26locale9use_facetERNS0_2idE
     (local.get $1)
     (i32.const 54704)
    )
   )
  )
  (i32.store offset=44
   (local.get $0)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=24
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (local.set $2
   (i32.load offset=28
    (i32.load
     (local.tee $1
      (i32.load offset=36
       (local.get $0)
      )
     )
    )
   )
  )
  (i32.store8 offset=53
   (local.get $0)
   (i32.and
    (call_indirect (type $i32_=>_i32)
     (local.get $1)
     (i32.and
      (local.get $2)
      (i32.const 63)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.gt_s
    (i32.load offset=44
     (local.get $0)
    )
    (i32.const 8)
   )
   (call $_abort)
  )
 )
 (func $__ZNSt3__210__stdinbufIcE9underflowEv (; has Stack IR ;) (param $0 i32) (result i32)
  (call $__ZNSt3__210__stdinbufIcE9__getcharEb
   (local.get $0)
   (i32.const 0)
  )
 )
 (func $__ZNSt3__210__stdinbufIcE5uflowEv (; has Stack IR ;) (param $0 i32) (result i32)
  (call $__ZNSt3__210__stdinbufIcE9__getcharEb
   (local.get $0)
   (i32.const 1)
  )
 )
 (func $__ZNSt3__210__stdinbufIcE9pbackfailEi (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $2
   (i32.ne
    (i32.load8_s offset=52
     (local.get $0)
    )
    (i32.const 0)
   )
  )
  (if
   (i32.eq
    (local.get $1)
    (i32.const -1)
   )
   (if
    (i32.eqz
     (local.get $2)
    )
    (i32.store8 offset=52
     (local.get $0)
     (i32.xor
      (i32.eq
       (local.tee $1
        (i32.load offset=48
         (local.get $0)
        )
       )
       (i32.const -1)
      )
      (i32.const 1)
     )
    )
   )
   (block $do-once
    (if
     (local.get $2)
     (block
      (i32.store8
       (local.get $6)
       (i32.load
        (local.tee $7
         (i32.add
          (local.get $0)
          (i32.const 48)
         )
        )
       )
      )
      (local.set $2
       (i32.load offset=12
        (i32.load
         (local.tee $8
          (i32.load offset=36
           (local.get $0)
          )
         )
        )
       )
      )
      (if
       (i32.eqz
        (block $__rjto$1 (result i32)
         (block $__rjti$1
          (block $__rjti$0
           (block $switch-case1
            (br_table $__rjti$1 $__rjti$1 $switch-case1 $__rjti$0
             (i32.sub
              (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
               (local.get $8)
               (i32.load offset=40
                (local.get $0)
               )
               (local.get $6)
               (i32.add
                (local.get $6)
                (i32.const 1)
               )
               (local.get $3)
               (local.get $4)
               (i32.add
                (local.get $4)
                (i32.const 8)
               )
               (local.get $5)
               (i32.add
                (i32.and
                 (local.get $2)
                 (i32.const 15)
                )
                (i32.const 238)
               )
              )
              (i32.const 1)
             )
            )
           )
           (i32.store8
            (local.get $4)
            (i32.load offset=48
             (local.get $0)
            )
           )
           (i32.store
            (local.get $5)
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
          )
          (loop $while-in
           (if
            (i32.le_u
             (local.tee $2
              (i32.load
               (local.get $5)
              )
             )
             (local.get $4)
            )
            (block
             (local.set $2
              (i32.const 0)
             )
             (br $__rjto$1
              (i32.const 1)
             )
            )
           )
           (i32.store
            (local.get $5)
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const -1)
             )
            )
           )
           (br_if $while-in
            (i32.ne
             (call $_ungetc
              (i32.load8_s
               (local.get $2)
              )
              (i32.load offset=32
               (local.get $0)
              )
             )
             (i32.const -1)
            )
           )
          )
         )
         (local.set $2
          (i32.const -1)
         )
         (i32.const 0)
        )
       )
       (block
        (local.set $1
         (local.get $2)
        )
        (br $do-once)
       )
      )
     )
     (local.set $7
      (i32.add
       (local.get $0)
       (i32.const 48)
      )
     )
    )
    (i32.store
     (local.get $7)
     (local.get $1)
    )
    (i32.store8 offset=52
     (local.get $0)
     (i32.const 1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $1)
 )
 (func $__ZNSt3__210__stdinbufIcE9__getcharEb (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $3
   (i32.add
    (local.get $5)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.add
    (local.get $5)
    (i32.const 8)
   )
  )
  (local.set $9
   (i32.add
    (local.get $5)
    (i32.const 4)
   )
  )
  (if
   (i32.load8_s offset=52
    (local.get $0)
   )
   (block
    (local.set $2
     (i32.load offset=48
      (local.get $0)
     )
    )
    (if
     (local.get $1)
     (block
      (i32.store offset=48
       (local.get $0)
       (i32.const -1)
      )
      (i32.store8 offset=52
       (local.get $0)
       (i32.const 0)
      )
     )
    )
    (local.set $0
     (local.get $2)
    )
   )
   (block
    (local.set $2
     (select
      (local.tee $2
       (i32.load offset=44
        (local.get $0)
       )
      )
      (i32.const 1)
      (i32.gt_s
       (local.get $2)
       (i32.const 1)
      )
     )
    )
    (block $__rjto$4
     (block $__rjti$4
      (loop $while-in
       (br_if $__rjti$4
        (i32.ge_u
         (local.get $6)
         (local.get $2)
        )
       )
       (if
        (i32.ne
         (local.tee $7
          (call $_getc
           (i32.load offset=32
            (local.get $0)
           )
          )
         )
         (i32.const -1)
        )
        (block
         (i32.store8
          (i32.add
           (local.get $3)
           (local.get $6)
          )
          (local.get $7)
         )
         (local.set $6
          (i32.add
           (local.get $6)
           (i32.const 1)
          )
         )
         (br $while-in)
        )
       )
      )
      (local.set $0
       (i32.const -1)
      )
      (br $__rjto$4)
     )
     (block $label$break$L21
      (block $__rjti$2
       (if
        (i32.load8_s offset=53
         (local.get $0)
        )
        (block
         (i32.store8
          (local.get $4)
          (i32.load8_s
           (local.get $3)
          )
         )
         (br $__rjti$2)
        )
        (block $do-once
         (local.set $6
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (block $__rjto$1
          (block $__rjti$1
           (block $__rjti$0
            (loop $label$continue$L11
             (block $label$break$L11
              (local.set $10
               (i64.load align=4
                (local.tee $7
                 (i32.load offset=40
                  (local.get $0)
                 )
                )
               )
              )
              (local.set $11
               (i32.load offset=16
                (i32.load
                 (local.tee $8
                  (i32.load offset=36
                   (local.get $0)
                  )
                 )
                )
               )
              )
              (block $switch
               (br_table $switch $__rjti$1 $__rjti$0 $label$break$L11
                (i32.sub
                 (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
                  (local.get $8)
                  (local.get $7)
                  (local.get $3)
                  (local.tee $7
                   (i32.add
                    (local.get $2)
                    (local.get $3)
                   )
                  )
                  (local.get $9)
                  (local.get $4)
                  (local.get $6)
                  (local.get $5)
                  (i32.add
                   (i32.and
                    (local.get $11)
                    (i32.const 15)
                   )
                   (i32.const 238)
                  )
                 )
                 (i32.const 1)
                )
               )
              )
              (i64.store align=4
               (i32.load offset=40
                (local.get $0)
               )
               (local.get $10)
              )
              (br_if $__rjti$1
               (i32.eq
                (local.get $2)
                (i32.const 8)
               )
              )
              (br_if $__rjti$1
               (i32.eq
                (local.tee $8
                 (call $_getc
                  (i32.load offset=32
                   (local.get $0)
                  )
                 )
                )
                (i32.const -1)
               )
              )
              (i32.store8
               (local.get $7)
               (local.get $8)
              )
              (local.set $2
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
              )
              (br $label$continue$L11)
             )
            )
            (br $__rjto$1)
           )
           (i32.store8
            (local.get $4)
            (i32.load8_s
             (local.get $3)
            )
           )
           (br $__rjto$1)
          )
          (local.set $0
           (i32.const -1)
          )
          (br $do-once)
         )
         (br $__rjti$2)
        )
       )
       (br $label$break$L21)
      )
      (if
       (local.get $1)
       (i32.store offset=48
        (local.get $0)
        (i32.load8_u
         (local.get $4)
        )
       )
       (block $label$break$L23
        (loop $while-in5
         (br_if $label$break$L23
          (i32.le_s
           (local.get $2)
           (i32.const 0)
          )
         )
         (br_if $while-in5
          (i32.ne
           (call $_ungetc
            (i32.load8_u
             (i32.add
              (local.get $3)
              (local.tee $2
               (i32.add
                (local.get $2)
                (i32.const -1)
               )
              )
             )
            )
            (i32.load offset=32
             (local.get $0)
            )
           )
           (i32.const -1)
          )
         )
        )
        (local.set $0
         (i32.const -1)
        )
        (br $label$break$L21)
       )
      )
      (local.set $0
       (i32.load8_u
        (local.get $4)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNSt3__26locale5facet16__on_zero_sharedEv (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (if
   (local.get $0)
   (block
    (local.set $1
     (i32.load offset=4
      (i32.load
       (local.get $0)
      )
     )
    )
    (call_indirect (type $i32_=>_none)
     (local.get $0)
     (i32.add
      (i32.and
       (local.get $1)
       (i32.const 127)
      )
      (i32.const 267)
     )
    )
   )
  )
 )
 (func $__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (br $__rjto$0
     (loop $while-in (result i32)
      (block $while-out (result i32)
       (br_if $__rjti$0
        (i32.eq
         (local.get $3)
         (local.get $4)
        )
       )
       (drop
        (br_if $while-out
         (i32.const -1)
         (i32.eq
          (local.get $1)
          (local.get $2)
         )
        )
       )
       (drop
        (br_if $while-out
         (i32.const -1)
         (i32.lt_s
          (local.tee $0
           (i32.load8_s
            (local.get $1)
           )
          )
          (local.tee $5
           (i32.load8_s
            (local.get $3)
           )
          )
         )
        )
       )
       (if (result i32)
        (i32.lt_s
         (local.get $5)
         (local.get $0)
        )
        (i32.const 1)
        (block
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (br $while-in)
        )
       )
      )
     )
    )
   )
   (i32.ne
    (local.get $1)
    (local.get $2)
   )
  )
 )
 (func $__ZNKSt3__27collateIcE12do_transformEPKcS3_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_
   (local.get $0)
   (local.get $2)
   (local.get $3)
  )
 )
 (func $__ZNKSt3__27collateIcE7do_hashEPKcS3_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (local.set $0
      (i32.xor
       (i32.or
        (local.tee $3
         (i32.and
          (local.tee $0
           (i32.add
            (i32.load8_s
             (local.get $1)
            )
            (i32.shl
             (local.get $0)
             (i32.const 4)
            )
           )
          )
          (i32.const -268435456)
         )
        )
        (i32.shr_u
         (local.get $3)
         (i32.const 24)
        )
       )
       (local.get $0)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $0)
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_u
    (local.tee $4
     (i32.sub
      (local.get $2)
      (local.get $1)
     )
    )
    (i32.const -17)
   )
   (call $_abort)
  )
  (if
   (i32.lt_u
    (local.get $4)
    (i32.const 11)
   )
   (i32.store8 offset=11
    (local.get $0)
    (local.get $4)
   )
   (block
    (i32.store
     (local.get $0)
     (local.tee $3
      (call $__Znwm
       (local.tee $6
        (i32.and
         (i32.add
          (local.get $4)
          (i32.const 16)
         )
         (i32.const -16)
        )
       )
      )
     )
    )
    (i32.store offset=8
     (local.get $0)
     (i32.or
      (local.get $6)
      (i32.const -2147483648)
     )
    )
    (i32.store offset=4
     (local.get $0)
     (local.get $4)
    )
    (local.set $0
     (local.get $3)
    )
   )
  )
  (local.set $6
   (i32.sub
    (local.get $2)
    (local.get $1)
   )
  )
  (local.set $3
   (local.get $0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store8
      (local.get $3)
      (i32.load8_s
       (local.get $1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store8
   (local.get $5)
   (i32.const 0)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $6)
   )
   (i32.load8_s
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (br $__rjto$0
     (loop $while-in (result i32)
      (block $while-out (result i32)
       (br_if $__rjti$0
        (i32.eq
         (local.get $3)
         (local.get $4)
        )
       )
       (drop
        (br_if $while-out
         (i32.const -1)
         (i32.eq
          (local.get $1)
          (local.get $2)
         )
        )
       )
       (drop
        (br_if $while-out
         (i32.const -1)
         (i32.lt_s
          (local.tee $0
           (i32.load
            (local.get $1)
           )
          )
          (local.tee $5
           (i32.load
            (local.get $3)
           )
          )
         )
        )
       )
       (if (result i32)
        (i32.lt_s
         (local.get $5)
         (local.get $0)
        )
        (i32.const 1)
        (block
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 4)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (br $while-in)
        )
       )
      )
     )
    )
   )
   (i32.ne
    (local.get $1)
    (local.get $2)
   )
  )
 )
 (func $__ZNKSt3__27collateIwE12do_transformEPKwS3_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_
   (local.get $0)
   (local.get $2)
   (local.get $3)
  )
 )
 (func $__ZNKSt3__27collateIwE7do_hashEPKwS3_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (local.set $0
      (i32.and
       (local.tee $3
        (i32.add
         (i32.load
          (local.get $1)
         )
         (i32.shl
          (local.get $0)
          (i32.const 4)
         )
        )
       )
       (i32.const -268435456)
      )
     )
     (local.set $0
      (i32.xor
       (local.get $3)
       (i32.or
        (local.get $0)
        (i32.shr_u
         (local.get $0)
         (i32.const 24)
        )
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $0)
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_u
    (local.tee $4
     (i32.shr_s
      (i32.sub
       (local.get $2)
       (local.get $1)
      )
      (i32.const 2)
     )
    )
    (i32.const 1073741807)
   )
   (call $_abort)
  )
  (if
   (i32.lt_u
    (local.get $4)
    (i32.const 2)
   )
   (block
    (i32.store8 offset=11
     (local.get $0)
     (local.get $4)
    )
    (local.set $3
     (local.get $0)
    )
   )
   (if
    (i32.gt_u
     (local.tee $6
      (i32.and
       (i32.add
        (local.get $4)
        (i32.const 4)
       )
       (i32.const -4)
      )
     )
     (i32.const 1073741823)
    )
    (call $_abort)
    (block
     (i32.store
      (local.get $0)
      (local.tee $3
       (call $__Znwm
        (i32.shl
         (local.get $6)
         (i32.const 2)
        )
       )
      )
     )
     (i32.store offset=8
      (local.get $0)
      (i32.or
       (local.get $6)
       (i32.const -2147483648)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (local.get $4)
     )
    )
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store
      (local.get $3)
      (i32.load
       (local.get $1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.const 0)
  )
  (i32.store
   (local.get $3)
   (i32.load
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 40)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 32)
   )
  )
  (if
   (i32.and
    (i32.load offset=4
     (local.get $3)
    )
    (i32.const 1)
   )
   (block
    (i32.store
     (local.get $7)
     (local.tee $0
      (i32.load offset=28
       (local.get $3)
      )
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.add
      (i32.load offset=4
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (local.set $8
     (call $__ZNKSt3__26locale9use_facetERNS0_2idE
      (local.get $7)
      (i32.const 54400)
     )
    )
    (call $__ZNSt3__26localeD2Ev
     (local.get $7)
    )
    (i32.store
     (local.get $7)
     (local.tee $0
      (i32.load offset=28
       (local.get $3)
      )
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.add
      (i32.load offset=4
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (local.set $0
     (call $__ZNKSt3__26locale9use_facetERNS0_2idE
      (local.get $7)
      (i32.const 54416)
     )
    )
    (call $__ZNSt3__26localeD2Ev
     (local.get $7)
    )
    (call_indirect (type $i32_i32_=>_none)
     (local.get $6)
     (local.get $0)
     (i32.add
      (i32.and
       (i32.load offset=24
        (i32.load
         (local.get $0)
        )
       )
       (i32.const 63)
      )
      (i32.const 395)
     )
    )
    (call_indirect (type $i32_i32_=>_none)
     (i32.add
      (local.get $6)
      (i32.const 12)
     )
     (local.get $0)
     (i32.add
      (i32.and
       (i32.load offset=28
        (i32.load
         (local.get $0)
        )
       )
       (i32.const 63)
      )
      (i32.const 395)
     )
    )
    (i32.store offset=24
     (local.get $6)
     (i32.load
      (local.get $2)
     )
    )
    (i32.store
     (local.get $7)
     (i32.load offset=24
      (local.get $6)
     )
    )
    (i32.store8
     (local.get $5)
     (i32.eq
      (call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb
       (local.get $1)
       (local.get $7)
       (local.get $6)
       (local.tee $0
        (i32.add
         (local.get $6)
         (i32.const 24)
        )
       )
       (local.get $8)
       (local.get $4)
       (i32.const 1)
      )
      (local.get $6)
     )
    )
    (local.set $1
     (i32.load
      (local.get $1)
     )
    )
    (loop $while-in
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const -12)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.get $0)
       (local.get $6)
      )
     )
    )
   )
   (block
    (i32.store
     (local.get $8)
     (i32.const -1)
    )
    (local.set $9
     (i32.load offset=16
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.store offset=36
     (local.get $6)
     (i32.load
      (local.get $1)
     )
    )
    (i32.store offset=28
     (local.get $6)
     (i32.load
      (local.get $2)
     )
    )
    (i32.store
     (local.get $6)
     (i32.load offset=36
      (local.get $6)
     )
    )
    (i32.store
     (local.get $7)
     (i32.load offset=28
      (local.get $6)
     )
    )
    (i32.store
     (local.get $1)
     (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_i32)
      (local.get $0)
      (local.get $6)
      (local.get $7)
      (local.get $3)
      (local.get $4)
      (local.get $8)
      (i32.add
       (i32.and
        (local.get $9)
        (i32.const 63)
       )
       (i32.const 166)
      )
     )
    )
    (block $switch
     (block $switch-default
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case $switch-case0 $switch-default
         (i32.load
          (local.get $8)
         )
        )
       )
       (i32.store8
        (local.get $5)
        (i32.const 0)
       )
       (br $switch)
      )
      (i32.store8
       (local.get $5)
       (i32.const 1)
      )
      (br $switch)
     )
     (i32.store8
      (local.get $5)
      (i32.const 1)
     )
     (i32.store
      (local.get $4)
      (i32.const 4)
     )
    )
    (local.set $1
     (i32.load
      (local.get $1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (local.set $13
   (i32.add
    (local.get $8)
    (i32.const 192)
   )
  )
  (local.set $14
   (i32.add
    (local.get $8)
    (i32.const 160)
   )
  )
  (local.set $11
   (i32.add
    (local.get $8)
    (i32.const 220)
   )
  )
  (local.set $6
   (i32.add
    (local.get $8)
    (i32.const 208)
   )
  )
  (local.set $10
   (i32.add
    (local.get $8)
    (i32.const 204)
   )
  )
  (local.set $15
   (i32.add
    (local.get $8)
    (i32.const 200)
   )
  )
  (local.set $16
   (i32.add
    (local.get $8)
    (i32.const 196)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $11)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (local.get $6)
   (local.tee $0
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.load offset=32
    (i32.load
     (local.tee $0
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $6)
       (i32.const 54400)
      )
     )
    )
   )
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $0)
    (i32.const 34320)
    (i32.const 34346)
    (local.get $14)
    (i32.add
     (i32.and
      (local.get $3)
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $6)
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $10)
   (local.tee $0
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $15)
   (local.get $8)
  )
  (i32.store
   (local.get $16)
   (i32.const 0)
  )
  (local.set $12
   (local.tee $3
    (i32.load
     (local.get $1)
    )
   )
  )
  (loop $label$continue$L12
   (block $label$break$L12
    (local.set $9
     (if (result i32)
      (local.get $3)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $3)
           )
          )
          (i32.load offset=16
           (local.get $3)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $3)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $3)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (local.set $12
         (i32.const 0)
        )
        (local.set $3
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $12
        (i32.const 0)
       )
       (local.set $3
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $7
         (i32.load
          (local.get $2)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $17
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $17)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $2)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L12
        (i32.eqz
         (local.get $9)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $7
      (if (result i32)
       (local.get $9)
       (block
        (local.set $7
         (i32.const 0)
        )
        (br $label$break$L12)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $10)
      )
      (i32.add
       (local.get $0)
       (local.tee $9
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $9
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $9)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $9)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $10)
       (i32.add
        (local.get $9)
        (local.tee $0
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L12
     (call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc
      (i32.and
       (if (result i32)
        (i32.eq
         (local.tee $9
          (i32.load offset=12
           (local.get $3)
          )
         )
         (i32.load offset=16
          (local.get $3)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $3)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $3)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $9)
        )
       )
       (i32.const 255)
      )
      (i32.const 16)
      (local.get $0)
      (local.get $10)
      (local.get $16)
      (i32.const 0)
      (local.get $11)
      (local.get $8)
      (local.get $15)
      (local.get $14)
     )
    )
    (if
     (i32.eq
      (local.tee $7
       (i32.load offset=12
        (local.get $3)
       )
      )
      (i32.load offset=16
       (local.get $3)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $3)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $3)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $3)
       (i32.add
        (local.get $7)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $7)
       )
      )
     )
    )
    (br $label$continue$L12)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (i32.sub
    (i32.load
     (local.get $10)
    )
    (local.get $0)
   )
  )
  (local.set $0
   (select
    (i32.load
     (local.get $6)
    )
    (local.get $6)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
   )
  )
  (local.set $10
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (local.get $13)
   (local.get $5)
  )
  (if
   (i32.ne
    (call $__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z
     (local.get $0)
     (local.get $10)
     (local.get $13)
    )
    (i32.const 1)
   )
   (i32.store
    (local.get $4)
    (i32.const 4)
   )
  )
  (local.set $0
   (if (result i32)
    (local.get $3)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $0
         (i32.load offset=12
          (local.get $3)
         )
        )
        (i32.load offset=16
         (local.get $3)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $3)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $12)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $0)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $7)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $3
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.load offset=16
          (local.get $7)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $3)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $0)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $0)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $4)
    (i32.or
     (i32.load
      (local.get $4)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $8)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__26locale9use_facetERNS0_2idE (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (block $__inlined_func$__ZNKSt3__26locale5__imp9use_facetEl (result i32)
   (if
    (block (result i32)
     (local.set $0
      (local.tee $2
       (i32.load
        (local.get $0)
       )
      )
     )
     (local.set $1
      (local.tee $3
       (call $__ZNSt3__26locale2id5__getEv
        (local.get $1)
       )
      )
     )
     (if (result i32)
      (i32.gt_u
       (i32.shr_s
        (i32.sub
         (i32.load offset=12
          (local.get $0)
         )
         (local.tee $0
          (i32.load offset=8
           (local.get $0)
          )
         )
        )
        (i32.const 2)
       )
       (local.get $1)
      )
      (i32.load
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (br $__inlined_func$__ZNKSt3__26locale5__imp9use_facetEl
     (i32.load
      (i32.add
       (i32.load offset=8
        (local.get $2)
       )
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
      )
     )
    )
    (call $_abort)
   )
   (i32.const 0)
  )
 )
 (func $__ZNSt3__26localeD2Ev (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local.set $1
   (i32.load offset=4
    (local.tee $0
     (i32.load
      (local.get $0)
     )
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.const -1)
   )
  )
  (if
   (i32.eqz
    (local.get $1)
   )
   (block
    (local.set $1
     (i32.load offset=8
      (i32.load
       (local.get $0)
      )
     )
    )
    (call_indirect (type $i32_=>_none)
     (local.get $0)
     (i32.add
      (i32.and
       (local.get $1)
       (i32.const 127)
      )
      (i32.const 267)
     )
    )
   )
  )
 )
 (func $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (result i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (block $label$break$L6 (result i32)
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (local.tee $11
       (i32.eq
        (local.get $2)
        (local.tee $10
         (i32.load
          (local.get $3)
         )
        )
       )
      )
     )
    )
    (if
     (i32.eqz
      (local.tee $12
       (i32.eq
        (i32.load8_u offset=24
         (local.get $9)
        )
        (i32.and
         (local.get $0)
         (i32.const 255)
        )
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (i32.load8_u offset=25
        (local.get $9)
       )
       (i32.and
        (local.get $0)
        (i32.const 255)
       )
      )
     )
    )
    (i32.store
     (local.get $3)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (local.get $2)
     (select
      (i32.const 43)
      (i32.const 45)
      (local.get $12)
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (br $label$break$L6
     (i32.const 0)
    )
   )
   (if
    (i32.and
     (i32.eq
      (i32.and
       (local.get $0)
       (i32.const 255)
      )
      (i32.and
       (local.get $5)
       (i32.const 255)
      )
     )
     (i32.ne
      (select
       (i32.load offset=4
        (local.get $6)
       )
       (i32.and
        (local.tee $6
         (i32.load8_s offset=11
          (local.get $6)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $6)
        (i32.const 0)
       )
      )
      (i32.const 0)
     )
    )
    (block
     (drop
      (br_if $label$break$L6
       (i32.const 0)
       (i32.ge_s
        (i32.sub
         (local.tee $0
          (i32.load
           (local.get $8)
          )
         )
         (local.get $7)
        )
        (i32.const 160)
       )
      )
     )
     (local.set $1
      (i32.load
       (local.get $4)
      )
     )
     (i32.store
      (local.get $8)
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (local.get $1)
     )
     (i32.store
      (local.get $4)
      (i32.const 0)
     )
     (br $label$break$L6
      (i32.const 0)
     )
    )
   )
   (local.set $7
    (i32.add
     (local.get $9)
     (i32.const 26)
    )
   )
   (local.set $5
    (i32.const 0)
   )
   (if (result i32)
    (i32.gt_s
     (local.tee $0
      (i32.sub
       (loop $while-in (result i32)
        (if (result i32)
         (i32.eq
          (local.get $5)
          (i32.const 26)
         )
         (local.get $7)
         (block (result i32)
          (local.set $6
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          (if (result i32)
           (i32.eq
            (i32.load8_u
             (local.tee $5
              (i32.add
               (local.get $5)
               (local.get $9)
              )
             )
            )
            (i32.and
             (local.get $0)
             (i32.const 255)
            )
           )
           (local.get $5)
           (block
            (local.set $5
             (local.get $6)
            )
            (br $while-in)
           )
          )
         )
        )
       )
       (local.get $9)
      )
     )
     (i32.const 23)
    )
    (i32.const -1)
    (block (result i32)
     (block $switch
      (block $switch-case2
       (block $switch-case1
        (br_table $switch-case1 $switch $switch-case1 $switch $switch $switch $switch $switch $switch-case2 $switch
         (i32.sub
          (local.get $1)
          (i32.const 8)
         )
        )
       )
       (drop
        (br_if $label$break$L6
         (i32.const -1)
         (i32.ge_s
          (local.get $0)
          (local.get $1)
         )
        )
       )
       (br $switch)
      )
      (if
       (i32.ge_s
        (local.get $0)
        (i32.const 22)
       )
       (block
        (drop
         (br_if $label$break$L6
          (i32.const -1)
          (local.get $11)
         )
        )
        (drop
         (br_if $label$break$L6
          (i32.const -1)
          (i32.ge_s
           (i32.sub
            (local.get $10)
            (local.get $2)
           )
           (i32.const 3)
          )
         )
        )
        (drop
         (br_if $label$break$L6
          (i32.const -1)
          (i32.ne
           (i32.load8_s
            (i32.add
             (local.get $10)
             (i32.const -1)
            )
           )
           (i32.const 48)
          )
         )
        )
        (i32.store
         (local.get $4)
         (i32.const 0)
        )
        (local.set $0
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 34320)
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $10)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $10)
         (local.get $0)
        )
        (br $label$break$L6
         (i32.const 0)
        )
       )
      )
     )
     (local.set $0
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 34320)
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (i32.store8
      (local.get $10)
      (local.get $0)
     )
     (i32.store
      (local.get $4)
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 1)
      )
     )
     (i32.const 0)
    )
   )
  )
 )
 (func $__ZNSt3__26__clocEv (; has Stack IR ;) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52568)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52568)
    )
    (block
     (i32.store
      (i32.const 54408)
      (call $___newlocale)
     )
     (call $___cxa_guard_release
      (i32.const 52568)
     )
    )
   )
  )
  (i32.load
   (i32.const 54408)
  )
 )
 (func $__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $2)
  )
  (local.set $2
   (i32.load
    (i32.const 37316)
   )
  )
  (if
   (local.get $1)
   (i32.store
    (i32.const 37316)
    (select
     (i32.const 53288)
     (local.get $1)
     (i32.eq
      (local.get $1)
      (i32.const -1)
     )
    )
   )
  )
  (local.set $1
   (select
    (i32.const -1)
    (local.get $2)
    (i32.eq
     (local.get $2)
     (i32.const 53288)
    )
   )
  )
  (local.set $0
   (call $_vsscanf
    (local.get $0)
    (i32.const 47350)
    (local.get $3)
   )
  )
  (if
   (local.get $1)
   (block
    (drop
     (i32.load
      (i32.const 37316)
     )
    )
    (if
     (local.get $1)
     (i32.store
      (i32.const 37316)
      (select
       (i32.const 53288)
       (local.get $1)
       (i32.eq
        (local.get $1)
        (i32.const -1)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $__ZNSt3__26locale2id5__getEv (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 24)
   )
  )
  (i32.store offset=16
   (local.get $1)
   (i32.const 92)
  )
  (i32.store offset=20
   (local.get $1)
   (i32.const 0)
  )
  (i64.store align=4
   (local.tee $2
    (i32.add
     (local.get $1)
     (i32.const 32)
    )
   )
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (local.set $4
   (i32.load
    (local.get $2)
   )
  )
  (local.set $5
   (i32.load offset=4
    (local.get $2)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (i32.store offset=4
   (local.get $1)
   (local.get $4)
  )
  (i32.store offset=8
   (local.get $1)
   (local.get $5)
  )
  (if
   (i32.ne
    (i32.load
     (local.get $0)
    )
    (i32.const -1)
   )
   (block
    (i32.store
     (local.get $2)
     (local.get $1)
    )
    (i32.store
     (local.get $3)
     (local.get $2)
    )
    (call $__ZNSt3__211__call_onceERVmPvPFvS2_E
     (local.get $0)
     (local.get $3)
    )
   )
  )
  (local.set $0
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const -1)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $__ZNSt3__26locale2id6__initEv (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (i32.store
   (i32.const 54412)
   (i32.add
    (local.tee $1
     (i32.load
      (i32.const 54412)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
 )
 (func $__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv (; has Stack IR ;) (param $0 i32)
  (call $__ZNKSt3__212_GLOBAL__N_111__fake_bindclEv
   (i32.load
    (i32.load
     (local.get $0)
    )
   )
  )
 )
 (func $__ZNKSt3__212_GLOBAL__N_111__fake_bindclEv (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $0
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.shr_s
     (local.tee $2
      (i32.load offset=8
       (local.get $0)
      )
     )
     (i32.const 1)
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 1)
   )
   (local.set $1
    (i32.load
     (i32.add
      (local.get $1)
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
  (call_indirect (type $i32_=>_none)
   (local.get $0)
   (i32.add
    (i32.and
     (local.get $1)
     (i32.const 127)
    )
    (i32.const 267)
   )
  )
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 204)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 200)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 196)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 192)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 229)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 228)
   )
  )
  (call $__ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_
   (local.tee $14
    (i32.add
     (local.get $5)
     (i32.const 216)
    )
   )
   (local.get $2)
   (local.tee $17
    (i32.add
     (local.get $5)
     (i32.const 160)
    )
   )
   (i32.add
    (local.get $5)
    (i32.const 231)
   )
   (i32.add
    (local.get $5)
    (i32.const 230)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $11)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $12)
   (local.get $5)
  )
  (i32.store
   (local.get $13)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.const 1)
  )
  (i32.store8
   (local.get $15)
   (i32.const 69)
  )
  (local.set $16
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $16
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $16
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $7
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $7
      (if (result i32)
       (local.get $8)
       (block
        (local.set $7
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $11)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $11)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_
      (i32.and
       (if (result i32)
        (i32.eq
         (local.tee $8
          (i32.load offset=12
           (local.get $2)
          )
         )
         (i32.load offset=16
          (local.get $2)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $2)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $8)
        )
       )
       (i32.const 255)
      )
      (local.get $10)
      (local.get $15)
      (local.get $9)
      (local.get $11)
      (i32.load8_s offset=231
       (local.get $5)
      )
      (i32.load8_s offset=230
       (local.get $5)
      )
      (local.get $14)
      (local.get $5)
      (local.get $12)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $7
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $7)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $7)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.eqz
      (select
       (i32.load offset=4
        (local.get $14)
       )
       (i32.and
        (local.tee $15
         (i32.load8_s offset=11
          (local.get $14)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $15)
        (i32.const 0)
       )
      )
     )
     (i32.eqz
      (i32.load8_s
       (local.get $10)
      )
     )
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $12)
       )
      )
      (local.get $5)
     )
     (i32.const 160)
    )
    (block
     (local.set $13
      (i32.load
       (local.get $13)
      )
     )
     (i32.store
      (local.get $12)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $13)
     )
    )
   )
  )
  (f64.store
   (local.get $4)
   (call $__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj
    (local.get $9)
    (i32.load
     (local.get $11)
    )
    (local.get $3)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $14)
   (local.get $5)
   (i32.load
    (local.get $12)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $16)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $7)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.load offset=16
          (local.get $7)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $14)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $1
    (i32.load offset=28
     (local.get $1)
    )
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.add
    (i32.load offset=4
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (local.set $6
   (i32.load offset=32
    (i32.load
     (local.tee $1
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $5)
       (i32.const 54400)
      )
     )
    )
   )
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $1)
    (i32.const 34320)
    (i32.const 34352)
    (local.get $2)
    (i32.add
     (i32.and
      (local.get $6)
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (local.set $2
   (i32.load offset=12
    (i32.load
     (local.tee $1
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $5)
       (i32.const 54416)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $3)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (local.get $2)
     (i32.const 63)
    )
   )
  )
  (i32.store8
   (local.get $4)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=16
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $0)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=20
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $5)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (result i32)
  (local $12 i32)
  (if (result i32)
   (i32.eq
    (i32.and
     (local.get $0)
     (i32.const 255)
    )
    (i32.and
     (local.get $5)
     (i32.const 255)
    )
   )
   (if (result i32)
    (i32.load8_s
     (local.get $1)
    )
    (block (result i32)
     (i32.store8
      (local.get $1)
      (i32.const 0)
     )
     (i32.store
      (local.get $4)
      (i32.add
       (local.tee $0
        (i32.load
         (local.get $4)
        )
       )
       (i32.const 1)
      )
     )
     (i32.store8
      (local.get $0)
      (i32.const 46)
     )
     (if
      (select
       (i32.load offset=4
        (local.get $7)
       )
       (i32.and
        (local.tee $0
         (i32.load8_s offset=11
          (local.get $7)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $0)
        (i32.const 0)
       )
      )
      (if
       (i32.lt_s
        (i32.sub
         (local.tee $0
          (i32.load
           (local.get $9)
          )
         )
         (local.get $8)
        )
        (i32.const 160)
       )
       (block
        (local.set $1
         (i32.load
          (local.get $10)
         )
        )
        (i32.store
         (local.get $9)
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (i32.store
         (local.get $0)
         (local.get $1)
        )
       )
      )
     )
     (i32.const 0)
    )
    (i32.const -1)
   )
   (block $label$break$L1 (result i32)
    (if
     (i32.eq
      (i32.and
       (local.get $0)
       (i32.const 255)
      )
      (i32.and
       (local.get $6)
       (i32.const 255)
      )
     )
     (if
      (select
       (i32.load offset=4
        (local.get $7)
       )
       (i32.and
        (local.tee $5
         (i32.load8_s offset=11
          (local.get $7)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $5)
        (i32.const 0)
       )
      )
      (block
       (drop
        (br_if $label$break$L1
         (i32.const -1)
         (i32.eqz
          (i32.load8_s
           (local.get $1)
          )
         )
        )
       )
       (drop
        (br_if $label$break$L1
         (i32.const 0)
         (i32.ge_s
          (i32.sub
           (local.tee $0
            (i32.load
             (local.get $9)
            )
           )
           (local.get $8)
          )
          (i32.const 160)
         )
        )
       )
       (local.set $1
        (i32.load
         (local.get $10)
        )
       )
       (i32.store
        (local.get $9)
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (i32.store
        (local.get $0)
        (local.get $1)
       )
       (i32.store
        (local.get $10)
        (i32.const 0)
       )
       (br $label$break$L1
        (i32.const 0)
       )
      )
     )
    )
    (local.set $12
     (i32.add
      (local.get $11)
      (i32.const 32)
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (if (result i32)
     (i32.gt_s
      (local.tee $5
       (i32.sub
        (loop $while-in (result i32)
         (if (result i32)
          (i32.eq
           (local.get $5)
           (i32.const 32)
          )
          (local.get $12)
          (block (result i32)
           (local.set $6
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (if (result i32)
            (i32.eq
             (i32.load8_u
              (local.tee $5
               (i32.add
                (local.get $5)
                (local.get $11)
               )
              )
             )
             (i32.and
              (local.get $0)
              (i32.const 255)
             )
            )
            (local.get $5)
            (block
             (local.set $5
              (local.get $6)
             )
             (br $while-in)
            )
           )
          )
         )
        )
        (local.get $11)
       )
      )
      (i32.const 31)
     )
     (i32.const -1)
     (block (result i32)
      (local.set $0
       (i32.load8_s
        (i32.add
         (local.get $5)
         (i32.const 34320)
        )
       )
      )
      (block $switch-default
       (block $switch-case2
        (block $switch-case0
         (br_table $switch-case2 $switch-case2 $switch-case0 $switch-case0 $switch-default
          (i32.sub
           (local.get $5)
           (i32.const 22)
          )
         )
        )
        (if
         (i32.ne
          (local.tee $1
           (i32.load
            (local.get $4)
           )
          )
          (local.get $3)
         )
         (drop
          (br_if $label$break$L1
           (i32.const -1)
           (i32.ne
            (i32.and
             (i32.load8_s
              (i32.add
               (local.get $1)
               (i32.const -1)
              )
             )
             (i32.const 95)
            )
            (i32.and
             (i32.load8_s
              (local.get $2)
             )
             (i32.const 127)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $4)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $1)
         (local.get $0)
        )
        (br $label$break$L1
         (i32.const 0)
        )
       )
       (i32.store8
        (local.get $2)
        (i32.const 80)
       )
       (i32.store
        (local.get $4)
        (i32.add
         (local.tee $1
          (i32.load
           (local.get $4)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $1)
        (local.get $0)
       )
       (br $label$break$L1
        (i32.const 0)
       )
      )
      (if
       (i32.eq
        (local.tee $3
         (i32.and
          (local.get $0)
          (i32.const 95)
         )
        )
        (i32.load8_s
         (local.get $2)
        )
       )
       (block
        (i32.store8
         (local.get $2)
         (i32.or
          (local.get $3)
          (i32.const 128)
         )
        )
        (if
         (i32.load8_s
          (local.get $1)
         )
         (block
          (i32.store8
           (local.get $1)
           (i32.const 0)
          )
          (if
           (select
            (i32.load offset=4
             (local.get $7)
            )
            (i32.and
             (local.tee $1
              (i32.load8_s offset=11
               (local.get $7)
              )
             )
             (i32.const 255)
            )
            (i32.lt_s
             (local.get $1)
             (i32.const 0)
            )
           )
           (if
            (i32.lt_s
             (i32.sub
              (local.tee $1
               (i32.load
                (local.get $9)
               )
              )
              (local.get $8)
             )
             (i32.const 160)
            )
            (block
             (local.set $2
              (i32.load
               (local.get $10)
              )
             )
             (i32.store
              (local.get $9)
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
             (i32.store
              (local.get $1)
              (local.get $2)
             )
            )
           )
          )
         )
        )
       )
      )
      (i32.store
       (local.get $4)
       (i32.add
        (local.tee $1
         (i32.load
          (local.get $4)
         )
        )
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $1)
       (local.get $0)
      )
      (drop
       (br_if $label$break$L1
        (i32.const 0)
        (i32.gt_s
         (local.get $5)
         (i32.const 21)
        )
       )
      )
      (i32.store
       (local.get $10)
       (i32.add
        (i32.load
         (local.get $10)
        )
        (i32.const 1)
       )
      )
      (i32.const 0)
     )
    )
   )
  )
 )
 (func $__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.eq
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $2)
    (i32.const 4)
   )
   (block
    (local.set $5
     (i32.load
      (i32.const 53312)
     )
    )
    (i32.store
     (i32.const 53312)
     (i32.const 0)
    )
    (drop
     (call $__ZNSt3__26__clocEv)
    )
    (local.set $4
     (call $_strtox_722
      (local.get $0)
      (local.get $3)
      (i32.const 2)
     )
    )
    (if
     (i32.eqz
      (local.tee $0
       (i32.load
        (i32.const 53312)
       )
      )
     )
     (i32.store
      (i32.const 53312)
      (local.get $5)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (if
       (i32.eq
        (local.get $1)
        (i32.load
         (local.get $3)
        )
       )
       (br_if $__rjti$0
        (i32.eq
         (local.get $0)
         (i32.const 68)
        )
       )
       (block
        (local.set $4
         (f64.const 0)
        )
        (br $__rjti$0)
       )
      )
      (br $__rjto$0)
     )
     (i32.store
      (local.get $2)
      (i32.const 4)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $4)
 )
 (func $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (select
    (local.tee $6
     (i32.load offset=4
      (local.get $0)
     )
    )
    (local.tee $5
     (i32.and
      (local.tee $4
       (i32.load8_s offset=11
        (local.get $0)
       )
      )
      (i32.const 255)
     )
    )
    (i32.lt_s
     (local.get $4)
     (i32.const 0)
    )
   )
   (if
    (i32.gt_s
     (i32.sub
      (local.get $2)
      (local.get $1)
     )
     (i32.const 4)
    )
    (block $do-once
     (if
      (i32.ne
       (local.get $1)
       (local.get $2)
      )
      (block
       (local.set $4
        (local.get $2)
       )
       (local.set $5
        (local.get $1)
       )
       (loop $while-in
        (if
         (i32.lt_u
          (local.get $5)
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const -4)
           )
          )
         )
         (block
          (local.set $6
           (i32.load
            (local.get $5)
           )
          )
          (i32.store
           (local.get $5)
           (i32.load
            (local.get $4)
           )
          )
          (i32.store
           (local.get $4)
           (local.get $6)
          )
          (local.set $5
           (i32.add
            (local.get $5)
            (i32.const 4)
           )
          )
          (br $while-in)
         )
        )
       )
       (local.set $5
        (i32.and
         (local.tee $4
          (i32.load8_s offset=11
           (local.get $0)
          )
         )
         (i32.const 255)
        )
       )
       (local.set $6
        (i32.load offset=4
         (local.get $0)
        )
       )
      )
     )
     (local.set $7
      (i32.add
       (local.get $2)
       (i32.const -4)
      )
     )
     (local.set $5
      (i32.add
       (local.tee $0
        (select
         (i32.load
          (local.get $0)
         )
         (local.get $0)
         (local.tee $2
          (i32.lt_s
           (i32.shr_s
            (i32.shl
             (local.get $4)
             (i32.const 24)
            )
            (i32.const 24)
           )
           (i32.const 0)
          )
         )
        )
       )
       (select
        (local.get $6)
        (local.get $5)
        (local.get $2)
       )
      )
     )
     (block $__rjto$0
      (block $__rjti$0
       (loop $while-in1
        (block $while-out0
         (local.set $4
          (i32.and
           (i32.gt_s
            (local.tee $2
             (i32.load8_s
              (local.get $0)
             )
            )
            (i32.const 0)
           )
           (i32.ne
            (local.get $2)
            (i32.const 127)
           )
          )
         )
         (br_if $while-out0
          (i32.ge_u
           (local.get $1)
           (local.get $7)
          )
         )
         (if
          (local.get $4)
          (br_if $__rjti$0
           (i32.ne
            (i32.load
             (local.get $1)
            )
            (local.get $2)
           )
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (local.set $0
          (select
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
           (local.get $0)
           (i32.gt_s
            (i32.sub
             (local.get $5)
             (local.get $0)
            )
            (i32.const 1)
           )
          )
         )
         (br $while-in1)
        )
       )
       (br $__rjto$0)
      )
      (i32.store
       (local.get $3)
       (i32.const 4)
      )
      (br $do-once)
     )
     (if
      (local.get $4)
      (if
       (i32.ge_u
        (i32.add
         (i32.load
          (local.get $7)
         )
         (i32.const -1)
        )
        (local.get $2)
       )
       (i32.store
        (local.get $3)
        (i32.const 4)
       )
      )
     )
    )
   )
  )
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 204)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 200)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 196)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 192)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 229)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 228)
   )
  )
  (call $__ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_
   (local.tee $14
    (i32.add
     (local.get $5)
     (i32.const 216)
    )
   )
   (local.get $2)
   (local.tee $17
    (i32.add
     (local.get $5)
     (i32.const 160)
    )
   )
   (i32.add
    (local.get $5)
    (i32.const 231)
   )
   (i32.add
    (local.get $5)
    (i32.const 230)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $11)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $12)
   (local.get $5)
  )
  (i32.store
   (local.get $13)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.const 1)
  )
  (i32.store8
   (local.get $15)
   (i32.const 69)
  )
  (local.set $16
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $16
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $16
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $7
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $7
      (if (result i32)
       (local.get $8)
       (block
        (local.set $7
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $11)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $11)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_
      (i32.and
       (if (result i32)
        (i32.eq
         (local.tee $8
          (i32.load offset=12
           (local.get $2)
          )
         )
         (i32.load offset=16
          (local.get $2)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $2)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $8)
        )
       )
       (i32.const 255)
      )
      (local.get $10)
      (local.get $15)
      (local.get $9)
      (local.get $11)
      (i32.load8_s offset=231
       (local.get $5)
      )
      (i32.load8_s offset=230
       (local.get $5)
      )
      (local.get $14)
      (local.get $5)
      (local.get $12)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $7
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $7)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $7)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.eqz
      (select
       (i32.load offset=4
        (local.get $14)
       )
       (i32.and
        (local.tee $15
         (i32.load8_s offset=11
          (local.get $14)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $15)
        (i32.const 0)
       )
      )
     )
     (i32.eqz
      (i32.load8_s
       (local.get $10)
      )
     )
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $12)
       )
      )
      (local.get $5)
     )
     (i32.const 160)
    )
    (block
     (local.set $13
      (i32.load
       (local.get $13)
      )
     )
     (i32.store
      (local.get $12)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $13)
     )
    )
   )
  )
  (f64.store
   (local.get $4)
   (call $__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj
    (local.get $9)
    (i32.load
     (local.get $11)
    )
    (local.get $3)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $14)
   (local.get $5)
   (i32.load
    (local.get $12)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $16)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $7)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.load offset=16
          (local.get $7)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $14)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.eq
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $2)
    (i32.const 4)
   )
   (block
    (local.set $5
     (i32.load
      (i32.const 53312)
     )
    )
    (i32.store
     (i32.const 53312)
     (i32.const 0)
    )
    (drop
     (call $__ZNSt3__26__clocEv)
    )
    (local.set $4
     (call $_strtox_722
      (local.get $0)
      (local.get $3)
      (i32.const 1)
     )
    )
    (if
     (i32.eqz
      (local.tee $0
       (i32.load
        (i32.const 53312)
       )
      )
     )
     (i32.store
      (i32.const 53312)
      (local.get $5)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (if
       (i32.eq
        (local.get $1)
        (i32.load
         (local.get $3)
        )
       )
       (br_if $__rjti$0
        (i32.eq
         (local.get $0)
         (i32.const 68)
        )
       )
       (block
        (local.set $4
         (f64.const 0)
        )
        (br $__rjti$0)
       )
      )
      (br $__rjto$0)
     )
     (i32.store
      (local.get $2)
      (i32.const 4)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $4)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 204)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 200)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 196)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 192)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 229)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 228)
   )
  )
  (call $__ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_
   (local.tee $14
    (i32.add
     (local.get $5)
     (i32.const 216)
    )
   )
   (local.get $2)
   (local.tee $17
    (i32.add
     (local.get $5)
     (i32.const 160)
    )
   )
   (i32.add
    (local.get $5)
    (i32.const 231)
   )
   (i32.add
    (local.get $5)
    (i32.const 230)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $11)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $12)
   (local.get $5)
  )
  (i32.store
   (local.get $13)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.const 1)
  )
  (i32.store8
   (local.get $15)
   (i32.const 69)
  )
  (local.set $16
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $16
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $16
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $7
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $7
      (if (result i32)
       (local.get $8)
       (block
        (local.set $7
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $11)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $11)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_
      (i32.and
       (if (result i32)
        (i32.eq
         (local.tee $8
          (i32.load offset=12
           (local.get $2)
          )
         )
         (i32.load offset=16
          (local.get $2)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $2)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $8)
        )
       )
       (i32.const 255)
      )
      (local.get $10)
      (local.get $15)
      (local.get $9)
      (local.get $11)
      (i32.load8_s offset=231
       (local.get $5)
      )
      (i32.load8_s offset=230
       (local.get $5)
      )
      (local.get $14)
      (local.get $5)
      (local.get $12)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $7
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $7)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $7)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.eqz
      (select
       (i32.load offset=4
        (local.get $14)
       )
       (i32.and
        (local.tee $15
         (i32.load8_s offset=11
          (local.get $14)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $15)
        (i32.const 0)
       )
      )
     )
     (i32.eqz
      (i32.load8_s
       (local.get $10)
      )
     )
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $12)
       )
      )
      (local.get $5)
     )
     (i32.const 160)
    )
    (block
     (local.set $13
      (i32.load
       (local.get $13)
      )
     )
     (i32.store
      (local.get $12)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $13)
     )
    )
   )
  )
  (f32.store
   (local.get $4)
   (call $__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj
    (local.get $9)
    (i32.load
     (local.get $11)
    )
    (local.get $3)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $14)
   (local.get $5)
   (i32.load
    (local.get $12)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $16)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $7)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.load offset=16
          (local.get $7)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $14)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result f32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.eq
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $2)
    (i32.const 4)
   )
   (block
    (local.set $5
     (i32.load
      (i32.const 53312)
     )
    )
    (i32.store
     (i32.const 53312)
     (i32.const 0)
    )
    (drop
     (call $__ZNSt3__26__clocEv)
    )
    (local.set $4
     (f32.demote_f64
      (call $_strtox_722
       (local.get $0)
       (local.get $3)
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eqz
      (local.tee $0
       (i32.load
        (i32.const 53312)
       )
      )
     )
     (i32.store
      (i32.const 53312)
      (local.get $5)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (if
       (i32.eq
        (local.get $1)
        (i32.load
         (local.get $3)
        )
       )
       (br_if $__rjti$0
        (i32.eq
         (local.get $0)
         (i32.const 68)
        )
       )
       (block
        (local.set $4
         (f32.const 0)
        )
        (br $__rjti$0)
       )
      )
      (br $__rjto$0)
     )
     (i32.store
      (local.get $2)
      (i32.const 4)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $4)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 224)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 212)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 200)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 196)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 192)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 188)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $5)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $5)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $5)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $5)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $5)
     )
     (local.get $5)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $5)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $6)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $6
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $17
           (i32.load offset=12
            (local.get $6)
           )
          )
          (i32.load offset=16
           (local.get $6)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $6)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $6)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $17)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $6
      (if (result i32)
       (local.get $8)
       (block
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $5)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $5)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $5)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $5)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $5)
          )
          (local.get $5)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $5)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc
      (i32.and
       (if (result i32)
        (i32.eq
         (local.tee $8
          (i32.load offset=12
           (local.get $2)
          )
         )
         (i32.load offset=16
          (local.get $2)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $2)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $8)
        )
       )
       (i32.const 255)
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load8_s
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (i32.const 34320)
     )
    )
    (if
     (i32.eq
      (local.tee $6
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $6)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i64.store
   (local.get $4)
   (call $__ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $6)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $6)
          )
         )
         (i32.load offset=16
          (local.get $6)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $6)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $5)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.tee $1
    (i32.load offset=28
     (local.get $1)
    )
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.add
    (i32.load offset=4
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (local.set $4
   (i32.load offset=16
    (i32.load
     (local.tee $1
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $3)
       (i32.const 54416)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $2)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (local.get $4)
     (i32.const 63)
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $0)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=20
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $4
   (if (result i64)
    (i32.eq
     (local.get $0)
     (local.get $1)
    )
    (block (result i64)
     (i32.store
      (local.get $2)
      (i32.const 4)
     )
     (i64.const 0)
    )
    (block $do-once (result i64)
     (if
      (local.tee $6
       (i32.eq
        (i32.load8_s
         (local.get $0)
        )
        (i32.const 45)
       )
      )
      (if
       (i32.eq
        (local.get $1)
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
       )
       (block
        (i32.store
         (local.get $2)
         (i32.const 4)
        )
        (br $do-once
         (i64.const 0)
        )
       )
      )
     )
     (local.set $7
      (i32.load
       (i32.const 53312)
      )
     )
     (i32.store
      (i32.const 53312)
      (i32.const 0)
     )
     (local.set $4
      (call $_strtoull_l
       (local.get $0)
       (local.get $5)
       (local.get $3)
       (call $__ZNSt3__26__clocEv)
      )
     )
     (if
      (i32.eqz
       (local.tee $0
        (i32.load
         (i32.const 53312)
        )
       )
      )
      (i32.store
       (i32.const 53312)
       (local.get $7)
      )
     )
     (if (result i64)
      (i32.eq
       (local.get $1)
       (i32.load
        (local.get $5)
       )
      )
      (if (result i64)
       (i32.eq
        (local.get $0)
        (i32.const 68)
       )
       (block (result i64)
        (i32.store
         (local.get $2)
         (i32.const 4)
        )
        (i64.const -1)
       )
       (select
        (i64.sub
         (i64.const 0)
         (local.get $4)
        )
        (local.get $4)
        (local.get $6)
       )
      )
      (block (result i64)
       (i32.store
        (local.get $2)
        (i32.const 4)
       )
       (i64.const 0)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $4)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 224)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 212)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 200)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 196)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 192)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 188)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $5)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $5)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $5)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $5)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $5)
     )
     (local.get $5)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $5)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $6)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $6
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $17
           (i32.load offset=12
            (local.get $6)
           )
          )
          (i32.load offset=16
           (local.get $6)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $6)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $6)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $17)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $6
      (if (result i32)
       (local.get $8)
       (block
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $5)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $5)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $5)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $5)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $5)
          )
          (local.get $5)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $5)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc
      (i32.and
       (if (result i32)
        (i32.eq
         (local.tee $8
          (i32.load offset=12
           (local.get $2)
          )
         )
         (i32.load offset=16
          (local.get $2)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $2)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $8)
        )
       )
       (i32.const 255)
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load8_s
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (i32.const 34320)
     )
    )
    (if
     (i32.eq
      (local.tee $6
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $6)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (call $__ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $6)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $6)
          )
         )
         (i32.load offset=16
          (local.get $6)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $6)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $5)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (i32.eq
     (local.get $0)
     (local.get $1)
    )
    (block (result i32)
     (i32.store
      (local.get $2)
      (i32.const 4)
     )
     (i32.const 0)
    )
    (block $do-once (result i32)
     (if
      (local.tee $6
       (i32.eq
        (i32.load8_s
         (local.get $0)
        )
        (i32.const 45)
       )
      )
      (if
       (i32.eq
        (local.get $1)
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
       )
       (block
        (i32.store
         (local.get $2)
         (i32.const 4)
        )
        (br $do-once
         (i32.const 0)
        )
       )
      )
     )
     (local.set $7
      (i32.load
       (i32.const 53312)
      )
     )
     (i32.store
      (i32.const 53312)
      (i32.const 0)
     )
     (local.set $5
      (call $_strtoull_l
       (local.get $0)
       (local.get $4)
       (local.get $3)
       (call $__ZNSt3__26__clocEv)
      )
     )
     (if
      (i32.eqz
       (local.tee $0
        (i32.load
         (i32.const 53312)
        )
       )
      )
      (i32.store
       (i32.const 53312)
       (local.get $7)
      )
     )
     (if (result i32)
      (i32.eq
       (local.get $1)
       (i32.load
        (local.get $4)
       )
      )
      (if (result i32)
       (i32.or
        (i32.eq
         (local.get $0)
         (i32.const 68)
        )
        (i64.gt_u
         (local.get $5)
         (i64.const 4294967295)
        )
       )
       (block (result i32)
        (i32.store
         (local.get $2)
         (i32.const 4)
        )
        (i32.const -1)
       )
       (select
        (i32.sub
         (i32.const 0)
         (local.tee $0
          (i32.wrap_i64
           (local.get $5)
          )
         )
        )
        (local.get $0)
        (local.get $6)
       )
      )
      (block (result i32)
       (i32.store
        (local.get $2)
        (i32.const 4)
       )
       (i32.const 0)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 224)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 212)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 200)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 196)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 192)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 188)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $5)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $5)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $5)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $5)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $5)
     )
     (local.get $5)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $5)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $6)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $6
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $17
           (i32.load offset=12
            (local.get $6)
           )
          )
          (i32.load offset=16
           (local.get $6)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $6)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $6)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $17)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $6
      (if (result i32)
       (local.get $8)
       (block
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $5)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $5)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $5)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $5)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $5)
          )
          (local.get $5)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $5)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc
      (i32.and
       (if (result i32)
        (i32.eq
         (local.tee $8
          (i32.load offset=12
           (local.get $2)
          )
         )
         (i32.load offset=16
          (local.get $2)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $2)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $8)
        )
       )
       (i32.const 255)
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load8_s
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (i32.const 34320)
     )
    )
    (if
     (i32.eq
      (local.tee $6
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $6)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i32.store16
   (local.get $4)
   (call $__ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $6)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $6)
          )
         )
         (i32.load offset=16
          (local.get $6)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $6)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $5)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (i32.eq
     (local.get $0)
     (local.get $1)
    )
    (block (result i32)
     (i32.store
      (local.get $2)
      (i32.const 4)
     )
     (i32.const 0)
    )
    (block $do-once (result i32)
     (if
      (local.tee $6
       (i32.eq
        (i32.load8_s
         (local.get $0)
        )
        (i32.const 45)
       )
      )
      (if
       (i32.eq
        (local.get $1)
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
       )
       (block
        (i32.store
         (local.get $2)
         (i32.const 4)
        )
        (br $do-once
         (i32.const 0)
        )
       )
      )
     )
     (local.set $7
      (i32.load
       (i32.const 53312)
      )
     )
     (i32.store
      (i32.const 53312)
      (i32.const 0)
     )
     (local.set $5
      (call $_strtoull_l
       (local.get $0)
       (local.get $4)
       (local.get $3)
       (call $__ZNSt3__26__clocEv)
      )
     )
     (if
      (i32.eqz
       (local.tee $0
        (i32.load
         (i32.const 53312)
        )
       )
      )
      (i32.store
       (i32.const 53312)
       (local.get $7)
      )
     )
     (if (result i32)
      (i32.eq
       (local.get $1)
       (i32.load
        (local.get $4)
       )
      )
      (block $do-once0 (result i32)
       (if
        (i32.or
         (i32.eq
          (local.get $0)
          (i32.const 68)
         )
         (i64.gt_u
          (local.get $5)
          (i64.const 65535)
         )
        )
        (block
         (i32.store
          (local.get $2)
          (i32.const 4)
         )
         (br $do-once0
          (i32.const -1)
         )
        )
       )
       (local.set $0
        (i32.and
         (i32.wrap_i64
          (local.get $5)
         )
         (i32.const 65535)
        )
       )
       (select
        (i32.and
         (i32.sub
          (i32.const 0)
          (i32.wrap_i64
           (local.get $5)
          )
         )
         (i32.const 65535)
        )
        (local.get $0)
        (local.get $6)
       )
      )
      (block (result i32)
       (i32.store
        (local.get $2)
        (i32.const 4)
       )
       (i32.const 0)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 224)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 212)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 200)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 196)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 192)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 188)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $5)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $5)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $5)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $5)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $5)
     )
     (local.get $5)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $5)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $6)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $6
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $17
           (i32.load offset=12
            (local.get $6)
           )
          )
          (i32.load offset=16
           (local.get $6)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $6)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $6)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $17)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $6
      (if (result i32)
       (local.get $8)
       (block
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $5)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $5)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $5)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $5)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $5)
          )
          (local.get $5)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $5)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc
      (i32.and
       (if (result i32)
        (i32.eq
         (local.tee $8
          (i32.load offset=12
           (local.get $2)
          )
         )
         (i32.load offset=16
          (local.get $2)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $2)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $8)
        )
       )
       (i32.const 255)
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load8_s
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (i32.const 34320)
     )
    )
    (if
     (i32.eq
      (local.tee $6
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $6)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i64.store
   (local.get $4)
   (call $__ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $6)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $6)
          )
         )
         (i32.load offset=16
          (local.get $6)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $6)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $5)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.eq
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $2)
    (i32.const 4)
   )
   (block
    (local.set $6
     (i32.load
      (i32.const 53312)
     )
    )
    (i32.store
     (i32.const 53312)
     (i32.const 0)
    )
    (local.set $4
     (call $_strtoll_l
      (local.get $0)
      (local.get $5)
      (local.get $3)
      (call $__ZNSt3__26__clocEv)
     )
    )
    (if
     (i32.eqz
      (local.tee $0
       (i32.load
        (i32.const 53312)
       )
      )
     )
     (i32.store
      (i32.const 53312)
      (local.get $6)
     )
    )
    (local.set $4
     (if (result i64)
      (i32.eq
       (local.get $1)
       (i32.load
        (local.get $5)
       )
      )
      (if (result i64)
       (i32.eq
        (local.get $0)
        (i32.const 68)
       )
       (block (result i64)
        (i32.store
         (local.get $2)
         (i32.const 4)
        )
        (select
         (i64.const 9223372036854775807)
         (i64.const -9223372036854775808)
         (i64.gt_s
          (local.get $4)
          (i64.const 0)
         )
        )
       )
       (local.get $4)
      )
      (block (result i64)
       (i32.store
        (local.get $2)
        (i32.const 4)
       )
       (i64.const 0)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $4)
 )
 (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 224)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 212)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 200)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 196)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 192)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 188)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $5)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $5)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $5)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $5)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $5)
     )
     (local.get $5)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $5)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $6)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $6
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $17
           (i32.load offset=12
            (local.get $6)
           )
          )
          (i32.load offset=16
           (local.get $6)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $6)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $6)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $17)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $6
      (if (result i32)
       (local.get $8)
       (block
        (local.set $6
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $5)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $5)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $5)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $5)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $5)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $5)
          )
          (local.get $5)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $5)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc
      (i32.and
       (if (result i32)
        (i32.eq
         (local.tee $8
          (i32.load offset=12
           (local.get $2)
          )
         )
         (i32.load offset=16
          (local.get $2)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $2)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $8)
        )
       )
       (i32.const 255)
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load8_s
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (i32.const 34320)
     )
    )
    (if
     (i32.eq
      (local.tee $6
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $6)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (call $__ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $6)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $6)
          )
         )
         (i32.load offset=16
          (local.get $6)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $6)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $5)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (i32.eq
     (local.get $0)
     (local.get $1)
    )
    (block (result i32)
     (i32.store
      (local.get $2)
      (i32.const 4)
     )
     (i32.const 0)
    )
    (block (result i32)
     (local.set $6
      (i32.load
       (i32.const 53312)
      )
     )
     (i32.store
      (i32.const 53312)
      (i32.const 0)
     )
     (local.set $4
      (call $_strtoll_l
       (local.get $0)
       (local.get $5)
       (local.get $3)
       (call $__ZNSt3__26__clocEv)
      )
     )
     (if
      (i32.eqz
       (local.tee $0
        (i32.load
         (i32.const 53312)
        )
       )
      )
      (i32.store
       (i32.const 53312)
       (local.get $6)
      )
     )
     (if (result i32)
      (i32.eq
       (local.get $1)
       (i32.load
        (local.get $5)
       )
      )
      (block $label$break$L7 (result i32)
       (if
        (i32.eq
         (local.get $0)
         (i32.const 68)
        )
        (block
         (i32.store
          (local.get $2)
          (i32.const 4)
         )
         (drop
          (br_if $label$break$L7
           (i32.const 2147483647)
           (i64.gt_s
            (local.get $4)
            (i64.const 0)
           )
          )
         )
        )
        (block $do-once
         (if
          (i64.lt_s
           (local.get $4)
           (i64.const -2147483648)
          )
          (block
           (i32.store
            (local.get $2)
            (i32.const 4)
           )
           (br $do-once)
          )
         )
         (drop
          (br_if $label$break$L7
           (i32.wrap_i64
            (local.get $4)
           )
           (i64.le_s
            (local.get $4)
            (i64.const 2147483647)
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.const 4)
         )
         (br $label$break$L7
          (i32.const 2147483647)
         )
        )
       )
       (i32.const -2147483648)
      )
      (block (result i32)
       (i32.store
        (local.get $2)
        (i32.const 4)
       )
       (i32.const 0)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $16
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (local.set $7
   (local.get $16)
  )
  (if
   (i32.gt_u
    (local.tee $9
     (i32.div_s
      (i32.sub
       (local.get $3)
       (local.get $2)
      )
      (i32.const 12)
     )
    )
    (i32.const 100)
   )
   (if
    (local.tee $7
     (call $_malloc
      (local.get $9)
     )
    )
    (local.set $18
     (local.tee $11
      (local.get $7)
     )
    )
    (call $_abort)
   )
   (local.set $11
    (local.get $7)
   )
  )
  (local.set $7
   (local.get $2)
  )
  (local.set $10
   (local.get $11)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $3)
     (local.get $7)
    )
    (block
     (if
      (if (result i32)
       (i32.lt_s
        (local.tee $12
         (i32.load8_s offset=11
          (local.get $7)
         )
        )
        (i32.const 0)
       )
       (i32.load offset=4
        (local.get $7)
       )
       (i32.and
        (local.get $12)
        (i32.const 255)
       )
      )
      (i32.store8
       (local.get $10)
       (i32.const 1)
      )
      (block
       (i32.store8
        (local.get $10)
        (i32.const 2)
       )
       (local.set $9
        (i32.add
         (local.get $9)
         (i32.const -1)
        )
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
      )
     )
     (local.set $7
      (i32.add
       (local.get $7)
       (i32.const 12)
      )
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $10
   (local.get $9)
  )
  (local.set $9
   (local.get $8)
  )
  (loop $while-in1
   (block $while-out0
    (local.set $12
     (if (result i32)
      (local.tee $7
       (i32.load
        (local.get $0)
       )
      )
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $8
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $8)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.eqz
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.const 1)
     )
    )
    (local.set $13
     (if (result i32)
      (local.tee $8
       (i32.load
        (local.get $1)
       )
      )
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $8)
           )
          )
          (i32.load offset=16
           (local.get $8)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $8)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $8)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (local.set $8
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $8
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (local.set $7
     (i32.load
      (local.get $0)
     )
    )
    (br_if $while-out0
     (i32.eqz
      (i32.and
       (i32.xor
        (local.get $12)
        (local.get $13)
       )
       (i32.ne
        (local.get $10)
        (i32.const 0)
       )
      )
     )
    )
    (local.set $14
     (i32.and
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $7)
         )
        )
        (i32.load offset=16
         (local.get $7)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $7)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $7)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $8)
       )
      )
      (i32.const 255)
     )
    )
    (if
     (i32.eqz
      (local.get $6)
     )
     (local.set $14
      (call_indirect (type $i32_i32_=>_i32)
       (local.get $4)
       (local.get $14)
       (i32.add
        (i32.and
         (i32.load offset=12
          (i32.load
           (local.get $4)
          )
         )
         (i32.const 15)
        )
        (i32.const 66)
       )
      )
     )
    )
    (local.set $12
     (i32.add
      (local.get $15)
      (i32.const 1)
     )
    )
    (local.set $7
     (local.get $2)
    )
    (local.set $8
     (i32.const 0)
    )
    (local.set $13
     (local.get $11)
    )
    (loop $while-in3
     (if
      (i32.ne
       (local.get $3)
       (local.get $7)
      )
      (block
       (if
        (i32.eq
         (i32.load8_s
          (local.get $13)
         )
         (i32.const 1)
        )
        (block $do-once4
         (local.set $17
          (i32.load8_s
           (i32.add
            (if (result i32)
             (i32.lt_s
              (i32.load8_s offset=11
               (local.get $7)
              )
              (i32.const 0)
             )
             (i32.load
              (local.get $7)
             )
             (local.get $7)
            )
            (local.get $15)
           )
          )
         )
         (if
          (i32.ne
           (i32.and
            (local.get $14)
            (i32.const 255)
           )
           (i32.and
            (if (result i32)
             (local.get $6)
             (local.get $17)
             (call_indirect (type $i32_i32_=>_i32)
              (local.get $4)
              (local.get $17)
              (i32.add
               (i32.and
                (i32.load offset=12
                 (i32.load
                  (local.get $4)
                 )
                )
                (i32.const 15)
               )
               (i32.const 66)
              )
             )
            )
            (i32.const 255)
           )
          )
          (block
           (i32.store8
            (local.get $13)
            (i32.const 0)
           )
           (local.set $10
            (i32.add
             (local.get $10)
             (i32.const -1)
            )
           )
           (br $do-once4)
          )
         )
         (if
          (i32.eq
           (if (result i32)
            (i32.lt_s
             (local.tee $8
              (i32.load8_s offset=11
               (local.get $7)
              )
             )
             (i32.const 0)
            )
            (i32.load offset=4
             (local.get $7)
            )
            (i32.and
             (local.get $8)
             (i32.const 255)
            )
           )
           (local.get $12)
          )
          (block
           (i32.store8
            (local.get $13)
            (i32.const 2)
           )
           (local.set $10
            (i32.add
             (local.get $10)
             (i32.const -1)
            )
           )
           (local.set $9
            (i32.add
             (local.get $9)
             (i32.const 1)
            )
           )
          )
         )
         (local.set $8
          (i32.const 1)
         )
        )
       )
       (local.set $7
        (i32.add
         (local.get $7)
         (i32.const 12)
        )
       )
       (local.set $13
        (i32.add
         (local.get $13)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
    (if
     (local.get $8)
     (block $label$break$L67
      (if
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.tee $7
           (i32.load
            (local.get $0)
           )
          )
         )
        )
        (i32.load offset=16
         (local.get $7)
        )
       )
       (drop
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=40
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
       )
       (block
        (i32.store offset=12
         (local.get $7)
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
        )
        (drop
         (i32.load8_u
          (local.get $8)
         )
        )
       )
      )
      (if
       (i32.gt_u
        (i32.add
         (local.get $9)
         (local.get $10)
        )
        (i32.const 1)
       )
       (block
        (local.set $7
         (local.get $2)
        )
        (local.set $8
         (local.get $11)
        )
        (loop $while-in8
         (br_if $label$break$L67
          (i32.eq
           (local.get $3)
           (local.get $7)
          )
         )
         (if
          (i32.eq
           (i32.load8_s
            (local.get $8)
           )
           (i32.const 2)
          )
          (if
           (i32.ne
            (if (result i32)
             (i32.lt_s
              (local.tee $15
               (i32.load8_s offset=11
                (local.get $7)
               )
              )
              (i32.const 0)
             )
             (i32.load offset=4
              (local.get $7)
             )
             (i32.and
              (local.get $15)
              (i32.const 255)
             )
            )
            (local.get $12)
           )
           (block
            (i32.store8
             (local.get $8)
             (i32.const 0)
            )
            (local.set $9
             (i32.add
              (local.get $9)
              (i32.const -1)
             )
            )
           )
          )
         )
         (local.set $7
          (i32.add
           (local.get $7)
           (i32.const 12)
          )
         )
         (local.set $8
          (i32.add
           (local.get $8)
           (i32.const 1)
          )
         )
         (br $while-in8)
        )
       )
      )
     )
    )
    (local.set $15
     (local.get $12)
    )
    (br $while-in1)
   )
  )
  (local.set $0
   (if (result i32)
    (local.get $7)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $7)
         )
        )
        (i32.load offset=16
         (local.get $7)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $7)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $7)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.get $8)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $8)
          )
         )
         (i32.load offset=16
          (local.get $8)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $8)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $8)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$0)
      )
      (br_if $__rjti$1
       (i32.eqz
        (local.get $0)
       )
      )
     )
     (br $__rjto$1)
    )
    (br_if $__rjti$1
     (local.get $0)
    )
    (br $__rjto$1)
   )
   (i32.store
    (local.get $5)
    (i32.or
     (i32.load
      (local.get $5)
     )
     (i32.const 2)
    )
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (local.set $3
     (loop $while-in14 (result i32)
      (br_if $__rjti$2
       (i32.eq
        (local.get $2)
        (local.get $3)
       )
      )
      (if (result i32)
       (i32.eq
        (i32.load8_s
         (local.get $11)
        )
        (i32.const 2)
       )
       (local.get $2)
       (block
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 12)
         )
        )
        (local.set $11
         (i32.add
          (local.get $11)
          (i32.const 1)
         )
        )
        (br $while-in14)
       )
      )
     )
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $5)
    (i32.or
     (i32.load
      (local.get $5)
     )
     (i32.const 4)
    )
   )
  )
  (call $_free
   (local.get $18)
  )
  (global.set $STACKTOP
   (local.get $16)
  )
  (local.get $3)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 40)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 32)
   )
  )
  (if
   (i32.and
    (i32.load offset=4
     (local.get $3)
    )
    (i32.const 1)
   )
   (block
    (i32.store
     (local.get $7)
     (local.tee $0
      (i32.load offset=28
       (local.get $3)
      )
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.add
      (i32.load offset=4
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (local.set $8
     (call $__ZNKSt3__26locale9use_facetERNS0_2idE
      (local.get $7)
      (i32.const 54432)
     )
    )
    (call $__ZNSt3__26localeD2Ev
     (local.get $7)
    )
    (i32.store
     (local.get $7)
     (local.tee $0
      (i32.load offset=28
       (local.get $3)
      )
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.add
      (i32.load offset=4
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (local.set $0
     (call $__ZNKSt3__26locale9use_facetERNS0_2idE
      (local.get $7)
      (i32.const 54440)
     )
    )
    (call $__ZNSt3__26localeD2Ev
     (local.get $7)
    )
    (call_indirect (type $i32_i32_=>_none)
     (local.get $6)
     (local.get $0)
     (i32.add
      (i32.and
       (i32.load offset=24
        (i32.load
         (local.get $0)
        )
       )
       (i32.const 63)
      )
      (i32.const 395)
     )
    )
    (call_indirect (type $i32_i32_=>_none)
     (i32.add
      (local.get $6)
      (i32.const 12)
     )
     (local.get $0)
     (i32.add
      (i32.and
       (i32.load offset=28
        (i32.load
         (local.get $0)
        )
       )
       (i32.const 63)
      )
      (i32.const 395)
     )
    )
    (i32.store offset=24
     (local.get $6)
     (i32.load
      (local.get $2)
     )
    )
    (i32.store
     (local.get $7)
     (i32.load offset=24
      (local.get $6)
     )
    )
    (i32.store8
     (local.get $5)
     (i32.eq
      (call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb
       (local.get $1)
       (local.get $7)
       (local.get $6)
       (local.tee $0
        (i32.add
         (local.get $6)
         (i32.const 24)
        )
       )
       (local.get $8)
       (local.get $4)
       (i32.const 1)
      )
      (local.get $6)
     )
    )
    (local.set $1
     (i32.load
      (local.get $1)
     )
    )
    (loop $while-in
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const -12)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.get $0)
       (local.get $6)
      )
     )
    )
   )
   (block
    (i32.store
     (local.get $8)
     (i32.const -1)
    )
    (local.set $9
     (i32.load offset=16
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.store offset=36
     (local.get $6)
     (i32.load
      (local.get $1)
     )
    )
    (i32.store offset=28
     (local.get $6)
     (i32.load
      (local.get $2)
     )
    )
    (i32.store
     (local.get $6)
     (i32.load offset=36
      (local.get $6)
     )
    )
    (i32.store
     (local.get $7)
     (i32.load offset=28
      (local.get $6)
     )
    )
    (i32.store
     (local.get $1)
     (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_i32)
      (local.get $0)
      (local.get $6)
      (local.get $7)
      (local.get $3)
      (local.get $4)
      (local.get $8)
      (i32.add
       (i32.and
        (local.get $9)
        (i32.const 63)
       )
       (i32.const 166)
      )
     )
    )
    (block $switch
     (block $switch-default
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case $switch-case0 $switch-default
         (i32.load
          (local.get $8)
         )
        )
       )
       (i32.store8
        (local.get $5)
        (i32.const 0)
       )
       (br $switch)
      )
      (i32.store8
       (local.get $5)
       (i32.const 1)
      )
      (br $switch)
     )
     (i32.store8
      (local.get $5)
      (i32.const 1)
     )
     (i32.store
      (local.get $4)
      (i32.const 4)
     )
    )
    (local.set $1
     (i32.load
      (local.get $1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 304)
   )
  )
  (local.set $13
   (i32.add
    (local.get $8)
    (i32.const 264)
   )
  )
  (local.set $14
   (i32.add
    (local.get $8)
    (i32.const 160)
   )
  )
  (local.set $11
   (i32.add
    (local.get $8)
    (i32.const 292)
   )
  )
  (local.set $6
   (i32.add
    (local.get $8)
    (i32.const 280)
   )
  )
  (local.set $10
   (i32.add
    (local.get $8)
    (i32.const 276)
   )
  )
  (local.set $15
   (i32.add
    (local.get $8)
    (i32.const 272)
   )
  )
  (local.set $16
   (i32.add
    (local.get $8)
    (i32.const 268)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $11)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (local.get $6)
   (local.tee $0
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.load offset=48
    (i32.load
     (local.tee $0
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $6)
       (i32.const 54432)
      )
     )
    )
   )
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $0)
    (i32.const 34320)
    (i32.const 34346)
    (local.get $14)
    (i32.add
     (i32.and
      (local.get $3)
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $6)
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $10)
   (local.tee $0
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $15)
   (local.get $8)
  )
  (i32.store
   (local.get $16)
   (i32.const 0)
  )
  (local.set $12
   (local.tee $3
    (i32.load
     (local.get $1)
    )
   )
  )
  (loop $label$continue$L12
   (block $label$break$L12
    (local.set $9
     (if (result i32)
      (local.get $3)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $3)
           )
          )
          (i32.load offset=16
           (local.get $3)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $3)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $3)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (local.set $12
         (i32.const 0)
        )
        (local.set $3
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $12
        (i32.const 0)
       )
       (local.set $3
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $7
         (i32.load
          (local.get $2)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $17
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $17)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $2)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L12
        (i32.eqz
         (local.get $9)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $7
      (if (result i32)
       (local.get $9)
       (block
        (local.set $7
         (i32.const 0)
        )
        (br $label$break$L12)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $10)
      )
      (i32.add
       (local.get $0)
       (local.tee $9
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $9
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $9)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $9)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $10)
       (i32.add
        (local.get $9)
        (local.tee $0
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L12
     (call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw
      (if (result i32)
       (i32.eq
        (local.tee $9
         (i32.load offset=12
          (local.get $3)
         )
        )
        (i32.load offset=16
         (local.get $3)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $3)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $9)
       )
      )
      (i32.const 16)
      (local.get $0)
      (local.get $10)
      (local.get $16)
      (i32.const 0)
      (local.get $11)
      (local.get $8)
      (local.get $15)
      (local.get $14)
     )
    )
    (if
     (i32.eq
      (local.tee $7
       (i32.load offset=12
        (local.get $3)
       )
      )
      (i32.load offset=16
       (local.get $3)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $3)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $3)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $3)
       (i32.add
        (local.get $7)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $7)
       )
      )
     )
    )
    (br $label$continue$L12)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (i32.sub
    (i32.load
     (local.get $10)
    )
    (local.get $0)
   )
  )
  (local.set $0
   (select
    (i32.load
     (local.get $6)
    )
    (local.get $6)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
   )
  )
  (local.set $10
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (local.get $13)
   (local.get $5)
  )
  (if
   (i32.ne
    (call $__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z
     (local.get $0)
     (local.get $10)
     (local.get $13)
    )
    (i32.const 1)
   )
   (i32.store
    (local.get $4)
    (i32.const 4)
   )
  )
  (local.set $0
   (if (result i32)
    (local.get $3)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $0
         (i32.load offset=12
          (local.get $3)
         )
        )
        (i32.load offset=16
         (local.get $3)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $3)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $12)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $0)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $7)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $3
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.load offset=16
          (local.get $7)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $0)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $0)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $4)
    (i32.or
     (i32.load
      (local.get $4)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $8)
  )
  (local.get $0)
 )
 (func $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (result i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (block $label$break$L6 (result i32)
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (local.tee $11
       (i32.eq
        (local.get $2)
        (local.tee $10
         (i32.load
          (local.get $3)
         )
        )
       )
      )
     )
    )
    (if
     (i32.eqz
      (local.tee $12
       (i32.eq
        (local.get $0)
        (i32.load offset=96
         (local.get $9)
        )
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (i32.load offset=100
        (local.get $9)
       )
       (local.get $0)
      )
     )
    )
    (i32.store
     (local.get $3)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store8
     (local.get $2)
     (select
      (i32.const 43)
      (i32.const 45)
      (local.get $12)
     )
    )
    (i32.store
     (local.get $4)
     (i32.const 0)
    )
    (br $label$break$L6
     (i32.const 0)
    )
   )
   (if
    (i32.and
     (i32.eq
      (local.get $0)
      (local.get $5)
     )
     (i32.ne
      (select
       (i32.load offset=4
        (local.get $6)
       )
       (i32.and
        (local.tee $6
         (i32.load8_s offset=11
          (local.get $6)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $6)
        (i32.const 0)
       )
      )
      (i32.const 0)
     )
    )
    (block
     (drop
      (br_if $label$break$L6
       (i32.const 0)
       (i32.ge_s
        (i32.sub
         (local.tee $0
          (i32.load
           (local.get $8)
          )
         )
         (local.get $7)
        )
        (i32.const 160)
       )
      )
     )
     (local.set $1
      (i32.load
       (local.get $4)
      )
     )
     (i32.store
      (local.get $8)
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $0)
      (local.get $1)
     )
     (i32.store
      (local.get $4)
      (i32.const 0)
     )
     (br $label$break$L6
      (i32.const 0)
     )
    )
   )
   (local.set $7
    (i32.add
     (local.get $9)
     (i32.const 104)
    )
   )
   (local.set $5
    (i32.const 0)
   )
   (local.set $0
    (i32.shr_s
     (local.tee $5
      (i32.sub
       (loop $while-in (result i32)
        (if (result i32)
         (i32.eq
          (local.get $5)
          (i32.const 26)
         )
         (local.get $7)
         (block (result i32)
          (local.set $6
           (i32.add
            (local.get $5)
            (i32.const 1)
           )
          )
          (if (result i32)
           (i32.eq
            (local.get $0)
            (i32.load
             (local.tee $5
              (i32.add
               (i32.shl
                (local.get $5)
                (i32.const 2)
               )
               (local.get $9)
              )
             )
            )
           )
           (local.get $5)
           (block
            (local.set $5
             (local.get $6)
            )
            (br $while-in)
           )
          )
         )
        )
       )
       (local.get $9)
      )
     )
     (i32.const 2)
    )
   )
   (if (result i32)
    (i32.gt_s
     (local.get $5)
     (i32.const 92)
    )
    (i32.const -1)
    (block (result i32)
     (block $switch
      (block $switch-case2
       (block $switch-case1
        (br_table $switch-case1 $switch $switch-case1 $switch $switch $switch $switch $switch $switch-case2 $switch
         (i32.sub
          (local.get $1)
          (i32.const 8)
         )
        )
       )
       (drop
        (br_if $label$break$L6
         (i32.const -1)
         (i32.ge_s
          (local.get $0)
          (local.get $1)
         )
        )
       )
       (br $switch)
      )
      (if
       (i32.ge_s
        (local.get $5)
        (i32.const 88)
       )
       (block
        (drop
         (br_if $label$break$L6
          (i32.const -1)
          (local.get $11)
         )
        )
        (drop
         (br_if $label$break$L6
          (i32.const -1)
          (i32.ge_s
           (i32.sub
            (local.get $10)
            (local.get $2)
           )
           (i32.const 3)
          )
         )
        )
        (drop
         (br_if $label$break$L6
          (i32.const -1)
          (i32.ne
           (i32.load8_s
            (i32.add
             (local.get $10)
             (i32.const -1)
            )
           )
           (i32.const 48)
          )
         )
        )
        (i32.store
         (local.get $4)
         (i32.const 0)
        )
        (local.set $0
         (i32.load8_s
          (i32.add
           (local.get $0)
           (i32.const 34320)
          )
         )
        )
        (i32.store
         (local.get $3)
         (i32.add
          (local.get $10)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $10)
         (local.get $0)
        )
        (br $label$break$L6
         (i32.const 0)
        )
       )
      )
     )
     (local.set $0
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 34320)
       )
      )
     )
     (i32.store
      (local.get $3)
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (i32.store8
      (local.get $10)
      (local.get $0)
     )
     (i32.store
      (local.get $4)
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.const 1)
      )
     )
     (i32.const 0)
    )
   )
  )
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 336)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 300)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 296)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 292)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 288)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 333)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 332)
   )
  )
  (call $__ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_
   (local.tee $14
    (i32.add
     (local.get $5)
     (i32.const 312)
    )
   )
   (local.get $2)
   (local.tee $17
    (i32.add
     (local.get $5)
     (i32.const 160)
    )
   )
   (i32.add
    (local.get $5)
    (i32.const 328)
   )
   (i32.add
    (local.get $5)
    (i32.const 324)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $11)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $12)
   (local.get $5)
  )
  (i32.store
   (local.get $13)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.const 1)
  )
  (i32.store8
   (local.get $15)
   (i32.const 69)
  )
  (local.set $16
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $16
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $16
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $7
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $7
      (if (result i32)
       (local.get $8)
       (block
        (local.set $7
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $11)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $11)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $8)
       )
      )
      (local.get $10)
      (local.get $15)
      (local.get $9)
      (local.get $11)
      (i32.load offset=328
       (local.get $5)
      )
      (i32.load offset=324
       (local.get $5)
      )
      (local.get $14)
      (local.get $5)
      (local.get $12)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $7
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $7)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $7)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.eqz
      (select
       (i32.load offset=4
        (local.get $14)
       )
       (i32.and
        (local.tee $15
         (i32.load8_s offset=11
          (local.get $14)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $15)
        (i32.const 0)
       )
      )
     )
     (i32.eqz
      (i32.load8_s
       (local.get $10)
      )
     )
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $12)
       )
      )
      (local.get $5)
     )
     (i32.const 160)
    )
    (block
     (local.set $13
      (i32.load
       (local.get $13)
      )
     )
     (i32.store
      (local.get $12)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $13)
     )
    )
   )
  )
  (f64.store
   (local.get $4)
   (call $__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj
    (local.get $9)
    (i32.load
     (local.get $11)
    )
    (local.get $3)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $14)
   (local.get $5)
   (i32.load
    (local.get $12)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $16)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $7)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.load offset=16
          (local.get $7)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $14)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $1
    (i32.load offset=28
     (local.get $1)
    )
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.add
    (i32.load offset=4
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (local.set $6
   (i32.load offset=48
    (i32.load
     (local.tee $1
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $5)
       (i32.const 54432)
      )
     )
    )
   )
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $1)
    (i32.const 34320)
    (i32.const 34352)
    (local.get $2)
    (i32.add
     (i32.and
      (local.get $6)
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (local.set $2
   (i32.load offset=12
    (i32.load
     (local.tee $1
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $5)
       (i32.const 54440)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (local.get $2)
     (i32.const 63)
    )
   )
  )
  (i32.store
   (local.get $4)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=16
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $0)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=20
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $5)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (result i32)
  (local $12 i32)
  (if (result i32)
   (i32.eq
    (local.get $0)
    (local.get $5)
   )
   (if (result i32)
    (i32.load8_s
     (local.get $1)
    )
    (block (result i32)
     (i32.store8
      (local.get $1)
      (i32.const 0)
     )
     (i32.store
      (local.get $4)
      (i32.add
       (local.tee $0
        (i32.load
         (local.get $4)
        )
       )
       (i32.const 1)
      )
     )
     (i32.store8
      (local.get $0)
      (i32.const 46)
     )
     (if
      (select
       (i32.load offset=4
        (local.get $7)
       )
       (i32.and
        (local.tee $0
         (i32.load8_s offset=11
          (local.get $7)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $0)
        (i32.const 0)
       )
      )
      (if
       (i32.lt_s
        (i32.sub
         (local.tee $0
          (i32.load
           (local.get $9)
          )
         )
         (local.get $8)
        )
        (i32.const 160)
       )
       (block
        (local.set $1
         (i32.load
          (local.get $10)
         )
        )
        (i32.store
         (local.get $9)
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (i32.store
         (local.get $0)
         (local.get $1)
        )
       )
      )
     )
     (i32.const 0)
    )
    (i32.const -1)
   )
   (block $label$break$L1 (result i32)
    (if
     (i32.eq
      (local.get $0)
      (local.get $6)
     )
     (if
      (select
       (i32.load offset=4
        (local.get $7)
       )
       (i32.and
        (local.tee $5
         (i32.load8_s offset=11
          (local.get $7)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $5)
        (i32.const 0)
       )
      )
      (block
       (drop
        (br_if $label$break$L1
         (i32.const -1)
         (i32.eqz
          (i32.load8_s
           (local.get $1)
          )
         )
        )
       )
       (drop
        (br_if $label$break$L1
         (i32.const 0)
         (i32.ge_s
          (i32.sub
           (local.tee $0
            (i32.load
             (local.get $9)
            )
           )
           (local.get $8)
          )
          (i32.const 160)
         )
        )
       )
       (local.set $1
        (i32.load
         (local.get $10)
        )
       )
       (i32.store
        (local.get $9)
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (i32.store
        (local.get $0)
        (local.get $1)
       )
       (i32.store
        (local.get $10)
        (i32.const 0)
       )
       (br $label$break$L1
        (i32.const 0)
       )
      )
     )
    )
    (local.set $12
     (i32.add
      (local.get $11)
      (i32.const 128)
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (if (result i32)
     (i32.gt_s
      (local.tee $0
       (i32.sub
        (loop $while-in (result i32)
         (if (result i32)
          (i32.eq
           (local.get $5)
           (i32.const 32)
          )
          (local.get $12)
          (block (result i32)
           (local.set $6
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (if (result i32)
            (i32.eq
             (local.get $0)
             (i32.load
              (local.tee $5
               (i32.add
                (i32.shl
                 (local.get $5)
                 (i32.const 2)
                )
                (local.get $11)
               )
              )
             )
            )
            (local.get $5)
            (block
             (local.set $5
              (local.get $6)
             )
             (br $while-in)
            )
           )
          )
         )
        )
        (local.get $11)
       )
      )
      (i32.const 124)
     )
     (i32.const -1)
     (block (result i32)
      (local.set $5
       (i32.load8_s
        (i32.add
         (i32.shr_s
          (local.get $0)
          (i32.const 2)
         )
         (i32.const 34320)
        )
       )
      )
      (block $switch
       (block $switch-default
        (block $switch-case2
         (block $switch-case0
          (br_table $switch-case2 $switch-case2 $switch-case0 $switch-case0 $switch-default
           (i32.or
            (i32.shr_u
             (local.tee $6
              (i32.add
               (local.get $0)
               (i32.const -88)
              )
             )
             (i32.const 2)
            )
            (i32.shl
             (local.get $6)
             (i32.const 30)
            )
           )
          )
         )
         (if
          (i32.ne
           (local.tee $0
            (i32.load
             (local.get $4)
            )
           )
           (local.get $3)
          )
          (drop
           (br_if $label$break$L1
            (i32.const -1)
            (i32.ne
             (i32.and
              (i32.load8_s
               (i32.add
                (local.get $0)
                (i32.const -1)
               )
              )
              (i32.const 95)
             )
             (i32.and
              (i32.load8_s
               (local.get $2)
              )
              (i32.const 127)
             )
            )
           )
          )
         )
         (i32.store
          (local.get $4)
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $0)
          (local.get $5)
         )
         (br $label$break$L1
          (i32.const 0)
         )
        )
        (i32.store8
         (local.get $2)
         (i32.const 80)
        )
        (br $switch)
       )
       (if
        (i32.eq
         (local.tee $3
          (i32.and
           (local.get $5)
           (i32.const 95)
          )
         )
         (i32.load8_s
          (local.get $2)
         )
        )
        (block
         (i32.store8
          (local.get $2)
          (i32.or
           (local.get $3)
           (i32.const 128)
          )
         )
         (if
          (i32.load8_s
           (local.get $1)
          )
          (block
           (i32.store8
            (local.get $1)
            (i32.const 0)
           )
           (if
            (select
             (i32.load offset=4
              (local.get $7)
             )
             (i32.and
              (local.tee $1
               (i32.load8_s offset=11
                (local.get $7)
               )
              )
              (i32.const 255)
             )
             (i32.lt_s
              (local.get $1)
              (i32.const 0)
             )
            )
            (if
             (i32.lt_s
              (i32.sub
               (local.tee $1
                (i32.load
                 (local.get $9)
                )
               )
               (local.get $8)
              )
              (i32.const 160)
             )
             (block
              (local.set $2
               (i32.load
                (local.get $10)
               )
              )
              (i32.store
               (local.get $9)
               (i32.add
                (local.get $1)
                (i32.const 4)
               )
              )
              (i32.store
               (local.get $1)
               (local.get $2)
              )
             )
            )
           )
          )
         )
        )
       )
      )
      (i32.store
       (local.get $4)
       (i32.add
        (local.tee $1
         (i32.load
          (local.get $4)
         )
        )
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $1)
       (local.get $5)
      )
      (if
       (i32.le_s
        (local.get $0)
        (i32.const 84)
       )
       (i32.store
        (local.get $10)
        (i32.add
         (i32.load
          (local.get $10)
         )
         (i32.const 1)
        )
       )
      )
      (i32.const 0)
     )
    )
   )
  )
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 336)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 300)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 296)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 292)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 288)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 333)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 332)
   )
  )
  (call $__ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_
   (local.tee $14
    (i32.add
     (local.get $5)
     (i32.const 312)
    )
   )
   (local.get $2)
   (local.tee $17
    (i32.add
     (local.get $5)
     (i32.const 160)
    )
   )
   (i32.add
    (local.get $5)
    (i32.const 328)
   )
   (i32.add
    (local.get $5)
    (i32.const 324)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $11)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $12)
   (local.get $5)
  )
  (i32.store
   (local.get $13)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.const 1)
  )
  (i32.store8
   (local.get $15)
   (i32.const 69)
  )
  (local.set $16
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $16
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $16
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $7
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $7
      (if (result i32)
       (local.get $8)
       (block
        (local.set $7
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $11)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $11)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $8)
       )
      )
      (local.get $10)
      (local.get $15)
      (local.get $9)
      (local.get $11)
      (i32.load offset=328
       (local.get $5)
      )
      (i32.load offset=324
       (local.get $5)
      )
      (local.get $14)
      (local.get $5)
      (local.get $12)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $7
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $7)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $7)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.eqz
      (select
       (i32.load offset=4
        (local.get $14)
       )
       (i32.and
        (local.tee $15
         (i32.load8_s offset=11
          (local.get $14)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $15)
        (i32.const 0)
       )
      )
     )
     (i32.eqz
      (i32.load8_s
       (local.get $10)
      )
     )
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $12)
       )
      )
      (local.get $5)
     )
     (i32.const 160)
    )
    (block
     (local.set $13
      (i32.load
       (local.get $13)
      )
     )
     (i32.store
      (local.get $12)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $13)
     )
    )
   )
  )
  (f64.store
   (local.get $4)
   (call $__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj
    (local.get $9)
    (i32.load
     (local.get $11)
    )
    (local.get $3)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $14)
   (local.get $5)
   (i32.load
    (local.get $12)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $16)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $7)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.load offset=16
          (local.get $7)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $14)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 336)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 300)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 296)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 292)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 288)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 333)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 332)
   )
  )
  (call $__ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_
   (local.tee $14
    (i32.add
     (local.get $5)
     (i32.const 312)
    )
   )
   (local.get $2)
   (local.tee $17
    (i32.add
     (local.get $5)
     (i32.const 160)
    )
   )
   (i32.add
    (local.get $5)
    (i32.const 328)
   )
   (i32.add
    (local.get $5)
    (i32.const 324)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $11)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $12)
   (local.get $5)
  )
  (i32.store
   (local.get $13)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.const 1)
  )
  (i32.store8
   (local.get $15)
   (i32.const 69)
  )
  (local.set $16
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $16
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $16
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $7
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $7
      (if (result i32)
       (local.get $8)
       (block
        (local.set $7
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $11)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $11)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $8)
       )
      )
      (local.get $10)
      (local.get $15)
      (local.get $9)
      (local.get $11)
      (i32.load offset=328
       (local.get $5)
      )
      (i32.load offset=324
       (local.get $5)
      )
      (local.get $14)
      (local.get $5)
      (local.get $12)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $7
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $7)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $7)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.eqz
      (select
       (i32.load offset=4
        (local.get $14)
       )
       (i32.and
        (local.tee $15
         (i32.load8_s offset=11
          (local.get $14)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $15)
        (i32.const 0)
       )
      )
     )
     (i32.eqz
      (i32.load8_s
       (local.get $10)
      )
     )
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $12)
       )
      )
      (local.get $5)
     )
     (i32.const 160)
    )
    (block
     (local.set $13
      (i32.load
       (local.get $13)
      )
     )
     (i32.store
      (local.get $12)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $13)
     )
    )
   )
  )
  (f32.store
   (local.get $4)
   (call $__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj
    (local.get $9)
    (i32.load
     (local.get $11)
    )
    (local.get $3)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $14)
   (local.get $5)
   (i32.load
    (local.get $12)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $16)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $7)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.load offset=16
          (local.get $7)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $14)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 304)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 300)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 160)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 288)
   )
  )
  (local.set $6
   (i32.add
    (local.get $7)
    (i32.const 276)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 272)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 268)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 264)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (local.set $17
   (call $__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw
    (local.get $2)
    (local.get $5)
   )
  )
  (call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $5
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $5
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $5)
           )
          )
          (i32.load offset=16
           (local.get $5)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $5)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $5
      (if (result i32)
       (local.get $8)
       (block
        (local.set $5
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $8)
       )
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $5
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i64.store
   (local.get $4)
   (call $__ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $5)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $5)
          )
         )
         (i32.load offset=16
          (local.get $5)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $5)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call $__ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_
   (local.get $0)
   (local.get $1)
  )
 )
 (func $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.tee $1
    (i32.load offset=28
     (local.get $1)
    )
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.add
    (i32.load offset=4
     (local.get $1)
    )
    (i32.const 1)
   )
  )
  (local.set $4
   (i32.load offset=16
    (i32.load
     (local.tee $1
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $3)
       (i32.const 54440)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $2)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (local.get $4)
     (i32.const 63)
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $0)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=20
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.tee $0
    (i32.load offset=28
     (local.get $0)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.load offset=48
    (i32.load
     (local.tee $0
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $2)
       (i32.const 54432)
      )
     )
    )
   )
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $0)
    (i32.const 34320)
    (i32.const 34346)
    (local.get $1)
    (i32.add
     (i32.and
      (local.get $3)
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 304)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 300)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 160)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 288)
   )
  )
  (local.set $6
   (i32.add
    (local.get $7)
    (i32.const 276)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 272)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 268)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 264)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (local.set $17
   (call $__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw
    (local.get $2)
    (local.get $5)
   )
  )
  (call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $5
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $5
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $5)
           )
          )
          (i32.load offset=16
           (local.get $5)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $5)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $5
      (if (result i32)
       (local.get $8)
       (block
        (local.set $5
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $8)
       )
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $5
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (call $__ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $5)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $5)
          )
         )
         (i32.load offset=16
          (local.get $5)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $5)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 304)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 300)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 160)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 288)
   )
  )
  (local.set $6
   (i32.add
    (local.get $7)
    (i32.const 276)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 272)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 268)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 264)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (local.set $17
   (call $__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw
    (local.get $2)
    (local.get $5)
   )
  )
  (call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $5
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $5
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $5)
           )
          )
          (i32.load offset=16
           (local.get $5)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $5)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $5
      (if (result i32)
       (local.get $8)
       (block
        (local.set $5
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $8)
       )
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $5
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i32.store16
   (local.get $4)
   (call $__ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $5)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $5)
          )
         )
         (i32.load offset=16
          (local.get $5)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $5)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 304)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 300)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 160)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 288)
   )
  )
  (local.set $6
   (i32.add
    (local.get $7)
    (i32.const 276)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 272)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 268)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 264)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (local.set $17
   (call $__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw
    (local.get $2)
    (local.get $5)
   )
  )
  (call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $5
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $5
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $5)
           )
          )
          (i32.load offset=16
           (local.get $5)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $5)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $5
      (if (result i32)
       (local.get $8)
       (block
        (local.set $5
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $8)
       )
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $5
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i64.store
   (local.get $4)
   (call $__ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $5)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $5)
          )
         )
         (i32.load offset=16
          (local.get $5)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $5)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 304)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 300)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 160)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 288)
   )
  )
  (local.set $6
   (i32.add
    (local.get $7)
    (i32.const 276)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 272)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 268)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 264)
   )
  )
  (local.set $16
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 74)
         )
        )
       )
       (br $switch
        (i32.const 8)
       )
      )
      (br $switch
       (i32.const 16)
      )
     )
     (br $switch
      (i32.const 0)
     )
    )
    (i32.const 10)
   )
  )
  (local.set $17
   (call $__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw
    (local.get $2)
    (local.get $5)
   )
  )
  (call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw
   (local.get $11)
   (local.get $2)
   (local.get $10)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $9)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.const 0)
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
   (local.get $6)
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $6)
     )
     (i32.const 0)
    )
    (i32.add
     (i32.and
      (i32.load offset=8
       (local.get $6)
      )
      (i32.const 2147483647)
     )
     (i32.const -1)
    )
    (i32.const 10)
   )
  )
  (i32.store
   (local.get $12)
   (local.tee $9
    (select
     (i32.load
      (local.get $6)
     )
     (local.get $6)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
    )
   )
  )
  (i32.store
   (local.get $13)
   (local.get $7)
  )
  (i32.store
   (local.get $14)
   (i32.const 0)
  )
  (local.set $15
   (local.tee $2
    (i32.load
     (local.get $0)
    )
   )
  )
  (loop $label$continue$L8
   (block $label$break$L8
    (local.set $8
     (if (result i32)
      (local.get $2)
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $5
           (i32.load offset=12
            (local.get $2)
           )
          )
          (i32.load offset=16
           (local.get $2)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $2)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (local.set $15
         (i32.const 0)
        )
        (local.set $2
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $15
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $5
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $18
           (i32.load offset=12
            (local.get $5)
           )
          )
          (i32.load offset=16
           (local.get $5)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $5)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $18)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L8
        (i32.eqz
         (local.get $8)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $5
      (if (result i32)
       (local.get $8)
       (block
        (local.set $5
         (i32.const 0)
        )
        (br $label$break$L8)
       )
       (i32.const 0)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $12)
      )
      (i32.add
       (local.get $9)
       (local.tee $8
        (select
         (i32.load offset=4
          (local.get $6)
         )
         (i32.and
          (local.tee $8
           (i32.load8_s offset=11
            (local.get $6)
           )
          )
          (i32.const 255)
         )
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
       (local.get $6)
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $6)
         )
         (i32.const 0)
        )
        (i32.add
         (i32.and
          (i32.load offset=8
           (local.get $6)
          )
          (i32.const 2147483647)
         )
         (i32.const -1)
        )
        (i32.const 10)
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $8)
        (local.tee $9
         (select
          (i32.load
           (local.get $6)
          )
          (local.get $6)
          (i32.lt_s
           (i32.load8_s offset=11
            (local.get $6)
           )
           (i32.const 0)
          )
         )
        )
       )
      )
     )
    )
    (br_if $label$break$L8
     (call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $2)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $8)
       )
      )
      (local.get $16)
      (local.get $9)
      (local.get $12)
      (local.get $14)
      (i32.load
       (local.get $10)
      )
      (local.get $11)
      (local.get $7)
      (local.get $13)
      (local.get $17)
     )
    )
    (if
     (i32.eq
      (local.tee $5
       (i32.load offset=12
        (local.get $2)
       )
      )
      (i32.load offset=16
       (local.get $2)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $2)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br $label$continue$L8)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $10
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $10)
     (i32.const 0)
    )
   )
   (if
    (i32.lt_s
     (i32.sub
      (local.tee $10
       (i32.load
        (local.get $13)
       )
      )
      (local.get $7)
     )
     (i32.const 160)
    )
    (block
     (local.set $14
      (i32.load
       (local.get $14)
      )
     )
     (i32.store
      (local.get $13)
      (i32.add
       (local.get $10)
       (i32.const 4)
      )
     )
     (i32.store
      (local.get $10)
      (local.get $14)
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (call $__ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji
    (local.get $9)
    (i32.load
     (local.get $12)
    )
    (local.get $3)
    (local.get $16)
   )
  )
  (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
   (local.get $11)
   (local.get $7)
   (i32.load
    (local.get $13)
   )
   (local.get $3)
  )
  (local.set $2
   (if (result i32)
    (local.get $2)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $2)
         )
        )
        (i32.load offset=16
         (local.get $2)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $2)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $15)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $5)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $5)
          )
         )
         (i32.load offset=16
          (local.get $5)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $5)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $2)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $2)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (i32.load
      (local.get $3)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $0)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $6)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $16
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (local.set $9
   (local.get $16)
  )
  (if
   (i32.gt_u
    (local.tee $7
     (i32.div_s
      (i32.sub
       (local.get $3)
       (local.get $2)
      )
      (i32.const 12)
     )
    )
    (i32.const 100)
   )
   (if
    (local.tee $9
     (call $_malloc
      (local.get $7)
     )
    )
    (local.set $18
     (local.tee $13
      (local.get $9)
     )
    )
    (call $_abort)
   )
   (local.set $13
    (local.get $9)
   )
  )
  (local.set $10
   (local.get $2)
  )
  (local.set $9
   (local.get $13)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $3)
     (local.get $10)
    )
    (block
     (if
      (if (result i32)
       (i32.lt_s
        (local.tee $8
         (i32.load8_s offset=11
          (local.get $10)
         )
        )
        (i32.const 0)
       )
       (i32.load offset=4
        (local.get $10)
       )
       (i32.and
        (local.get $8)
        (i32.const 255)
       )
      )
      (i32.store8
       (local.get $9)
       (i32.const 1)
      )
      (block
       (i32.store8
        (local.get $9)
        (i32.const 2)
       )
       (local.set $12
        (i32.add
         (local.get $12)
         (i32.const 1)
        )
       )
       (local.set $7
        (i32.add
         (local.get $7)
         (i32.const -1)
        )
       )
      )
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 12)
      )
     )
     (local.set $9
      (i32.add
       (local.get $9)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $9
   (local.get $12)
  )
  (local.set $12
   (local.get $7)
  )
  (loop $while-in1
   (block $while-out0
    (local.set $10
     (if (result i32)
      (local.tee $8
       (i32.load
        (local.get $0)
       )
      )
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $7
           (i32.load offset=12
            (local.get $8)
           )
          )
          (i32.load offset=16
           (local.get $8)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $8)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $8)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $7)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.eqz
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.const 1)
     )
    )
    (local.set $8
     (if (result i32)
      (local.tee $7
       (i32.load
        (local.get $1)
       )
      )
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $8
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $8)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (local.set $7
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.const 0)
      )
      (block (result i32)
       (local.set $7
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
    (local.set $11
     (i32.load
      (local.get $0)
     )
    )
    (br_if $while-out0
     (i32.eqz
      (i32.and
       (i32.xor
        (local.get $8)
        (local.get $10)
       )
       (i32.ne
        (local.get $12)
        (i32.const 0)
       )
      )
     )
    )
    (local.set $15
     (if (result i32)
      (i32.eq
       (local.tee $7
        (i32.load offset=12
         (local.get $11)
        )
       )
       (i32.load offset=16
        (local.get $11)
       )
      )
      (call_indirect (type $i32_=>_i32)
       (local.get $11)
       (i32.and
        (i32.load offset=36
         (i32.load
          (local.get $11)
         )
        )
        (i32.const 63)
       )
      )
      (i32.load
       (local.get $7)
      )
     )
    )
    (if
     (i32.eqz
      (local.get $6)
     )
     (local.set $15
      (call_indirect (type $i32_i32_=>_i32)
       (local.get $4)
       (local.get $15)
       (i32.add
        (i32.and
         (i32.load offset=28
          (i32.load
           (local.get $4)
          )
         )
         (i32.const 15)
        )
        (i32.const 66)
       )
      )
     )
    )
    (local.set $11
     (i32.add
      (local.get $17)
      (i32.const 1)
     )
    )
    (local.set $8
     (local.get $2)
    )
    (local.set $10
     (i32.const 0)
    )
    (local.set $14
     (local.get $13)
    )
    (local.set $7
     (local.get $9)
    )
    (loop $while-in3
     (if
      (i32.ne
       (local.get $3)
       (local.get $8)
      )
      (block
       (if
        (i32.eq
         (i32.load8_s
          (local.get $14)
         )
         (i32.const 1)
        )
        (block $do-once4
         (local.set $9
          (i32.load
           (i32.add
            (if (result i32)
             (i32.lt_s
              (i32.load8_s offset=11
               (local.get $8)
              )
              (i32.const 0)
             )
             (i32.load
              (local.get $8)
             )
             (local.get $8)
            )
            (i32.shl
             (local.get $17)
             (i32.const 2)
            )
           )
          )
         )
         (if
          (i32.ne
           (if (result i32)
            (local.get $6)
            (local.get $9)
            (call_indirect (type $i32_i32_=>_i32)
             (local.get $4)
             (local.get $9)
             (i32.add
              (i32.and
               (i32.load offset=28
                (i32.load
                 (local.get $4)
                )
               )
               (i32.const 15)
              )
              (i32.const 66)
             )
            )
           )
           (local.get $15)
          )
          (block
           (i32.store8
            (local.get $14)
            (i32.const 0)
           )
           (local.set $12
            (i32.add
             (local.get $12)
             (i32.const -1)
            )
           )
           (br $do-once4)
          )
         )
         (if
          (i32.eq
           (if (result i32)
            (i32.lt_s
             (local.tee $9
              (i32.load8_s offset=11
               (local.get $8)
              )
             )
             (i32.const 0)
            )
            (i32.load offset=4
             (local.get $8)
            )
            (i32.and
             (local.get $9)
             (i32.const 255)
            )
           )
           (local.get $11)
          )
          (block
           (i32.store8
            (local.get $14)
            (i32.const 2)
           )
           (local.set $12
            (i32.add
             (local.get $12)
             (i32.const -1)
            )
           )
           (local.set $7
            (i32.add
             (local.get $7)
             (i32.const 1)
            )
           )
          )
         )
         (local.set $10
          (i32.const 1)
         )
        )
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 12)
        )
       )
       (local.set $14
        (i32.add
         (local.get $14)
         (i32.const 1)
        )
       )
       (br $while-in3)
      )
     )
    )
    (if
     (local.get $10)
     (block $label$break$L67
      (if
       (i32.eq
        (local.tee $9
         (i32.load offset=12
          (local.tee $8
           (i32.load
            (local.get $0)
           )
          )
         )
        )
        (i32.load offset=16
         (local.get $8)
        )
       )
       (drop
        (call_indirect (type $i32_=>_i32)
         (local.get $8)
         (i32.and
          (i32.load offset=40
           (i32.load
            (local.get $8)
           )
          )
          (i32.const 63)
         )
        )
       )
       (block
        (i32.store offset=12
         (local.get $8)
         (i32.add
          (local.get $9)
          (i32.const 4)
         )
        )
        (drop
         (i32.load
          (local.get $9)
         )
        )
       )
      )
      (if
       (i32.gt_u
        (i32.add
         (local.get $7)
         (local.get $12)
        )
        (i32.const 1)
       )
       (block
        (local.set $10
         (local.get $2)
        )
        (local.set $9
         (local.get $13)
        )
        (loop $while-in8
         (br_if $label$break$L67
          (i32.eq
           (local.get $3)
           (local.get $10)
          )
         )
         (if
          (i32.eq
           (i32.load8_s
            (local.get $9)
           )
           (i32.const 2)
          )
          (if
           (i32.ne
            (if (result i32)
             (i32.lt_s
              (local.tee $8
               (i32.load8_s offset=11
                (local.get $10)
               )
              )
              (i32.const 0)
             )
             (i32.load offset=4
              (local.get $10)
             )
             (i32.and
              (local.get $8)
              (i32.const 255)
             )
            )
            (local.get $11)
           )
           (block
            (i32.store8
             (local.get $9)
             (i32.const 0)
            )
            (local.set $7
             (i32.add
              (local.get $7)
              (i32.const -1)
             )
            )
           )
          )
         )
         (local.set $10
          (i32.add
           (local.get $10)
           (i32.const 12)
          )
         )
         (local.set $9
          (i32.add
           (local.get $9)
           (i32.const 1)
          )
         )
         (br $while-in8)
        )
       )
      )
     )
    )
    (local.set $17
     (local.get $11)
    )
    (local.set $9
     (local.get $7)
    )
    (br $while-in1)
   )
  )
  (local.set $4
   (if (result i32)
    (local.get $11)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $11)
         )
        )
        (i32.load offset=16
         (local.get $11)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $11)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $11)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.get $7)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $0
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.load offset=16
          (local.get $7)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $7)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $0)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$0)
      )
      (br_if $__rjti$1
       (i32.eqz
        (local.get $4)
       )
      )
     )
     (br $__rjto$1)
    )
    (br_if $__rjti$1
     (local.get $4)
    )
    (br $__rjto$1)
   )
   (i32.store
    (local.get $5)
    (i32.or
     (i32.load
      (local.get $5)
     )
     (i32.const 2)
    )
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (loop $while-in14
     (br_if $__rjti$2
      (i32.eq
       (local.get $2)
       (local.get $3)
      )
     )
     (if
      (i32.ne
       (i32.load8_s
        (local.get $13)
       )
       (i32.const 2)
      )
      (block
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 12)
        )
       )
       (local.set $13
        (i32.add
         (local.get $13)
         (i32.const 1)
        )
       )
       (br $while-in14)
      )
     )
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $5)
    (i32.or
     (i32.load
      (local.get $5)
     )
     (i32.const 4)
    )
   )
   (local.set $2
    (local.get $3)
   )
  )
  (call $_free
   (local.get $18)
  )
  (global.set $STACKTOP
   (local.get $16)
  )
  (local.get $2)
 )
 (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (if
   (i32.and
    (i32.load offset=4
     (local.get $2)
    )
    (i32.const 1)
   )
   (block
    (i32.store
     (local.get $5)
     (local.tee $0
      (i32.load offset=28
       (local.get $2)
      )
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.add
      (i32.load offset=4
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (local.set $0
     (call $__ZNKSt3__26locale9use_facetERNS0_2idE
      (local.get $5)
      (i32.const 54416)
     )
    )
    (call $__ZNSt3__26localeD2Ev
     (local.get $5)
    )
    (local.set $2
     (i32.load
      (local.get $0)
     )
    )
    (call_indirect (type $i32_i32_=>_none)
     (local.get $5)
     (local.get $0)
     (i32.add
      (i32.and
       (if (result i32)
        (local.get $4)
        (i32.load offset=24
         (local.get $2)
        )
        (i32.load offset=28
         (local.get $2)
        )
       )
       (i32.const 63)
      )
      (i32.const 395)
     )
    )
    (local.set $3
     (select
      (local.tee $2
       (i32.load
        (local.get $5)
       )
      )
      (local.get $5)
      (i32.lt_s
       (local.tee $0
        (i32.load8_s offset=11
         (local.get $5)
        )
       )
       (i32.const 0)
      )
     )
    )
    (loop $while-in
     (if
      (i32.ne
       (i32.add
        (select
         (local.get $2)
         (local.get $5)
         (local.tee $2
          (i32.lt_s
           (i32.shr_s
            (i32.shl
             (local.get $0)
             (i32.const 24)
            )
            (i32.const 24)
           )
           (i32.const 0)
          )
         )
        )
        (select
         (i32.load offset=4
          (local.get $5)
         )
         (i32.and
          (local.get $0)
          (i32.const 255)
         )
         (local.get $2)
        )
       )
       (local.get $3)
      )
      (block
       (local.set $2
        (i32.load8_s
         (local.get $3)
        )
       )
       (if
        (local.tee $0
         (i32.load
          (local.get $1)
         )
        )
        (if
         (i32.eq
          (if (result i32)
           (i32.eq
            (local.tee $4
             (i32.load offset=24
              (local.get $0)
             )
            )
            (i32.load offset=28
             (local.get $0)
            )
           )
           (call_indirect (type $i32_i32_=>_i32)
            (local.get $0)
            (i32.and
             (local.get $2)
             (i32.const 255)
            )
            (i32.add
             (i32.and
              (i32.load offset=52
               (i32.load
                (local.get $0)
               )
              )
              (i32.const 15)
             )
             (i32.const 66)
            )
           )
           (block (result i32)
            (i32.store offset=24
             (local.get $0)
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (i32.store8
             (local.get $4)
             (local.get $2)
            )
            (i32.and
             (local.get $2)
             (i32.const 255)
            )
           )
          )
          (i32.const -1)
         )
         (i32.store
          (local.get $1)
          (i32.const 0)
         )
        )
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $0
        (i32.load8_s offset=11
         (local.get $5)
        )
       )
       (local.set $2
        (i32.load
         (local.get $5)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $0
     (i32.load
      (local.get $1)
     )
    )
    (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
     (local.get $5)
    )
   )
   (block
    (local.set $7
     (i32.load offset=24
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.load
      (local.get $1)
     )
    )
    (i32.store
     (local.get $5)
     (i32.load
      (local.get $6)
     )
    )
    (local.set $0
     (call_indirect (type $i32_i32_i32_i32_i32_=>_i32)
      (local.get $0)
      (local.get $5)
      (local.get $2)
      (local.get $3)
      (i32.and
       (local.get $4)
       (i32.const 1)
      )
      (i32.add
       (i32.and
        (local.get $7)
        (i32.const 31)
       )
       (i32.const 130)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $9
   (i32.add
    (local.get $0)
    (i32.const 12)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  (i32.store align=1
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 16)
    )
   )
   (i32.load align=1
    (i32.const 47571)
   )
  )
  (i32.store16 offset=4 align=1
   (local.get $5)
   (i32.load16_s align=1
    (i32.const 47575)
   )
  )
  (call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
   (i32.add
    (local.get $5)
    (i32.const 1)
   )
   (i32.const 47577)
   (i32.const 1)
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $7
   (i32.add
    (local.tee $11
     (i32.and
      (i32.shr_u
       (i32.load offset=4
        (local.get $2)
       )
       (i32.const 9)
      )
      (i32.const 1)
     )
    )
    (i32.const 13)
   )
  )
  (local.set $12
   (call $_llvm_stacksave)
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $7)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $8
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (local.get $0)
   (local.get $4)
  )
  (local.set $8
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $6)
    (local.tee $7
     (i32.add
      (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
       (local.get $6)
       (local.get $7)
       (local.get $8)
       (local.get $5)
       (local.get $0)
      )
      (local.get $6)
     )
    )
    (local.get $2)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.or
       (i32.shl
        (local.get $11)
        (i32.const 1)
       )
       (i32.const 24)
      )
      (i32.const 14)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (local.get $0)
   (local.tee $5
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $5)
   (i32.add
    (i32.load offset=4
     (local.get $5)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE
   (local.get $6)
   (local.get $8)
   (local.get $7)
   (local.get $4)
   (local.get $9)
   (local.get $10)
   (local.get $0)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $9)
   )
  )
  (local.set $6
   (i32.load
    (local.get $10)
   )
  )
  (i32.store
   (local.get $0)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $0)
    (local.get $4)
    (local.get $1)
    (local.get $6)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_llvm_stackrestore
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 24)
   )
  )
  (local.set $11
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (i64.store
   (local.get $0)
   (i64.const 37)
  )
  (call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
   (i32.const 47568)
   (i32.const 1)
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $7
   (i32.add
    (local.tee $8
     (i32.and
      (i32.shr_u
       (i32.load offset=4
        (local.get $2)
       )
       (i32.const 9)
      )
      (i32.const 1)
     )
    )
    (i32.const 23)
   )
  )
  (local.set $12
   (call $_llvm_stacksave)
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $7)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $9
   (call $__ZNSt3__26__clocEv)
  )
  (i64.store
   (local.get $5)
   (local.get $4)
  )
  (local.set $13
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $6)
    (local.tee $9
     (i32.add
      (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
       (local.get $6)
       (local.get $7)
       (local.get $9)
       (local.get $0)
       (local.get $5)
      )
      (local.get $6)
     )
    )
    (local.get $2)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.or
       (i32.shl
        (local.get $8)
        (i32.const 1)
       )
       (i32.const 44)
      )
      (i32.const 14)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $8
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $8)
   (i32.add
    (i32.load offset=4
     (local.get $8)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE
   (local.get $6)
   (local.get $13)
   (local.get $9)
   (local.get $7)
   (local.get $10)
   (local.get $11)
   (local.get $5)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $5)
  )
  (i32.store offset=20
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $10)
   )
  )
  (local.set $6
   (i32.load
    (local.get $11)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $5)
    (local.get $7)
    (local.get $1)
    (local.get $6)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_llvm_stackrestore
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $9
   (i32.add
    (local.get $0)
    (i32.const 12)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  (i32.store align=1
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 16)
    )
   )
   (i32.load align=1
    (i32.const 47571)
   )
  )
  (i32.store16 offset=4 align=1
   (local.get $5)
   (i32.load16_s align=1
    (i32.const 47575)
   )
  )
  (call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
   (i32.add
    (local.get $5)
    (i32.const 1)
   )
   (i32.const 47577)
   (i32.const 0)
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $7
   (i32.or
    (local.tee $11
     (i32.and
      (i32.shr_u
       (i32.load offset=4
        (local.get $2)
       )
       (i32.const 9)
      )
      (i32.const 1)
     )
    )
    (i32.const 12)
   )
  )
  (local.set $12
   (call $_llvm_stacksave)
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $7)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $8
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (local.get $0)
   (local.get $4)
  )
  (local.set $8
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $6)
    (local.tee $7
     (i32.add
      (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
       (local.get $6)
       (local.get $7)
       (local.get $8)
       (local.get $5)
       (local.get $0)
      )
      (local.get $6)
     )
    )
    (local.get $2)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.or
       (i32.shl
        (local.get $11)
        (i32.const 1)
       )
       (i32.const 21)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (local.get $0)
   (local.tee $5
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $5)
   (i32.add
    (i32.load offset=4
     (local.get $5)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE
   (local.get $6)
   (local.get $8)
   (local.get $7)
   (local.get $4)
   (local.get $9)
   (local.get $10)
   (local.get $0)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $9)
   )
  )
  (local.set $6
   (i32.load
    (local.get $10)
   )
  )
  (i32.store
   (local.get $0)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $0)
    (local.get $4)
    (local.get $1)
    (local.get $6)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_llvm_stackrestore
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 24)
   )
  )
  (local.set $11
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (i64.store
   (local.get $0)
   (i64.const 37)
  )
  (call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
   (i32.const 47568)
   (i32.const 0)
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $7
   (i32.add
    (local.tee $8
     (i32.or
      (i32.and
       (i32.shr_u
        (i32.load offset=4
         (local.get $2)
        )
        (i32.const 9)
       )
       (i32.const 1)
      )
      (i32.const 22)
     )
    )
    (i32.const 1)
   )
  )
  (local.set $12
   (call $_llvm_stacksave)
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $7)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $9
   (call $__ZNSt3__26__clocEv)
  )
  (i64.store
   (local.get $5)
   (local.get $4)
  )
  (local.set $13
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $6)
    (local.tee $9
     (i32.add
      (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
       (local.get $6)
       (local.get $7)
       (local.get $9)
       (local.get $0)
       (local.get $5)
      )
      (local.get $6)
     )
    )
    (local.get $2)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $8)
       (i32.const 1)
      )
      (i32.const 14)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $8
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $8)
   (i32.add
    (i32.load offset=4
     (local.get $8)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE
   (local.get $6)
   (local.get $13)
   (local.get $9)
   (local.get $7)
   (local.get $10)
   (local.get $11)
   (local.get $5)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $5)
  )
  (i32.store offset=20
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $10)
   )
  )
  (local.set $6
   (i32.load
    (local.get $11)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $5)
    (local.get $7)
    (local.get $1)
    (local.get $6)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_llvm_stackrestore
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f64) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 176)
   )
  )
  (local.set $8
   (i32.add
    (local.get $5)
    (i32.const 168)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 144)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 128)
   )
  )
  (local.set $16
   (i32.add
    (local.get $5)
    (i32.const 120)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 104)
   )
  )
  (local.set $11
   (i32.sub
    (local.get $5)
    (i32.const -64)
   )
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (i32.const 164)
   )
  )
  (local.set $0
   (local.get $5)
  )
  (local.set $17
   (i32.add
    (local.get $5)
    (i32.const 160)
   )
  )
  (local.set $18
   (i32.add
    (local.get $5)
    (i32.const 156)
   )
  )
  (i64.store
   (local.tee $9
    (i32.add
     (local.get $5)
     (i32.const 96)
    )
   )
   (i64.const 37)
  )
  (local.set $19
   (call $__ZNSt3__214__num_put_base14__format_floatEPcPKcj
    (i32.add
     (local.get $9)
     (i32.const 1)
    )
    (i32.const 55332)
    (i32.load offset=4
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.get $7)
   (local.get $11)
  )
  (local.set $20
   (call $__ZNSt3__26__clocEv)
  )
  (if
   (i32.gt_s
    (local.tee $6
     (if (result i32)
      (local.get $19)
      (block (result i32)
       (i32.store
        (local.get $6)
        (i32.load offset=8
         (local.get $2)
        )
       )
       (f64.store offset=8
        (local.get $6)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $11)
        (i32.const 30)
        (local.get $20)
        (local.get $9)
        (local.get $6)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $16)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $11)
        (i32.const 30)
        (local.get $20)
        (local.get $9)
        (local.get $16)
       )
      )
     )
    )
    (i32.const 29)
   )
   (block
    (local.set $6
     (call $__ZNSt3__26__clocEv)
    )
    (local.set $6
     (if (result i32)
      (local.get $19)
      (block (result i32)
       (i32.store
        (local.get $12)
        (i32.load offset=8
         (local.get $2)
        )
       )
       (f64.store offset=8
        (local.get $12)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        (local.get $7)
        (local.get $6)
        (local.get $9)
        (local.get $12)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $15)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        (local.get $7)
        (local.get $6)
        (local.get $9)
        (local.get $15)
       )
      )
     )
    )
    (if
     (local.tee $7
      (i32.load
       (local.get $7)
      )
     )
     (block
      (local.set $13
       (local.get $6)
      )
      (local.set $10
       (local.tee $21
        (local.get $7)
       )
      )
     )
     (call $_abort)
    )
   )
   (block
    (local.set $13
     (local.get $6)
    )
    (local.set $10
     (i32.load
      (local.get $7)
     )
    )
   )
  )
  (local.set $7
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $10)
    (local.tee $6
     (i32.add
      (local.get $10)
      (local.get $13)
     )
    )
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (local.get $10)
    (local.get $11)
   )
   (local.set $14
    (local.get $0)
   )
   (if
    (local.tee $0
     (call $_malloc
      (i32.shl
       (local.get $13)
       (i32.const 1)
      )
     )
    )
    (local.set $22
     (local.tee $14
      (local.get $0)
     )
    )
    (call $_abort)
   )
  )
  (i32.store
   (local.get $8)
   (local.tee $0
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE
   (local.get $10)
   (local.get $7)
   (local.get $6)
   (local.get $14)
   (local.get $17)
   (local.get $18)
   (local.get $8)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $8)
  )
  (i32.store offset=152
   (local.get $5)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $0
   (i32.load
    (local.get $17)
   )
  )
  (local.set $1
   (i32.load
    (local.get $18)
   )
  )
  (i32.store
   (local.get $8)
   (i32.load offset=152
    (local.get $5)
   )
  )
  (local.set $0
   (call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $8)
    (local.get $14)
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_free
   (local.get $22)
  )
  (call $_free
   (local.get $21)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f64) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 176)
   )
  )
  (local.set $8
   (i32.add
    (local.get $5)
    (i32.const 168)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 144)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 128)
   )
  )
  (local.set $16
   (i32.add
    (local.get $5)
    (i32.const 120)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 104)
   )
  )
  (local.set $11
   (i32.sub
    (local.get $5)
    (i32.const -64)
   )
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (i32.const 164)
   )
  )
  (local.set $0
   (local.get $5)
  )
  (local.set $17
   (i32.add
    (local.get $5)
    (i32.const 160)
   )
  )
  (local.set $18
   (i32.add
    (local.get $5)
    (i32.const 156)
   )
  )
  (i64.store
   (local.tee $9
    (i32.add
     (local.get $5)
     (i32.const 96)
    )
   )
   (i64.const 37)
  )
  (local.set $19
   (call $__ZNSt3__214__num_put_base14__format_floatEPcPKcj
    (i32.add
     (local.get $9)
     (i32.const 1)
    )
    (i32.const 47566)
    (i32.load offset=4
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.get $7)
   (local.get $11)
  )
  (local.set $20
   (call $__ZNSt3__26__clocEv)
  )
  (if
   (i32.gt_s
    (local.tee $6
     (if (result i32)
      (local.get $19)
      (block (result i32)
       (i32.store
        (local.get $6)
        (i32.load offset=8
         (local.get $2)
        )
       )
       (f64.store offset=8
        (local.get $6)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $11)
        (i32.const 30)
        (local.get $20)
        (local.get $9)
        (local.get $6)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $16)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $11)
        (i32.const 30)
        (local.get $20)
        (local.get $9)
        (local.get $16)
       )
      )
     )
    )
    (i32.const 29)
   )
   (block
    (local.set $6
     (call $__ZNSt3__26__clocEv)
    )
    (local.set $6
     (if (result i32)
      (local.get $19)
      (block (result i32)
       (i32.store
        (local.get $12)
        (i32.load offset=8
         (local.get $2)
        )
       )
       (f64.store offset=8
        (local.get $12)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        (local.get $7)
        (local.get $6)
        (local.get $9)
        (local.get $12)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $15)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        (local.get $7)
        (local.get $6)
        (local.get $9)
        (local.get $15)
       )
      )
     )
    )
    (if
     (local.tee $7
      (i32.load
       (local.get $7)
      )
     )
     (block
      (local.set $13
       (local.get $6)
      )
      (local.set $10
       (local.tee $21
        (local.get $7)
       )
      )
     )
     (call $_abort)
    )
   )
   (block
    (local.set $13
     (local.get $6)
    )
    (local.set $10
     (i32.load
      (local.get $7)
     )
    )
   )
  )
  (local.set $7
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $10)
    (local.tee $6
     (i32.add
      (local.get $10)
      (local.get $13)
     )
    )
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (local.get $10)
    (local.get $11)
   )
   (local.set $14
    (local.get $0)
   )
   (if
    (local.tee $0
     (call $_malloc
      (i32.shl
       (local.get $13)
       (i32.const 1)
      )
     )
    )
    (local.set $22
     (local.tee $14
      (local.get $0)
     )
    )
    (call $_abort)
   )
  )
  (i32.store
   (local.get $8)
   (local.tee $0
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE
   (local.get $10)
   (local.get $7)
   (local.get $6)
   (local.get $14)
   (local.get $17)
   (local.get $18)
   (local.get $8)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $8)
  )
  (i32.store offset=152
   (local.get $5)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $0
   (i32.load
    (local.get $17)
   )
  )
  (local.set $1
   (i32.load
    (local.get $18)
   )
  )
  (i32.store
   (local.get $8)
   (i32.load offset=152
    (local.get $5)
   )
  )
  (local.set $0
   (call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $8)
    (local.get $14)
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_free
   (local.get $22)
  )
  (call $_free
   (local.get $21)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 72)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 48)
   )
  )
  (i32.store align=1
   (local.tee $8
    (i32.add
     (local.get $0)
     (i32.const 80)
    )
   )
   (i32.load align=1
    (i32.const 47560)
   )
  )
  (i32.store16 offset=4 align=1
   (local.get $8)
   (i32.load16_s align=1
    (i32.const 47564)
   )
  )
  (local.set $6
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (local.get $5)
   (local.get $4)
  )
  (local.set $8
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $7)
    (local.tee $4
     (i32.add
      (local.tee $9
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $7)
        (i32.const 20)
        (local.get $6)
        (local.get $8)
        (local.get $5)
       )
      )
      (local.get $7)
     )
    )
    (local.get $2)
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $6
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.add
    (i32.load offset=4
     (local.get $6)
    )
    (i32.const 1)
   )
  )
  (local.set $6
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $5)
    (i32.const 54400)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $5)
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $6)
    (local.get $7)
    (local.get $4)
    (local.get $0)
    (i32.add
     (i32.and
      (i32.load offset=32
       (i32.load
        (local.get $6)
       )
      )
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (i32.store offset=76
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load offset=76
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $5)
    (local.get $0)
    (select
     (local.tee $1
      (i32.add
       (local.get $0)
       (local.get $9)
      )
     )
     (i32.add
      (i32.sub
       (local.get $8)
       (local.get $7)
      )
      (local.get $0)
     )
     (i32.eq
      (local.get $4)
      (local.get $8)
     )
    )
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $4)
  )
  (local.set $4
   (i32.load
    (i32.const 37316)
   )
  )
  (if
   (local.get $2)
   (i32.store
    (i32.const 37316)
    (select
     (i32.const 53288)
     (local.get $2)
     (i32.eq
      (local.get $2)
      (i32.const -1)
     )
    )
   )
  )
  (local.set $2
   (select
    (i32.const -1)
    (local.get $4)
    (i32.eq
     (local.get $4)
     (i32.const 53288)
    )
   )
  )
  (local.set $0
   (call $_vsnprintf
    (local.get $0)
    (local.get $1)
    (local.get $3)
    (local.get $5)
   )
  )
  (if
   (local.get $2)
   (block
    (drop
     (i32.load
      (i32.const 37316)
     )
    )
    (if
     (local.get $2)
     (i32.store
      (i32.const 37316)
      (select
       (i32.const 53288)
       (local.get $2)
       (i32.eq
        (local.get $2)
        (i32.const -1)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (block $__rjto$0
   (block $switch-case7
    (block $switch-case6
     (br_table $switch-case6 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $switch-case7 $__rjto$0
      (i32.sub
       (i32.shr_s
        (i32.shl
         (i32.and
          (i32.load offset=4
           (local.get $2)
          )
          (i32.const 176)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 16)
      )
     )
    )
    (block $switch0
     (block $switch-case1
      (br_table $switch-case1 $switch0 $switch-case1 $switch0
       (i32.sub
        (local.tee $2
         (i32.load8_s
          (local.get $0)
         )
        )
        (i32.const 43)
       )
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $__rjto$0)
    )
    (br_if $__rjto$0
     (i32.eqz
      (i32.and
       (i32.eq
        (local.get $2)
        (i32.const 48)
       )
       (i32.gt_s
        (i32.sub
         (local.get $1)
         (local.get $0)
        )
        (i32.const 1)
       )
      )
     )
    )
    (block $switch2
     (br_table $switch2 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $__rjto$0 $switch2 $__rjto$0
      (i32.sub
       (i32.load8_s offset=1
        (local.get $0)
       )
       (i32.const 88)
      )
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 2)
     )
    )
    (br $__rjto$0)
   )
   (local.set $0
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $__ZNSt3__214__num_put_base14__format_floatEPcPKcj (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.and
    (local.get $2)
    (i32.const 2048)
   )
   (block
    (i32.store8
     (local.get $0)
     (i32.const 43)
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 1)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $2)
    (i32.const 1024)
   )
   (block
    (i32.store8
     (local.get $0)
     (i32.const 35)
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 1)
     )
    )
   )
  )
  (local.set $5
   (if (result i32)
    (local.tee $4
     (i32.eq
      (local.tee $3
       (i32.and
        (local.get $2)
        (i32.const 260)
       )
      )
      (i32.const 260)
     )
    )
    (i32.const 0)
    (block (result i32)
     (i32.store8
      (local.get $0)
      (i32.const 46)
     )
     (i32.store8 offset=1
      (local.get $0)
      (i32.const 42)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 2)
      )
     )
     (i32.const 1)
    )
   )
  )
  (local.set $2
   (i32.and
    (local.get $2)
    (i32.const 16384)
   )
  )
  (loop $while-in
   (if
    (local.tee $6
     (i32.load8_s
      (local.get $1)
     )
    )
    (block
     (i32.store8
      (local.get $0)
      (local.get $6)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store8
   (local.get $0)
   (block $label$break$L14 (result i32)
    (block $switch-default
     (block $switch-case0
      (if
       (local.tee $1
        (i32.sub
         (local.get $3)
         (i32.const 4)
        )
       )
       (if
        (i32.eq
         (local.get $1)
         (i32.const 252)
        )
        (br $switch-case0)
        (br $switch-default)
       )
      )
      (br $label$break$L14
       (i32.xor
        (i32.and
         (i32.shr_u
          (local.get $2)
          (i32.const 9)
         )
         (i32.const 255)
        )
        (i32.const 102)
       )
      )
     )
     (br $label$break$L14
      (i32.xor
       (i32.and
        (i32.shr_u
         (local.get $2)
         (i32.const 9)
        )
        (i32.const 255)
       )
       (i32.const 101)
      )
     )
    )
    (local.set $1
     (i32.and
      (i32.shr_u
       (local.get $2)
       (i32.const 9)
      )
      (i32.const 255)
     )
    )
    (select
     (i32.xor
      (local.get $1)
      (i32.const 97)
     )
     (i32.xor
      (local.get $1)
      (i32.const 103)
     )
     (local.get $4)
    )
   )
  )
  (local.get $5)
 )
 (func $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $4)
   (local.get $3)
  )
  (local.set $3
   (i32.load
    (i32.const 37316)
   )
  )
  (if
   (local.get $1)
   (i32.store
    (i32.const 37316)
    (select
     (i32.const 53288)
     (local.get $1)
     (i32.eq
      (local.get $1)
      (i32.const -1)
     )
    )
   )
  )
  (local.set $1
   (select
    (i32.const -1)
    (local.get $3)
    (i32.eq
     (local.get $3)
     (i32.const 53288)
    )
   )
  )
  (local.set $0
   (call $_vasprintf
    (local.get $0)
    (local.get $2)
    (local.get $4)
   )
  )
  (if
   (local.get $1)
   (block
    (drop
     (i32.load
      (i32.const 37316)
     )
    )
    (if
     (local.get $1)
     (i32.store
      (i32.const 37316)
      (select
       (i32.const 53288)
       (local.get $1)
       (i32.eq
        (local.get $1)
        (i32.const -1)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $__ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $8
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $6)
    (i32.const 54400)
   )
  )
  (local.set $6
   (i32.load offset=20
    (i32.load
     (local.tee $13
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $6)
       (i32.const 54416)
      )
     )
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $11)
   (local.get $13)
   (i32.add
    (i32.and
     (local.get $6)
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $3)
  )
  (block $label$break$L12
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_s
      (i32.sub
       (local.tee $12
        (local.get $2)
       )
       (local.tee $2
        (block $switch (result i32)
         (block $switch-default
          (block $switch-case0
           (br_table $switch-case0 $switch-default $switch-case0 $switch-default
            (i32.sub
             (local.tee $2
              (i32.load8_s
               (local.get $0)
              )
             )
             (i32.const 43)
            )
           )
          )
          (local.set $2
           (call_indirect (type $i32_i32_=>_i32)
            (local.get $8)
            (local.get $2)
            (i32.add
             (i32.and
              (i32.load offset=28
               (i32.load
                (local.get $8)
               )
              )
              (i32.const 15)
             )
             (i32.const 66)
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (local.tee $6
             (i32.load
              (local.get $5)
             )
            )
            (i32.const 1)
           )
          )
          (i32.store8
           (local.get $6)
           (local.get $2)
          )
          (br $switch
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
         )
         (local.get $0)
        )
       )
      )
      (i32.const 1)
     )
    )
    (br_if $__rjti$0
     (i32.ne
      (i32.load8_s
       (local.get $2)
      )
      (i32.const 48)
     )
    )
    (block $switch1
     (br_table $switch1 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $switch1 $__rjti$0
      (i32.sub
       (i32.load8_s offset=1
        (local.get $2)
       )
       (i32.const 88)
      )
     )
    )
    (local.set $6
     (call_indirect (type $i32_i32_=>_i32)
      (local.get $8)
      (i32.const 48)
      (i32.add
       (i32.and
        (i32.load offset=28
         (i32.load
          (local.get $8)
         )
        )
        (i32.const 15)
       )
       (i32.const 66)
      )
     )
    )
    (i32.store
     (local.get $5)
     (i32.add
      (local.tee $7
       (i32.load
        (local.get $5)
       )
      )
      (i32.const 1)
     )
    )
    (i32.store8
     (local.get $7)
     (local.get $6)
    )
    (local.set $6
     (call_indirect (type $i32_i32_=>_i32)
      (local.get $8)
      (i32.load8_s offset=1
       (local.get $2)
      )
      (i32.add
       (i32.and
        (i32.load offset=28
         (i32.load
          (local.get $8)
         )
        )
        (i32.const 15)
       )
       (i32.const 66)
      )
     )
    )
    (i32.store
     (local.get $5)
     (i32.add
      (local.tee $7
       (i32.load
        (local.get $5)
       )
      )
      (i32.const 1)
     )
    )
    (i32.store8
     (local.get $7)
     (local.get $6)
    )
    (local.set $6
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 2)
      )
     )
    )
    (loop $while-in
     (if
      (i32.lt_u
       (local.get $6)
       (local.get $12)
      )
      (if
       (block (result i32)
        (local.set $7
         (i32.load8_s
          (local.get $6)
         )
        )
        (drop
         (call $__ZNSt3__26__clocEv)
        )
        (i32.or
         (i32.lt_u
          (i32.add
           (local.get $7)
           (i32.const -48)
          )
          (i32.const 10)
         )
         (i32.lt_u
          (i32.add
           (i32.or
            (local.get $7)
            (i32.const 32)
           )
           (i32.const -97)
          )
          (i32.const 6)
         )
        )
       )
       (block
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (br $while-in)
       )
      )
     )
    )
    (br $label$break$L12)
   )
   (local.set $7
    (local.get $2)
   )
   (local.set $6
    (loop $while-in7 (result i32)
     (if
      (i32.ge_u
       (local.get $7)
       (local.get $12)
      )
      (block
       (local.set $6
        (local.get $7)
       )
       (br $label$break$L12)
      )
     )
     (if (result i32)
      (block (result i32)
       (local.set $6
        (i32.load8_s
         (local.get $7)
        )
       )
       (drop
        (call $__ZNSt3__26__clocEv)
       )
       (i32.lt_u
        (i32.add
         (local.get $6)
         (i32.const -48)
        )
        (i32.const 10)
       )
      )
      (block
       (local.set $7
        (i32.add
         (local.get $7)
         (i32.const 1)
        )
       )
       (br $while-in7)
      )
      (local.get $7)
     )
    )
   )
  )
  (local.set $2
   (if (result i32)
    (select
     (i32.load offset=4
      (local.get $11)
     )
     (i32.and
      (local.tee $7
       (i32.load8_s offset=11
        (local.get $11)
       )
      )
      (i32.const 255)
     )
     (i32.lt_s
      (local.get $7)
      (i32.const 0)
     )
    )
    (block (result i32)
     (if
      (i32.ne
       (local.get $2)
       (local.get $6)
      )
      (block $label$break$L22
       (local.set $7
        (local.get $6)
       )
       (local.set $9
        (local.get $2)
       )
       (loop $while-in11
        (br_if $label$break$L22
         (i32.ge_u
          (local.get $9)
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const -1)
           )
          )
         )
        )
        (local.set $10
         (i32.load8_s
          (local.get $9)
         )
        )
        (i32.store8
         (local.get $9)
         (i32.load8_s
          (local.get $7)
         )
        )
        (i32.store8
         (local.get $7)
         (local.get $10)
        )
        (local.set $9
         (i32.add
          (local.get $9)
          (i32.const 1)
         )
        )
        (br $while-in11)
       )
      )
     )
     (local.set $15
      (call_indirect (type $i32_=>_i32)
       (local.get $13)
       (i32.and
        (i32.load offset=16
         (i32.load
          (local.get $13)
         )
        )
        (i32.const 63)
       )
      )
     )
     (local.set $9
      (local.get $2)
     )
     (local.set $10
      (i32.const 0)
     )
     (local.set $7
      (i32.const 0)
     )
     (loop $while-in13
      (if
       (i32.lt_u
        (local.get $9)
        (local.get $6)
       )
       (block
        (if
         (i32.and
          (i32.gt_s
           (local.tee $14
            (i32.load8_s
             (i32.add
              (local.get $7)
              (select
               (i32.load
                (local.get $11)
               )
               (local.get $11)
               (i32.lt_s
                (i32.load8_s offset=11
                 (local.get $11)
                )
                (i32.const 0)
               )
              )
             )
            )
           )
           (i32.const 0)
          )
          (i32.eq
           (local.get $10)
           (local.get $14)
          )
         )
         (block
          (i32.store
           (local.get $5)
           (i32.add
            (local.tee $10
             (i32.load
              (local.get $5)
             )
            )
            (i32.const 1)
           )
          )
          (i32.store8
           (local.get $10)
           (local.get $15)
          )
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.lt_u
             (local.get $7)
             (i32.add
              (select
               (i32.load offset=4
                (local.get $11)
               )
               (i32.and
                (local.tee $10
                 (i32.load8_s offset=11
                  (local.get $11)
                 )
                )
                (i32.const 255)
               )
               (i32.lt_s
                (local.get $10)
                (i32.const 0)
               )
              )
              (i32.const -1)
             )
            )
           )
          )
          (local.set $10
           (i32.const 0)
          )
         )
        )
        (local.set $14
         (call_indirect (type $i32_i32_=>_i32)
          (local.get $8)
          (i32.load8_s
           (local.get $9)
          )
          (i32.add
           (i32.and
            (i32.load offset=28
             (i32.load
              (local.get $8)
             )
            )
            (i32.const 15)
           )
           (i32.const 66)
          )
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.tee $16
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $16)
         (local.get $14)
        )
        (local.set $9
         (i32.add
          (local.get $9)
          (i32.const 1)
         )
        )
        (local.set $10
         (i32.add
          (local.get $10)
          (i32.const 1)
         )
        )
        (br $while-in13)
       )
      )
     )
     (if (result i32)
      (i32.eq
       (local.tee $7
        (i32.add
         (local.get $3)
         (i32.sub
          (local.get $2)
          (local.get $0)
         )
        )
       )
       (local.tee $2
        (i32.load
         (local.get $5)
        )
       )
      )
      (local.get $8)
      (loop $while-in15 (result i32)
       (if (result i32)
        (i32.lt_u
         (local.get $7)
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const -1)
          )
         )
        )
        (block
         (local.set $9
          (i32.load8_s
           (local.get $7)
          )
         )
         (i32.store8
          (local.get $7)
          (i32.load8_s
           (local.get $2)
          )
         )
         (i32.store8
          (local.get $2)
          (local.get $9)
         )
         (local.set $7
          (i32.add
           (local.get $7)
           (i32.const 1)
          )
         )
         (br $while-in15)
        )
        (local.get $8)
       )
      )
     )
    )
    (block (result i32)
     (drop
      (call_indirect (type $i32_i32_i32_i32_=>_i32)
       (local.get $8)
       (local.get $2)
       (local.get $6)
       (i32.load
        (local.get $5)
       )
       (i32.add
        (i32.and
         (i32.load offset=32
          (i32.load
           (local.get $8)
          )
         )
         (i32.const 7)
        )
        (i32.const 114)
       )
      )
     )
     (i32.store
      (local.get $5)
      (i32.add
       (i32.load
        (local.get $5)
       )
       (i32.sub
        (local.get $6)
        (local.get $2)
       )
      )
     )
     (local.get $8)
    )
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in17
     (if
      (i32.lt_u
       (local.get $6)
       (local.get $12)
      )
      (block
       (br_if $__rjti$1
        (i32.eq
         (local.tee $7
          (i32.load8_s
           (local.get $6)
          )
         )
         (i32.const 46)
        )
       )
       (local.set $7
        (call_indirect (type $i32_i32_=>_i32)
         (local.get $8)
         (local.get $7)
         (i32.add
          (i32.and
           (i32.load offset=28
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 15)
          )
          (i32.const 66)
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.tee $9
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $9)
        (local.get $7)
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (br $while-in17)
      )
     )
    )
    (br $__rjto$1)
   )
   (local.set $2
    (call_indirect (type $i32_=>_i32)
     (local.get $13)
     (i32.and
      (i32.load offset=12
       (i32.load
        (local.get $13)
       )
      )
      (i32.const 63)
     )
    )
   )
   (i32.store
    (local.get $5)
    (i32.add
     (local.tee $7
      (i32.load
       (local.get $5)
      )
     )
     (i32.const 1)
    )
   )
   (i32.store8
    (local.get $7)
    (local.get $2)
   )
   (local.set $6
    (i32.add
     (local.get $6)
     (i32.const 1)
    )
   )
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $8)
    (local.get $6)
    (local.get $12)
    (i32.load
     (local.get $5)
    )
    (i32.add
     (i32.and
      (i32.load offset=32
       (i32.load
        (local.get $8)
       )
      )
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $2
    (i32.add
     (i32.load
      (local.get $5)
     )
     (i32.sub
      (local.get $12)
      (local.get $6)
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (select
    (local.get $2)
    (i32.add
     (local.get $3)
     (i32.sub
      (local.get $1)
      (local.get $0)
     )
    )
    (i32.eq
     (local.get $1)
     (local.get $12)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $__ZNSt3__214__num_put_base12__format_intEPcPKcbj (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (if
   (i32.and
    (local.get $3)
    (i32.const 2048)
   )
   (block
    (i32.store8
     (local.get $0)
     (i32.const 43)
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 1)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $3)
    (i32.const 512)
   )
   (block
    (i32.store8
     (local.get $0)
     (i32.const 35)
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 1)
     )
    )
   )
  )
  (loop $while-in
   (if
    (local.tee $4
     (i32.load8_s
      (local.get $1)
     )
    )
    (block
     (i32.store8
      (local.get $0)
      (local.get $4)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store8
   (local.get $0)
   (block $switch (result i32)
    (block $switch-default
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
        (i32.sub
         (i32.and
          (local.get $3)
          (i32.const 74)
         )
         (i32.const 8)
        )
       )
      )
      (br $switch
       (i32.const 111)
      )
     )
     (br $switch
      (i32.xor
       (i32.and
        (i32.shr_u
         (local.get $3)
         (i32.const 9)
        )
        (i32.const 32)
       )
       (i32.const 120)
      )
     )
    )
    (select
     (i32.const 100)
     (i32.const 117)
     (local.get $2)
    )
   )
  )
 )
 (func $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $10
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $6)
    (i32.const 54400)
   )
  )
  (local.set $6
   (i32.load offset=20
    (i32.load
     (local.tee $11
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $6)
       (i32.const 54416)
      )
     )
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $9)
   (local.get $11)
   (i32.add
    (i32.and
     (local.get $6)
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $9)
    )
    (i32.and
     (local.tee $6
      (i32.load8_s offset=11
       (local.get $9)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $6)
     (i32.const 0)
    )
   )
   (block
    (i32.store
     (local.get $5)
     (local.get $3)
    )
    (block $switch
     (block $switch-default
      (block $switch-case0
       (br_table $switch-case0 $switch-default $switch-case0 $switch-default
        (i32.sub
         (local.tee $7
          (i32.load8_s
           (local.get $0)
          )
         )
         (i32.const 43)
        )
       )
      )
      (local.set $6
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (local.set $8
       (i32.load offset=28
        (i32.load
         (local.get $10)
        )
       )
      )
      (local.set $7
       (call_indirect (type $i32_i32_=>_i32)
        (local.get $10)
        (local.get $7)
        (i32.add
         (i32.and
          (local.get $8)
          (i32.const 15)
         )
         (i32.const 66)
        )
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.tee $8
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $8)
       (local.get $7)
      )
      (br $switch)
     )
     (local.set $6
      (local.get $0)
     )
    )
    (if
     (i32.gt_s
      (i32.sub
       (local.get $2)
       (local.get $6)
      )
      (i32.const 1)
     )
     (if
      (i32.eq
       (i32.load8_s
        (local.get $6)
       )
       (i32.const 48)
      )
      (block $label$break$L7
       (block $switch1
        (br_table $switch1 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $switch1 $label$break$L7
         (i32.sub
          (i32.load8_s offset=1
           (local.get $6)
          )
          (i32.const 88)
         )
        )
       )
       (local.set $7
        (i32.load offset=28
         (i32.load
          (local.get $10)
         )
        )
       )
       (local.set $7
        (call_indirect (type $i32_i32_=>_i32)
         (local.get $10)
         (i32.const 48)
         (i32.add
          (i32.and
           (local.get $7)
           (i32.const 15)
          )
          (i32.const 66)
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.tee $8
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $8)
        (local.get $7)
       )
       (local.set $7
        (i32.add
         (local.get $6)
         (i32.const 2)
        )
       )
       (local.set $8
        (i32.load offset=28
         (i32.load
          (local.get $10)
         )
        )
       )
       (local.set $6
        (call_indirect (type $i32_i32_=>_i32)
         (local.get $10)
         (i32.load8_s offset=1
          (local.get $6)
         )
         (i32.add
          (i32.and
           (local.get $8)
           (i32.const 15)
          )
          (i32.const 66)
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.tee $8
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $8)
        (local.get $6)
       )
       (local.set $6
        (local.get $7)
       )
      )
     )
    )
    (if
     (i32.ne
      (local.get $2)
      (local.get $6)
     )
     (block $label$break$L12
      (local.set $7
       (local.get $2)
      )
      (local.set $8
       (local.get $6)
      )
      (loop $while-in
       (br_if $label$break$L12
        (i32.ge_u
         (local.get $8)
         (local.tee $7
          (i32.add
           (local.get $7)
           (i32.const -1)
          )
         )
        )
       )
       (local.set $13
        (i32.load8_s
         (local.get $8)
        )
       )
       (i32.store8
        (local.get $8)
        (i32.load8_s
         (local.get $7)
        )
       )
       (i32.store8
        (local.get $7)
        (local.get $13)
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $7
     (i32.load offset=16
      (i32.load
       (local.get $11)
      )
     )
    )
    (local.set $13
     (call_indirect (type $i32_=>_i32)
      (local.get $11)
      (i32.and
       (local.get $7)
       (i32.const 63)
      )
     )
    )
    (local.set $8
     (local.get $6)
    )
    (local.set $7
     (i32.const 0)
    )
    (local.set $11
     (i32.const 0)
    )
    (loop $while-in7
     (if
      (i32.lt_u
       (local.get $8)
       (local.get $2)
      )
      (block
       (if
        (i32.and
         (i32.ne
          (local.tee $12
           (i32.load8_s
            (i32.add
             (local.get $7)
             (select
              (i32.load
               (local.get $9)
              )
              (local.get $9)
              (i32.lt_s
               (i32.load8_s offset=11
                (local.get $9)
               )
               (i32.const 0)
              )
             )
            )
           )
          )
          (i32.const 0)
         )
         (i32.eq
          (local.get $11)
          (local.get $12)
         )
        )
        (block
         (i32.store
          (local.get $5)
          (i32.add
           (local.tee $11
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $11)
          (local.get $13)
         )
         (local.set $7
          (i32.add
           (local.get $7)
           (i32.lt_u
            (local.get $7)
            (i32.add
             (select
              (i32.load offset=4
               (local.get $9)
              )
              (i32.and
               (local.tee $7
                (i32.load8_s offset=11
                 (local.get $9)
                )
               )
               (i32.const 255)
              )
              (i32.lt_s
               (local.get $7)
               (i32.const 0)
              )
             )
             (i32.const -1)
            )
           )
          )
         )
         (local.set $11
          (i32.const 0)
         )
        )
       )
       (local.set $12
        (i32.load offset=28
         (i32.load
          (local.get $10)
         )
        )
       )
       (local.set $12
        (call_indirect (type $i32_i32_=>_i32)
         (local.get $10)
         (i32.load8_s
          (local.get $8)
         )
         (i32.add
          (i32.and
           (local.get $12)
           (i32.const 15)
          )
          (i32.const 66)
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.tee $14
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $14)
        (local.get $12)
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (local.set $11
        (i32.add
         (local.get $11)
         (i32.const 1)
        )
       )
       (br $while-in7)
      )
     )
    )
    (local.set $5
     (if (result i32)
      (i32.eq
       (local.tee $7
        (i32.add
         (local.get $3)
         (i32.sub
          (local.get $6)
          (local.get $0)
         )
        )
       )
       (local.tee $6
        (i32.load
         (local.get $5)
        )
       )
      )
      (local.get $7)
      (block (result i32)
       (loop $while-in9
        (if
         (i32.lt_u
          (local.get $7)
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const -1)
           )
          )
         )
         (block
          (local.set $8
           (i32.load8_s
            (local.get $7)
           )
          )
          (i32.store8
           (local.get $7)
           (i32.load8_s
            (local.get $6)
           )
          )
          (i32.store8
           (local.get $6)
           (local.get $8)
          )
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (br $while-in9)
         )
        )
       )
       (i32.load
        (local.get $5)
       )
      )
     )
    )
   )
   (block
    (local.set $6
     (i32.load offset=32
      (i32.load
       (local.get $10)
      )
     )
    )
    (drop
     (call_indirect (type $i32_i32_i32_i32_=>_i32)
      (local.get $10)
      (local.get $0)
      (local.get $2)
      (local.get $3)
      (i32.add
       (i32.and
        (local.get $6)
        (i32.const 7)
       )
       (i32.const 114)
      )
     )
    )
    (i32.store
     (local.get $5)
     (local.tee $5
      (i32.add
       (local.get $3)
       (i32.sub
        (local.get $2)
        (local.get $0)
       )
      )
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (select
    (local.get $5)
    (i32.add
     (local.get $3)
     (i32.sub
      (local.get $1)
      (local.get $0)
     )
    )
    (i32.eq
     (local.get $1)
     (local.get $2)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $9)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (if
   (i32.and
    (i32.load offset=4
     (local.get $2)
    )
    (i32.const 1)
   )
   (block
    (i32.store
     (local.get $5)
     (local.tee $0
      (i32.load offset=28
       (local.get $2)
      )
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.add
      (i32.load offset=4
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (local.set $0
     (call $__ZNKSt3__26locale9use_facetERNS0_2idE
      (local.get $5)
      (i32.const 54440)
     )
    )
    (call $__ZNSt3__26localeD2Ev
     (local.get $5)
    )
    (local.set $2
     (i32.load
      (local.get $0)
     )
    )
    (call_indirect (type $i32_i32_=>_none)
     (local.get $5)
     (local.get $0)
     (i32.add
      (i32.and
       (if (result i32)
        (local.get $4)
        (i32.load offset=24
         (local.get $2)
        )
        (i32.load offset=28
         (local.get $2)
        )
       )
       (i32.const 63)
      )
      (i32.const 395)
     )
    )
    (local.set $3
     (select
      (local.tee $2
       (i32.load
        (local.get $5)
       )
      )
      (local.get $5)
      (i32.lt_s
       (local.tee $0
        (i32.load8_s offset=11
         (local.get $5)
        )
       )
       (i32.const 0)
      )
     )
    )
    (loop $while-in
     (if
      (i32.ne
       (i32.add
        (i32.shl
         (select
          (i32.load offset=4
           (local.get $5)
          )
          (i32.and
           (local.get $0)
           (i32.const 255)
          )
          (local.tee $0
           (i32.lt_s
            (i32.shr_s
             (i32.shl
              (local.get $0)
              (i32.const 24)
             )
             (i32.const 24)
            )
            (i32.const 0)
           )
          )
         )
         (i32.const 2)
        )
        (select
         (local.get $2)
         (local.get $5)
         (local.get $0)
        )
       )
       (local.get $3)
      )
      (block
       (local.set $2
        (i32.load
         (local.get $3)
        )
       )
       (if
        (local.tee $0
         (i32.load
          (local.get $1)
         )
        )
        (if
         (i32.eq
          (if (result i32)
           (i32.eq
            (local.tee $4
             (i32.load offset=24
              (local.get $0)
             )
            )
            (i32.load offset=28
             (local.get $0)
            )
           )
           (call_indirect (type $i32_i32_=>_i32)
            (local.get $0)
            (local.get $2)
            (i32.add
             (i32.and
              (i32.load offset=52
               (i32.load
                (local.get $0)
               )
              )
              (i32.const 15)
             )
             (i32.const 66)
            )
           )
           (block (result i32)
            (i32.store offset=24
             (local.get $0)
             (i32.add
              (local.get $4)
              (i32.const 4)
             )
            )
            (i32.store
             (local.get $4)
             (local.get $2)
            )
            (local.get $2)
           )
          )
          (i32.const -1)
         )
         (i32.store
          (local.get $1)
          (i32.const 0)
         )
        )
       )
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 4)
        )
       )
       (local.set $0
        (i32.load8_s offset=11
         (local.get $5)
        )
       )
       (local.set $2
        (i32.load
         (local.get $5)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $0
     (i32.load
      (local.get $1)
     )
    )
    (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
     (local.get $5)
    )
   )
   (block
    (local.set $7
     (i32.load offset=24
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.store
     (local.get $6)
     (i32.load
      (local.get $1)
     )
    )
    (i32.store
     (local.get $5)
     (i32.load
      (local.get $6)
     )
    )
    (local.set $0
     (call_indirect (type $i32_i32_i32_i32_i32_=>_i32)
      (local.get $0)
      (local.get $5)
      (local.get $2)
      (local.get $3)
      (i32.and
       (local.get $4)
       (i32.const 1)
      )
      (i32.add
       (i32.and
        (local.get $7)
        (i32.const 31)
       )
       (i32.const 130)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $9
   (i32.add
    (local.get $0)
    (i32.const 12)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  (i32.store align=1
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 16)
    )
   )
   (i32.load align=1
    (i32.const 47571)
   )
  )
  (i32.store16 offset=4 align=1
   (local.get $5)
   (i32.load16_s align=1
    (i32.const 47575)
   )
  )
  (call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
   (i32.add
    (local.get $5)
    (i32.const 1)
   )
   (i32.const 47577)
   (i32.const 1)
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $7
   (i32.add
    (local.tee $11
     (i32.and
      (i32.shr_u
       (i32.load offset=4
        (local.get $2)
       )
       (i32.const 9)
      )
      (i32.const 1)
     )
    )
    (i32.const 13)
   )
  )
  (local.set $12
   (call $_llvm_stacksave)
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $7)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $8
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (local.get $0)
   (local.get $4)
  )
  (local.set $8
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $6)
    (local.tee $7
     (i32.add
      (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
       (local.get $6)
       (local.get $7)
       (local.get $8)
       (local.get $5)
       (local.get $0)
      )
      (local.get $6)
     )
    )
    (local.get $2)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.or
        (i32.shl
         (local.get $11)
         (i32.const 1)
        )
        (i32.const 24)
       )
       (i32.const 2)
      )
      (i32.const 11)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (local.get $0)
   (local.tee $5
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $5)
   (i32.add
    (i32.load offset=4
     (local.get $5)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE
   (local.get $6)
   (local.get $8)
   (local.get $7)
   (local.get $4)
   (local.get $9)
   (local.get $10)
   (local.get $0)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $9)
   )
  )
  (local.set $6
   (i32.load
    (local.get $10)
   )
  )
  (i32.store
   (local.get $0)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $0)
    (local.get $4)
    (local.get $1)
    (local.get $6)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_llvm_stackrestore
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 24)
   )
  )
  (local.set $11
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (i64.store
   (local.get $0)
   (i64.const 37)
  )
  (call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
   (i32.const 47568)
   (i32.const 1)
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $7
   (i32.add
    (local.tee $8
     (i32.and
      (i32.shr_u
       (i32.load offset=4
        (local.get $2)
       )
       (i32.const 9)
      )
      (i32.const 1)
     )
    )
    (i32.const 23)
   )
  )
  (local.set $12
   (call $_llvm_stacksave)
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $7)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $9
   (call $__ZNSt3__26__clocEv)
  )
  (i64.store
   (local.get $5)
   (local.get $4)
  )
  (local.set $13
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $6)
    (local.tee $9
     (i32.add
      (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
       (local.get $6)
       (local.get $7)
       (local.get $9)
       (local.get $0)
       (local.get $5)
      )
      (local.get $6)
     )
    )
    (local.get $2)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.or
        (i32.shl
         (local.get $8)
         (i32.const 1)
        )
        (i32.const 44)
       )
       (i32.const 2)
      )
      (i32.const 11)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $8
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $8)
   (i32.add
    (i32.load offset=4
     (local.get $8)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE
   (local.get $6)
   (local.get $13)
   (local.get $9)
   (local.get $7)
   (local.get $10)
   (local.get $11)
   (local.get $5)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $5)
  )
  (i32.store offset=20
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $10)
   )
  )
  (local.set $6
   (i32.load
    (local.get $11)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $5)
    (local.get $7)
    (local.get $1)
    (local.get $6)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_llvm_stackrestore
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $9
   (i32.add
    (local.get $0)
    (i32.const 12)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  (i32.store align=1
   (local.tee $5
    (i32.add
     (local.get $0)
     (i32.const 16)
    )
   )
   (i32.load align=1
    (i32.const 47571)
   )
  )
  (i32.store16 offset=4 align=1
   (local.get $5)
   (i32.load16_s align=1
    (i32.const 47575)
   )
  )
  (call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
   (i32.add
    (local.get $5)
    (i32.const 1)
   )
   (i32.const 47577)
   (i32.const 0)
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $7
   (i32.or
    (local.tee $11
     (i32.and
      (i32.shr_u
       (i32.load offset=4
        (local.get $2)
       )
       (i32.const 9)
      )
      (i32.const 1)
     )
    )
    (i32.const 12)
   )
  )
  (local.set $12
   (call $_llvm_stacksave)
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $7)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $8
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (local.get $0)
   (local.get $4)
  )
  (local.set $8
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $6)
    (local.tee $7
     (i32.add
      (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
       (local.get $6)
       (local.get $7)
       (local.get $8)
       (local.get $5)
       (local.get $0)
      )
      (local.get $6)
     )
    )
    (local.get $2)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (i32.or
        (i32.shl
         (local.get $11)
         (i32.const 1)
        )
        (i32.const 21)
       )
       (i32.const 2)
      )
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (local.get $0)
   (local.tee $5
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $5)
   (i32.add
    (i32.load offset=4
     (local.get $5)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE
   (local.get $6)
   (local.get $8)
   (local.get $7)
   (local.get $4)
   (local.get $9)
   (local.get $10)
   (local.get $0)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $9)
   )
  )
  (local.set $6
   (i32.load
    (local.get $10)
   )
  )
  (i32.store
   (local.get $0)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $0)
    (local.get $4)
    (local.get $1)
    (local.get $6)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_llvm_stackrestore
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 24)
   )
  )
  (local.set $11
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (i64.store
   (local.get $0)
   (i64.const 37)
  )
  (call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
   (i32.const 47568)
   (i32.const 0)
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $7
   (i32.add
    (local.tee $8
     (i32.or
      (i32.and
       (i32.shr_u
        (i32.load offset=4
         (local.get $2)
        )
        (i32.const 9)
       )
       (i32.const 1)
      )
      (i32.const 22)
     )
    )
    (i32.const 1)
   )
  )
  (local.set $12
   (call $_llvm_stacksave)
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (local.get $7)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
  )
  (local.set $9
   (call $__ZNSt3__26__clocEv)
  )
  (i64.store
   (local.get $5)
   (local.get $4)
  )
  (local.set $13
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $6)
    (local.tee $9
     (i32.add
      (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
       (local.get $6)
       (local.get $7)
       (local.get $9)
       (local.get $0)
       (local.get $5)
      )
      (local.get $6)
     )
    )
    (local.get $2)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.and
     (i32.add
      (i32.shl
       (local.get $8)
       (i32.const 3)
      )
      (i32.const 11)
     )
     (i32.const -16)
    )
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $8
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $8)
   (i32.add
    (i32.load offset=4
     (local.get $8)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE
   (local.get $6)
   (local.get $13)
   (local.get $9)
   (local.get $7)
   (local.get $10)
   (local.get $11)
   (local.get $5)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $5)
  )
  (i32.store offset=20
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $10)
   )
  )
  (local.set $6
   (i32.load
    (local.get $11)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $5)
    (local.get $7)
    (local.get $1)
    (local.get $6)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_llvm_stackrestore
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f64) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 352)
   )
  )
  (local.set $8
   (i32.add
    (local.get $5)
    (i32.const 344)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 320)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 304)
   )
  )
  (local.set $16
   (i32.add
    (local.get $5)
    (i32.const 296)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 280)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 240)
   )
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (i32.const 340)
   )
  )
  (local.set $0
   (local.get $5)
  )
  (local.set $17
   (i32.add
    (local.get $5)
    (i32.const 336)
   )
  )
  (local.set $18
   (i32.add
    (local.get $5)
    (i32.const 332)
   )
  )
  (i64.store
   (local.tee $9
    (i32.add
     (local.get $5)
     (i32.const 272)
    )
   )
   (i64.const 37)
  )
  (local.set $19
   (call $__ZNSt3__214__num_put_base14__format_floatEPcPKcj
    (i32.add
     (local.get $9)
     (i32.const 1)
    )
    (i32.const 55332)
    (i32.load offset=4
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.get $7)
   (local.get $12)
  )
  (local.set $20
   (call $__ZNSt3__26__clocEv)
  )
  (if
   (i32.gt_s
    (local.tee $6
     (if (result i32)
      (local.get $19)
      (block (result i32)
       (i32.store
        (local.get $6)
        (i32.load offset=8
         (local.get $2)
        )
       )
       (f64.store offset=8
        (local.get $6)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $12)
        (i32.const 30)
        (local.get $20)
        (local.get $9)
        (local.get $6)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $16)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $12)
        (i32.const 30)
        (local.get $20)
        (local.get $9)
        (local.get $16)
       )
      )
     )
    )
    (i32.const 29)
   )
   (block
    (local.set $6
     (call $__ZNSt3__26__clocEv)
    )
    (local.set $6
     (if (result i32)
      (local.get $19)
      (block (result i32)
       (i32.store
        (local.get $13)
        (i32.load offset=8
         (local.get $2)
        )
       )
       (f64.store offset=8
        (local.get $13)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        (local.get $7)
        (local.get $6)
        (local.get $9)
        (local.get $13)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $15)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        (local.get $7)
        (local.get $6)
        (local.get $9)
        (local.get $15)
       )
      )
     )
    )
    (if
     (local.tee $7
      (i32.load
       (local.get $7)
      )
     )
     (block
      (local.set $10
       (local.get $6)
      )
      (local.set $11
       (local.tee $21
        (local.get $7)
       )
      )
     )
     (call $_abort)
    )
   )
   (block
    (local.set $10
     (local.get $6)
    )
    (local.set $11
     (i32.load
      (local.get $7)
     )
    )
   )
  )
  (local.set $7
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $11)
    (local.tee $6
     (i32.add
      (local.get $10)
      (local.get $11)
     )
    )
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (local.get $11)
    (local.get $12)
   )
   (block
    (local.set $14
     (local.get $0)
    )
    (local.set $22
     (i32.const 1)
    )
   )
   (if
    (local.tee $0
     (call $_malloc
      (i32.shl
       (local.get $10)
       (i32.const 3)
      )
     )
    )
    (local.set $23
     (local.tee $14
      (local.get $0)
     )
    )
    (call $_abort)
   )
  )
  (i32.store
   (local.get $8)
   (local.tee $0
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE
   (local.get $11)
   (local.get $7)
   (local.get $6)
   (local.get $14)
   (local.get $17)
   (local.get $18)
   (local.get $8)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $8)
  )
  (i32.store offset=328
   (local.get $5)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $0
   (i32.load
    (local.get $17)
   )
  )
  (local.set $10
   (i32.load
    (local.get $18)
   )
  )
  (i32.store
   (local.get $8)
   (i32.load offset=328
    (local.get $5)
   )
  )
  (i32.store
   (local.get $1)
   (local.tee $0
    (call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
     (local.get $8)
     (local.get $14)
     (local.get $0)
     (local.get $10)
     (local.get $2)
     (local.get $3)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $22)
   )
   (call $_free
    (local.get $23)
   )
  )
  (call $_free
   (local.get $21)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f64) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 352)
   )
  )
  (local.set $8
   (i32.add
    (local.get $5)
    (i32.const 344)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 320)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 304)
   )
  )
  (local.set $16
   (i32.add
    (local.get $5)
    (i32.const 296)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 280)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 240)
   )
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (i32.const 340)
   )
  )
  (local.set $0
   (local.get $5)
  )
  (local.set $17
   (i32.add
    (local.get $5)
    (i32.const 336)
   )
  )
  (local.set $18
   (i32.add
    (local.get $5)
    (i32.const 332)
   )
  )
  (i64.store
   (local.tee $9
    (i32.add
     (local.get $5)
     (i32.const 272)
    )
   )
   (i64.const 37)
  )
  (local.set $19
   (call $__ZNSt3__214__num_put_base14__format_floatEPcPKcj
    (i32.add
     (local.get $9)
     (i32.const 1)
    )
    (i32.const 47566)
    (i32.load offset=4
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.get $7)
   (local.get $12)
  )
  (local.set $20
   (call $__ZNSt3__26__clocEv)
  )
  (if
   (i32.gt_s
    (local.tee $6
     (if (result i32)
      (local.get $19)
      (block (result i32)
       (i32.store
        (local.get $6)
        (i32.load offset=8
         (local.get $2)
        )
       )
       (f64.store offset=8
        (local.get $6)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $12)
        (i32.const 30)
        (local.get $20)
        (local.get $9)
        (local.get $6)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $16)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $12)
        (i32.const 30)
        (local.get $20)
        (local.get $9)
        (local.get $16)
       )
      )
     )
    )
    (i32.const 29)
   )
   (block
    (local.set $6
     (call $__ZNSt3__26__clocEv)
    )
    (local.set $6
     (if (result i32)
      (local.get $19)
      (block (result i32)
       (i32.store
        (local.get $13)
        (i32.load offset=8
         (local.get $2)
        )
       )
       (f64.store offset=8
        (local.get $13)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        (local.get $7)
        (local.get $6)
        (local.get $9)
        (local.get $13)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $15)
        (local.get $4)
       )
       (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        (local.get $7)
        (local.get $6)
        (local.get $9)
        (local.get $15)
       )
      )
     )
    )
    (if
     (local.tee $7
      (i32.load
       (local.get $7)
      )
     )
     (block
      (local.set $10
       (local.get $6)
      )
      (local.set $11
       (local.tee $21
        (local.get $7)
       )
      )
     )
     (call $_abort)
    )
   )
   (block
    (local.set $10
     (local.get $6)
    )
    (local.set $11
     (i32.load
      (local.get $7)
     )
    )
   )
  )
  (local.set $7
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $11)
    (local.tee $6
     (i32.add
      (local.get $10)
      (local.get $11)
     )
    )
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (local.get $11)
    (local.get $12)
   )
   (block
    (local.set $14
     (local.get $0)
    )
    (local.set $22
     (i32.const 1)
    )
   )
   (if
    (local.tee $0
     (call $_malloc
      (i32.shl
       (local.get $10)
       (i32.const 3)
      )
     )
    )
    (local.set $23
     (local.tee $14
      (local.get $0)
     )
    )
    (call $_abort)
   )
  )
  (i32.store
   (local.get $8)
   (local.tee $0
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (call $__ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE
   (local.get $11)
   (local.get $7)
   (local.get $6)
   (local.get $14)
   (local.get $17)
   (local.get $18)
   (local.get $8)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $8)
  )
  (i32.store offset=328
   (local.get $5)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $0
   (i32.load
    (local.get $17)
   )
  )
  (local.set $10
   (i32.load
    (local.get $18)
   )
  )
  (i32.store
   (local.get $8)
   (i32.load offset=328
    (local.get $5)
   )
  )
  (i32.store
   (local.get $1)
   (local.tee $0
    (call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
     (local.get $8)
     (local.get $14)
     (local.get $0)
     (local.get $10)
     (local.get $2)
     (local.get $3)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $22)
   )
   (call $_free
    (local.get $23)
   )
  )
  (call $_free
   (local.get $21)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 208)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 184)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 160)
   )
  )
  (i32.store align=1
   (local.tee $8
    (i32.add
     (local.get $0)
     (i32.const 192)
    )
   )
   (i32.load align=1
    (i32.const 47560)
   )
  )
  (i32.store16 offset=4 align=1
   (local.get $8)
   (i32.load16_s align=1
    (i32.const 47564)
   )
  )
  (local.set $6
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (local.get $5)
   (local.get $4)
  )
  (local.set $8
   (call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    (local.get $7)
    (local.tee $4
     (i32.add
      (local.tee $9
       (call $__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz
        (local.get $7)
        (i32.const 20)
        (local.get $6)
        (local.get $8)
        (local.get $5)
       )
      )
      (local.get $7)
     )
    )
    (local.get $2)
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $6
    (i32.load offset=28
     (local.get $2)
    )
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.add
    (i32.load offset=4
     (local.get $6)
    )
    (i32.const 1)
   )
  )
  (local.set $6
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $5)
    (i32.const 54432)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $5)
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $6)
    (local.get $7)
    (local.get $4)
    (local.get $0)
    (i32.add
     (i32.and
      (i32.load offset=48
       (i32.load
        (local.get $6)
       )
      )
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (i32.store offset=188
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load offset=188
    (local.get $0)
   )
  )
  (local.set $1
   (call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $5)
    (local.get $0)
    (select
     (local.tee $1
      (i32.add
       (i32.shl
        (local.get $9)
        (i32.const 2)
       )
       (local.get $0)
      )
     )
     (i32.add
      (i32.shl
       (i32.sub
        (local.get $8)
        (local.get $7)
       )
       (i32.const 2)
      )
      (local.get $0)
     )
     (i32.eq
      (local.get $4)
      (local.get $8)
     )
    )
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $1)
 )
 (func $__ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $10
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $6)
    (i32.const 54432)
   )
  )
  (local.set $6
   (i32.load offset=20
    (i32.load
     (local.tee $13
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $6)
       (i32.const 54440)
      )
     )
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $11)
   (local.get $13)
   (i32.add
    (i32.and
     (local.get $6)
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $3)
  )
  (block $label$break$L12
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_s
      (i32.sub
       (local.tee $12
        (local.get $2)
       )
       (local.tee $6
        (block $switch (result i32)
         (block $switch-default
          (block $switch-case0
           (br_table $switch-case0 $switch-default $switch-case0 $switch-default
            (i32.sub
             (local.tee $2
              (i32.load8_s
               (local.get $0)
              )
             )
             (i32.const 43)
            )
           )
          )
          (local.set $2
           (call_indirect (type $i32_i32_=>_i32)
            (local.get $10)
            (local.get $2)
            (i32.add
             (i32.and
              (i32.load offset=44
               (i32.load
                (local.get $10)
               )
              )
              (i32.const 15)
             )
             (i32.const 66)
            )
           )
          )
          (i32.store
           (local.get $5)
           (i32.add
            (local.tee $6
             (i32.load
              (local.get $5)
             )
            )
            (i32.const 4)
           )
          )
          (i32.store
           (local.get $6)
           (local.get $2)
          )
          (br $switch
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
         )
         (local.get $0)
        )
       )
      )
      (i32.const 1)
     )
    )
    (local.set $2
     (block $label$break$L4 (result i32)
      (br_if $__rjti$0
       (i32.ne
        (i32.load8_s
         (local.get $6)
        )
        (i32.const 48)
       )
      )
      (block $switch1
       (br_table $switch1 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $switch1 $__rjti$0
        (i32.sub
         (i32.load8_s offset=1
          (local.get $6)
         )
         (i32.const 88)
        )
       )
      )
      (local.set $2
       (call_indirect (type $i32_i32_=>_i32)
        (local.get $10)
        (i32.const 48)
        (i32.add
         (i32.and
          (i32.load offset=44
           (i32.load
            (local.get $10)
           )
          )
          (i32.const 15)
         )
         (i32.const 66)
        )
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.tee $7
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 4)
       )
      )
      (i32.store
       (local.get $7)
       (local.get $2)
      )
      (local.set $2
       (call_indirect (type $i32_i32_=>_i32)
        (local.get $10)
        (i32.load8_s offset=1
         (local.get $6)
        )
        (i32.add
         (i32.and
          (i32.load offset=44
           (i32.load
            (local.get $10)
           )
          )
          (i32.const 15)
         )
         (i32.const 66)
        )
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.tee $7
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 4)
       )
      )
      (i32.store
       (local.get $7)
       (local.get $2)
      )
      (local.set $7
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 2)
        )
       )
      )
      (loop $while-in (result i32)
       (drop
        (br_if $label$break$L4
         (local.get $7)
         (i32.ge_u
          (local.get $7)
          (local.get $12)
         )
        )
       )
       (if (result i32)
        (block (result i32)
         (local.set $2
          (i32.load8_s
           (local.get $7)
          )
         )
         (drop
          (call $__ZNSt3__26__clocEv)
         )
         (i32.or
          (i32.lt_u
           (i32.add
            (local.get $2)
            (i32.const -48)
           )
           (i32.const 10)
          )
          (i32.lt_u
           (i32.add
            (i32.or
             (local.get $2)
             (i32.const 32)
            )
            (i32.const -97)
           )
           (i32.const 6)
          )
         )
        )
        (block
         (local.set $7
          (i32.add
           (local.get $7)
           (i32.const 1)
          )
         )
         (br $while-in)
        )
        (local.get $7)
       )
      )
     )
    )
    (br $label$break$L12)
   )
   (local.set $2
    (local.get $6)
   )
   (loop $while-in7
    (br_if $label$break$L12
     (i32.ge_u
      (local.get $2)
      (local.get $12)
     )
    )
    (if
     (block (result i32)
      (local.set $7
       (i32.load8_s
        (local.get $2)
       )
      )
      (drop
       (call $__ZNSt3__26__clocEv)
      )
      (i32.lt_u
       (i32.add
        (local.get $7)
        (i32.const -48)
       )
       (i32.const 10)
      )
     )
     (block
      (local.set $2
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (br $while-in7)
     )
    )
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $11)
    )
    (i32.and
     (local.tee $7
      (i32.load8_s offset=11
       (local.get $11)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $7)
     (i32.const 0)
    )
   )
   (block
    (if
     (i32.ne
      (local.get $2)
      (local.get $6)
     )
     (block $label$break$L22
      (local.set $7
       (local.get $2)
      )
      (local.set $8
       (local.get $6)
      )
      (loop $while-in11
       (br_if $label$break$L22
        (i32.ge_u
         (local.get $8)
         (local.tee $7
          (i32.add
           (local.get $7)
           (i32.const -1)
          )
         )
        )
       )
       (local.set $9
        (i32.load8_s
         (local.get $8)
        )
       )
       (i32.store8
        (local.get $8)
        (i32.load8_s
         (local.get $7)
        )
       )
       (i32.store8
        (local.get $7)
        (local.get $9)
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (br $while-in11)
      )
     )
    )
    (local.set $15
     (call_indirect (type $i32_=>_i32)
      (local.get $13)
      (i32.and
       (i32.load offset=16
        (i32.load
         (local.get $13)
        )
       )
       (i32.const 63)
      )
     )
    )
    (local.set $9
     (local.get $6)
    )
    (local.set $7
     (i32.const 0)
    )
    (local.set $8
     (i32.const 0)
    )
    (loop $while-in13
     (if
      (i32.lt_u
       (local.get $9)
       (local.get $2)
      )
      (block
       (if
        (i32.and
         (i32.gt_s
          (local.tee $14
           (i32.load8_s
            (i32.add
             (local.get $7)
             (select
              (i32.load
               (local.get $11)
              )
              (local.get $11)
              (i32.lt_s
               (i32.load8_s offset=11
                (local.get $11)
               )
               (i32.const 0)
              )
             )
            )
           )
          )
          (i32.const 0)
         )
         (i32.eq
          (local.get $8)
          (local.get $14)
         )
        )
        (block
         (i32.store
          (local.get $5)
          (i32.add
           (local.tee $8
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 4)
          )
         )
         (i32.store
          (local.get $8)
          (local.get $15)
         )
         (local.set $7
          (i32.add
           (local.get $7)
           (i32.lt_u
            (local.get $7)
            (i32.add
             (select
              (i32.load offset=4
               (local.get $11)
              )
              (i32.and
               (local.tee $8
                (i32.load8_s offset=11
                 (local.get $11)
                )
               )
               (i32.const 255)
              )
              (i32.lt_s
               (local.get $8)
               (i32.const 0)
              )
             )
             (i32.const -1)
            )
           )
          )
         )
         (local.set $8
          (i32.const 0)
         )
        )
       )
       (local.set $14
        (call_indirect (type $i32_i32_=>_i32)
         (local.get $10)
         (i32.load8_s
          (local.get $9)
         )
         (i32.add
          (i32.and
           (i32.load offset=44
            (i32.load
             (local.get $10)
            )
           )
           (i32.const 15)
          )
          (i32.const 66)
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.tee $16
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 4)
        )
       )
       (i32.store
        (local.get $16)
        (local.get $14)
       )
       (local.set $9
        (i32.add
         (local.get $9)
         (i32.const 1)
        )
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (br $while-in13)
      )
     )
    )
    (local.set $6
     (if (result i32)
      (i32.eq
       (local.tee $9
        (i32.add
         (i32.shl
          (i32.sub
           (local.get $6)
           (local.get $0)
          )
          (i32.const 2)
         )
         (local.get $3)
        )
       )
       (local.tee $8
        (i32.load
         (local.get $5)
        )
       )
      )
      (block (result i32)
       (local.set $7
        (local.get $10)
       )
       (local.get $9)
      )
      (block (result i32)
       (local.set $6
        (local.get $8)
       )
       (loop $while-in15 (result i32)
        (if (result i32)
         (i32.lt_u
          (local.get $9)
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const -4)
           )
          )
         )
         (block
          (local.set $7
           (i32.load
            (local.get $9)
           )
          )
          (i32.store
           (local.get $9)
           (i32.load
            (local.get $6)
           )
          )
          (i32.store
           (local.get $6)
           (local.get $7)
          )
          (local.set $9
           (i32.add
            (local.get $9)
            (i32.const 4)
           )
          )
          (br $while-in15)
         )
         (block (result i32)
          (local.set $7
           (local.get $10)
          )
          (local.get $8)
         )
        )
       )
      )
     )
    )
   )
   (block
    (drop
     (call_indirect (type $i32_i32_i32_i32_=>_i32)
      (local.get $10)
      (local.get $6)
      (local.get $2)
      (i32.load
       (local.get $5)
      )
      (i32.add
       (i32.and
        (i32.load offset=48
         (i32.load
          (local.get $10)
         )
        )
        (i32.const 7)
       )
       (i32.const 114)
      )
     )
    )
    (i32.store
     (local.get $5)
     (local.tee $6
      (i32.add
       (i32.load
        (local.get $5)
       )
       (i32.shl
        (i32.sub
         (local.get $2)
         (local.get $6)
        )
        (i32.const 2)
       )
      )
     )
    )
    (local.set $7
     (local.get $10)
    )
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in17
     (if
      (i32.lt_u
       (local.get $2)
       (local.get $12)
      )
      (block
       (br_if $__rjti$1
        (i32.eq
         (local.tee $6
          (i32.load8_s
           (local.get $2)
          )
         )
         (i32.const 46)
        )
       )
       (local.set $9
        (call_indirect (type $i32_i32_=>_i32)
         (local.get $10)
         (local.get $6)
         (i32.add
          (i32.and
           (i32.load offset=44
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 15)
          )
          (i32.const 66)
         )
        )
       )
       (i32.store
        (local.get $5)
        (local.tee $6
         (i32.add
          (local.tee $8
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 4)
         )
        )
       )
       (i32.store
        (local.get $8)
        (local.get $9)
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (br $while-in17)
      )
     )
    )
    (br $__rjto$1)
   )
   (local.set $7
    (call_indirect (type $i32_=>_i32)
     (local.get $13)
     (i32.and
      (i32.load offset=12
       (i32.load
        (local.get $13)
       )
      )
      (i32.const 63)
     )
    )
   )
   (i32.store
    (local.get $5)
    (local.tee $6
     (i32.add
      (local.tee $9
       (i32.load
        (local.get $5)
       )
      )
      (i32.const 4)
     )
    )
   )
   (i32.store
    (local.get $9)
    (local.get $7)
   )
   (local.set $2
    (i32.add
     (local.get $2)
     (i32.const 1)
    )
   )
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $10)
    (local.get $2)
    (local.get $12)
    (local.get $6)
    (i32.add
     (i32.and
      (i32.load offset=48
       (i32.load
        (local.get $10)
       )
      )
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $2
    (i32.add
     (i32.load
      (local.get $5)
     )
     (i32.shl
      (i32.sub
       (local.get $12)
       (local.get $2)
      )
      (i32.const 2)
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (select
    (local.get $2)
    (i32.add
     (i32.shl
      (i32.sub
       (local.get $1)
       (local.get $0)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.eq
     (local.get $1)
     (local.get $12)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $10
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $6)
    (i32.const 54432)
   )
  )
  (local.set $6
   (i32.load offset=20
    (i32.load
     (local.tee $11
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $6)
       (i32.const 54440)
      )
     )
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $9)
   (local.get $11)
   (i32.add
    (i32.and
     (local.get $6)
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (select
    (i32.load offset=4
     (local.get $9)
    )
    (i32.and
     (local.tee $6
      (i32.load8_s offset=11
       (local.get $9)
      )
     )
     (i32.const 255)
    )
    (i32.lt_s
     (local.get $6)
     (i32.const 0)
    )
   )
   (block
    (i32.store
     (local.get $5)
     (local.get $3)
    )
    (block $switch
     (block $switch-default
      (block $switch-case0
       (br_table $switch-case0 $switch-default $switch-case0 $switch-default
        (i32.sub
         (local.tee $7
          (i32.load8_s
           (local.get $0)
          )
         )
         (i32.const 43)
        )
       )
      )
      (local.set $6
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (local.set $8
       (i32.load offset=44
        (i32.load
         (local.get $10)
        )
       )
      )
      (local.set $7
       (call_indirect (type $i32_i32_=>_i32)
        (local.get $10)
        (local.get $7)
        (i32.add
         (i32.and
          (local.get $8)
          (i32.const 15)
         )
         (i32.const 66)
        )
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.tee $8
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 4)
       )
      )
      (i32.store
       (local.get $8)
       (local.get $7)
      )
      (br $switch)
     )
     (local.set $6
      (local.get $0)
     )
    )
    (if
     (i32.gt_s
      (i32.sub
       (local.get $2)
       (local.get $6)
      )
      (i32.const 1)
     )
     (if
      (i32.eq
       (i32.load8_s
        (local.get $6)
       )
       (i32.const 48)
      )
      (block $label$break$L7
       (block $switch1
        (br_table $switch1 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $label$break$L7 $switch1 $label$break$L7
         (i32.sub
          (i32.load8_s offset=1
           (local.get $6)
          )
          (i32.const 88)
         )
        )
       )
       (local.set $7
        (i32.load offset=44
         (i32.load
          (local.get $10)
         )
        )
       )
       (local.set $7
        (call_indirect (type $i32_i32_=>_i32)
         (local.get $10)
         (i32.const 48)
         (i32.add
          (i32.and
           (local.get $7)
           (i32.const 15)
          )
          (i32.const 66)
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.tee $8
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 4)
        )
       )
       (i32.store
        (local.get $8)
        (local.get $7)
       )
       (local.set $7
        (i32.add
         (local.get $6)
         (i32.const 2)
        )
       )
       (local.set $8
        (i32.load offset=44
         (i32.load
          (local.get $10)
         )
        )
       )
       (local.set $6
        (call_indirect (type $i32_i32_=>_i32)
         (local.get $10)
         (i32.load8_s offset=1
          (local.get $6)
         )
         (i32.add
          (i32.and
           (local.get $8)
           (i32.const 15)
          )
          (i32.const 66)
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.tee $8
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 4)
        )
       )
       (i32.store
        (local.get $8)
        (local.get $6)
       )
       (local.set $6
        (local.get $7)
       )
      )
     )
    )
    (if
     (i32.ne
      (local.get $2)
      (local.get $6)
     )
     (block $label$break$L12
      (local.set $7
       (local.get $2)
      )
      (local.set $8
       (local.get $6)
      )
      (loop $while-in
       (br_if $label$break$L12
        (i32.ge_u
         (local.get $8)
         (local.tee $7
          (i32.add
           (local.get $7)
           (i32.const -1)
          )
         )
        )
       )
       (local.set $13
        (i32.load8_s
         (local.get $8)
        )
       )
       (i32.store8
        (local.get $8)
        (i32.load8_s
         (local.get $7)
        )
       )
       (i32.store8
        (local.get $7)
        (local.get $13)
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $7
     (i32.load offset=16
      (i32.load
       (local.get $11)
      )
     )
    )
    (local.set $13
     (call_indirect (type $i32_=>_i32)
      (local.get $11)
      (i32.and
       (local.get $7)
       (i32.const 63)
      )
     )
    )
    (local.set $8
     (local.get $6)
    )
    (local.set $7
     (i32.const 0)
    )
    (local.set $11
     (i32.const 0)
    )
    (loop $while-in7
     (if
      (i32.lt_u
       (local.get $8)
       (local.get $2)
      )
      (block
       (if
        (i32.and
         (i32.ne
          (local.tee $12
           (i32.load8_s
            (i32.add
             (local.get $7)
             (select
              (i32.load
               (local.get $9)
              )
              (local.get $9)
              (i32.lt_s
               (i32.load8_s offset=11
                (local.get $9)
               )
               (i32.const 0)
              )
             )
            )
           )
          )
          (i32.const 0)
         )
         (i32.eq
          (local.get $11)
          (local.get $12)
         )
        )
        (block
         (i32.store
          (local.get $5)
          (i32.add
           (local.tee $11
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 4)
          )
         )
         (i32.store
          (local.get $11)
          (local.get $13)
         )
         (local.set $7
          (i32.add
           (local.get $7)
           (i32.lt_u
            (local.get $7)
            (i32.add
             (select
              (i32.load offset=4
               (local.get $9)
              )
              (i32.and
               (local.tee $7
                (i32.load8_s offset=11
                 (local.get $9)
                )
               )
               (i32.const 255)
              )
              (i32.lt_s
               (local.get $7)
               (i32.const 0)
              )
             )
             (i32.const -1)
            )
           )
          )
         )
         (local.set $11
          (i32.const 0)
         )
        )
       )
       (local.set $12
        (i32.load offset=44
         (i32.load
          (local.get $10)
         )
        )
       )
       (local.set $12
        (call_indirect (type $i32_i32_=>_i32)
         (local.get $10)
         (i32.load8_s
          (local.get $8)
         )
         (i32.add
          (i32.and
           (local.get $12)
           (i32.const 15)
          )
          (i32.const 66)
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.tee $14
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 4)
        )
       )
       (i32.store
        (local.get $14)
        (local.get $12)
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (local.set $11
        (i32.add
         (local.get $11)
         (i32.const 1)
        )
       )
       (br $while-in7)
      )
     )
    )
    (local.set $5
     (if (result i32)
      (i32.eq
       (local.tee $7
        (i32.add
         (i32.shl
          (i32.sub
           (local.get $6)
           (local.get $0)
          )
          (i32.const 2)
         )
         (local.get $3)
        )
       )
       (local.tee $6
        (i32.load
         (local.get $5)
        )
       )
      )
      (local.get $7)
      (block (result i32)
       (loop $while-in9
        (if
         (i32.lt_u
          (local.get $7)
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const -4)
           )
          )
         )
         (block
          (local.set $8
           (i32.load
            (local.get $7)
           )
          )
          (i32.store
           (local.get $7)
           (i32.load
            (local.get $6)
           )
          )
          (i32.store
           (local.get $6)
           (local.get $8)
          )
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.const 4)
           )
          )
          (br $while-in9)
         )
        )
       )
       (i32.load
        (local.get $5)
       )
      )
     )
    )
   )
   (block
    (local.set $6
     (i32.load offset=48
      (i32.load
       (local.get $10)
      )
     )
    )
    (drop
     (call_indirect (type $i32_i32_i32_i32_=>_i32)
      (local.get $10)
      (local.get $0)
      (local.get $2)
      (local.get $3)
      (i32.add
       (i32.and
        (local.get $6)
        (i32.const 7)
       )
       (i32.const 114)
      )
     )
    )
    (i32.store
     (local.get $5)
     (local.tee $5
      (i32.add
       (i32.shl
        (i32.sub
         (local.get $2)
         (local.get $0)
        )
        (i32.const 2)
       )
       (local.get $3)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $4)
   (select
    (local.get $5)
    (i32.add
     (i32.shl
      (i32.sub
       (local.get $1)
       (local.get $0)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.eq
     (local.get $1)
     (local.get $2)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $9)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.const 2)
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
    (i32.const 48096)
    (i32.const 48104)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $9
   (i32.add
    (local.get $6)
    (i32.const 12)
   )
  )
  (local.set $10
   (i32.add
    (local.get $6)
    (i32.const 8)
   )
  )
  (local.set $8
   (i32.load offset=20
    (i32.load
     (local.tee $7
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (local.set $7
   (call_indirect (type $i32_=>_i32)
    (local.get $7)
    (i32.and
     (local.get $8)
     (i32.const 63)
    )
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (local.set $1
   (i32.add
    (local.tee $8
     (select
      (i32.load
       (local.get $7)
      )
      (local.get $7)
      (local.tee $2
       (i32.lt_s
        (local.tee $1
         (i32.load8_s offset=11
          (local.get $7)
         )
        )
        (i32.const 0)
       )
      )
     )
    )
    (select
     (i32.load offset=4
      (local.get $7)
     )
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.get $10)
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.get $9)
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
    (local.get $0)
    (local.get $10)
    (local.get $9)
    (local.get $3)
    (local.get $4)
    (local.get $5)
    (local.get $8)
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $6)
     (i32.const 4)
    )
   )
   (local.tee $3
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (i32.add
    (i32.load offset=4
     (local.get $3)
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $7)
    (i32.const 54400)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $7)
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $6)
   )
  )
  (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE
   (local.get $0)
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
   (local.get $1)
   (local.get $7)
   (local.get $4)
   (local.get $3)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $6)
     (i32.const 4)
    )
   )
   (local.tee $3
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (i32.add
    (i32.load offset=4
     (local.get $3)
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $7)
    (i32.const 54400)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $7)
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $6)
   )
  )
  (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE
   (local.get $0)
   (i32.add
    (local.get $5)
    (i32.const 16)
   )
   (local.get $1)
   (local.get $7)
   (local.get $4)
   (local.get $3)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $6)
     (i32.const 4)
    )
   )
   (local.tee $3
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (i32.add
    (i32.load offset=4
     (local.get $3)
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $0)
    (i32.const 54400)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $0)
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.get $0)
   (i32.load
    (local.get $6)
   )
  )
  (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE
   (i32.add
    (local.get $5)
    (i32.const 20)
   )
   (local.get $1)
   (local.get $0)
   (local.get $4)
   (local.get $3)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 112)
   )
  )
  (local.set $11
   (i32.sub
    (local.get $7)
    (i32.const -64)
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $7)
     (i32.const 128)
    )
   )
   (local.tee $9
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $9)
   (i32.add
    (i32.load offset=4
     (local.get $9)
    )
    (i32.const 1)
   )
  )
  (local.set $9
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $8)
    (i32.const 54400)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $8)
  )
  (local.set $0
   (block $__rjto$0 (result i32)
    (block $__rjti$0
     (block $switch-default
      (block $switch-case26
       (block $switch-case25
        (block $switch-case24
         (block $switch-case23
          (block $switch-case22
           (block $switch-case21
            (block $switch-case20
             (block $switch-case19
              (block $switch-case18
               (block $switch-case17
                (block $switch-case16
                 (block $switch-case15
                  (block $switch-case13
                   (block $switch-case12
                    (block $switch-case11
                     (block $switch-case10
                      (block $switch-case9
                       (block $switch-case8
                        (block $switch-case7
                         (block $switch-case6
                          (block $switch-case4
                           (block $switch-case3
                            (block $switch-case0
                             (br_table $switch-case26 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-case3 $switch-default $switch-case7 $switch-default $switch-case8 $switch-default $switch-case9 $switch-case10 $switch-default $switch-default $switch-default $switch-case13 $switch-default $switch-default $switch-default $switch-default $switch-case18 $switch-case19 $switch-case20 $switch-default $switch-default $switch-default $switch-case23 $switch-case25 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-case3 $switch-case4 $switch-case6 $switch-case6 $switch-default $switch-default $switch-case3 $switch-default $switch-case11 $switch-default $switch-default $switch-case12 $switch-case15 $switch-default $switch-case16 $switch-default $switch-case17 $switch-default $switch-case15 $switch-default $switch-default $switch-case21 $switch-case22 $switch-case24 $switch-default
                              (i32.sub
                               (i32.shr_s
                                (i32.shl
                                 (local.get $6)
                                 (i32.const 24)
                                )
                                (i32.const 24)
                               )
                               (i32.const 37)
                              )
                             )
                            )
                            (i32.store offset=124
                             (local.get $7)
                             (i32.load
                              (local.get $2)
                             )
                            )
                            (i32.store
                             (local.get $8)
                             (i32.load offset=124
                              (local.get $7)
                             )
                            )
                            (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE
                             (local.get $0)
                             (i32.add
                              (local.get $5)
                              (i32.const 24)
                             )
                             (local.get $1)
                             (local.get $8)
                             (local.get $4)
                             (local.get $9)
                            )
                            (br $__rjti$0)
                           )
                           (i32.store offset=120
                            (local.get $7)
                            (i32.load
                             (local.get $2)
                            )
                           )
                           (i32.store
                            (local.get $8)
                            (i32.load offset=120
                             (local.get $7)
                            )
                           )
                           (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE
                            (local.get $0)
                            (i32.add
                             (local.get $5)
                             (i32.const 16)
                            )
                            (local.get $1)
                            (local.get $8)
                            (local.get $4)
                            (local.get $9)
                           )
                           (br $__rjti$0)
                          )
                          (local.set $9
                           (i32.load offset=12
                            (i32.load
                             (local.tee $6
                              (i32.add
                               (local.get $0)
                               (i32.const 8)
                              )
                             )
                            )
                           )
                          )
                          (local.set $6
                           (call_indirect (type $i32_=>_i32)
                            (local.get $6)
                            (i32.and
                             (local.get $9)
                             (i32.const 63)
                            )
                           )
                          )
                          (i32.store offset=116
                           (local.get $7)
                           (i32.load
                            (local.get $1)
                           )
                          )
                          (i32.store offset=108
                           (local.get $7)
                           (i32.load
                            (local.get $2)
                           )
                          )
                          (local.set $2
                           (i32.add
                            (local.tee $11
                             (select
                              (i32.load
                               (local.get $6)
                              )
                              (local.get $6)
                              (local.tee $9
                               (i32.lt_s
                                (local.tee $2
                                 (i32.load8_s offset=11
                                  (local.get $6)
                                 )
                                )
                                (i32.const 0)
                               )
                              )
                             )
                            )
                            (select
                             (i32.load offset=4
                              (local.get $6)
                             )
                             (i32.and
                              (local.get $2)
                              (i32.const 255)
                             )
                             (local.get $9)
                            )
                           )
                          )
                          (i32.store
                           (local.get $10)
                           (i32.load offset=116
                            (local.get $7)
                           )
                          )
                          (i32.store
                           (local.get $8)
                           (i32.load offset=108
                            (local.get $7)
                           )
                          )
                          (i32.store
                           (local.get $1)
                           (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                            (local.get $0)
                            (local.get $10)
                            (local.get $8)
                            (local.get $3)
                            (local.get $4)
                            (local.get $5)
                            (local.get $11)
                            (local.get $2)
                           )
                          )
                          (br $__rjti$0)
                         )
                         (i32.store offset=104
                          (local.get $7)
                          (i32.load
                           (local.get $2)
                          )
                         )
                         (i32.store
                          (local.get $8)
                          (i32.load offset=104
                           (local.get $7)
                          )
                         )
                         (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE
                          (i32.add
                           (local.get $5)
                           (i32.const 12)
                          )
                          (local.get $1)
                          (local.get $8)
                          (local.get $4)
                          (local.get $9)
                         )
                         (br $__rjti$0)
                        )
                        (i32.store offset=100
                         (local.get $7)
                         (i32.load
                          (local.get $1)
                         )
                        )
                        (i32.store offset=96
                         (local.get $7)
                         (i32.load
                          (local.get $2)
                         )
                        )
                        (i32.store
                         (local.get $10)
                         (i32.load offset=100
                          (local.get $7)
                         )
                        )
                        (i32.store
                         (local.get $8)
                         (i32.load offset=96
                          (local.get $7)
                         )
                        )
                        (i32.store
                         (local.get $1)
                         (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                          (local.get $0)
                          (local.get $10)
                          (local.get $8)
                          (local.get $3)
                          (local.get $4)
                          (local.get $5)
                          (i32.const 48056)
                          (i32.const 48064)
                         )
                        )
                        (br $__rjti$0)
                       )
                       (i32.store offset=92
                        (local.get $7)
                        (i32.load
                         (local.get $1)
                        )
                       )
                       (i32.store offset=88
                        (local.get $7)
                        (i32.load
                         (local.get $2)
                        )
                       )
                       (i32.store
                        (local.get $10)
                        (i32.load offset=92
                         (local.get $7)
                        )
                       )
                       (i32.store
                        (local.get $8)
                        (i32.load offset=88
                         (local.get $7)
                        )
                       )
                       (i32.store
                        (local.get $1)
                        (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                         (local.get $0)
                         (local.get $10)
                         (local.get $8)
                         (local.get $3)
                         (local.get $4)
                         (local.get $5)
                         (i32.const 48064)
                         (i32.const 48072)
                        )
                       )
                       (br $__rjti$0)
                      )
                      (i32.store offset=84
                       (local.get $7)
                       (i32.load
                        (local.get $2)
                       )
                      )
                      (i32.store
                       (local.get $8)
                       (i32.load offset=84
                        (local.get $7)
                       )
                      )
                      (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE
                       (i32.add
                        (local.get $5)
                        (i32.const 8)
                       )
                       (local.get $1)
                       (local.get $8)
                       (local.get $4)
                       (local.get $9)
                      )
                      (br $__rjti$0)
                     )
                     (i32.store offset=80
                      (local.get $7)
                      (i32.load
                       (local.get $2)
                      )
                     )
                     (i32.store
                      (local.get $8)
                      (i32.load offset=80
                       (local.get $7)
                      )
                     )
                     (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE
                      (i32.add
                       (local.get $5)
                       (i32.const 8)
                      )
                      (local.get $1)
                      (local.get $8)
                      (local.get $4)
                      (local.get $9)
                     )
                     (br $__rjti$0)
                    )
                    (i32.store offset=76
                     (local.get $7)
                     (i32.load
                      (local.get $2)
                     )
                    )
                    (i32.store
                     (local.get $8)
                     (i32.load offset=76
                      (local.get $7)
                     )
                    )
                    (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE
                     (i32.add
                      (local.get $5)
                      (i32.const 28)
                     )
                     (local.get $1)
                     (local.get $8)
                     (local.get $4)
                     (local.get $9)
                    )
                    (br $__rjti$0)
                   )
                   (i32.store offset=72
                    (local.get $7)
                    (i32.load
                     (local.get $2)
                    )
                   )
                   (i32.store
                    (local.get $8)
                    (i32.load offset=72
                     (local.get $7)
                    )
                   )
                   (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE
                    (i32.add
                     (local.get $5)
                     (i32.const 16)
                    )
                    (local.get $1)
                    (local.get $8)
                    (local.get $4)
                    (local.get $9)
                   )
                   (br $__rjti$0)
                  )
                  (i32.store offset=68
                   (local.get $7)
                   (i32.load
                    (local.get $2)
                   )
                  )
                  (i32.store
                   (local.get $8)
                   (i32.load offset=68
                    (local.get $7)
                   )
                  )
                  (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE
                   (i32.add
                    (local.get $5)
                    (i32.const 4)
                   )
                   (local.get $1)
                   (local.get $8)
                   (local.get $4)
                   (local.get $9)
                  )
                  (br $__rjti$0)
                 )
                 (i32.store
                  (local.get $11)
                  (i32.load
                   (local.get $2)
                  )
                 )
                 (i32.store
                  (local.get $8)
                  (i32.load
                   (local.get $11)
                  )
                 )
                 (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE
                  (local.get $1)
                  (local.get $8)
                  (local.get $4)
                  (local.get $9)
                 )
                 (br $__rjti$0)
                )
                (i32.store offset=60
                 (local.get $7)
                 (i32.load
                  (local.get $2)
                 )
                )
                (i32.store
                 (local.get $8)
                 (i32.load offset=60
                  (local.get $7)
                 )
                )
                (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE
                 (local.get $0)
                 (i32.add
                  (local.get $5)
                  (i32.const 8)
                 )
                 (local.get $1)
                 (local.get $8)
                 (local.get $4)
                 (local.get $9)
                )
                (br $__rjti$0)
               )
               (i32.store offset=56
                (local.get $7)
                (i32.load
                 (local.get $1)
                )
               )
               (i32.store offset=52
                (local.get $7)
                (i32.load
                 (local.get $2)
                )
               )
               (i32.store
                (local.get $10)
                (i32.load offset=56
                 (local.get $7)
                )
               )
               (i32.store
                (local.get $8)
                (i32.load offset=52
                 (local.get $7)
                )
               )
               (i32.store
                (local.get $1)
                (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                 (local.get $0)
                 (local.get $10)
                 (local.get $8)
                 (local.get $3)
                 (local.get $4)
                 (local.get $5)
                 (i32.const 48072)
                 (i32.const 48083)
                )
               )
               (br $__rjti$0)
              )
              (i32.store offset=48
               (local.get $7)
               (i32.load
                (local.get $1)
               )
              )
              (i32.store offset=44
               (local.get $7)
               (i32.load
                (local.get $2)
               )
              )
              (i32.store
               (local.get $10)
               (i32.load offset=48
                (local.get $7)
               )
              )
              (i32.store
               (local.get $8)
               (i32.load offset=44
                (local.get $7)
               )
              )
              (i32.store
               (local.get $1)
               (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                (local.get $0)
                (local.get $10)
                (local.get $8)
                (local.get $3)
                (local.get $4)
                (local.get $5)
                (i32.const 48083)
                (i32.const 48088)
               )
              )
              (br $__rjti$0)
             )
             (i32.store offset=40
              (local.get $7)
              (i32.load
               (local.get $2)
              )
             )
             (i32.store
              (local.get $8)
              (i32.load offset=40
               (local.get $7)
              )
             )
             (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE
              (local.get $5)
              (local.get $1)
              (local.get $8)
              (local.get $4)
              (local.get $9)
             )
             (br $__rjti$0)
            )
            (i32.store offset=36
             (local.get $7)
             (i32.load
              (local.get $1)
             )
            )
            (i32.store offset=32
             (local.get $7)
             (i32.load
              (local.get $2)
             )
            )
            (i32.store
             (local.get $10)
             (i32.load offset=36
              (local.get $7)
             )
            )
            (i32.store
             (local.get $8)
             (i32.load offset=32
              (local.get $7)
             )
            )
            (i32.store
             (local.get $1)
             (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
              (local.get $0)
              (local.get $10)
              (local.get $8)
              (local.get $3)
              (local.get $4)
              (local.get $5)
              (i32.const 48088)
              (i32.const 48096)
             )
            )
            (br $__rjti$0)
           )
           (i32.store offset=28
            (local.get $7)
            (i32.load
             (local.get $2)
            )
           )
           (i32.store
            (local.get $8)
            (i32.load offset=28
             (local.get $7)
            )
           )
           (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE
            (i32.add
             (local.get $5)
             (i32.const 24)
            )
            (local.get $1)
            (local.get $8)
            (local.get $4)
            (local.get $9)
           )
           (br $__rjti$0)
          )
          (local.set $6
           (i32.load offset=20
            (i32.load
             (local.get $0)
            )
           )
          )
          (i32.store offset=24
           (local.get $7)
           (i32.load
            (local.get $1)
           )
          )
          (i32.store offset=20
           (local.get $7)
           (i32.load
            (local.get $2)
           )
          )
          (i32.store
           (local.get $10)
           (i32.load offset=24
            (local.get $7)
           )
          )
          (i32.store
           (local.get $8)
           (i32.load offset=20
            (local.get $7)
           )
          )
          (br $__rjto$0
           (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_i32)
            (local.get $0)
            (local.get $10)
            (local.get $8)
            (local.get $3)
            (local.get $4)
            (local.get $5)
            (i32.add
             (i32.and
              (local.get $6)
              (i32.const 63)
             )
             (i32.const 166)
            )
           )
          )
         )
         (local.set $9
          (i32.load offset=24
           (i32.load
            (local.tee $6
             (i32.add
              (local.get $0)
              (i32.const 8)
             )
            )
           )
          )
         )
         (local.set $6
          (call_indirect (type $i32_=>_i32)
           (local.get $6)
           (i32.and
            (local.get $9)
            (i32.const 63)
           )
          )
         )
         (i32.store offset=16
          (local.get $7)
          (i32.load
           (local.get $1)
          )
         )
         (i32.store offset=12
          (local.get $7)
          (i32.load
           (local.get $2)
          )
         )
         (local.set $2
          (i32.add
           (local.tee $11
            (select
             (i32.load
              (local.get $6)
             )
             (local.get $6)
             (local.tee $9
              (i32.lt_s
               (local.tee $2
                (i32.load8_s offset=11
                 (local.get $6)
                )
               )
               (i32.const 0)
              )
             )
            )
           )
           (select
            (i32.load offset=4
             (local.get $6)
            )
            (i32.and
             (local.get $2)
             (i32.const 255)
            )
            (local.get $9)
           )
          )
         )
         (i32.store
          (local.get $10)
          (i32.load offset=16
           (local.get $7)
          )
         )
         (i32.store
          (local.get $8)
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.store
          (local.get $1)
          (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
           (local.get $0)
           (local.get $10)
           (local.get $8)
           (local.get $3)
           (local.get $4)
           (local.get $5)
           (local.get $11)
           (local.get $2)
          )
         )
         (br $__rjti$0)
        )
        (i32.store offset=8
         (local.get $7)
         (i32.load
          (local.get $2)
         )
        )
        (i32.store
         (local.get $8)
         (i32.load offset=8
          (local.get $7)
         )
        )
        (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE
         (i32.add
          (local.get $5)
          (i32.const 20)
         )
         (local.get $1)
         (local.get $8)
         (local.get $4)
         (local.get $9)
        )
        (br $__rjti$0)
       )
       (i32.store offset=4
        (local.get $7)
        (i32.load
         (local.get $2)
        )
       )
       (i32.store
        (local.get $8)
        (i32.load offset=4
         (local.get $7)
        )
       )
       (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE
        (i32.add
         (local.get $5)
         (i32.const 20)
        )
        (local.get $1)
        (local.get $8)
        (local.get $4)
        (local.get $9)
       )
       (br $__rjti$0)
      )
      (i32.store
       (local.get $7)
       (i32.load
        (local.get $2)
       )
      )
      (i32.store
       (local.get $8)
       (i32.load
        (local.get $7)
       )
      )
      (call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE
       (local.get $1)
       (local.get $8)
       (local.get $4)
       (local.get $9)
      )
      (br $__rjti$0)
     )
     (i32.store
      (local.get $4)
      (i32.or
       (i32.load
        (local.get $4)
       )
       (i32.const 4)
      )
     )
    )
    (i32.load
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__220__time_get_c_storageIcE7__weeksEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52640)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52640)
    )
    (block
     (call $__ZNSt3__2L10init_weeksEv)
     (i32.store
      (i32.const 54528)
      (i32.const 51888)
     )
     (call $___cxa_guard_release
      (i32.const 52640)
     )
    )
   )
  )
  (i32.load
   (i32.const 54528)
  )
 )
 (func $__ZNKSt3__220__time_get_c_storageIcE8__monthsEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52624)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52624)
    )
    (block
     (call $__ZNSt3__2L11init_monthsEv)
     (i32.store
      (i32.const 54524)
      (i32.const 51600)
     )
     (call $___cxa_guard_release
      (i32.const 52624)
     )
    )
   )
  )
  (i32.load
   (i32.const 54524)
  )
 )
 (func $__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52608)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52608)
    )
    (block
     (call $__ZNSt3__2L10init_am_pmEv)
     (i32.store
      (i32.const 54520)
      (i32.const 51568)
     )
     (call $___cxa_guard_release
      (i32.const 52608)
     )
    )
   )
  )
  (i32.load
   (i32.const 54520)
  )
 )
 (func $__ZNKSt3__220__time_get_c_storageIcE3__cEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52600)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52600)
    )
    (block
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
      (i32.const 54508)
      (i32.const 47814)
      (call $_strlen
       (i32.const 47814)
      )
     )
     (call $___cxa_guard_release
      (i32.const 52600)
     )
    )
   )
  )
  (i32.const 54508)
 )
 (func $__ZNKSt3__220__time_get_c_storageIcE3__rEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52592)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52592)
    )
    (block
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
      (i32.const 54496)
      (i32.const 47802)
      (call $_strlen
       (i32.const 47802)
      )
     )
     (call $___cxa_guard_release
      (i32.const 52592)
     )
    )
   )
  )
  (i32.const 54496)
 )
 (func $__ZNKSt3__220__time_get_c_storageIcE3__xEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52584)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52584)
    )
    (block
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
      (i32.const 54484)
      (i32.const 47793)
      (call $_strlen
       (i32.const 47793)
      )
     )
     (call $___cxa_guard_release
      (i32.const 52584)
     )
    )
   )
  )
  (i32.const 54484)
 )
 (func $__ZNKSt3__220__time_get_c_storageIcE3__XEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52576)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52576)
    )
    (block
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
      (i32.const 54472)
      (i32.const 47784)
      (call $_strlen
       (i32.const 47784)
      )
     )
     (call $___cxa_guard_release
      (i32.const 52576)
     )
    )
   )
  )
  (i32.const 54472)
 )
 (func $__ZNSt3__2L10init_am_pmEv (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52616)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52616)
    )
    (block
     (local.set $1
      (i32.const 51568)
     )
     (loop $while-in
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (if
        (i32.ne
         (local.get $0)
         (i32.const 3)
        )
        (block
         (i32.store
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $1)
          )
          (i32.const 0)
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (br $while-in1)
        )
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 12)
         )
        )
        (i32.const 51592)
       )
      )
     )
     (call $___cxa_guard_release
      (i32.const 52616)
     )
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51568)
   (i32.const 47835)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51580)
   (i32.const 47838)
  )
 )
 (func $__ZNSt3__2L11init_monthsEv (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52632)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52632)
    )
    (block
     (local.set $1
      (i32.const 51600)
     )
     (loop $while-in
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (if
        (i32.ne
         (local.get $0)
         (i32.const 3)
        )
        (block
         (i32.store
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $1)
          )
          (i32.const 0)
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (br $while-in1)
        )
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 12)
         )
        )
        (i32.const 51888)
       )
      )
     )
     (call $___cxa_guard_release
      (i32.const 52632)
     )
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51600)
   (i32.const 47841)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51612)
   (i32.const 47849)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51624)
   (i32.const 47858)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51636)
   (i32.const 47864)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51648)
   (i32.const 47870)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51660)
   (i32.const 47874)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51672)
   (i32.const 47879)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51684)
   (i32.const 47884)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51696)
   (i32.const 47891)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51708)
   (i32.const 47901)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51720)
   (i32.const 47909)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51732)
   (i32.const 47918)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51744)
   (i32.const 47927)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51756)
   (i32.const 47931)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51768)
   (i32.const 47935)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51780)
   (i32.const 47939)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51792)
   (i32.const 47870)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51804)
   (i32.const 47943)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51816)
   (i32.const 47947)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51828)
   (i32.const 47951)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51840)
   (i32.const 47955)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51852)
   (i32.const 47959)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51864)
   (i32.const 47963)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51876)
   (i32.const 47967)
  )
 )
 (func $__ZNSt3__2L10init_weeksEv (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52648)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52648)
    )
    (block
     (local.set $1
      (i32.const 51888)
     )
     (loop $while-in
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (if
        (i32.ne
         (local.get $0)
         (i32.const 3)
        )
        (block
         (i32.store
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $1)
          )
          (i32.const 0)
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (br $while-in1)
        )
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 12)
         )
        )
        (i32.const 52056)
       )
      )
     )
     (call $___cxa_guard_release
      (i32.const 52648)
     )
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51888)
   (i32.const 47971)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51900)
   (i32.const 47978)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51912)
   (i32.const 47985)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51924)
   (i32.const 47993)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51936)
   (i32.const 48003)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51948)
   (i32.const 48012)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51960)
   (i32.const 48019)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51972)
   (i32.const 48028)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51984)
   (i32.const 48032)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 51996)
   (i32.const 48036)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 52008)
   (i32.const 48040)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 52020)
   (i32.const 48044)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 52032)
   (i32.const 48048)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
   (i32.const 52044)
   (i32.const 48052)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (local.set $8
   (i32.load
    (i32.load
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (local.set $0
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (local.get $8)
     (i32.const 63)
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $3)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $6)
   )
  )
  (if
   (i32.lt_s
    (local.tee $0
     (i32.sub
      (call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb
       (local.get $2)
       (local.get $7)
       (local.get $0)
       (i32.add
        (local.get $0)
        (i32.const 168)
       )
       (local.get $5)
       (local.get $4)
       (i32.const 0)
      )
      (local.get $0)
     )
    )
    (i32.const 168)
   )
   (i32.store
    (local.get $1)
    (i32.rem_s
     (i32.div_s
      (local.get $0)
      (i32.const 12)
     )
     (i32.const 7)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (local.set $8
   (i32.load offset=4
    (i32.load
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (local.set $0
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (local.get $8)
     (i32.const 63)
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $3)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $6)
   )
  )
  (if
   (i32.lt_s
    (local.tee $0
     (i32.sub
      (call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb
       (local.get $2)
       (local.get $7)
       (local.get $0)
       (i32.add
        (local.get $0)
        (i32.const 288)
       )
       (local.get $5)
       (local.get $4)
       (i32.const 0)
      )
      (local.get $0)
     )
    )
    (i32.const 288)
   )
   (i32.store
    (local.get $1)
    (i32.rem_s
     (i32.div_s
      (local.get $0)
      (i32.const 12)
     )
     (i32.const 12)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $16
   (i32.add
    (local.get $13)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $14
    (i32.add
     (local.get $13)
     (i32.const 12)
    )
   )
   (local.tee $9
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $9)
   (i32.add
    (i32.load offset=4
     (local.get $9)
    )
    (i32.const 1)
   )
  )
  (local.set $11
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $14)
    (i32.const 54400)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $14)
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (block $__rjto$2
   (block $__rjti$2
    (loop $label$continue$L1
     (block $label$break$L1
      (local.set $8
       (i32.load
        (local.get $1)
       )
      )
      (br_if $label$break$L1
       (i32.eqz
        (i32.and
         (i32.eqz
          (local.get $10)
         )
         (i32.ne
          (local.get $6)
          (local.get $7)
         )
        )
       )
      )
      (local.set $8
       (if (result i32)
        (local.tee $10
         (local.get $8)
        )
        (if (result i32)
         (i32.eq
          (if (result i32)
           (i32.eq
            (local.tee $9
             (i32.load offset=12
              (local.get $10)
             )
            )
            (i32.load offset=16
             (local.get $10)
            )
           )
           (call_indirect (type $i32_=>_i32)
            (local.get $10)
            (i32.and
             (i32.load offset=36
              (i32.load
               (local.get $10)
              )
             )
             (i32.const 63)
            )
           )
           (i32.load8_u
            (local.get $9)
           )
          )
          (i32.const -1)
         )
         (block (result i32)
          (i32.store
           (local.get $1)
           (i32.const 0)
          )
          (local.set $15
           (i32.const 1)
          )
          (local.set $10
           (i32.const 0)
          )
          (i32.const 0)
         )
         (block (result i32)
          (local.set $15
           (i32.const 0)
          )
          (local.get $10)
         )
        )
        (block (result i32)
         (local.set $15
          (i32.const 1)
         )
         (i32.const 0)
        )
       )
      )
      (local.set $17
       (local.tee $9
        (i32.load
         (local.get $2)
        )
       )
      )
      (block $__rjto$1
       (block $__rjti$1
        (br_if $__rjti$1
         (i32.eqz
          (local.get $9)
         )
        )
        (if
         (i32.eq
          (if (result i32)
           (i32.eq
            (local.tee $12
             (i32.load offset=12
              (local.get $9)
             )
            )
            (i32.load offset=16
             (local.get $9)
            )
           )
           (call_indirect (type $i32_=>_i32)
            (local.get $9)
            (i32.and
             (i32.load offset=36
              (i32.load
               (local.get $9)
              )
             )
             (i32.const 63)
            )
           )
           (i32.load8_u
            (local.get $12)
           )
          )
          (i32.const -1)
         )
         (block
          (i32.store
           (local.get $2)
           (i32.const 0)
          )
          (local.set $17
           (i32.const 0)
          )
          (br $__rjti$1)
         )
         (br_if $__rjti$2
          (i32.eqz
           (local.get $15)
          )
         )
        )
        (br $__rjto$1)
       )
       (br_if $__rjti$2
        (local.get $15)
       )
       (local.set $9
        (i32.const 0)
       )
      )
      (if
       (i32.eq
        (i32.and
         (call_indirect (type $i32_i32_i32_=>_i32)
          (local.get $11)
          (i32.load8_s
           (local.get $6)
          )
          (i32.const 0)
          (i32.add
           (i32.and
            (i32.load offset=36
             (i32.load
              (local.get $11)
             )
            )
            (i32.const 31)
           )
           (i32.const 82)
          )
         )
         (i32.const 255)
        )
        (i32.const 37)
       )
       (block
        (br_if $__rjti$2
         (i32.eq
          (local.get $7)
          (local.tee $12
           (i32.add
            (local.get $6)
            (i32.const 1)
           )
          )
         )
        )
        (block $switch
         (block $switch-default
          (block $switch-case1
           (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case1 $switch-default
            (i32.sub
             (i32.shr_s
              (i32.shl
               (local.tee $9
                (call_indirect (type $i32_i32_i32_=>_i32)
                 (local.get $11)
                 (i32.load8_s
                  (local.get $12)
                 )
                 (i32.const 0)
                 (i32.add
                  (i32.and
                   (i32.load offset=36
                    (i32.load
                     (local.get $11)
                    )
                   )
                   (i32.const 31)
                  )
                  (i32.const 82)
                 )
                )
               )
               (i32.const 24)
              )
              (i32.const 24)
             )
             (i32.const 48)
            )
           )
          )
          (br_if $__rjti$2
           (i32.eq
            (local.get $7)
            (i32.add
             (local.get $6)
             (i32.const 2)
            )
           )
          )
          (local.set $8
           (local.get $9)
          )
          (local.set $9
           (call_indirect (type $i32_i32_i32_=>_i32)
            (local.get $11)
            (i32.load8_s offset=2
             (local.get $6)
            )
            (i32.const 0)
            (i32.add
             (i32.and
              (i32.load offset=36
               (i32.load
                (local.get $11)
               )
              )
              (i32.const 31)
             )
             (i32.const 82)
            )
           )
          )
          (local.set $6
           (local.get $12)
          )
          (br $switch)
         )
         (local.set $8
          (i32.const 0)
         )
        )
        (local.set $12
         (i32.load offset=36
          (i32.load
           (local.get $0)
          )
         )
        )
        (i32.store offset=4
         (local.get $13)
         (local.get $10)
        )
        (i32.store
         (local.get $13)
         (local.get $17)
        )
        (i32.store
         (local.get $16)
         (i32.load offset=4
          (local.get $13)
         )
        )
        (i32.store
         (local.get $14)
         (i32.load
          (local.get $13)
         )
        )
        (i32.store
         (local.get $1)
         (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
          (local.get $0)
          (local.get $16)
          (local.get $14)
          (local.get $3)
          (local.get $4)
          (local.get $5)
          (local.get $9)
          (local.get $8)
          (i32.add
           (i32.and
            (local.get $12)
            (i32.const 15)
           )
           (i32.const 238)
          )
         )
        )
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.const 2)
         )
        )
       )
       (block $label$break$L24
        (if
         (i32.gt_s
          (local.tee $10
           (i32.load8_s
            (local.get $6)
           )
          )
          (i32.const -1)
         )
         (if
          (i32.and
           (i32.load16_s
            (i32.add
             (local.tee $12
              (i32.load offset=8
               (local.get $11)
              )
             )
             (i32.shl
              (local.get $10)
              (i32.const 1)
             )
            )
           )
           (i32.const 8192)
          )
          (block
           (loop $while-in
            (block $while-out
             (if
              (i32.eq
               (local.get $7)
               (local.tee $6
                (i32.add
                 (local.get $6)
                 (i32.const 1)
                )
               )
              )
              (block
               (local.set $6
                (local.get $7)
               )
               (br $while-out)
              )
             )
             (br_if $while-out
              (i32.le_s
               (local.tee $10
                (i32.load8_s
                 (local.get $6)
                )
               )
               (i32.const -1)
              )
             )
             (br_if $while-in
              (i32.and
               (i32.load16_s
                (i32.add
                 (i32.shl
                  (local.get $10)
                  (i32.const 1)
                 )
                 (local.get $12)
                )
               )
               (i32.const 8192)
              )
             )
            )
           )
           (local.set $10
            (local.get $9)
           )
           (loop $while-in3
            (local.set $12
             (if (result i32)
              (local.get $8)
              (if (result i32)
               (i32.eq
                (if (result i32)
                 (i32.eq
                  (local.tee $9
                   (i32.load offset=12
                    (local.get $8)
                   )
                  )
                  (i32.load offset=16
                   (local.get $8)
                  )
                 )
                 (call_indirect (type $i32_=>_i32)
                  (local.get $8)
                  (i32.and
                   (i32.load offset=36
                    (i32.load
                     (local.get $8)
                    )
                   )
                   (i32.const 63)
                  )
                 )
                 (i32.load8_u
                  (local.get $9)
                 )
                )
                (i32.const -1)
               )
               (block (result i32)
                (i32.store
                 (local.get $1)
                 (i32.const 0)
                )
                (local.set $8
                 (i32.const 0)
                )
                (i32.const 1)
               )
               (i32.const 0)
              )
              (block (result i32)
               (local.set $8
                (i32.const 0)
               )
               (i32.const 1)
              )
             )
            )
            (block $__rjto$0
             (block $__rjti$0
              (br_if $__rjti$0
               (i32.eqz
                (local.get $10)
               )
              )
              (if
               (i32.eq
                (if (result i32)
                 (i32.eq
                  (local.tee $9
                   (i32.load offset=12
                    (local.get $10)
                   )
                  )
                  (i32.load offset=16
                   (local.get $10)
                  )
                 )
                 (call_indirect (type $i32_=>_i32)
                  (local.get $10)
                  (i32.and
                   (i32.load offset=36
                    (i32.load
                     (local.get $10)
                    )
                   )
                   (i32.const 63)
                  )
                 )
                 (i32.load8_u
                  (local.get $9)
                 )
                )
                (i32.const -1)
               )
               (block
                (i32.store
                 (local.get $2)
                 (i32.const 0)
                )
                (br $__rjti$0)
               )
               (br_if $label$break$L24
                (i32.eqz
                 (local.get $12)
                )
               )
              )
              (br $__rjto$0)
             )
             (br_if $label$break$L24
              (local.get $12)
             )
             (local.set $10
              (i32.const 0)
             )
            )
            (br_if $label$break$L24
             (i32.le_s
              (i32.shr_s
               (i32.shl
                (i32.and
                 (local.tee $9
                  (if (result i32)
                   (i32.eq
                    (local.tee $9
                     (i32.load offset=12
                      (local.get $8)
                     )
                    )
                    (i32.load offset=16
                     (local.get $8)
                    )
                   )
                   (call_indirect (type $i32_=>_i32)
                    (local.get $8)
                    (i32.and
                     (i32.load offset=36
                      (i32.load
                       (local.get $8)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                   (i32.load8_u
                    (local.get $9)
                   )
                  )
                 )
                 (i32.const 255)
                )
                (i32.const 24)
               )
               (i32.const 24)
              )
              (i32.const -1)
             )
            )
            (br_if $label$break$L24
             (i32.eqz
              (i32.and
               (i32.load16_s
                (i32.add
                 (i32.load offset=8
                  (local.get $11)
                 )
                 (i32.shl
                  (i32.shr_s
                   (i32.shl
                    (local.get $9)
                    (i32.const 24)
                   )
                   (i32.const 24)
                  )
                  (i32.const 1)
                 )
                )
               )
               (i32.const 8192)
              )
             )
            )
            (if
             (i32.eq
              (local.tee $9
               (i32.load offset=12
                (local.get $8)
               )
              )
              (i32.load offset=16
               (local.get $8)
              )
             )
             (drop
              (call_indirect (type $i32_=>_i32)
               (local.get $8)
               (i32.and
                (i32.load offset=40
                 (i32.load
                  (local.get $8)
                 )
                )
                (i32.const 63)
               )
              )
             )
             (block
              (i32.store offset=12
               (local.get $8)
               (i32.add
                (local.get $9)
                (i32.const 1)
               )
              )
              (drop
               (i32.load8_u
                (local.get $9)
               )
              )
             )
            )
            (br $while-in3)
           )
          )
         )
        )
        (if
         (i32.ne
          (i32.and
           (call_indirect (type $i32_i32_=>_i32)
            (local.get $11)
            (i32.and
             (if (result i32)
              (i32.eq
               (local.tee $9
                (i32.load offset=12
                 (local.get $8)
                )
               )
               (i32.load offset=16
                (local.get $8)
               )
              )
              (call_indirect (type $i32_=>_i32)
               (local.get $8)
               (i32.and
                (i32.load offset=36
                 (i32.load
                  (local.get $8)
                 )
                )
                (i32.const 63)
               )
              )
              (i32.load8_u
               (local.get $9)
              )
             )
             (i32.const 255)
            )
            (i32.add
             (i32.and
              (i32.load offset=12
               (i32.load
                (local.get $11)
               )
              )
              (i32.const 15)
             )
             (i32.const 66)
            )
           )
           (i32.const 255)
          )
          (i32.and
           (call_indirect (type $i32_i32_=>_i32)
            (local.get $11)
            (i32.load8_s
             (local.get $6)
            )
            (i32.add
             (i32.and
              (i32.load offset=12
               (i32.load
                (local.get $11)
               )
              )
              (i32.const 15)
             )
             (i32.const 66)
            )
           )
           (i32.const 255)
          )
         )
         (block
          (i32.store
           (local.get $4)
           (i32.const 4)
          )
          (br $label$break$L24)
         )
        )
        (if
         (i32.eq
          (local.tee $9
           (i32.load offset=12
            (local.get $8)
           )
          )
          (i32.load offset=16
           (local.get $8)
          )
         )
         (drop
          (call_indirect (type $i32_=>_i32)
           (local.get $8)
           (i32.and
            (i32.load offset=40
             (i32.load
              (local.get $8)
             )
            )
            (i32.const 63)
           )
          )
         )
         (block
          (i32.store offset=12
           (local.get $8)
           (i32.add
            (local.get $9)
            (i32.const 1)
           )
          )
          (drop
           (i32.load8_u
            (local.get $9)
           )
          )
         )
        )
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
       )
      )
      (local.set $10
       (i32.load
        (local.get $4)
       )
      )
      (br $label$continue$L1)
     )
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $4)
    (i32.const 4)
   )
  )
  (local.set $1
   (if (result i32)
    (local.get $8)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $0
         (i32.load offset=12
          (local.get $8)
         )
        )
        (i32.load offset=16
         (local.get $8)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $8)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $8)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $0)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (local.set $8
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (block (result i32)
     (local.set $8
      (i32.const 0)
     )
     (i32.const 1)
    )
   )
  )
  (block $__rjto$4
   (block $__rjti$4
    (block $__rjti$3
     (br_if $__rjti$3
      (i32.eqz
       (local.tee $3
        (i32.load
         (local.get $2)
        )
       )
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $0
          (i32.load offset=12
           (local.get $3)
          )
         )
         (i32.load offset=16
          (local.get $3)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $3)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $3)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $0)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (br $__rjti$3)
      )
      (br_if $__rjti$4
       (i32.eqz
        (local.get $1)
       )
      )
     )
     (br $__rjto$4)
    )
    (br_if $__rjti$4
     (local.get $1)
    )
    (br $__rjto$4)
   )
   (i32.store
    (local.get $4)
    (i32.or
     (i32.load
      (local.get $4)
     )
     (i32.const 2)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $13)
  )
  (local.get $8)
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_u
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
     (i32.const 31)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 24)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_u
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
     (i32.const 12)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 3)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 366)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 13)
    )
   )
   (i32.store
    (local.get $0)
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 60)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (loop $label$continue$L1
   (block $label$break$L1
    (local.set $5
     (if (result i32)
      (local.tee $4
       (i32.load
        (local.get $0)
       )
      )
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $5
           (i32.load offset=12
            (local.get $4)
           )
          )
          (i32.load offset=16
           (local.get $4)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $4)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $4)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $5)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.eqz
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.const 1)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $4
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.get $4)
           )
          )
          (i32.load offset=16
           (local.get $4)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $4)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $4)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $6)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L1
        (i32.eqz
         (local.get $5)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $4
      (if (result i32)
       (local.get $5)
       (block
        (local.set $4
         (i32.const 0)
        )
        (br $label$break$L1)
       )
       (i32.const 0)
      )
     )
    )
    (br_if $label$break$L1
     (i32.le_s
      (i32.shr_s
       (i32.shl
        (i32.and
         (local.tee $5
          (if (result i32)
           (i32.eq
            (local.tee $6
             (i32.load offset=12
              (local.tee $5
               (i32.load
                (local.get $0)
               )
              )
             )
            )
            (i32.load offset=16
             (local.get $5)
            )
           )
           (call_indirect (type $i32_=>_i32)
            (local.get $5)
            (i32.and
             (i32.load offset=36
              (i32.load
               (local.get $5)
              )
             )
             (i32.const 63)
            )
           )
           (i32.load8_u
            (local.get $6)
           )
          )
         )
         (i32.const 255)
        )
        (i32.const 24)
       )
       (i32.const 24)
      )
      (i32.const -1)
     )
    )
    (br_if $label$break$L1
     (i32.eqz
      (i32.and
       (i32.load16_s
        (i32.add
         (i32.load offset=8
          (local.get $3)
         )
         (i32.shl
          (i32.shr_s
           (i32.shl
            (local.get $5)
            (i32.const 24)
           )
           (i32.const 24)
          )
          (i32.const 1)
         )
        )
       )
       (i32.const 8192)
      )
     )
    )
    (if
     (i32.eq
      (local.tee $5
       (i32.load offset=12
        (local.tee $4
         (i32.load
          (local.get $0)
         )
        )
       )
      )
      (i32.load offset=16
       (local.get $4)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $4)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $4)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $4)
       (i32.add
        (local.get $5)
        (i32.const 1)
       )
      )
      (drop
       (i32.load8_u
        (local.get $5)
       )
      )
     )
    )
    (br $label$continue$L1)
   )
  )
  (local.set $0
   (if (result i32)
    (local.tee $3
     (i32.load
      (local.get $0)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $5
         (i32.load offset=12
          (local.get $3)
         )
        )
        (i32.load offset=16
         (local.get $3)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $3)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $5)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $4)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $3
          (i32.load offset=12
           (local.get $4)
          )
         )
         (i32.load offset=16
          (local.get $4)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $4)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $4)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $3)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $0)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $0)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $2)
    (i32.or
     (i32.load
      (local.get $2)
     )
     (i32.const 2)
    )
   )
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $8
   (i32.add
    (local.get $7)
    (i32.const 4)
   )
  )
  (local.set $6
   (i32.load offset=8
    (i32.load
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (local.set $6
   (if (result i32)
    (i32.lt_s
     (local.tee $6
      (i32.load8_s offset=11
       (local.tee $0
        (call_indirect (type $i32_=>_i32)
         (local.get $0)
         (i32.and
          (local.get $6)
          (i32.const 63)
         )
        )
       )
      )
     )
     (i32.const 0)
    )
    (i32.load offset=4
     (local.get $0)
    )
    (i32.and
     (local.get $6)
     (i32.const 255)
    )
   )
  )
  (if
   (i32.eq
    (i32.sub
     (i32.const 0)
     (if (result i32)
      (i32.lt_s
       (local.tee $9
        (i32.load8_s offset=23
         (local.get $0)
        )
       )
       (i32.const 0)
      )
      (i32.load offset=16
       (local.get $0)
      )
      (i32.and
       (local.get $9)
       (i32.const 255)
      )
     )
    )
    (local.get $6)
   )
   (i32.store
    (local.get $4)
    (i32.or
     (i32.load
      (local.get $4)
     )
     (i32.const 4)
    )
   )
   (block $do-once
    (i32.store
     (local.get $7)
     (i32.load
      (local.get $3)
     )
    )
    (i32.store
     (local.get $8)
     (i32.load
      (local.get $7)
     )
    )
    (if
     (i32.and
      (i32.eqz
       (local.tee $2
        (i32.sub
         (call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb
          (local.get $2)
          (local.get $8)
          (local.get $0)
          (i32.add
           (local.get $0)
           (i32.const 24)
          )
          (local.get $5)
          (local.get $4)
          (i32.const 0)
         )
         (local.get $0)
        )
       )
      )
      (i32.eq
       (local.tee $0
        (i32.load
         (local.get $1)
        )
       )
       (i32.const 12)
      )
     )
     (block
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (br $do-once)
     )
    )
    (if
     (i32.and
      (i32.eq
       (local.get $2)
       (i32.const 12)
      )
      (i32.lt_s
       (local.get $0)
       (i32.const 12)
      )
     )
     (i32.store
      (local.get $1)
      (i32.add
       (local.get $0)
       (i32.const 12)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 61)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 1)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 7)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 4)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $3)
     )
     (i32.const 4)
    )
   )
   (i32.store
    (local.get $0)
    (i32.add
     (if (result i32)
      (i32.lt_s
       (local.get $1)
       (i32.const 69)
      )
      (i32.add
       (local.get $1)
       (i32.const 2000)
      )
      (select
       (i32.add
        (local.get $1)
        (i32.const 1900)
       )
       (local.get $1)
       (i32.lt_s
        (local.get $1)
        (i32.const 100)
       )
      )
     )
     (i32.const -1900)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 4)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $3)
     )
     (i32.const 4)
    )
   )
   (i32.store
    (local.get $0)
    (i32.add
     (local.get $1)
     (i32.const -1900)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (if (result i32)
    (local.tee $4
     (i32.load
      (local.get $0)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $5
         (i32.load offset=12
          (local.get $4)
         )
        )
        (i32.load offset=16
         (local.get $4)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $4)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $4)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $5)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $label$break$L22
   (block $__rjti$3
    (block $__rjti$2
     (if
      (local.tee $4
       (i32.load
        (local.get $1)
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.get $4)
           )
          )
          (i32.load offset=16
           (local.get $4)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $4)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $4)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $6)
         )
        )
        (i32.const -1)
       )
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (if
        (local.get $5)
        (br $__rjti$3)
        (br $__rjti$2)
       )
      )
     )
     (if
      (i32.eqz
       (local.get $5)
      )
      (block
       (local.set $4
        (i32.const 0)
       )
       (br $__rjti$3)
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.or
      (i32.load
       (local.get $2)
      )
      (i32.const 6)
     )
    )
    (br $label$break$L22)
   )
   (if
    (i32.ne
     (i32.and
      (call_indirect (type $i32_i32_i32_=>_i32)
       (local.get $3)
       (i32.and
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.tee $5
             (i32.load
              (local.get $0)
             )
            )
           )
          )
          (i32.load offset=16
           (local.get $5)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $5)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $6)
         )
        )
        (i32.const 255)
       )
       (i32.const 0)
       (i32.add
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 31)
        )
        (i32.const 82)
       )
      )
      (i32.const 255)
     )
     (i32.const 37)
    )
    (block
     (i32.store
      (local.get $2)
      (i32.or
       (i32.load
        (local.get $2)
       )
       (i32.const 4)
      )
     )
     (br $label$break$L22)
    )
   )
   (if
    (i32.eq
     (local.tee $5
      (i32.load offset=12
       (local.tee $3
        (i32.load
         (local.get $0)
        )
       )
      )
     )
     (i32.load offset=16
      (local.get $3)
     )
    )
    (drop
     (call_indirect (type $i32_=>_i32)
      (local.get $3)
      (i32.and
       (i32.load offset=40
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 63)
      )
     )
    )
    (block
     (i32.store offset=12
      (local.get $3)
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (drop
      (i32.load8_u
       (local.get $5)
      )
     )
    )
   )
   (local.set $0
    (if (result i32)
     (local.tee $3
      (i32.load
       (local.get $0)
      )
     )
     (if (result i32)
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $5
          (i32.load offset=12
           (local.get $3)
          )
         )
         (i32.load offset=16
          (local.get $3)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $3)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $3)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $5)
        )
       )
       (i32.const -1)
      )
      (block (result i32)
       (i32.store
        (local.get $0)
        (i32.const 0)
       )
       (i32.const 1)
      )
      (i32.eqz
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.const 1)
    )
   )
   (block $__rjto$0
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.get $4)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $3
          (i32.load offset=12
           (local.get $4)
          )
         )
         (i32.load offset=16
          (local.get $4)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $4)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $4)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $3)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$0)
      )
      (br_if $label$break$L22
       (local.get $0)
      )
     )
     (br $__rjto$0)
    )
    (br_if $label$break$L22
     (i32.eqz
      (local.get $0)
     )
    )
   )
   (i32.store
    (local.get $2)
    (i32.or
     (i32.load
      (local.get $2)
     )
     (i32.const 2)
    )
   )
  )
 )
 (func $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $5
   (if (result i32)
    (local.tee $5
     (i32.load
      (local.get $0)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $8
         (i32.load offset=12
          (local.get $5)
         )
        )
        (i32.load offset=16
         (local.get $5)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $5)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $8)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $label$break$L22
   (block $__rjti$3
    (block $__rjti$2
     (if
      (local.tee $9
       (i32.load
        (local.get $1)
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $8
           (i32.load offset=12
            (local.get $9)
           )
          )
          (i32.load offset=16
           (local.get $9)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $9)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $9)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load8_u
          (local.get $8)
         )
        )
        (i32.const -1)
       )
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (if
        (local.get $5)
        (br $__rjti$3)
        (br $__rjti$2)
       )
      )
     )
     (if
      (i32.eqz
       (local.get $5)
      )
      (block
       (local.set $9
        (i32.const 0)
       )
       (br $__rjti$3)
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.or
      (i32.load
       (local.get $2)
      )
      (i32.const 6)
     )
    )
    (local.set $4
     (i32.const 0)
    )
    (br $label$break$L22)
   )
   (if
    (i32.gt_s
     (i32.shr_s
      (i32.shl
       (local.tee $8
        (i32.and
         (local.tee $5
          (if (result i32)
           (i32.eq
            (local.tee $8
             (i32.load offset=12
              (local.tee $5
               (i32.load
                (local.get $0)
               )
              )
             )
            )
            (i32.load offset=16
             (local.get $5)
            )
           )
           (call_indirect (type $i32_=>_i32)
            (local.get $5)
            (i32.and
             (i32.load offset=36
              (i32.load
               (local.get $5)
              )
             )
             (i32.const 63)
            )
           )
           (i32.load8_u
            (local.get $8)
           )
          )
         )
         (i32.const 255)
        )
       )
       (i32.const 24)
      )
      (i32.const 24)
     )
     (i32.const -1)
    )
    (if
     (i32.and
      (i32.load16_s
       (i32.add
        (i32.load offset=8
         (local.get $3)
        )
        (i32.shl
         (i32.shr_s
          (i32.shl
           (local.get $5)
           (i32.const 24)
          )
          (i32.const 24)
         )
         (i32.const 1)
        )
       )
      )
      (i32.const 2048)
     )
     (block
      (local.set $8
       (call_indirect (type $i32_i32_i32_=>_i32)
        (local.get $3)
        (local.get $8)
        (i32.const 0)
        (i32.add
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $3)
           )
          )
          (i32.const 31)
         )
         (i32.const 82)
        )
       )
      )
      (if
       (i32.eq
        (local.tee $5
         (i32.load offset=12
          (local.tee $6
           (i32.load
            (local.get $0)
           )
          )
         )
        )
        (i32.load offset=16
         (local.get $6)
        )
       )
       (drop
        (call_indirect (type $i32_=>_i32)
         (local.get $6)
         (i32.and
          (i32.load offset=40
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 63)
         )
        )
       )
       (block
        (i32.store offset=12
         (local.get $6)
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (drop
         (i32.load8_u
          (local.get $5)
         )
        )
       )
      )
      (local.set $6
       (i32.shr_s
        (i32.shl
         (local.get $8)
         (i32.const 24)
        )
        (i32.const 24)
       )
      )
      (local.set $8
       (local.get $4)
      )
      (local.set $5
       (local.get $9)
      )
      (loop $while-in
       (block $while-out
        (local.set $4
         (i32.add
          (local.get $6)
          (i32.const -48)
         )
        )
        (local.set $10
         (if (result i32)
          (local.tee $10
           (i32.load
            (local.get $0)
           )
          )
          (if (result i32)
           (i32.eq
            (if (result i32)
             (i32.eq
              (local.tee $6
               (i32.load offset=12
                (local.get $10)
               )
              )
              (i32.load offset=16
               (local.get $10)
              )
             )
             (call_indirect (type $i32_=>_i32)
              (local.get $10)
              (i32.and
               (i32.load offset=36
                (i32.load
                 (local.get $10)
                )
               )
               (i32.const 63)
              )
             )
             (i32.load8_u
              (local.get $6)
             )
            )
            (i32.const -1)
           )
           (block (result i32)
            (i32.store
             (local.get $0)
             (i32.const 0)
            )
            (i32.const 1)
           )
           (i32.eqz
            (i32.load
             (local.get $0)
            )
           )
          )
          (i32.const 1)
         )
        )
        (local.set $6
         (if (result i32)
          (local.get $5)
          (if (result i32)
           (i32.eq
            (if (result i32)
             (i32.eq
              (local.tee $6
               (i32.load offset=12
                (local.get $5)
               )
              )
              (i32.load offset=16
               (local.get $5)
              )
             )
             (call_indirect (type $i32_=>_i32)
              (local.get $5)
              (i32.and
               (i32.load offset=36
                (i32.load
                 (local.get $5)
                )
               )
               (i32.const 63)
              )
             )
             (i32.load8_u
              (local.get $6)
             )
            )
            (i32.const -1)
           )
           (block (result i32)
            (i32.store
             (local.get $1)
             (i32.const 0)
            )
            (local.set $9
             (i32.const 0)
            )
            (local.set $5
             (i32.const 0)
            )
            (i32.const 1)
           )
           (i32.const 0)
          )
          (block (result i32)
           (local.set $5
            (i32.const 0)
           )
           (i32.const 1)
          )
         )
        )
        (local.set $7
         (i32.load
          (local.get $0)
         )
        )
        (br_if $while-out
         (i32.eqz
          (i32.and
           (i32.xor
            (local.get $6)
            (local.get $10)
           )
           (i32.gt_s
            (local.get $8)
            (i32.const 1)
           )
          )
         )
        )
        (br_if $label$break$L22
         (i32.le_s
          (i32.shr_s
           (i32.shl
            (local.tee $6
             (i32.and
              (local.tee $10
               (if (result i32)
                (i32.eq
                 (local.tee $6
                  (i32.load offset=12
                   (local.get $7)
                  )
                 )
                 (i32.load offset=16
                  (local.get $7)
                 )
                )
                (call_indirect (type $i32_=>_i32)
                 (local.get $7)
                 (i32.and
                  (i32.load offset=36
                   (i32.load
                    (local.get $7)
                   )
                  )
                  (i32.const 63)
                 )
                )
                (i32.load8_u
                 (local.get $6)
                )
               )
              )
              (i32.const 255)
             )
            )
            (i32.const 24)
           )
           (i32.const 24)
          )
          (i32.const -1)
         )
        )
        (br_if $label$break$L22
         (i32.eqz
          (i32.and
           (i32.load16_s
            (i32.add
             (i32.load offset=8
              (local.get $3)
             )
             (i32.shl
              (i32.shr_s
               (i32.shl
                (local.get $10)
                (i32.const 24)
               )
               (i32.const 24)
              )
              (i32.const 1)
             )
            )
           )
           (i32.const 2048)
          )
         )
        )
        (local.set $8
         (i32.add
          (local.get $8)
          (i32.const -1)
         )
        )
        (local.set $6
         (call_indirect (type $i32_i32_i32_=>_i32)
          (local.get $3)
          (local.get $6)
          (i32.const 0)
          (i32.add
           (i32.and
            (i32.load offset=36
             (i32.load
              (local.get $3)
             )
            )
            (i32.const 31)
           )
           (i32.const 82)
          )
         )
        )
        (if
         (i32.eq
          (local.tee $10
           (i32.load offset=12
            (local.tee $7
             (i32.load
              (local.get $0)
             )
            )
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (drop
          (call_indirect (type $i32_=>_i32)
           (local.get $7)
           (i32.and
            (i32.load offset=40
             (i32.load
              (local.get $7)
             )
            )
            (i32.const 63)
           )
          )
         )
         (block
          (i32.store offset=12
           (local.get $7)
           (i32.add
            (local.get $10)
            (i32.const 1)
           )
          )
          (drop
           (i32.load8_u
            (local.get $10)
           )
          )
         )
        )
        (local.set $6
         (i32.add
          (i32.mul
           (local.get $4)
           (i32.const 10)
          )
          (i32.shr_s
           (i32.shl
            (local.get $6)
            (i32.const 24)
           )
           (i32.const 24)
          )
         )
        )
        (br $while-in)
       )
      )
      (local.set $3
       (if (result i32)
        (local.get $7)
        (if (result i32)
         (i32.eq
          (if (result i32)
           (i32.eq
            (local.tee $3
             (i32.load offset=12
              (local.get $7)
             )
            )
            (i32.load offset=16
             (local.get $7)
            )
           )
           (call_indirect (type $i32_=>_i32)
            (local.get $7)
            (i32.and
             (i32.load offset=36
              (i32.load
               (local.get $7)
              )
             )
             (i32.const 63)
            )
           )
           (i32.load8_u
            (local.get $3)
           )
          )
          (i32.const -1)
         )
         (block (result i32)
          (i32.store
           (local.get $0)
           (i32.const 0)
          )
          (i32.const 1)
         )
         (i32.eqz
          (i32.load
           (local.get $0)
          )
         )
        )
        (i32.const 1)
       )
      )
      (block $__rjto$0
       (block $__rjti$0
        (br_if $__rjti$0
         (i32.eqz
          (local.get $9)
         )
        )
        (if
         (i32.eq
          (if (result i32)
           (i32.eq
            (local.tee $0
             (i32.load offset=12
              (local.get $9)
             )
            )
            (i32.load offset=16
             (local.get $9)
            )
           )
           (call_indirect (type $i32_=>_i32)
            (local.get $9)
            (i32.and
             (i32.load offset=36
              (i32.load
               (local.get $9)
              )
             )
             (i32.const 63)
            )
           )
           (i32.load8_u
            (local.get $0)
           )
          )
          (i32.const -1)
         )
         (block
          (i32.store
           (local.get $1)
           (i32.const 0)
          )
          (br $__rjti$0)
         )
         (br_if $label$break$L22
          (local.get $3)
         )
        )
        (br $__rjto$0)
       )
       (br_if $label$break$L22
        (i32.eqz
         (local.get $3)
        )
       )
      )
      (i32.store
       (local.get $2)
       (i32.or
        (i32.load
         (local.get $2)
        )
        (i32.const 2)
       )
      )
      (br $label$break$L22)
     )
    )
   )
   (i32.store
    (local.get $2)
    (i32.or
     (i32.load
      (local.get $2)
     )
     (i32.const 4)
    )
   )
   (local.set $4
    (i32.const 0)
   )
  )
  (local.get $4)
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $6)
     (i32.const 8)
    )
   )
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $6)
     (i32.const 12)
    )
   )
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (local.get $5)
    (i32.const 34544)
    (i32.const 34576)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $9
   (i32.add
    (local.get $6)
    (i32.const 12)
   )
  )
  (local.set $10
   (i32.add
    (local.get $6)
    (i32.const 8)
   )
  )
  (local.set $8
   (i32.load offset=20
    (i32.load
     (local.tee $7
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (local.set $7
   (call_indirect (type $i32_=>_i32)
    (local.get $7)
    (i32.and
     (local.get $8)
     (i32.const 63)
    )
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (local.set $1
   (select
    (i32.load
     (local.get $7)
    )
    (local.get $7)
    (local.tee $8
     (i32.lt_s
      (local.tee $2
       (i32.load8_s offset=11
        (local.get $7)
       )
      )
      (i32.const 0)
     )
    )
   )
  )
  (local.set $2
   (i32.add
    (i32.shl
     (select
      (i32.load offset=4
       (local.get $7)
      )
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
      (local.get $8)
     )
     (i32.const 2)
    )
    (local.get $1)
   )
  )
  (i32.store
   (local.get $10)
   (i32.load offset=4
    (local.get $6)
   )
  )
  (i32.store
   (local.get $9)
   (i32.load
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
    (local.get $0)
    (local.get $10)
    (local.get $9)
    (local.get $3)
    (local.get $4)
    (local.get $5)
    (local.get $1)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $6)
     (i32.const 4)
    )
   )
   (local.tee $3
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (i32.add
    (i32.load offset=4
     (local.get $3)
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $7)
    (i32.const 54432)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $7)
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $6)
   )
  )
  (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE
   (local.get $0)
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
   (local.get $1)
   (local.get $7)
   (local.get $4)
   (local.get $3)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $6)
     (i32.const 4)
    )
   )
   (local.tee $3
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (i32.add
    (i32.load offset=4
     (local.get $3)
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $7)
    (i32.const 54432)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $7)
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $6)
   )
  )
  (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE
   (local.get $0)
   (i32.add
    (local.get $5)
    (i32.const 16)
   )
   (local.get $1)
   (local.get $7)
   (local.get $4)
   (local.get $3)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (local.get $6)
     (i32.const 4)
    )
   )
   (local.tee $3
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (i32.add
    (i32.load offset=4
     (local.get $3)
    )
    (i32.const 1)
   )
  )
  (local.set $3
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $0)
    (i32.const 54432)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $0)
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.get $0)
   (i32.load
    (local.get $6)
   )
  )
  (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE
   (i32.add
    (local.get $5)
    (i32.const 20)
   )
   (local.get $1)
   (local.get $0)
   (local.get $4)
   (local.get $3)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 112)
   )
  )
  (local.set $11
   (i32.sub
    (local.get $7)
    (i32.const -64)
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $7)
     (i32.const 128)
    )
   )
   (local.tee $9
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $9)
   (i32.add
    (i32.load offset=4
     (local.get $9)
    )
    (i32.const 1)
   )
  )
  (local.set $9
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $8)
    (i32.const 54432)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $8)
  )
  (local.set $0
   (block $__rjto$0 (result i32)
    (block $__rjti$0
     (block $switch-default
      (block $switch-case26
       (block $switch-case25
        (block $switch-case24
         (block $switch-case23
          (block $switch-case22
           (block $switch-case21
            (block $switch-case20
             (block $switch-case19
              (block $switch-case18
               (block $switch-case17
                (block $switch-case16
                 (block $switch-case15
                  (block $switch-case13
                   (block $switch-case12
                    (block $switch-case11
                     (block $switch-case10
                      (block $switch-case9
                       (block $switch-case8
                        (block $switch-case7
                         (block $switch-case6
                          (block $switch-case4
                           (block $switch-case3
                            (block $switch-case0
                             (br_table $switch-case26 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-case3 $switch-default $switch-case7 $switch-default $switch-case8 $switch-default $switch-case9 $switch-case10 $switch-default $switch-default $switch-default $switch-case13 $switch-default $switch-default $switch-default $switch-default $switch-case18 $switch-case19 $switch-case20 $switch-default $switch-default $switch-default $switch-case23 $switch-case25 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-case3 $switch-case4 $switch-case6 $switch-case6 $switch-default $switch-default $switch-case3 $switch-default $switch-case11 $switch-default $switch-default $switch-case12 $switch-case15 $switch-default $switch-case16 $switch-default $switch-case17 $switch-default $switch-case15 $switch-default $switch-default $switch-case21 $switch-case22 $switch-case24 $switch-default
                              (i32.sub
                               (i32.shr_s
                                (i32.shl
                                 (local.get $6)
                                 (i32.const 24)
                                )
                                (i32.const 24)
                               )
                               (i32.const 37)
                              )
                             )
                            )
                            (i32.store offset=124
                             (local.get $7)
                             (i32.load
                              (local.get $2)
                             )
                            )
                            (i32.store
                             (local.get $8)
                             (i32.load offset=124
                              (local.get $7)
                             )
                            )
                            (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE
                             (local.get $0)
                             (i32.add
                              (local.get $5)
                              (i32.const 24)
                             )
                             (local.get $1)
                             (local.get $8)
                             (local.get $4)
                             (local.get $9)
                            )
                            (br $__rjti$0)
                           )
                           (i32.store offset=120
                            (local.get $7)
                            (i32.load
                             (local.get $2)
                            )
                           )
                           (i32.store
                            (local.get $8)
                            (i32.load offset=120
                             (local.get $7)
                            )
                           )
                           (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE
                            (local.get $0)
                            (i32.add
                             (local.get $5)
                             (i32.const 16)
                            )
                            (local.get $1)
                            (local.get $8)
                            (local.get $4)
                            (local.get $9)
                           )
                           (br $__rjti$0)
                          )
                          (local.set $9
                           (i32.load offset=12
                            (i32.load
                             (local.tee $6
                              (i32.add
                               (local.get $0)
                               (i32.const 8)
                              )
                             )
                            )
                           )
                          )
                          (local.set $6
                           (call_indirect (type $i32_=>_i32)
                            (local.get $6)
                            (i32.and
                             (local.get $9)
                             (i32.const 63)
                            )
                           )
                          )
                          (i32.store offset=116
                           (local.get $7)
                           (i32.load
                            (local.get $1)
                           )
                          )
                          (i32.store offset=108
                           (local.get $7)
                           (i32.load
                            (local.get $2)
                           )
                          )
                          (local.set $2
                           (i32.add
                            (local.tee $11
                             (select
                              (i32.load
                               (local.get $6)
                              )
                              (local.get $6)
                              (local.tee $9
                               (i32.lt_s
                                (local.tee $2
                                 (i32.load8_s offset=11
                                  (local.get $6)
                                 )
                                )
                                (i32.const 0)
                               )
                              )
                             )
                            )
                            (i32.shl
                             (select
                              (i32.load offset=4
                               (local.get $6)
                              )
                              (i32.and
                               (local.get $2)
                               (i32.const 255)
                              )
                              (local.get $9)
                             )
                             (i32.const 2)
                            )
                           )
                          )
                          (i32.store
                           (local.get $10)
                           (i32.load offset=116
                            (local.get $7)
                           )
                          )
                          (i32.store
                           (local.get $8)
                           (i32.load offset=108
                            (local.get $7)
                           )
                          )
                          (i32.store
                           (local.get $1)
                           (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                            (local.get $0)
                            (local.get $10)
                            (local.get $8)
                            (local.get $3)
                            (local.get $4)
                            (local.get $5)
                            (local.get $11)
                            (local.get $2)
                           )
                          )
                          (br $__rjti$0)
                         )
                         (i32.store offset=104
                          (local.get $7)
                          (i32.load
                           (local.get $2)
                          )
                         )
                         (i32.store
                          (local.get $8)
                          (i32.load offset=104
                           (local.get $7)
                          )
                         )
                         (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE
                          (i32.add
                           (local.get $5)
                           (i32.const 12)
                          )
                          (local.get $1)
                          (local.get $8)
                          (local.get $4)
                          (local.get $9)
                         )
                         (br $__rjti$0)
                        )
                        (i32.store offset=100
                         (local.get $7)
                         (i32.load
                          (local.get $1)
                         )
                        )
                        (i32.store offset=96
                         (local.get $7)
                         (i32.load
                          (local.get $2)
                         )
                        )
                        (i32.store
                         (local.get $10)
                         (i32.load offset=100
                          (local.get $7)
                         )
                        )
                        (i32.store
                         (local.get $8)
                         (i32.load offset=96
                          (local.get $7)
                         )
                        )
                        (i32.store
                         (local.get $1)
                         (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                          (local.get $0)
                          (local.get $10)
                          (local.get $8)
                          (local.get $3)
                          (local.get $4)
                          (local.get $5)
                          (i32.const 34368)
                          (i32.const 34400)
                         )
                        )
                        (br $__rjti$0)
                       )
                       (i32.store offset=92
                        (local.get $7)
                        (i32.load
                         (local.get $1)
                        )
                       )
                       (i32.store offset=88
                        (local.get $7)
                        (i32.load
                         (local.get $2)
                        )
                       )
                       (i32.store
                        (local.get $10)
                        (i32.load offset=92
                         (local.get $7)
                        )
                       )
                       (i32.store
                        (local.get $8)
                        (i32.load offset=88
                         (local.get $7)
                        )
                       )
                       (i32.store
                        (local.get $1)
                        (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                         (local.get $0)
                         (local.get $10)
                         (local.get $8)
                         (local.get $3)
                         (local.get $4)
                         (local.get $5)
                         (i32.const 34400)
                         (i32.const 34432)
                        )
                       )
                       (br $__rjti$0)
                      )
                      (i32.store offset=84
                       (local.get $7)
                       (i32.load
                        (local.get $2)
                       )
                      )
                      (i32.store
                       (local.get $8)
                       (i32.load offset=84
                        (local.get $7)
                       )
                      )
                      (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE
                       (i32.add
                        (local.get $5)
                        (i32.const 8)
                       )
                       (local.get $1)
                       (local.get $8)
                       (local.get $4)
                       (local.get $9)
                      )
                      (br $__rjti$0)
                     )
                     (i32.store offset=80
                      (local.get $7)
                      (i32.load
                       (local.get $2)
                      )
                     )
                     (i32.store
                      (local.get $8)
                      (i32.load offset=80
                       (local.get $7)
                      )
                     )
                     (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE
                      (i32.add
                       (local.get $5)
                       (i32.const 8)
                      )
                      (local.get $1)
                      (local.get $8)
                      (local.get $4)
                      (local.get $9)
                     )
                     (br $__rjti$0)
                    )
                    (i32.store offset=76
                     (local.get $7)
                     (i32.load
                      (local.get $2)
                     )
                    )
                    (i32.store
                     (local.get $8)
                     (i32.load offset=76
                      (local.get $7)
                     )
                    )
                    (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE
                     (i32.add
                      (local.get $5)
                      (i32.const 28)
                     )
                     (local.get $1)
                     (local.get $8)
                     (local.get $4)
                     (local.get $9)
                    )
                    (br $__rjti$0)
                   )
                   (i32.store offset=72
                    (local.get $7)
                    (i32.load
                     (local.get $2)
                    )
                   )
                   (i32.store
                    (local.get $8)
                    (i32.load offset=72
                     (local.get $7)
                    )
                   )
                   (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE
                    (i32.add
                     (local.get $5)
                     (i32.const 16)
                    )
                    (local.get $1)
                    (local.get $8)
                    (local.get $4)
                    (local.get $9)
                   )
                   (br $__rjti$0)
                  )
                  (i32.store offset=68
                   (local.get $7)
                   (i32.load
                    (local.get $2)
                   )
                  )
                  (i32.store
                   (local.get $8)
                   (i32.load offset=68
                    (local.get $7)
                   )
                  )
                  (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE
                   (i32.add
                    (local.get $5)
                    (i32.const 4)
                   )
                   (local.get $1)
                   (local.get $8)
                   (local.get $4)
                   (local.get $9)
                  )
                  (br $__rjti$0)
                 )
                 (i32.store
                  (local.get $11)
                  (i32.load
                   (local.get $2)
                  )
                 )
                 (i32.store
                  (local.get $8)
                  (i32.load
                   (local.get $11)
                  )
                 )
                 (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE
                  (local.get $1)
                  (local.get $8)
                  (local.get $4)
                  (local.get $9)
                 )
                 (br $__rjti$0)
                )
                (i32.store offset=60
                 (local.get $7)
                 (i32.load
                  (local.get $2)
                 )
                )
                (i32.store
                 (local.get $8)
                 (i32.load offset=60
                  (local.get $7)
                 )
                )
                (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE
                 (local.get $0)
                 (i32.add
                  (local.get $5)
                  (i32.const 8)
                 )
                 (local.get $1)
                 (local.get $8)
                 (local.get $4)
                 (local.get $9)
                )
                (br $__rjti$0)
               )
               (i32.store offset=56
                (local.get $7)
                (i32.load
                 (local.get $1)
                )
               )
               (i32.store offset=52
                (local.get $7)
                (i32.load
                 (local.get $2)
                )
               )
               (i32.store
                (local.get $10)
                (i32.load offset=56
                 (local.get $7)
                )
               )
               (i32.store
                (local.get $8)
                (i32.load offset=52
                 (local.get $7)
                )
               )
               (i32.store
                (local.get $1)
                (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                 (local.get $0)
                 (local.get $10)
                 (local.get $8)
                 (local.get $3)
                 (local.get $4)
                 (local.get $5)
                 (i32.const 34432)
                 (i32.const 34476)
                )
               )
               (br $__rjti$0)
              )
              (i32.store offset=48
               (local.get $7)
               (i32.load
                (local.get $1)
               )
              )
              (i32.store offset=44
               (local.get $7)
               (i32.load
                (local.get $2)
               )
              )
              (i32.store
               (local.get $10)
               (i32.load offset=48
                (local.get $7)
               )
              )
              (i32.store
               (local.get $8)
               (i32.load offset=44
                (local.get $7)
               )
              )
              (i32.store
               (local.get $1)
               (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                (local.get $0)
                (local.get $10)
                (local.get $8)
                (local.get $3)
                (local.get $4)
                (local.get $5)
                (i32.const 34480)
                (i32.const 34500)
               )
              )
              (br $__rjti$0)
             )
             (i32.store offset=40
              (local.get $7)
              (i32.load
               (local.get $2)
              )
             )
             (i32.store
              (local.get $8)
              (i32.load offset=40
               (local.get $7)
              )
             )
             (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE
              (local.get $5)
              (local.get $1)
              (local.get $8)
              (local.get $4)
              (local.get $9)
             )
             (br $__rjti$0)
            )
            (i32.store offset=36
             (local.get $7)
             (i32.load
              (local.get $1)
             )
            )
            (i32.store offset=32
             (local.get $7)
             (i32.load
              (local.get $2)
             )
            )
            (i32.store
             (local.get $10)
             (i32.load offset=36
              (local.get $7)
             )
            )
            (i32.store
             (local.get $8)
             (i32.load offset=32
              (local.get $7)
             )
            )
            (i32.store
             (local.get $1)
             (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
              (local.get $0)
              (local.get $10)
              (local.get $8)
              (local.get $3)
              (local.get $4)
              (local.get $5)
              (i32.const 34512)
              (i32.const 34544)
             )
            )
            (br $__rjti$0)
           )
           (i32.store offset=28
            (local.get $7)
            (i32.load
             (local.get $2)
            )
           )
           (i32.store
            (local.get $8)
            (i32.load offset=28
             (local.get $7)
            )
           )
           (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE
            (i32.add
             (local.get $5)
             (i32.const 24)
            )
            (local.get $1)
            (local.get $8)
            (local.get $4)
            (local.get $9)
           )
           (br $__rjti$0)
          )
          (local.set $6
           (i32.load offset=20
            (i32.load
             (local.get $0)
            )
           )
          )
          (i32.store offset=24
           (local.get $7)
           (i32.load
            (local.get $1)
           )
          )
          (i32.store offset=20
           (local.get $7)
           (i32.load
            (local.get $2)
           )
          )
          (i32.store
           (local.get $10)
           (i32.load offset=24
            (local.get $7)
           )
          )
          (i32.store
           (local.get $8)
           (i32.load offset=20
            (local.get $7)
           )
          )
          (br $__rjto$0
           (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_i32)
            (local.get $0)
            (local.get $10)
            (local.get $8)
            (local.get $3)
            (local.get $4)
            (local.get $5)
            (i32.add
             (i32.and
              (local.get $6)
              (i32.const 63)
             )
             (i32.const 166)
            )
           )
          )
         )
         (local.set $9
          (i32.load offset=24
           (i32.load
            (local.tee $6
             (i32.add
              (local.get $0)
              (i32.const 8)
             )
            )
           )
          )
         )
         (local.set $6
          (call_indirect (type $i32_=>_i32)
           (local.get $6)
           (i32.and
            (local.get $9)
            (i32.const 63)
           )
          )
         )
         (i32.store offset=16
          (local.get $7)
          (i32.load
           (local.get $1)
          )
         )
         (i32.store offset=12
          (local.get $7)
          (i32.load
           (local.get $2)
          )
         )
         (local.set $2
          (i32.add
           (local.tee $11
            (select
             (i32.load
              (local.get $6)
             )
             (local.get $6)
             (local.tee $9
              (i32.lt_s
               (local.tee $2
                (i32.load8_s offset=11
                 (local.get $6)
                )
               )
               (i32.const 0)
              )
             )
            )
           )
           (i32.shl
            (select
             (i32.load offset=4
              (local.get $6)
             )
             (i32.and
              (local.get $2)
              (i32.const 255)
             )
             (local.get $9)
            )
            (i32.const 2)
           )
          )
         )
         (i32.store
          (local.get $10)
          (i32.load offset=16
           (local.get $7)
          )
         )
         (i32.store
          (local.get $8)
          (i32.load offset=12
           (local.get $7)
          )
         )
         (i32.store
          (local.get $1)
          (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
           (local.get $0)
           (local.get $10)
           (local.get $8)
           (local.get $3)
           (local.get $4)
           (local.get $5)
           (local.get $11)
           (local.get $2)
          )
         )
         (br $__rjti$0)
        )
        (i32.store offset=8
         (local.get $7)
         (i32.load
          (local.get $2)
         )
        )
        (i32.store
         (local.get $8)
         (i32.load offset=8
          (local.get $7)
         )
        )
        (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE
         (i32.add
          (local.get $5)
          (i32.const 20)
         )
         (local.get $1)
         (local.get $8)
         (local.get $4)
         (local.get $9)
        )
        (br $__rjti$0)
       )
       (i32.store offset=4
        (local.get $7)
        (i32.load
         (local.get $2)
        )
       )
       (i32.store
        (local.get $8)
        (i32.load offset=4
         (local.get $7)
        )
       )
       (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE
        (i32.add
         (local.get $5)
         (i32.const 20)
        )
        (local.get $1)
        (local.get $8)
        (local.get $4)
        (local.get $9)
       )
       (br $__rjti$0)
      )
      (i32.store
       (local.get $7)
       (i32.load
        (local.get $2)
       )
      )
      (i32.store
       (local.get $8)
       (i32.load
        (local.get $7)
       )
      )
      (call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE
       (local.get $1)
       (local.get $8)
       (local.get $4)
       (local.get $9)
      )
      (br $__rjti$0)
     )
     (i32.store
      (local.get $4)
      (i32.or
       (i32.load
        (local.get $4)
       )
       (i32.const 4)
      )
     )
    )
    (i32.load
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__220__time_get_c_storageIwE7__weeksEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52720)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52720)
    )
    (block
     (call $__ZNSt3__2L11init_wweeksEv)
     (i32.store
      (i32.const 54596)
      (i32.const 52384)
     )
     (call $___cxa_guard_release
      (i32.const 52720)
     )
    )
   )
  )
  (i32.load
   (i32.const 54596)
  )
 )
 (func $__ZNKSt3__220__time_get_c_storageIwE8__monthsEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52704)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52704)
    )
    (block
     (call $__ZNSt3__2L12init_wmonthsEv)
     (i32.store
      (i32.const 54592)
      (i32.const 52096)
     )
     (call $___cxa_guard_release
      (i32.const 52704)
     )
    )
   )
  )
  (i32.load
   (i32.const 54592)
  )
 )
 (func $__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52688)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52688)
    )
    (block
     (call $__ZNSt3__2L11init_wam_pmEv)
     (i32.store
      (i32.const 54588)
      (i32.const 52064)
     )
     (call $___cxa_guard_release
      (i32.const 52688)
     )
    )
   )
  )
  (i32.load
   (i32.const 54588)
  )
 )
 (func $__ZNKSt3__220__time_get_c_storageIwE3__cEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52680)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52680)
    )
    (block
     (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm
      (i32.const 54576)
      (i32.const 38684)
      (call $_wcslen
       (i32.const 38684)
      )
     )
     (call $___cxa_guard_release
      (i32.const 52680)
     )
    )
   )
  )
  (i32.const 54576)
 )
 (func $__ZNKSt3__220__time_get_c_storageIwE3__rEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52672)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52672)
    )
    (block
     (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm
      (i32.const 54564)
      (i32.const 38636)
      (call $_wcslen
       (i32.const 38636)
      )
     )
     (call $___cxa_guard_release
      (i32.const 52672)
     )
    )
   )
  )
  (i32.const 54564)
 )
 (func $__ZNKSt3__220__time_get_c_storageIwE3__xEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52664)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52664)
    )
    (block
     (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm
      (i32.const 54552)
      (i32.const 38600)
      (call $_wcslen
       (i32.const 38600)
      )
     )
     (call $___cxa_guard_release
      (i32.const 52664)
     )
    )
   )
  )
  (i32.const 54552)
 )
 (func $__ZNKSt3__220__time_get_c_storageIwE3__XEv (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52656)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52656)
    )
    (block
     (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm
      (i32.const 54540)
      (i32.const 38564)
      (call $_wcslen
       (i32.const 38564)
      )
     )
     (call $___cxa_guard_release
      (i32.const 52656)
     )
    )
   )
  )
  (i32.const 54540)
 )
 (func $__ZNSt3__2L11init_wam_pmEv (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52696)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52696)
    )
    (block
     (local.set $1
      (i32.const 52064)
     )
     (loop $while-in
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (if
        (i32.ne
         (local.get $0)
         (i32.const 3)
        )
        (block
         (i32.store
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $1)
          )
          (i32.const 0)
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (br $while-in1)
        )
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 12)
         )
        )
        (i32.const 52088)
       )
      )
     )
     (call $___cxa_guard_release
      (i32.const 52696)
     )
    )
   )
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52064)
   (i32.const 38768)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52076)
   (i32.const 38780)
  )
 )
 (func $__ZNSt3__2L12init_wmonthsEv (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52712)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52712)
    )
    (block
     (local.set $1
      (i32.const 52096)
     )
     (loop $while-in
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (if
        (i32.ne
         (local.get $0)
         (i32.const 3)
        )
        (block
         (i32.store
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $1)
          )
          (i32.const 0)
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (br $while-in1)
        )
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 12)
         )
        )
        (i32.const 52384)
       )
      )
     )
     (call $___cxa_guard_release
      (i32.const 52712)
     )
    )
   )
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52096)
   (i32.const 38792)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52108)
   (i32.const 38824)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52120)
   (i32.const 38860)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52132)
   (i32.const 38884)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52144)
   (i32.const 38908)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52156)
   (i32.const 38924)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52168)
   (i32.const 38944)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52180)
   (i32.const 38964)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52192)
   (i32.const 38992)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52204)
   (i32.const 39032)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52216)
   (i32.const 39064)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52228)
   (i32.const 39100)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52240)
   (i32.const 39136)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52252)
   (i32.const 39152)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52264)
   (i32.const 39168)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52276)
   (i32.const 39184)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52288)
   (i32.const 38908)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52300)
   (i32.const 39200)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52312)
   (i32.const 39216)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52324)
   (i32.const 39232)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52336)
   (i32.const 39248)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52348)
   (i32.const 39264)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52360)
   (i32.const 39280)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52372)
   (i32.const 39296)
  )
 )
 (func $__ZNSt3__2L11init_wweeksEv (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 52728)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 52728)
    )
    (block
     (local.set $1
      (i32.const 52384)
     )
     (loop $while-in
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (if
        (i32.ne
         (local.get $0)
         (i32.const 3)
        )
        (block
         (i32.store
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $1)
          )
          (i32.const 0)
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (br $while-in1)
        )
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 12)
         )
        )
        (i32.const 52552)
       )
      )
     )
     (call $___cxa_guard_release
      (i32.const 52728)
     )
    )
   )
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52384)
   (i32.const 39312)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52396)
   (i32.const 39340)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52408)
   (i32.const 39368)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52420)
   (i32.const 39400)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52432)
   (i32.const 39440)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52444)
   (i32.const 39476)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52456)
   (i32.const 39504)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52468)
   (i32.const 39540)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52480)
   (i32.const 39556)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52492)
   (i32.const 39572)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52504)
   (i32.const 39588)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52516)
   (i32.const 39604)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52528)
   (i32.const 39620)
  )
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
   (i32.const 52540)
   (i32.const 39636)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (local.set $8
   (i32.load
    (i32.load
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (local.set $0
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (local.get $8)
     (i32.const 63)
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $3)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $6)
   )
  )
  (if
   (i32.lt_s
    (local.tee $0
     (i32.sub
      (call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb
       (local.get $2)
       (local.get $7)
       (local.get $0)
       (i32.add
        (local.get $0)
        (i32.const 168)
       )
       (local.get $5)
       (local.get $4)
       (i32.const 0)
      )
      (local.get $0)
     )
    )
    (i32.const 168)
   )
   (i32.store
    (local.get $1)
    (i32.rem_s
     (i32.div_s
      (local.get $0)
      (i32.const 12)
     )
     (i32.const 7)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (local.set $8
   (i32.load offset=4
    (i32.load
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (local.set $0
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (local.get $8)
     (i32.const 63)
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.load
    (local.get $3)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $6)
   )
  )
  (if
   (i32.lt_s
    (local.tee $0
     (i32.sub
      (call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb
       (local.get $2)
       (local.get $7)
       (local.get $0)
       (i32.add
        (local.get $0)
        (i32.const 288)
       )
       (local.get $5)
       (local.get $4)
       (i32.const 0)
      )
      (local.get $0)
     )
    )
    (i32.const 288)
   )
   (i32.store
    (local.get $1)
    (i32.rem_s
     (i32.div_s
      (local.get $0)
      (i32.const 12)
     )
     (i32.const 12)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $16
   (i32.add
    (local.get $13)
    (i32.const 8)
   )
  )
  (i32.store
   (local.tee $14
    (i32.add
     (local.get $13)
     (i32.const 12)
    )
   )
   (local.tee $9
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $9)
   (i32.add
    (i32.load offset=4
     (local.get $9)
    )
    (i32.const 1)
   )
  )
  (local.set $10
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $14)
    (i32.const 54432)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $14)
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (block $__rjto$2
   (block $__rjti$2
    (loop $label$continue$L1
     (block $label$break$L1
      (local.set $8
       (i32.load
        (local.get $1)
       )
      )
      (br_if $label$break$L1
       (i32.eqz
        (i32.and
         (i32.eqz
          (local.get $11)
         )
         (i32.ne
          (local.get $6)
          (local.get $7)
         )
        )
       )
      )
      (local.set $8
       (if (result i32)
        (local.tee $11
         (local.get $8)
        )
        (if (result i32)
         (i32.eq
          (if (result i32)
           (i32.eq
            (local.tee $9
             (i32.load offset=12
              (local.get $11)
             )
            )
            (i32.load offset=16
             (local.get $11)
            )
           )
           (call_indirect (type $i32_=>_i32)
            (local.get $11)
            (i32.and
             (i32.load offset=36
              (i32.load
               (local.get $11)
              )
             )
             (i32.const 63)
            )
           )
           (i32.load
            (local.get $9)
           )
          )
          (i32.const -1)
         )
         (block (result i32)
          (i32.store
           (local.get $1)
           (i32.const 0)
          )
          (local.set $15
           (i32.const 1)
          )
          (local.set $11
           (i32.const 0)
          )
          (i32.const 0)
         )
         (block (result i32)
          (local.set $15
           (i32.const 0)
          )
          (local.get $11)
         )
        )
        (block (result i32)
         (local.set $15
          (i32.const 1)
         )
         (i32.const 0)
        )
       )
      )
      (local.set $17
       (local.tee $9
        (i32.load
         (local.get $2)
        )
       )
      )
      (block $__rjto$1
       (block $__rjti$1
        (br_if $__rjti$1
         (i32.eqz
          (local.get $9)
         )
        )
        (if
         (i32.eq
          (if (result i32)
           (i32.eq
            (local.tee $12
             (i32.load offset=12
              (local.get $9)
             )
            )
            (i32.load offset=16
             (local.get $9)
            )
           )
           (call_indirect (type $i32_=>_i32)
            (local.get $9)
            (i32.and
             (i32.load offset=36
              (i32.load
               (local.get $9)
              )
             )
             (i32.const 63)
            )
           )
           (i32.load
            (local.get $12)
           )
          )
          (i32.const -1)
         )
         (block
          (i32.store
           (local.get $2)
           (i32.const 0)
          )
          (local.set $17
           (i32.const 0)
          )
          (br $__rjti$1)
         )
         (br_if $__rjti$2
          (i32.eqz
           (local.get $15)
          )
         )
        )
        (br $__rjto$1)
       )
       (br_if $__rjti$2
        (local.get $15)
       )
       (local.set $9
        (i32.const 0)
       )
      )
      (if
       (i32.eq
        (i32.and
         (call_indirect (type $i32_i32_i32_=>_i32)
          (local.get $10)
          (i32.load
           (local.get $6)
          )
          (i32.const 0)
          (i32.add
           (i32.and
            (i32.load offset=52
             (i32.load
              (local.get $10)
             )
            )
            (i32.const 31)
           )
           (i32.const 82)
          )
         )
         (i32.const 255)
        )
        (i32.const 37)
       )
       (block
        (br_if $__rjti$2
         (i32.eq
          (local.get $7)
          (local.tee $12
           (i32.add
            (local.get $6)
            (i32.const 4)
           )
          )
         )
        )
        (block $switch
         (block $switch-default
          (block $switch-case1
           (br_table $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case1 $switch-default
            (i32.sub
             (i32.shr_s
              (i32.shl
               (local.tee $9
                (call_indirect (type $i32_i32_i32_=>_i32)
                 (local.get $10)
                 (i32.load
                  (local.get $12)
                 )
                 (i32.const 0)
                 (i32.add
                  (i32.and
                   (i32.load offset=52
                    (i32.load
                     (local.get $10)
                    )
                   )
                   (i32.const 31)
                  )
                  (i32.const 82)
                 )
                )
               )
               (i32.const 24)
              )
              (i32.const 24)
             )
             (i32.const 48)
            )
           )
          )
          (br_if $__rjti$2
           (i32.eq
            (local.get $7)
            (i32.add
             (local.get $6)
             (i32.const 8)
            )
           )
          )
          (local.set $8
           (local.get $9)
          )
          (local.set $9
           (call_indirect (type $i32_i32_i32_=>_i32)
            (local.get $10)
            (i32.load offset=8
             (local.get $6)
            )
            (i32.const 0)
            (i32.add
             (i32.and
              (i32.load offset=52
               (i32.load
                (local.get $10)
               )
              )
              (i32.const 31)
             )
             (i32.const 82)
            )
           )
          )
          (local.set $6
           (local.get $12)
          )
          (br $switch)
         )
         (local.set $8
          (i32.const 0)
         )
        )
        (local.set $12
         (i32.load offset=36
          (i32.load
           (local.get $0)
          )
         )
        )
        (i32.store offset=4
         (local.get $13)
         (local.get $11)
        )
        (i32.store
         (local.get $13)
         (local.get $17)
        )
        (i32.store
         (local.get $16)
         (i32.load offset=4
          (local.get $13)
         )
        )
        (i32.store
         (local.get $14)
         (i32.load
          (local.get $13)
         )
        )
        (i32.store
         (local.get $1)
         (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
          (local.get $0)
          (local.get $16)
          (local.get $14)
          (local.get $3)
          (local.get $4)
          (local.get $5)
          (local.get $9)
          (local.get $8)
          (i32.add
           (i32.and
            (local.get $12)
            (i32.const 15)
           )
           (i32.const 238)
          )
         )
        )
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.const 8)
         )
        )
       )
       (block $label$break$L24
        (if
         (i32.eqz
          (call_indirect (type $i32_i32_i32_=>_i32)
           (local.get $10)
           (i32.const 8192)
           (i32.load
            (local.get $6)
           )
           (i32.add
            (i32.and
             (i32.load offset=12
              (i32.load
               (local.get $10)
              )
             )
             (i32.const 31)
            )
            (i32.const 82)
           )
          )
         )
         (block
          (local.set $9
           (call_indirect (type $i32_i32_=>_i32)
            (local.get $10)
            (if (result i32)
             (i32.eq
              (local.tee $9
               (i32.load offset=12
                (local.get $8)
               )
              )
              (i32.load offset=16
               (local.get $8)
              )
             )
             (call_indirect (type $i32_=>_i32)
              (local.get $8)
              (i32.and
               (i32.load offset=36
                (i32.load
                 (local.get $8)
                )
               )
               (i32.const 63)
              )
             )
             (i32.load
              (local.get $9)
             )
            )
            (i32.add
             (i32.and
              (i32.load offset=28
               (i32.load
                (local.get $10)
               )
              )
              (i32.const 15)
             )
             (i32.const 66)
            )
           )
          )
          (if
           (i32.ne
            (call_indirect (type $i32_i32_=>_i32)
             (local.get $10)
             (i32.load
              (local.get $6)
             )
             (i32.add
              (i32.and
               (i32.load offset=28
                (i32.load
                 (local.get $10)
                )
               )
               (i32.const 15)
              )
              (i32.const 66)
             )
            )
            (local.get $9)
           )
           (block
            (i32.store
             (local.get $4)
             (i32.const 4)
            )
            (br $label$break$L24)
           )
          )
          (if
           (i32.eq
            (local.tee $9
             (i32.load offset=12
              (local.get $8)
             )
            )
            (i32.load offset=16
             (local.get $8)
            )
           )
           (drop
            (call_indirect (type $i32_=>_i32)
             (local.get $8)
             (i32.and
              (i32.load offset=40
               (i32.load
                (local.get $8)
               )
              )
              (i32.const 63)
             )
            )
           )
           (block
            (i32.store offset=12
             (local.get $8)
             (i32.add
              (local.get $9)
              (i32.const 4)
             )
            )
            (drop
             (i32.load
              (local.get $9)
             )
            )
           )
          )
          (local.set $6
           (i32.add
            (local.get $6)
            (i32.const 4)
           )
          )
          (br $label$break$L24)
         )
        )
        (loop $while-in
         (block $while-out
          (if
           (i32.eq
            (local.get $7)
            (local.tee $6
             (i32.add
              (local.get $6)
              (i32.const 4)
             )
            )
           )
           (block
            (local.set $6
             (local.get $7)
            )
            (br $while-out)
           )
          )
          (br_if $while-in
           (call_indirect (type $i32_i32_i32_=>_i32)
            (local.get $10)
            (i32.const 8192)
            (i32.load
             (local.get $6)
            )
            (i32.add
             (i32.and
              (i32.load offset=12
               (i32.load
                (local.get $10)
               )
              )
              (i32.const 31)
             )
             (i32.const 82)
            )
           )
          )
         )
        )
        (local.set $11
         (local.get $9)
        )
        (loop $while-in3
         (local.set $12
          (if (result i32)
           (local.get $8)
           (if (result i32)
            (i32.eq
             (if (result i32)
              (i32.eq
               (local.tee $9
                (i32.load offset=12
                 (local.get $8)
                )
               )
               (i32.load offset=16
                (local.get $8)
               )
              )
              (call_indirect (type $i32_=>_i32)
               (local.get $8)
               (i32.and
                (i32.load offset=36
                 (i32.load
                  (local.get $8)
                 )
                )
                (i32.const 63)
               )
              )
              (i32.load
               (local.get $9)
              )
             )
             (i32.const -1)
            )
            (block (result i32)
             (i32.store
              (local.get $1)
              (i32.const 0)
             )
             (local.set $8
              (i32.const 0)
             )
             (i32.const 1)
            )
            (i32.const 0)
           )
           (block (result i32)
            (local.set $8
             (i32.const 0)
            )
            (i32.const 1)
           )
          )
         )
         (block $__rjto$0
          (block $__rjti$0
           (br_if $__rjti$0
            (i32.eqz
             (local.get $11)
            )
           )
           (if
            (i32.eq
             (if (result i32)
              (i32.eq
               (local.tee $9
                (i32.load offset=12
                 (local.get $11)
                )
               )
               (i32.load offset=16
                (local.get $11)
               )
              )
              (call_indirect (type $i32_=>_i32)
               (local.get $11)
               (i32.and
                (i32.load offset=36
                 (i32.load
                  (local.get $11)
                 )
                )
                (i32.const 63)
               )
              )
              (i32.load
               (local.get $9)
              )
             )
             (i32.const -1)
            )
            (block
             (i32.store
              (local.get $2)
              (i32.const 0)
             )
             (br $__rjti$0)
            )
            (br_if $label$break$L24
             (i32.eqz
              (local.get $12)
             )
            )
           )
           (br $__rjto$0)
          )
          (br_if $label$break$L24
           (local.get $12)
          )
          (local.set $11
           (i32.const 0)
          )
         )
         (br_if $label$break$L24
          (i32.eqz
           (call_indirect (type $i32_i32_i32_=>_i32)
            (local.get $10)
            (i32.const 8192)
            (if (result i32)
             (i32.eq
              (local.tee $9
               (i32.load offset=12
                (local.get $8)
               )
              )
              (i32.load offset=16
               (local.get $8)
              )
             )
             (call_indirect (type $i32_=>_i32)
              (local.get $8)
              (i32.and
               (i32.load offset=36
                (i32.load
                 (local.get $8)
                )
               )
               (i32.const 63)
              )
             )
             (i32.load
              (local.get $9)
             )
            )
            (i32.add
             (i32.and
              (i32.load offset=12
               (i32.load
                (local.get $10)
               )
              )
              (i32.const 31)
             )
             (i32.const 82)
            )
           )
          )
         )
         (if
          (i32.eq
           (local.tee $9
            (i32.load offset=12
             (local.get $8)
            )
           )
           (i32.load offset=16
            (local.get $8)
           )
          )
          (drop
           (call_indirect (type $i32_=>_i32)
            (local.get $8)
            (i32.and
             (i32.load offset=40
              (i32.load
               (local.get $8)
              )
             )
             (i32.const 63)
            )
           )
          )
          (block
           (i32.store offset=12
            (local.get $8)
            (i32.add
             (local.get $9)
             (i32.const 4)
            )
           )
           (drop
            (i32.load
             (local.get $9)
            )
           )
          )
         )
         (br $while-in3)
        )
       )
      )
      (local.set $11
       (i32.load
        (local.get $4)
       )
      )
      (br $label$continue$L1)
     )
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $4)
    (i32.const 4)
   )
  )
  (local.set $1
   (if (result i32)
    (local.get $8)
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $0
         (i32.load offset=12
          (local.get $8)
         )
        )
        (i32.load offset=16
         (local.get $8)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $8)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $8)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $0)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (local.set $8
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.const 0)
    )
    (block (result i32)
     (local.set $8
      (i32.const 0)
     )
     (i32.const 1)
    )
   )
  )
  (block $__rjto$4
   (block $__rjti$4
    (block $__rjti$3
     (br_if $__rjti$3
      (i32.eqz
       (local.tee $3
        (i32.load
         (local.get $2)
        )
       )
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $0
          (i32.load offset=12
           (local.get $3)
          )
         )
         (i32.load offset=16
          (local.get $3)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $3)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $3)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $0)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (br $__rjti$3)
      )
      (br_if $__rjti$4
       (i32.eqz
        (local.get $1)
       )
      )
     )
     (br $__rjto$4)
    )
    (br_if $__rjti$4
     (local.get $1)
    )
    (br $__rjto$4)
   )
   (i32.store
    (local.get $4)
    (i32.or
     (i32.load
      (local.get $4)
     )
     (i32.const 2)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $13)
  )
  (local.get $8)
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_u
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
     (i32.const 31)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 24)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_u
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
     (i32.const 12)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 3)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 366)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 13)
    )
   )
   (i32.store
    (local.get $0)
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 60)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (loop $label$continue$L1
   (block $label$break$L1
    (local.set $5
     (if (result i32)
      (local.tee $4
       (i32.load
        (local.get $0)
       )
      )
      (if (result i32)
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $5
           (i32.load offset=12
            (local.get $4)
           )
          )
          (i32.load offset=16
           (local.get $4)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $4)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $4)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.const -1)
       )
       (block (result i32)
        (i32.store
         (local.get $0)
         (i32.const 0)
        )
        (i32.const 1)
       )
       (i32.eqz
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.const 1)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.eqz
        (local.tee $4
         (i32.load
          (local.get $1)
         )
        )
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.get $4)
           )
          )
          (i32.load offset=16
           (local.get $4)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $4)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $4)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $6)
         )
        )
        (i32.const -1)
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 0)
        )
        (br $__rjti$0)
       )
       (br_if $label$break$L1
        (i32.eqz
         (local.get $5)
        )
       )
      )
      (br $__rjto$0)
     )
     (local.set $4
      (if (result i32)
       (local.get $5)
       (block
        (local.set $4
         (i32.const 0)
        )
        (br $label$break$L1)
       )
       (i32.const 0)
      )
     )
    )
    (br_if $label$break$L1
     (i32.eqz
      (call_indirect (type $i32_i32_i32_=>_i32)
       (local.get $3)
       (i32.const 8192)
       (if (result i32)
        (i32.eq
         (local.tee $6
          (i32.load offset=12
           (local.tee $5
            (i32.load
             (local.get $0)
            )
           )
          )
         )
         (i32.load offset=16
          (local.get $5)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $5)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $6)
        )
       )
       (i32.add
        (i32.and
         (i32.load offset=12
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 31)
        )
        (i32.const 82)
       )
      )
     )
    )
    (if
     (i32.eq
      (local.tee $5
       (i32.load offset=12
        (local.tee $4
         (i32.load
          (local.get $0)
         )
        )
       )
      )
      (i32.load offset=16
       (local.get $4)
      )
     )
     (drop
      (call_indirect (type $i32_=>_i32)
       (local.get $4)
       (i32.and
        (i32.load offset=40
         (i32.load
          (local.get $4)
         )
        )
        (i32.const 63)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $4)
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
      (drop
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br $label$continue$L1)
   )
  )
  (local.set $0
   (if (result i32)
    (local.tee $3
     (i32.load
      (local.get $0)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $5
         (i32.load offset=12
          (local.get $3)
         )
        )
        (i32.load offset=16
         (local.get $3)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $3)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $5)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (br_if $__rjti$1
      (i32.eqz
       (local.get $4)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $3
          (i32.load offset=12
           (local.get $4)
          )
         )
         (i32.load offset=16
          (local.get $4)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $4)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $4)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$1)
      )
      (br_if $__rjti$2
       (i32.eqz
        (local.get $0)
       )
      )
     )
     (br $__rjto$2)
    )
    (br_if $__rjti$2
     (local.get $0)
    )
    (br $__rjto$2)
   )
   (i32.store
    (local.get $2)
    (i32.or
     (i32.load
      (local.get $2)
     )
     (i32.const 2)
    )
   )
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $8
   (i32.add
    (local.get $7)
    (i32.const 4)
   )
  )
  (local.set $6
   (i32.load offset=8
    (i32.load
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
    )
   )
  )
  (local.set $6
   (if (result i32)
    (i32.lt_s
     (local.tee $6
      (i32.load8_s offset=11
       (local.tee $0
        (call_indirect (type $i32_=>_i32)
         (local.get $0)
         (i32.and
          (local.get $6)
          (i32.const 63)
         )
        )
       )
      )
     )
     (i32.const 0)
    )
    (i32.load offset=4
     (local.get $0)
    )
    (i32.and
     (local.get $6)
     (i32.const 255)
    )
   )
  )
  (if
   (i32.eq
    (i32.sub
     (i32.const 0)
     (if (result i32)
      (i32.lt_s
       (local.tee $9
        (i32.load8_s offset=23
         (local.get $0)
        )
       )
       (i32.const 0)
      )
      (i32.load offset=16
       (local.get $0)
      )
      (i32.and
       (local.get $9)
       (i32.const 255)
      )
     )
    )
    (local.get $6)
   )
   (i32.store
    (local.get $4)
    (i32.or
     (i32.load
      (local.get $4)
     )
     (i32.const 4)
    )
   )
   (block $do-once
    (i32.store
     (local.get $7)
     (i32.load
      (local.get $3)
     )
    )
    (i32.store
     (local.get $8)
     (i32.load
      (local.get $7)
     )
    )
    (if
     (i32.and
      (i32.eqz
       (local.tee $2
        (i32.sub
         (call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb
          (local.get $2)
          (local.get $8)
          (local.get $0)
          (i32.add
           (local.get $0)
           (i32.const 24)
          )
          (local.get $5)
          (local.get $4)
          (i32.const 0)
         )
         (local.get $0)
        )
       )
      )
      (i32.eq
       (local.tee $0
        (i32.load
         (local.get $1)
        )
       )
       (i32.const 12)
      )
     )
     (block
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (br $do-once)
     )
    )
    (if
     (i32.and
      (i32.eq
       (local.get $2)
       (i32.const 12)
      )
      (i32.lt_s
       (local.get $0)
       (i32.const 12)
      )
     )
     (i32.store
      (local.get $1)
      (i32.add
       (local.get $0)
       (i32.const 12)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 2)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 61)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 1)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.tee $2
       (i32.load
        (local.get $3)
       )
      )
      (i32.const 4)
     )
    )
    (i32.lt_s
     (local.get $1)
     (i32.const 7)
    )
   )
   (i32.store
    (local.get $0)
    (local.get $1)
   )
   (i32.store
    (local.get $3)
    (i32.or
     (local.get $2)
     (i32.const 4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 4)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $3)
     )
     (i32.const 4)
    )
   )
   (i32.store
    (local.get $0)
    (i32.add
     (if (result i32)
      (i32.lt_s
       (local.get $1)
       (i32.const 69)
      )
      (i32.add
       (local.get $1)
       (i32.const 2000)
      )
      (select
       (i32.add
        (local.get $1)
        (i32.const 1900)
       )
       (local.get $1)
       (i32.lt_s
        (local.get $1)
        (i32.const 100)
       )
      )
     )
     (i32.const -1900)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.load
    (local.get $5)
   )
  )
  (local.set $1
   (call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $4)
    (i32.const 4)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $3)
     )
     (i32.const 4)
    )
   )
   (i32.store
    (local.get $0)
    (i32.add
     (local.get $1)
     (i32.const -1900)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (if (result i32)
    (local.tee $4
     (i32.load
      (local.get $0)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $5
         (i32.load offset=12
          (local.get $4)
         )
        )
        (i32.load offset=16
         (local.get $4)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $4)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $4)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $5)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $label$break$L22
   (block $__rjti$3
    (block $__rjti$2
     (if
      (local.tee $4
       (i32.load
        (local.get $1)
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $6
           (i32.load offset=12
            (local.get $4)
           )
          )
          (i32.load offset=16
           (local.get $4)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $4)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $4)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $6)
         )
        )
        (i32.const -1)
       )
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (if
        (local.get $5)
        (br $__rjti$3)
        (br $__rjti$2)
       )
      )
     )
     (if
      (i32.eqz
       (local.get $5)
      )
      (block
       (local.set $4
        (i32.const 0)
       )
       (br $__rjti$3)
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.or
      (i32.load
       (local.get $2)
      )
      (i32.const 6)
     )
    )
    (br $label$break$L22)
   )
   (if
    (i32.ne
     (i32.and
      (call_indirect (type $i32_i32_i32_=>_i32)
       (local.get $3)
       (if (result i32)
        (i32.eq
         (local.tee $6
          (i32.load offset=12
           (local.tee $5
            (i32.load
             (local.get $0)
            )
           )
          )
         )
         (i32.load offset=16
          (local.get $5)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $5)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $6)
        )
       )
       (i32.const 0)
       (i32.add
        (i32.and
         (i32.load offset=52
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 31)
        )
        (i32.const 82)
       )
      )
      (i32.const 255)
     )
     (i32.const 37)
    )
    (block
     (i32.store
      (local.get $2)
      (i32.or
       (i32.load
        (local.get $2)
       )
       (i32.const 4)
      )
     )
     (br $label$break$L22)
    )
   )
   (if
    (i32.eq
     (local.tee $5
      (i32.load offset=12
       (local.tee $3
        (i32.load
         (local.get $0)
        )
       )
      )
     )
     (i32.load offset=16
      (local.get $3)
     )
    )
    (drop
     (call_indirect (type $i32_=>_i32)
      (local.get $3)
      (i32.and
       (i32.load offset=40
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 63)
      )
     )
    )
    (block
     (i32.store offset=12
      (local.get $3)
      (i32.add
       (local.get $5)
       (i32.const 4)
      )
     )
     (drop
      (i32.load
       (local.get $5)
      )
     )
    )
   )
   (local.set $0
    (if (result i32)
     (local.tee $3
      (i32.load
       (local.get $0)
      )
     )
     (if (result i32)
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $5
          (i32.load offset=12
           (local.get $3)
          )
         )
         (i32.load offset=16
          (local.get $3)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $3)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $3)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $5)
        )
       )
       (i32.const -1)
      )
      (block (result i32)
       (i32.store
        (local.get $0)
        (i32.const 0)
       )
       (i32.const 1)
      )
      (i32.eqz
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.const 1)
    )
   )
   (block $__rjto$0
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.get $4)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $3
          (i32.load offset=12
           (local.get $4)
          )
         )
         (i32.load offset=16
          (local.get $4)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $4)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $4)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$0)
      )
      (br_if $label$break$L22
       (local.get $0)
      )
     )
     (br $__rjto$0)
    )
    (br_if $label$break$L22
     (i32.eqz
      (local.get $0)
     )
    )
   )
   (i32.store
    (local.get $2)
    (i32.or
     (i32.load
      (local.get $2)
     )
     (i32.const 2)
    )
   )
  )
 )
 (func $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $6
   (if (result i32)
    (local.tee $7
     (i32.load
      (local.get $0)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $6
         (i32.load offset=12
          (local.get $7)
         )
        )
        (i32.load offset=16
         (local.get $7)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $7)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $7)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $6)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $0)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $0)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $label$break$L22
   (block $__rjti$3
    (block $__rjti$2
     (if
      (local.tee $7
       (i32.load
        (local.get $1)
       )
      )
      (if
       (i32.eq
        (if (result i32)
         (i32.eq
          (local.tee $5
           (i32.load offset=12
            (local.get $7)
           )
          )
          (i32.load offset=16
           (local.get $7)
          )
         )
         (call_indirect (type $i32_=>_i32)
          (local.get $7)
          (i32.and
           (i32.load offset=36
            (i32.load
             (local.get $7)
            )
           )
           (i32.const 63)
          )
         )
         (i32.load
          (local.get $5)
         )
        )
        (i32.const -1)
       )
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (if
        (local.get $6)
        (br $__rjti$3)
        (br $__rjti$2)
       )
      )
     )
     (if
      (i32.eqz
       (local.get $6)
      )
      (block
       (local.set $7
        (i32.const 0)
       )
       (br $__rjti$3)
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.or
      (i32.load
       (local.get $2)
      )
      (i32.const 6)
     )
    )
    (local.set $7
     (i32.const 0)
    )
    (br $label$break$L22)
   )
   (if
    (i32.eqz
     (call_indirect (type $i32_i32_i32_=>_i32)
      (local.get $3)
      (i32.const 2048)
      (local.tee $6
       (if (result i32)
        (i32.eq
         (local.tee $5
          (i32.load offset=12
           (local.tee $6
            (i32.load
             (local.get $0)
            )
           )
          )
         )
         (i32.load offset=16
          (local.get $6)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $6)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $6)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $5)
        )
       )
      )
      (i32.add
       (i32.and
        (i32.load offset=12
         (i32.load
          (local.get $3)
         )
        )
        (i32.const 31)
       )
       (i32.const 82)
      )
     )
    )
    (block
     (i32.store
      (local.get $2)
      (i32.or
       (i32.load
        (local.get $2)
       )
       (i32.const 4)
      )
     )
     (local.set $7
      (i32.const 0)
     )
     (br $label$break$L22)
    )
   )
   (local.set $8
    (call_indirect (type $i32_i32_i32_=>_i32)
     (local.get $3)
     (local.get $6)
     (i32.const 0)
     (i32.add
      (i32.and
       (i32.load offset=52
        (i32.load
         (local.get $3)
        )
       )
       (i32.const 31)
      )
      (i32.const 82)
     )
    )
   )
   (if
    (i32.eq
     (local.tee $5
      (i32.load offset=12
       (local.tee $6
        (i32.load
         (local.get $0)
        )
       )
      )
     )
     (i32.load offset=16
      (local.get $6)
     )
    )
    (drop
     (call_indirect (type $i32_=>_i32)
      (local.get $6)
      (i32.and
       (i32.load offset=40
        (i32.load
         (local.get $6)
        )
       )
       (i32.const 63)
      )
     )
    )
    (block
     (i32.store offset=12
      (local.get $6)
      (i32.add
       (local.get $5)
       (i32.const 4)
      )
     )
     (drop
      (i32.load
       (local.get $5)
      )
     )
    )
   )
   (local.set $5
    (i32.shr_s
     (i32.shl
      (local.get $8)
      (i32.const 24)
     )
     (i32.const 24)
    )
   )
   (local.set $6
    (local.get $4)
   )
   (local.set $8
    (local.tee $4
     (local.get $7)
    )
   )
   (loop $while-in
    (block $while-out
     (local.set $7
      (i32.add
       (local.get $5)
       (i32.const -48)
      )
     )
     (local.set $9
      (if (result i32)
       (local.tee $5
        (i32.load
         (local.get $0)
        )
       )
       (if (result i32)
        (i32.eq
         (if (result i32)
          (i32.eq
           (local.tee $9
            (i32.load offset=12
             (local.get $5)
            )
           )
           (i32.load offset=16
            (local.get $5)
           )
          )
          (call_indirect (type $i32_=>_i32)
           (local.get $5)
           (i32.and
            (i32.load offset=36
             (i32.load
              (local.get $5)
             )
            )
            (i32.const 63)
           )
          )
          (i32.load
           (local.get $9)
          )
         )
         (i32.const -1)
        )
        (block (result i32)
         (i32.store
          (local.get $0)
          (i32.const 0)
         )
         (i32.const 1)
        )
        (i32.eqz
         (i32.load
          (local.get $0)
         )
        )
       )
       (i32.const 1)
      )
     )
     (local.set $10
      (if (result i32)
       (local.get $8)
       (if (result i32)
        (i32.eq
         (if (result i32)
          (i32.eq
           (local.tee $5
            (i32.load offset=12
             (local.get $8)
            )
           )
           (i32.load offset=16
            (local.get $8)
           )
          )
          (call_indirect (type $i32_=>_i32)
           (local.get $8)
           (i32.and
            (i32.load offset=36
             (i32.load
              (local.get $8)
             )
            )
            (i32.const 63)
           )
          )
          (i32.load
           (local.get $5)
          )
         )
         (i32.const -1)
        )
        (block (result i32)
         (i32.store
          (local.get $1)
          (i32.const 0)
         )
         (local.set $4
          (i32.const 0)
         )
         (local.set $8
          (i32.const 0)
         )
         (i32.const 1)
        )
        (i32.const 0)
       )
       (block (result i32)
        (local.set $8
         (i32.const 0)
        )
        (i32.const 1)
       )
      )
     )
     (local.set $5
      (i32.load
       (local.get $0)
      )
     )
     (br_if $while-out
      (i32.eqz
       (i32.and
        (i32.xor
         (local.get $9)
         (local.get $10)
        )
        (i32.gt_s
         (local.get $6)
         (i32.const 1)
        )
       )
      )
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const -1)
      )
     )
     (br_if $label$break$L22
      (i32.eqz
       (call_indirect (type $i32_i32_i32_=>_i32)
        (local.get $3)
        (i32.const 2048)
        (local.tee $5
         (if (result i32)
          (i32.eq
           (local.tee $9
            (i32.load offset=12
             (local.get $5)
            )
           )
           (i32.load offset=16
            (local.get $5)
           )
          )
          (call_indirect (type $i32_=>_i32)
           (local.get $5)
           (i32.and
            (i32.load offset=36
             (i32.load
              (local.get $5)
             )
            )
            (i32.const 63)
           )
          )
          (i32.load
           (local.get $9)
          )
         )
        )
        (i32.add
         (i32.and
          (i32.load offset=12
           (i32.load
            (local.get $3)
           )
          )
          (i32.const 31)
         )
         (i32.const 82)
        )
       )
      )
     )
     (local.set $10
      (call_indirect (type $i32_i32_i32_=>_i32)
       (local.get $3)
       (local.get $5)
       (i32.const 0)
       (i32.add
        (i32.and
         (i32.load offset=52
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 31)
        )
        (i32.const 82)
       )
      )
     )
     (if
      (i32.eq
       (local.tee $9
        (i32.load offset=12
         (local.tee $5
          (i32.load
           (local.get $0)
          )
         )
        )
       )
       (i32.load offset=16
        (local.get $5)
       )
      )
      (drop
       (call_indirect (type $i32_=>_i32)
        (local.get $5)
        (i32.and
         (i32.load offset=40
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 63)
        )
       )
      )
      (block
       (i32.store offset=12
        (local.get $5)
        (i32.add
         (local.get $9)
         (i32.const 4)
        )
       )
       (drop
        (i32.load
         (local.get $9)
        )
       )
      )
     )
     (local.set $5
      (i32.add
       (i32.mul
        (local.get $7)
        (i32.const 10)
       )
       (i32.shr_s
        (i32.shl
         (local.get $10)
         (i32.const 24)
        )
        (i32.const 24)
       )
      )
     )
     (br $while-in)
    )
   )
   (local.set $0
    (if (result i32)
     (local.get $5)
     (if (result i32)
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $3
          (i32.load offset=12
           (local.get $5)
          )
         )
         (i32.load offset=16
          (local.get $5)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $5)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
       (i32.const -1)
      )
      (block (result i32)
       (i32.store
        (local.get $0)
        (i32.const 0)
       )
       (i32.const 1)
      )
      (i32.eqz
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.const 1)
    )
   )
   (block $__rjto$0
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.get $4)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $3
          (i32.load offset=12
           (local.get $4)
          )
         )
         (i32.load offset=16
          (local.get $4)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $4)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $4)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $3)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $1)
        (i32.const 0)
       )
       (br $__rjti$0)
      )
      (br_if $label$break$L22
       (local.get $0)
      )
     )
     (br $__rjto$0)
    )
    (br_if $label$break$L22
     (i32.eqz
      (local.get $0)
     )
    )
   )
   (i32.store
    (local.get $2)
    (i32.or
     (i32.load
      (local.get $2)
     )
     (i32.const 2)
    )
   )
  )
  (local.get $7)
 )
 (func $__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__210__time_putD2Ev
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
 )
 (func $__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__210__time_putD2Ev
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $2)
     (i32.const 100)
    )
   )
   (i32.add
    (local.get $2)
    (i32.const 100)
   )
  )
  (call $__ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
  )
  (local.set $5
   (i32.load
    (local.get $3)
   )
  )
  (local.set $3
   (local.get $2)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $3)
     (local.get $5)
    )
    (block
     (local.set $1
      (i32.load8_s
       (local.get $3)
      )
     )
     (local.set $0
      (if (result i32)
       (local.get $0)
       (select
        (i32.const 0)
        (local.get $0)
        (i32.eq
         (if (result i32)
          (i32.eq
           (local.tee $4
            (i32.load offset=24
             (local.get $0)
            )
           )
           (i32.load offset=28
            (local.get $0)
           )
          )
          (call_indirect (type $i32_i32_=>_i32)
           (local.get $0)
           (i32.and
            (local.get $1)
            (i32.const 255)
           )
           (i32.add
            (i32.and
             (i32.load offset=52
              (i32.load
               (local.get $0)
              )
             )
             (i32.const 15)
            )
            (i32.const 66)
           )
          )
          (block (result i32)
           (i32.store offset=24
            (local.get $0)
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
           (i32.store8
            (local.get $4)
            (local.get $1)
           )
           (i32.and
            (local.get $1)
            (i32.const 255)
           )
          )
         )
         (i32.const -1)
        )
       )
       (i32.const 0)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $6)
   (i32.const 37)
  )
  (i32.store8 offset=1
   (local.get $6)
   (local.get $4)
  )
  (i32.store8 offset=2
   (local.get $6)
   (local.get $5)
  )
  (i32.store8 offset=3
   (local.get $6)
   (i32.const 0)
  )
  (if
   (i32.and
    (local.get $5)
    (i32.const 255)
   )
   (block
    (i32.store8 offset=1
     (local.get $6)
     (local.get $5)
    )
    (i32.store8 offset=2
     (local.get $6)
     (local.get $4)
    )
   )
  )
  (i32.store
   (local.get $2)
   (i32.add
    (call $_strftime_l
     (local.get $1)
     (i32.sub
      (i32.load
       (local.get $2)
      )
      (local.get $1)
     )
     (local.get $6)
     (local.get $3)
     (i32.load
      (local.get $0)
     )
    )
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $__ZNSt3__210__time_putD2Ev (; has Stack IR ;) (param $0 i32)
  (if
   (i32.ne
    (i32.load
     (local.get $0)
    )
    (call $__ZNSt3__26__clocEv)
   )
   (call $_freelocale
    (i32.load
     (local.get $0)
    )
   )
  )
 )
 (func $__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 416)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $2)
     (i32.const 400)
    )
   )
   (i32.add
    (local.get $2)
    (i32.const 400)
   )
  )
  (call $__ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
  )
  (local.set $5
   (i32.load
    (local.get $3)
   )
  )
  (local.set $3
   (local.get $2)
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $3)
     (local.get $5)
    )
    (block
     (local.set $1
      (i32.load
       (local.get $3)
      )
     )
     (local.set $0
      (if (result i32)
       (local.get $0)
       (select
        (i32.const 0)
        (local.get $0)
        (i32.eq
         (if (result i32)
          (i32.eq
           (local.tee $4
            (i32.load offset=24
             (local.get $0)
            )
           )
           (i32.load offset=28
            (local.get $0)
           )
          )
          (call_indirect (type $i32_i32_=>_i32)
           (local.get $0)
           (local.get $1)
           (i32.add
            (i32.and
             (i32.load offset=52
              (i32.load
               (local.get $0)
              )
             )
             (i32.const 15)
            )
            (i32.const 66)
           )
          )
          (block (result i32)
           (i32.store offset=24
            (local.get $0)
            (i32.add
             (local.get $4)
             (i32.const 4)
            )
           )
           (i32.store
            (local.get $4)
            (local.get $1)
           )
           (local.get $1)
          )
         )
         (i32.const -1)
        )
       )
       (i32.const 0)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 104)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 112)
   )
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $6)
     (i32.const 116)
    )
   )
   (i32.add
    (local.get $6)
    (i32.const 100)
   )
  )
  (call $__ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc
   (local.get $0)
   (local.get $6)
   (local.get $9)
   (local.get $3)
   (local.get $4)
   (local.get $5)
  )
  (i64.store
   (local.get $7)
   (i64.const 0)
  )
  (i32.store
   (local.get $8)
   (local.get $6)
  )
  (local.set $4
   (i32.shr_s
    (i32.sub
     (i32.load
      (local.get $2)
     )
     (local.get $1)
    )
    (i32.const 2)
   )
  )
  (local.set $3
   (i32.load
    (i32.const 37316)
   )
  )
  (if
   (local.tee $0
    (i32.load
     (local.get $0)
    )
   )
   (i32.store
    (i32.const 37316)
    (select
     (i32.const 53288)
     (local.get $0)
     (i32.eq
      (local.get $0)
      (i32.const -1)
     )
    )
   )
  )
  (local.set $0
   (select
    (i32.const -1)
    (local.get $3)
    (i32.eq
     (local.get $3)
     (i32.const 53288)
    )
   )
  )
  (local.set $3
   (call $_mbsrtowcs
    (local.get $1)
    (local.get $8)
    (local.get $4)
    (local.get $7)
   )
  )
  (if
   (local.get $0)
   (block
    (drop
     (i32.load
      (i32.const 37316)
     )
    )
    (if
     (local.get $0)
     (i32.store
      (i32.const 37316)
      (select
       (i32.const 53288)
       (local.get $0)
       (i32.eq
        (local.get $0)
        (i32.const -1)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eq
    (local.get $3)
    (i32.const -1)
   )
   (call $_abort)
   (block
    (i32.store
     (local.get $2)
     (i32.add
      (i32.shl
       (local.get $3)
       (i32.const 2)
      )
      (local.get $1)
     )
    )
    (global.set $STACKTOP
     (local.get $6)
    )
   )
  )
 )
 (func $__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.const 127)
 )
 (func $__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $0)
      )
      (i32.const 0)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc
   (local.get $0)
   (i32.const 1)
   (i32.const 45)
  )
 )
 (func $__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (i32.store align=1
   (local.get $0)
   (i32.const 67109634)
  )
 )
 (func $__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.const 2147483647)
 )
 (func $__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw
   (local.get $0)
   (i32.const 1)
   (i32.const 45)
  )
 )
 (func $__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 240)
   )
  )
  (local.set $16
   (i32.add
    (local.get $7)
    (i32.const 216)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 228)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 250)
   )
  )
  (local.set $17
   (local.get $7)
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $7)
     (i32.const 232)
    )
   )
   (local.tee $0
    (i32.add
     (local.get $7)
     (i32.const 112)
    )
   )
  )
  (i32.store offset=4
   (local.get $11)
   (i32.const 94)
  )
  (local.set $12
   (i32.add
    (local.get $0)
    (i32.const 100)
   )
  )
  (i32.store
   (local.tee $15
    (i32.add
     (local.get $7)
     (i32.const 224)
    )
   )
   (local.tee $0
    (i32.load offset=28
     (local.get $4)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (local.set $9
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $15)
    (i32.const 54400)
   )
  )
  (i32.store8
   (local.get $14)
   (i32.const 0)
  )
  (i32.store offset=220
   (local.get $7)
   (i32.load
    (local.get $2)
   )
  )
  (local.set $0
   (i32.load offset=4
    (local.get $4)
   )
  )
  (i32.store
   (local.get $10)
   (i32.load offset=220
    (local.get $7)
   )
  )
  (if
   (call $__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_
    (local.get $1)
    (local.get $10)
    (local.get $3)
    (local.get $15)
    (local.get $0)
    (local.get $5)
    (local.get $14)
    (local.get $9)
    (local.get $11)
    (local.get $13)
    (local.get $12)
   )
   (block
    (drop
     (call_indirect (type $i32_i32_i32_i32_=>_i32)
      (local.get $9)
      (i32.const 48621)
      (i32.const 48631)
      (local.get $10)
      (i32.add
       (i32.and
        (i32.load offset=32
         (i32.load
          (local.get $9)
         )
        )
        (i32.const 7)
       )
       (i32.const 114)
      )
     )
    )
    (if
     (i32.gt_s
      (local.tee $0
       (i32.sub
        (local.tee $9
         (i32.load
          (local.get $13)
         )
        )
        (local.tee $4
         (i32.load
          (local.get $11)
         )
        )
       )
      )
      (i32.const 98)
     )
     (block
      (local.set $0
       (local.tee $3
        (call $_malloc
         (i32.add
          (local.get $0)
          (i32.const 2)
         )
        )
       )
      )
      (if
       (local.get $3)
       (block
        (local.set $8
         (local.get $3)
        )
        (local.set $18
         (local.get $0)
        )
       )
       (call $_abort)
      )
     )
     (local.set $8
      (local.get $17)
     )
    )
    (if
     (i32.load8_s
      (local.get $14)
     )
     (block
      (i32.store8
       (local.get $8)
       (i32.const 45)
      )
      (local.set $8
       (i32.add
        (local.get $8)
        (i32.const 1)
       )
      )
     )
    )
    (local.set $12
     (i32.add
      (local.get $10)
      (i32.const 10)
     )
    )
    (local.set $3
     (local.get $10)
    )
    (loop $while-in
     (if
      (i32.lt_u
       (local.get $4)
       (local.get $9)
      )
      (block
       (local.set $9
        (i32.load8_s
         (local.get $4)
        )
       )
       (local.set $0
        (local.get $10)
       )
       (loop $while-in1
        (block $while-out0
         (if
          (i32.eq
           (local.get $0)
           (local.get $12)
          )
          (block
           (local.set $0
            (local.get $12)
           )
           (br $while-out0)
          )
         )
         (if
          (i32.ne
           (i32.load8_s
            (local.get $0)
           )
           (local.get $9)
          )
          (block
           (local.set $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (br $while-in1)
          )
         )
        )
       )
       (i32.store8
        (local.get $8)
        (i32.load8_s
         (i32.add
          (i32.sub
           (local.get $0)
           (local.get $3)
          )
          (i32.const 48621)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (local.set $9
        (i32.load
         (local.get $13)
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.store8
     (local.get $8)
     (i32.const 0)
    )
    (i32.store
     (local.get $16)
     (local.get $6)
    )
    (if
     (i32.ne
      (call $_sscanf
       (local.get $17)
       (local.get $16)
      )
      (i32.const 1)
     )
     (call $_abort)
    )
    (if
     (local.get $18)
     (call $_free
      (local.get $18)
     )
    )
   )
  )
  (local.set $3
   (if (result i32)
    (local.tee $3
     (i32.load
      (local.get $1)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $0
         (i32.load offset=12
          (local.get $3)
         )
        )
        (i32.load offset=16
         (local.get $3)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $3)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $0)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $1)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.tee $4
        (i32.load
         (local.get $2)
        )
       )
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $0
          (i32.load offset=12
           (local.get $4)
          )
         )
         (i32.load offset=16
          (local.get $4)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $4)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $4)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $0)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (br $__rjti$0)
      )
      (br_if $__rjti$1
       (i32.eqz
        (local.get $3)
       )
      )
     )
     (br $__rjto$1)
    )
    (br_if $__rjti$1
     (local.get $3)
    )
    (br $__rjto$1)
   )
   (i32.store
    (local.get $5)
    (i32.or
     (i32.load
      (local.get $5)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $15)
  )
  (local.set $1
   (i32.load
    (local.get $11)
   )
  )
  (i32.store
   (local.get $11)
   (i32.const 0)
  )
  (if
   (local.get $1)
   (call_indirect (type $i32_=>_none)
    (local.get $1)
    (i32.add
     (i32.and
      (i32.load offset=4
       (local.get $11)
      )
      (i32.const 127)
     )
     (i32.const 267)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (local.set $8
   (i32.add
    (local.get $0)
    (i32.const 120)
   )
  )
  (local.set $13
   (i32.add
    (local.get $0)
    (i32.const 108)
   )
  )
  (local.set $11
   (i32.add
    (local.get $0)
    (i32.const 124)
   )
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $0)
     (i32.const 112)
    )
   )
   (local.get $0)
  )
  (i32.store offset=4
   (local.get $9)
   (i32.const 94)
  )
  (local.set $14
   (i32.add
    (local.get $0)
    (i32.const 100)
   )
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $0)
     (i32.const 100)
    )
   )
   (local.tee $7
    (i32.load offset=28
     (local.get $4)
    )
   )
  )
  (i32.store offset=4
   (local.get $7)
   (i32.add
    (i32.load offset=4
     (local.get $7)
    )
    (i32.const 1)
   )
  )
  (local.set $7
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $12)
    (i32.const 54400)
   )
  )
  (i32.store8
   (local.get $11)
   (i32.const 0)
  )
  (i32.store offset=104
   (local.get $0)
   (local.tee $10
    (i32.load
     (local.get $2)
    )
   )
  )
  (local.set $4
   (i32.load offset=4
    (local.get $4)
   )
  )
  (i32.store
   (local.get $8)
   (i32.load offset=104
    (local.get $0)
   )
  )
  (if
   (call $__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_
    (local.get $1)
    (local.get $8)
    (local.get $3)
    (local.get $12)
    (local.get $4)
    (local.get $5)
    (local.get $11)
    (local.get $7)
    (local.get $9)
    (local.get $13)
    (local.get $14)
   )
   (block
    (if
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
     (block
      (local.set $3
       (i32.load
        (local.get $6)
       )
      )
      (i32.store8
       (local.get $8)
       (i32.const 0)
      )
      (i32.store8
       (local.get $3)
       (i32.load8_s
        (local.get $8)
       )
      )
      (i32.store offset=4
       (local.get $6)
       (i32.const 0)
      )
     )
     (block
      (i32.store8
       (local.get $8)
       (i32.const 0)
      )
      (i32.store8
       (local.get $6)
       (i32.load8_s
        (local.get $8)
       )
      )
      (i32.store8 offset=11
       (local.get $6)
       (i32.const 0)
      )
     )
    )
    (if
     (i32.load8_s
      (local.get $11)
     )
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
      (local.get $6)
      (call_indirect (type $i32_i32_=>_i32)
       (local.get $7)
       (i32.const 45)
       (i32.add
        (i32.and
         (i32.load offset=28
          (i32.load
           (local.get $7)
          )
         )
         (i32.const 15)
        )
        (i32.const 66)
       )
      )
     )
    )
    (local.set $4
     (call_indirect (type $i32_i32_=>_i32)
      (local.get $7)
      (i32.const 48)
      (i32.add
       (i32.and
        (i32.load offset=28
         (i32.load
          (local.get $7)
         )
        )
        (i32.const 15)
       )
       (i32.const 66)
      )
     )
    )
    (local.set $7
     (i32.add
      (local.tee $8
       (i32.load
        (local.get $13)
       )
      )
      (i32.const -1)
     )
    )
    (local.set $3
     (i32.load
      (local.get $9)
     )
    )
    (loop $while-in
     (block $while-out
      (br_if $while-out
       (i32.ge_u
        (local.get $3)
        (local.get $7)
       )
      )
      (br_if $while-out
       (i32.ne
        (i32.load8_u
         (local.get $3)
        )
        (i32.and
         (local.get $4)
         (i32.const 255)
        )
       )
      )
      (local.set $3
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (br $while-in)
     )
    )
    (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_
     (local.get $6)
     (local.get $3)
     (local.get $8)
    )
   )
  )
  (local.set $3
   (if (result i32)
    (local.tee $3
     (i32.load
      (local.get $1)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $3)
         )
        )
        (i32.load offset=16
         (local.get $3)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $3)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load8_u
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $1)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.get $10)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $10)
          )
         )
         (i32.load offset=16
          (local.get $10)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $10)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $10)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load8_u
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (br $__rjti$0)
      )
      (br_if $__rjti$1
       (i32.eqz
        (local.get $3)
       )
      )
     )
     (br $__rjto$1)
    )
    (br_if $__rjti$1
     (local.get $3)
    )
    (br $__rjto$1)
   )
   (i32.store
    (local.get $5)
    (i32.or
     (i32.load
      (local.get $5)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $2
   (i32.load
    (local.get $1)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $12)
  )
  (local.set $1
   (i32.load
    (local.get $9)
   )
  )
  (i32.store
   (local.get $9)
   (i32.const 0)
  )
  (if
   (local.get $1)
   (call_indirect (type $i32_=>_none)
    (local.get $1)
    (i32.add
     (i32.and
      (i32.load offset=4
       (local.get $9)
      )
      (i32.const 127)
     )
     (i32.const 267)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $2)
 )
 (func $__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (result i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 512)
   )
  )
  (local.set $26
   (i32.add
    (local.get $13)
    (i32.const 496)
   )
  )
  (local.set $32
   (i32.add
    (local.get $13)
    (i32.const 493)
   )
  )
  (local.set $33
   (i32.add
    (local.get $13)
    (i32.const 492)
   )
  )
  (local.set $22
   (i32.add
    (local.get $13)
    (i32.const 456)
   )
  )
  (local.set $14
   (i32.add
    (local.get $13)
    (i32.const 444)
   )
  )
  (local.set $15
   (i32.add
    (local.get $13)
    (i32.const 432)
   )
  )
  (local.set $16
   (i32.add
    (local.get $13)
    (i32.const 420)
   )
  )
  (local.set $20
   (i32.add
    (local.get $13)
    (i32.const 408)
   )
  )
  (local.set $23
   (i32.add
    (local.get $13)
    (i32.const 404)
   )
  )
  (local.set $30
   (i32.add
    (local.get $13)
    (i32.const 400)
   )
  )
  (i32.store
   (local.tee $27
    (i32.add
     (local.get $13)
     (i32.const 488)
    )
   )
   (local.get $10)
  )
  (i32.store
   (local.tee $21
    (i32.add
     (local.get $13)
     (i32.const 480)
    )
   )
   (local.get $13)
  )
  (i32.store offset=4
   (local.get $21)
   (i32.const 94)
  )
  (i32.store
   (local.tee $18
    (i32.add
     (local.get $13)
     (i32.const 472)
    )
   )
   (local.get $13)
  )
  (i32.store
   (local.tee $28
    (i32.add
     (local.get $13)
     (i32.const 468)
    )
   )
   (i32.add
    (local.get $13)
    (i32.const 400)
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $22)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $14)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $15)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $16)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in7
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $20)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (call $__ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri
   (local.get $2)
   (local.get $3)
   (local.get $26)
   (local.get $32)
   (local.get $33)
   (local.get $22)
   (local.get $14)
   (local.get $15)
   (local.get $16)
   (local.get $23)
  )
  (i32.store
   (local.get $9)
   (i32.load
    (local.get $8)
   )
  )
  (local.set $34
   (i32.ne
    (i32.and
     (local.get $4)
     (i32.const 512)
    )
    (i32.const 0)
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (local.set $1
   (block $label$break$L326 (result i32)
    (block $__rjti$16
     (block $__rjti$15
      (block $__rjti$14
       (block $__rjti$13
        (block $__rjti$12
         (block $__rjti$11
          (loop $label$continue$L21
           (block $__rjti$10
            (br_if $__rjti$16
             (i32.ge_u
              (local.get $19)
              (i32.const 4)
             )
            )
            (local.set $3
             (if (result i32)
              (local.tee $3
               (i32.load
                (local.get $0)
               )
              )
              (if (result i32)
               (i32.eq
                (if (result i32)
                 (i32.eq
                  (local.tee $4
                   (i32.load offset=12
                    (local.get $3)
                   )
                  )
                  (i32.load offset=16
                   (local.get $3)
                  )
                 )
                 (call_indirect (type $i32_=>_i32)
                  (local.get $3)
                  (i32.and
                   (i32.load offset=36
                    (i32.load
                     (local.get $3)
                    )
                   )
                   (i32.const 63)
                  )
                 )
                 (i32.load8_u
                  (local.get $4)
                 )
                )
                (i32.const -1)
               )
               (block (result i32)
                (i32.store
                 (local.get $0)
                 (i32.const 0)
                )
                (i32.const 1)
               )
               (i32.eqz
                (i32.load
                 (local.get $0)
                )
               )
              )
              (i32.const 1)
             )
            )
            (block $__rjto$7
             (block $__rjti$7
              (br_if $__rjti$7
               (i32.eqz
                (local.tee $12
                 (i32.load
                  (local.get $1)
                 )
                )
               )
              )
              (if
               (i32.eq
                (if (result i32)
                 (i32.eq
                  (local.tee $4
                   (i32.load offset=12
                    (local.get $12)
                   )
                  )
                  (i32.load offset=16
                   (local.get $12)
                  )
                 )
                 (call_indirect (type $i32_=>_i32)
                  (local.get $12)
                  (i32.and
                   (i32.load offset=36
                    (i32.load
                     (local.get $12)
                    )
                   )
                   (i32.const 63)
                  )
                 )
                 (i32.load8_u
                  (local.get $4)
                 )
                )
                (i32.const -1)
               )
               (block
                (i32.store
                 (local.get $1)
                 (i32.const 0)
                )
                (br $__rjti$7)
               )
               (br_if $__rjti$16
                (i32.eqz
                 (local.get $3)
                )
               )
              )
              (br $__rjto$7)
             )
             (br_if $__rjti$16
              (local.get $3)
             )
             (local.set $12
              (i32.const 0)
             )
            )
            (block $label$break$L289
             (block $__rjti$8
              (block $switch-case38
               (block $switch-case22
                (block $switch-case12
                 (block $switch-case11
                  (block $switch-case
                   (br_table $switch-case11 $switch-case $switch-case22 $switch-case12 $switch-case38 $label$break$L289
                    (i32.load8_s
                     (i32.add
                      (local.get $19)
                      (local.get $26)
                     )
                    )
                   )
                  )
                  (if
                   (i32.ne
                    (local.get $19)
                    (i32.const 3)
                   )
                   (block
                    (br_if $__rjti$10
                     (i32.le_s
                      (i32.shr_s
                       (i32.shl
                        (i32.and
                         (local.tee $3
                          (if (result i32)
                           (i32.eq
                            (local.tee $4
                             (i32.load offset=12
                              (local.tee $3
                               (i32.load
                                (local.get $0)
                               )
                              )
                             )
                            )
                            (i32.load offset=16
                             (local.get $3)
                            )
                           )
                           (call_indirect (type $i32_=>_i32)
                            (local.get $3)
                            (i32.and
                             (i32.load offset=36
                              (i32.load
                               (local.get $3)
                              )
                             )
                             (i32.const 63)
                            )
                           )
                           (i32.load8_u
                            (local.get $4)
                           )
                          )
                         )
                         (i32.const 255)
                        )
                        (i32.const 24)
                       )
                       (i32.const 24)
                      )
                      (i32.const -1)
                     )
                    )
                    (br_if $__rjti$10
                     (i32.eqz
                      (i32.and
                       (i32.load16_s
                        (i32.add
                         (i32.load offset=8
                          (local.get $7)
                         )
                         (i32.shl
                          (i32.shr_s
                           (i32.shl
                            (local.get $3)
                            (i32.const 24)
                           )
                           (i32.const 24)
                          )
                          (i32.const 1)
                         )
                        )
                       )
                       (i32.const 8192)
                      )
                     )
                    )
                    (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
                     (local.get $20)
                     (i32.and
                      (if (result i32)
                       (i32.eq
                        (local.tee $4
                         (i32.load offset=12
                          (local.tee $3
                           (i32.load
                            (local.get $0)
                           )
                          )
                         )
                        )
                        (i32.load offset=16
                         (local.get $3)
                        )
                       )
                       (call_indirect (type $i32_=>_i32)
                        (local.get $3)
                        (i32.and
                         (i32.load offset=40
                          (i32.load
                           (local.get $3)
                          )
                         )
                         (i32.const 63)
                        )
                       )
                       (block (result i32)
                        (i32.store offset=12
                         (local.get $3)
                         (i32.add
                          (local.get $4)
                          (i32.const 1)
                         )
                        )
                        (i32.load8_u
                         (local.get $4)
                        )
                       )
                      )
                      (i32.const 255)
                     )
                    )
                    (br $__rjti$8)
                   )
                  )
                  (br $label$break$L289)
                 )
                 (br_if $__rjti$8
                  (i32.ne
                   (local.get $19)
                   (i32.const 3)
                  )
                 )
                 (br $label$break$L289)
                )
                (if
                 (i32.ne
                  (local.tee $11
                   (select
                    (i32.load offset=4
                     (local.get $15)
                    )
                    (i32.and
                     (local.tee $3
                      (i32.load8_s offset=11
                       (local.get $15)
                      )
                     )
                     (i32.const 255)
                    )
                    (i32.lt_s
                     (local.get $3)
                     (i32.const 0)
                    )
                   )
                  )
                  (i32.sub
                   (i32.const 0)
                   (local.tee $12
                    (select
                     (i32.load offset=4
                      (local.get $16)
                     )
                     (i32.and
                      (local.tee $3
                       (i32.load8_s offset=11
                        (local.get $16)
                       )
                      )
                      (i32.const 255)
                     )
                     (i32.lt_s
                      (local.get $3)
                      (i32.const 0)
                     )
                    )
                   )
                  )
                 )
                 (block
                  (local.set $10
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.tee $3
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                    (i32.load offset=16
                     (local.get $3)
                    )
                   )
                  )
                  (if
                   (i32.or
                    (local.tee $11
                     (i32.eqz
                      (local.get $11)
                     )
                    )
                    (i32.eqz
                     (local.get $12)
                    )
                   )
                   (block
                    (local.set $3
                     (i32.and
                      (if (result i32)
                       (local.get $10)
                       (call_indirect (type $i32_=>_i32)
                        (local.get $3)
                        (i32.and
                         (i32.load offset=36
                          (i32.load
                           (local.get $3)
                          )
                         )
                         (i32.const 63)
                        )
                       )
                       (i32.load8_u
                        (local.get $4)
                       )
                      )
                      (i32.const 255)
                     )
                    )
                    (if
                     (local.get $11)
                     (block
                      (br_if $label$break$L289
                       (i32.ne
                        (i32.load8_u
                         (select
                          (i32.load
                           (local.get $16)
                          )
                          (local.get $16)
                          (i32.lt_s
                           (i32.load8_s offset=11
                            (local.get $16)
                           )
                           (i32.const 0)
                          )
                         )
                        )
                        (local.get $3)
                       )
                      )
                      (if
                       (i32.eq
                        (local.tee $4
                         (i32.load offset=12
                          (local.tee $3
                           (i32.load
                            (local.get $0)
                           )
                          )
                         )
                        )
                        (i32.load offset=16
                         (local.get $3)
                        )
                       )
                       (drop
                        (call_indirect (type $i32_=>_i32)
                         (local.get $3)
                         (i32.and
                          (i32.load offset=40
                           (i32.load
                            (local.get $3)
                           )
                          )
                          (i32.const 63)
                         )
                        )
                       )
                       (block
                        (i32.store offset=12
                         (local.get $3)
                         (i32.add
                          (local.get $4)
                          (i32.const 1)
                         )
                        )
                        (drop
                         (i32.load8_u
                          (local.get $4)
                         )
                        )
                       )
                      )
                      (i32.store8
                       (local.get $6)
                       (i32.const 1)
                      )
                      (local.set $2
                       (select
                        (local.get $16)
                        (local.get $2)
                        (i32.gt_u
                         (select
                          (i32.load offset=4
                           (local.get $16)
                          )
                          (i32.and
                           (local.tee $2
                            (i32.load8_s offset=11
                             (local.get $16)
                            )
                           )
                           (i32.const 255)
                          )
                          (i32.lt_s
                           (local.get $2)
                           (i32.const 0)
                          )
                         )
                         (i32.const 1)
                        )
                       )
                      )
                      (br $label$break$L289)
                     )
                    )
                    (if
                     (i32.ne
                      (i32.load8_u
                       (select
                        (i32.load
                         (local.get $15)
                        )
                        (local.get $15)
                        (i32.lt_s
                         (i32.load8_s offset=11
                          (local.get $15)
                         )
                         (i32.const 0)
                        )
                       )
                      )
                      (local.get $3)
                     )
                     (block
                      (i32.store8
                       (local.get $6)
                       (i32.const 1)
                      )
                      (br $label$break$L289)
                     )
                    )
                    (if
                     (i32.eq
                      (local.tee $4
                       (i32.load offset=12
                        (local.tee $3
                         (i32.load
                          (local.get $0)
                         )
                        )
                       )
                      )
                      (i32.load offset=16
                       (local.get $3)
                      )
                     )
                     (drop
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=40
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                     )
                     (block
                      (i32.store offset=12
                       (local.get $3)
                       (i32.add
                        (local.get $4)
                        (i32.const 1)
                       )
                      )
                      (drop
                       (i32.load8_u
                        (local.get $4)
                       )
                      )
                     )
                    )
                    (local.set $2
                     (select
                      (local.get $15)
                      (local.get $2)
                      (i32.gt_u
                       (select
                        (i32.load offset=4
                         (local.get $15)
                        )
                        (i32.and
                         (local.tee $2
                          (i32.load8_s offset=11
                           (local.get $15)
                          )
                         )
                         (i32.const 255)
                        )
                        (i32.lt_s
                         (local.get $2)
                         (i32.const 0)
                        )
                       )
                       (i32.const 1)
                      )
                     )
                    )
                    (br $label$break$L289)
                   )
                  )
                  (local.set $11
                   (if (result i32)
                    (local.get $10)
                    (call_indirect (type $i32_=>_i32)
                     (local.get $3)
                     (i32.and
                      (i32.load offset=36
                       (i32.load
                        (local.get $3)
                       )
                      )
                      (i32.const 63)
                     )
                    )
                    (i32.load8_u
                     (local.get $4)
                    )
                   )
                  )
                  (local.set $10
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.tee $3
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                    (i32.load offset=16
                     (local.get $3)
                    )
                   )
                  )
                  (if
                   (i32.eq
                    (i32.load8_u
                     (select
                      (i32.load
                       (local.get $15)
                      )
                      (local.get $15)
                      (i32.lt_s
                       (i32.load8_s offset=11
                        (local.get $15)
                       )
                       (i32.const 0)
                      )
                     )
                    )
                    (i32.and
                     (local.get $11)
                     (i32.const 255)
                    )
                   )
                   (block
                    (if
                     (local.get $10)
                     (drop
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=40
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                     )
                     (block
                      (i32.store offset=12
                       (local.get $3)
                       (i32.add
                        (local.get $4)
                        (i32.const 1)
                       )
                      )
                      (drop
                       (i32.load8_u
                        (local.get $4)
                       )
                      )
                     )
                    )
                    (local.set $2
                     (select
                      (local.get $15)
                      (local.get $2)
                      (i32.gt_u
                       (select
                        (i32.load offset=4
                         (local.get $15)
                        )
                        (i32.and
                         (local.tee $2
                          (i32.load8_s offset=11
                           (local.get $15)
                          )
                         )
                         (i32.const 255)
                        )
                        (i32.lt_s
                         (local.get $2)
                         (i32.const 0)
                        )
                       )
                       (i32.const 1)
                      )
                     )
                    )
                    (br $label$break$L289)
                   )
                  )
                  (br_if $__rjti$11
                   (i32.ne
                    (i32.and
                     (if (result i32)
                      (local.get $10)
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load8_u
                       (local.get $4)
                      )
                     )
                     (i32.const 255)
                    )
                    (i32.load8_u
                     (select
                      (i32.load
                       (local.get $16)
                      )
                      (local.get $16)
                      (i32.lt_s
                       (i32.load8_s offset=11
                        (local.get $16)
                       )
                       (i32.const 0)
                      )
                     )
                    )
                   )
                  )
                  (if
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.tee $3
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                    (i32.load offset=16
                     (local.get $3)
                    )
                   )
                   (drop
                    (call_indirect (type $i32_=>_i32)
                     (local.get $3)
                     (i32.and
                      (i32.load offset=40
                       (i32.load
                        (local.get $3)
                       )
                      )
                      (i32.const 63)
                     )
                    )
                   )
                   (block
                    (i32.store offset=12
                     (local.get $3)
                     (i32.add
                      (local.get $4)
                      (i32.const 1)
                     )
                    )
                    (drop
                     (i32.load8_u
                      (local.get $4)
                     )
                    )
                   )
                  )
                  (i32.store8
                   (local.get $6)
                   (i32.const 1)
                  )
                  (local.set $2
                   (select
                    (local.get $16)
                    (local.get $2)
                    (i32.gt_u
                     (select
                      (i32.load offset=4
                       (local.get $16)
                      )
                      (i32.and
                       (local.tee $2
                        (i32.load8_s offset=11
                         (local.get $16)
                        )
                       )
                       (i32.const 255)
                      )
                      (i32.lt_s
                       (local.get $2)
                       (i32.const 0)
                      )
                     )
                     (i32.const 1)
                    )
                   )
                  )
                 )
                )
                (br $label$break$L289)
               )
               (block $label$break$L109
                (block $__rjti$1
                 (if
                  (i32.or
                   (i32.lt_u
                    (local.get $19)
                    (i32.const 2)
                   )
                   (local.get $2)
                  )
                  (block
                   (local.set $4
                    (local.tee $24
                     (select
                      (local.tee $10
                       (i32.load
                        (local.get $14)
                       )
                      )
                      (local.get $14)
                      (local.tee $11
                       (i32.lt_s
                        (local.tee $3
                         (i32.load8_s offset=11
                          (local.get $14)
                         )
                        )
                        (i32.const 0)
                       )
                      )
                     )
                    )
                   )
                   (br_if $__rjti$1
                    (local.get $19)
                   )
                  )
                  (block
                   (if
                    (i32.eqz
                     (i32.or
                      (i32.and
                       (i32.eq
                        (local.get $19)
                        (i32.const 2)
                       )
                       (i32.ne
                        (i32.load8_s offset=3
                         (local.get $26)
                        )
                        (i32.const 0)
                       )
                      )
                      (local.get $34)
                     )
                    )
                    (block
                     (local.set $2
                      (i32.const 0)
                     )
                     (br $label$break$L289)
                    )
                   )
                   (local.set $4
                    (local.tee $24
                     (select
                      (local.tee $10
                       (i32.load
                        (local.get $14)
                       )
                      )
                      (local.get $14)
                      (local.tee $11
                       (i32.lt_s
                        (local.tee $3
                         (i32.load8_s offset=11
                          (local.get $14)
                         )
                        )
                        (i32.const 0)
                       )
                      )
                     )
                    )
                   )
                   (br $__rjti$1)
                  )
                 )
                 (br $label$break$L109)
                )
                (if
                 (i32.lt_s
                  (i32.load8_u
                   (i32.add
                    (local.get $26)
                    (i32.add
                     (local.get $19)
                     (i32.const -1)
                    )
                   )
                  )
                  (i32.const 2)
                 )
                 (block
                  (local.set $17
                   (i32.add
                    (select
                     (i32.load offset=4
                      (local.get $14)
                     )
                     (i32.and
                      (local.get $3)
                      (i32.const 255)
                     )
                     (local.get $11)
                    )
                    (local.get $24)
                   )
                  )
                  (local.set $11
                   (local.get $4)
                  )
                  (loop $while-in15
                   (block $while-out14
                    (br_if $while-out14
                     (i32.eq
                      (local.get $11)
                      (local.get $17)
                     )
                    )
                    (br_if $while-out14
                     (i32.le_s
                      (local.tee $29
                       (i32.load8_s
                        (local.get $11)
                       )
                      )
                      (i32.const -1)
                     )
                    )
                    (br_if $while-out14
                     (i32.eqz
                      (i32.and
                       (i32.load16_s
                        (i32.add
                         (i32.load offset=8
                          (local.get $7)
                         )
                         (i32.shl
                          (local.get $29)
                          (i32.const 1)
                         )
                        )
                       )
                       (i32.const 8192)
                      )
                     )
                    )
                    (local.set $11
                     (i32.add
                      (local.get $11)
                      (i32.const 1)
                     )
                    )
                    (br $while-in15)
                   )
                  )
                  (local.set $17
                   (i32.lt_s
                    (local.tee $25
                     (i32.load8_s offset=11
                      (local.get $20)
                     )
                    )
                    (i32.const 0)
                   )
                  )
                  (if
                   (i32.le_u
                    (local.tee $29
                     (i32.sub
                      (local.get $11)
                      (local.get $4)
                     )
                    )
                    (select
                     (local.tee $31
                      (i32.load offset=4
                       (local.get $20)
                      )
                     )
                     (local.tee $25
                      (i32.and
                       (local.get $25)
                       (i32.const 255)
                      )
                     )
                     (local.get $17)
                    )
                   )
                   (block
                    (local.set $35
                     (select
                      (local.tee $31
                       (i32.add
                        (local.get $31)
                        (i32.load
                         (local.get $20)
                        )
                       )
                      )
                      (local.tee $25
                       (i32.add
                        (local.get $20)
                        (local.get $25)
                       )
                      )
                      (local.get $17)
                     )
                    )
                    (local.set $17
                     (select
                      (i32.sub
                       (local.get $31)
                       (local.get $29)
                      )
                      (i32.sub
                       (local.get $25)
                       (local.get $29)
                      )
                      (local.get $17)
                     )
                    )
                    (loop $while-in17
                     (if
                      (i32.eq
                       (local.get $17)
                       (local.get $35)
                      )
                      (block
                       (local.set $4
                        (local.get $11)
                       )
                       (br $label$break$L109)
                      )
                     )
                     (if
                      (i32.eq
                       (i32.load8_s
                        (local.get $17)
                       )
                       (i32.load8_s
                        (local.get $24)
                       )
                      )
                      (block
                       (local.set $24
                        (i32.add
                         (local.get $24)
                         (i32.const 1)
                        )
                       )
                       (local.set $17
                        (i32.add
                         (local.get $17)
                         (i32.const 1)
                        )
                       )
                       (br $while-in17)
                      )
                     )
                    )
                   )
                  )
                 )
                )
               )
               (loop $label$continue$L124
                (block $label$break$L124
                 (br_if $label$break$L124
                  (i32.eq
                   (local.get $4)
                   (i32.add
                    (select
                     (local.get $10)
                     (local.get $14)
                     (local.tee $10
                      (i32.lt_s
                       (i32.shr_s
                        (i32.shl
                         (local.get $3)
                         (i32.const 24)
                        )
                        (i32.const 24)
                       )
                       (i32.const 0)
                      )
                     )
                    )
                    (select
                     (i32.load offset=4
                      (local.get $14)
                     )
                     (i32.and
                      (local.get $3)
                      (i32.const 255)
                     )
                     (local.get $10)
                    )
                   )
                  )
                 )
                 (local.set $3
                  (if (result i32)
                   (local.tee $3
                    (i32.load
                     (local.get $0)
                    )
                   )
                   (if (result i32)
                    (i32.eq
                     (if (result i32)
                      (i32.eq
                       (local.tee $10
                        (i32.load offset=12
                         (local.get $3)
                        )
                       )
                       (i32.load offset=16
                        (local.get $3)
                       )
                      )
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load8_u
                       (local.get $10)
                      )
                     )
                     (i32.const -1)
                    )
                    (block (result i32)
                     (i32.store
                      (local.get $0)
                      (i32.const 0)
                     )
                     (i32.const 1)
                    )
                    (i32.eqz
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (block $__rjto$0
                  (block $__rjti$0
                   (br_if $__rjti$0
                    (i32.eqz
                     (local.get $12)
                    )
                   )
                   (if
                    (i32.eq
                     (if (result i32)
                      (i32.eq
                       (local.tee $10
                        (i32.load offset=12
                         (local.get $12)
                        )
                       )
                       (i32.load offset=16
                        (local.get $12)
                       )
                      )
                      (call_indirect (type $i32_=>_i32)
                       (local.get $12)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $12)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load8_u
                       (local.get $10)
                      )
                     )
                     (i32.const -1)
                    )
                    (block
                     (i32.store
                      (local.get $1)
                      (i32.const 0)
                     )
                     (br $__rjti$0)
                    )
                    (br_if $label$break$L124
                     (i32.eqz
                      (local.get $3)
                     )
                    )
                   )
                   (br $__rjto$0)
                  )
                  (br_if $label$break$L124
                   (local.get $3)
                  )
                  (local.set $12
                   (i32.const 0)
                  )
                 )
                 (br_if $label$break$L124
                  (i32.ne
                   (i32.and
                    (if (result i32)
                     (i32.eq
                      (local.tee $10
                       (i32.load offset=12
                        (local.tee $3
                         (i32.load
                          (local.get $0)
                         )
                        )
                       )
                      )
                      (i32.load offset=16
                       (local.get $3)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $3)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $3)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load8_u
                      (local.get $10)
                     )
                    )
                    (i32.const 255)
                   )
                   (i32.load8_u
                    (local.get $4)
                   )
                  )
                 )
                 (if
                  (i32.eq
                   (local.tee $10
                    (i32.load offset=12
                     (local.tee $3
                      (i32.load
                       (local.get $0)
                      )
                     )
                    )
                   )
                   (i32.load offset=16
                    (local.get $3)
                   )
                  )
                  (drop
                   (call_indirect (type $i32_=>_i32)
                    (local.get $3)
                    (i32.and
                     (i32.load offset=40
                      (i32.load
                       (local.get $3)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                  )
                  (block
                   (i32.store offset=12
                    (local.get $3)
                    (i32.add
                     (local.get $10)
                     (i32.const 1)
                    )
                   )
                   (drop
                    (i32.load8_u
                     (local.get $10)
                    )
                   )
                  )
                 )
                 (local.set $4
                  (i32.add
                   (local.get $4)
                   (i32.const 1)
                  )
                 )
                 (local.set $3
                  (i32.load8_s offset=11
                   (local.get $14)
                  )
                 )
                 (local.set $10
                  (i32.load
                   (local.get $14)
                  )
                 )
                 (br $label$continue$L124)
                )
               )
               (if
                (local.get $34)
                (br_if $__rjti$12
                 (i32.ne
                  (local.get $4)
                  (i32.add
                   (select
                    (i32.load
                     (local.get $14)
                    )
                    (local.get $14)
                    (local.tee $10
                     (i32.lt_s
                      (local.tee $3
                       (i32.load8_s offset=11
                        (local.get $14)
                       )
                      )
                      (i32.const 0)
                     )
                    )
                   )
                   (select
                    (i32.load offset=4
                     (local.get $14)
                    )
                    (i32.and
                     (local.get $3)
                     (i32.const 255)
                    )
                    (local.get $10)
                   )
                  )
                 )
                )
               )
               (br $label$break$L289)
              )
              (local.set $4
               (i32.const 0)
              )
              (local.set $3
               (local.get $12)
              )
              (loop $label$continue$L161
               (block $label$break$L161
                (local.set $10
                 (if (result i32)
                  (local.tee $10
                   (i32.load
                    (local.get $0)
                   )
                  )
                  (if (result i32)
                   (i32.eq
                    (if (result i32)
                     (i32.eq
                      (local.tee $11
                       (i32.load offset=12
                        (local.get $10)
                       )
                      )
                      (i32.load offset=16
                       (local.get $10)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $10)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $10)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load8_u
                      (local.get $11)
                     )
                    )
                    (i32.const -1)
                   )
                   (block (result i32)
                    (i32.store
                     (local.get $0)
                     (i32.const 0)
                    )
                    (i32.const 1)
                   )
                   (i32.eqz
                    (i32.load
                     (local.get $0)
                    )
                   )
                  )
                  (i32.const 1)
                 )
                )
                (block $__rjto$2
                 (block $__rjti$2
                  (br_if $__rjti$2
                   (i32.eqz
                    (local.get $12)
                   )
                  )
                  (if
                   (i32.eq
                    (if (result i32)
                     (i32.eq
                      (local.tee $11
                       (i32.load offset=12
                        (local.get $12)
                       )
                      )
                      (i32.load offset=16
                       (local.get $12)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $12)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $12)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load8_u
                      (local.get $11)
                     )
                    )
                    (i32.const -1)
                   )
                   (block
                    (i32.store
                     (local.get $1)
                     (i32.const 0)
                    )
                    (local.set $3
                     (i32.const 0)
                    )
                    (br $__rjti$2)
                   )
                   (br_if $label$break$L161
                    (i32.eqz
                     (local.get $10)
                    )
                   )
                  )
                  (br $__rjto$2)
                 )
                 (br_if $label$break$L161
                  (local.get $10)
                 )
                 (local.set $12
                  (i32.const 0)
                 )
                )
                (local.set $4
                 (block $__rjto$3 (result i32)
                  (block $__rjti$3
                   (br_if $__rjti$3
                    (i32.le_s
                     (i32.shr_s
                      (i32.shl
                       (local.tee $11
                        (i32.and
                         (local.tee $10
                          (if (result i32)
                           (i32.eq
                            (local.tee $11
                             (i32.load offset=12
                              (local.tee $10
                               (i32.load
                                (local.get $0)
                               )
                              )
                             )
                            )
                            (i32.load offset=16
                             (local.get $10)
                            )
                           )
                           (call_indirect (type $i32_=>_i32)
                            (local.get $10)
                            (i32.and
                             (i32.load offset=36
                              (i32.load
                               (local.get $10)
                              )
                             )
                             (i32.const 63)
                            )
                           )
                           (i32.load8_u
                            (local.get $11)
                           )
                          )
                         )
                         (i32.const 255)
                        )
                       )
                       (i32.const 24)
                      )
                      (i32.const 24)
                     )
                     (i32.const -1)
                    )
                   )
                   (br_if $__rjti$3
                    (i32.eqz
                     (i32.and
                      (i32.load16_s
                       (i32.add
                        (i32.load offset=8
                         (local.get $7)
                        )
                        (i32.shl
                         (i32.shr_s
                          (i32.shl
                           (local.get $10)
                           (i32.const 24)
                          )
                          (i32.const 24)
                         )
                         (i32.const 1)
                        )
                       )
                      )
                      (i32.const 2048)
                     )
                    )
                   )
                   (if
                    (i32.eq
                     (local.tee $10
                      (i32.load
                       (local.get $9)
                      )
                     )
                     (i32.load
                      (local.get $27)
                     )
                    )
                    (block
                     (call $__ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                      (local.get $8)
                      (local.get $9)
                      (local.get $27)
                     )
                     (local.set $10
                      (i32.load
                       (local.get $9)
                      )
                     )
                    )
                   )
                   (i32.store
                    (local.get $9)
                    (i32.add
                     (local.get $10)
                     (i32.const 1)
                    )
                   )
                   (i32.store8
                    (local.get $10)
                    (local.get $11)
                   )
                   (br $__rjto$3
                    (i32.add
                     (local.get $4)
                     (i32.const 1)
                    )
                   )
                  )
                  (br_if $label$break$L161
                   (i32.eqz
                    (i32.and
                     (i32.and
                      (i32.ne
                       (select
                        (i32.load offset=4
                         (local.get $22)
                        )
                        (i32.and
                         (local.tee $10
                          (i32.load8_s offset=11
                           (local.get $22)
                          )
                         )
                         (i32.const 255)
                        )
                        (i32.lt_s
                         (local.get $10)
                         (i32.const 0)
                        )
                       )
                       (i32.const 0)
                      )
                      (i32.ne
                       (local.get $4)
                       (i32.const 0)
                      )
                     )
                     (i32.eq
                      (i32.load8_u
                       (local.get $33)
                      )
                      (local.get $11)
                     )
                    )
                   )
                  )
                  (if
                   (i32.eq
                    (local.tee $10
                     (i32.load
                      (local.get $18)
                     )
                    )
                    (i32.load
                     (local.get $28)
                    )
                   )
                   (block
                    (call $__ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                     (local.get $21)
                     (local.get $18)
                     (local.get $28)
                    )
                    (local.set $10
                     (i32.load
                      (local.get $18)
                     )
                    )
                   )
                  )
                  (i32.store
                   (local.get $18)
                   (i32.add
                    (local.get $10)
                    (i32.const 4)
                   )
                  )
                  (i32.store
                   (local.get $10)
                   (local.get $4)
                  )
                  (i32.const 0)
                 )
                )
                (if
                 (i32.eq
                  (local.tee $11
                   (i32.load offset=12
                    (local.tee $10
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                  )
                  (i32.load offset=16
                   (local.get $10)
                  )
                 )
                 (drop
                  (call_indirect (type $i32_=>_i32)
                   (local.get $10)
                   (i32.and
                    (i32.load offset=40
                     (i32.load
                      (local.get $10)
                     )
                    )
                    (i32.const 63)
                   )
                  )
                 )
                 (block
                  (i32.store offset=12
                   (local.get $10)
                   (i32.add
                    (local.get $11)
                    (i32.const 1)
                   )
                  )
                  (drop
                   (i32.load8_u
                    (local.get $11)
                   )
                  )
                 )
                )
                (br $label$continue$L161)
               )
              )
              (if
               (i32.and
                (i32.ne
                 (local.tee $10
                  (i32.load
                   (local.get $18)
                  )
                 )
                 (i32.load
                  (local.get $21)
                 )
                )
                (i32.ne
                 (local.get $4)
                 (i32.const 0)
                )
               )
               (block
                (if
                 (i32.eq
                  (local.get $10)
                  (i32.load
                   (local.get $28)
                  )
                 )
                 (block
                  (call $__ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                   (local.get $21)
                   (local.get $18)
                   (local.get $28)
                  )
                  (local.set $10
                   (i32.load
                    (local.get $18)
                   )
                  )
                 )
                )
                (i32.store
                 (local.get $18)
                 (i32.add
                  (local.get $10)
                  (i32.const 4)
                 )
                )
                (i32.store
                 (local.get $10)
                 (local.get $4)
                )
               )
              )
              (if
               (i32.gt_s
                (i32.load
                 (local.get $23)
                )
                (i32.const 0)
               )
               (block $label$break$L213
                (local.set $4
                 (if (result i32)
                  (local.tee $4
                   (i32.load
                    (local.get $0)
                   )
                  )
                  (if (result i32)
                   (i32.eq
                    (if (result i32)
                     (i32.eq
                      (local.tee $10
                       (i32.load offset=12
                        (local.get $4)
                       )
                      )
                      (i32.load offset=16
                       (local.get $4)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $4)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $4)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load8_u
                      (local.get $10)
                     )
                    )
                    (i32.const -1)
                   )
                   (block (result i32)
                    (i32.store
                     (local.get $0)
                     (i32.const 0)
                    )
                    (i32.const 1)
                   )
                   (i32.eqz
                    (i32.load
                     (local.get $0)
                    )
                   )
                  )
                  (i32.const 1)
                 )
                )
                (block $__rjto$5
                 (block $__rjti$5
                  (br_if $__rjti$5
                   (i32.eqz
                    (local.get $3)
                   )
                  )
                  (if
                   (i32.eq
                    (if (result i32)
                     (i32.eq
                      (local.tee $10
                       (i32.load offset=12
                        (local.get $3)
                       )
                      )
                      (i32.load offset=16
                       (local.get $3)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $3)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $3)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load8_u
                      (local.get $10)
                     )
                    )
                    (i32.const -1)
                   )
                   (block
                    (i32.store
                     (local.get $1)
                     (i32.const 0)
                    )
                    (br $__rjti$5)
                   )
                   (br_if $__rjti$13
                    (i32.eqz
                     (local.get $4)
                    )
                   )
                  )
                  (br $__rjto$5)
                 )
                 (br_if $__rjti$13
                  (local.get $4)
                 )
                 (local.set $3
                  (i32.const 0)
                 )
                )
                (br_if $__rjti$13
                 (i32.ne
                  (i32.and
                   (if (result i32)
                    (i32.eq
                     (local.tee $10
                      (i32.load offset=12
                       (local.tee $4
                        (i32.load
                         (local.get $0)
                        )
                       )
                      )
                     )
                     (i32.load offset=16
                      (local.get $4)
                     )
                    )
                    (call_indirect (type $i32_=>_i32)
                     (local.get $4)
                     (i32.and
                      (i32.load offset=36
                       (i32.load
                        (local.get $4)
                       )
                      )
                      (i32.const 63)
                     )
                    )
                    (i32.load8_u
                     (local.get $10)
                    )
                   )
                   (i32.const 255)
                  )
                  (i32.load8_u
                   (local.get $32)
                  )
                 )
                )
                (if
                 (i32.eq
                  (local.tee $10
                   (i32.load offset=12
                    (local.tee $4
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                  )
                  (i32.load offset=16
                   (local.get $4)
                  )
                 )
                 (drop
                  (call_indirect (type $i32_=>_i32)
                   (local.get $4)
                   (i32.and
                    (i32.load offset=40
                     (i32.load
                      (local.get $4)
                     )
                    )
                    (i32.const 63)
                   )
                  )
                 )
                 (block
                  (i32.store offset=12
                   (local.get $4)
                   (i32.add
                    (local.get $10)
                    (i32.const 1)
                   )
                  )
                  (drop
                   (i32.load8_u
                    (local.get $10)
                   )
                  )
                 )
                )
                (loop $while-in33
                 (br_if $label$break$L213
                  (i32.le_s
                   (i32.load
                    (local.get $23)
                   )
                   (i32.const 0)
                  )
                 )
                 (local.set $4
                  (if (result i32)
                   (local.tee $4
                    (i32.load
                     (local.get $0)
                    )
                   )
                   (if (result i32)
                    (i32.eq
                     (if (result i32)
                      (i32.eq
                       (local.tee $10
                        (i32.load offset=12
                         (local.get $4)
                        )
                       )
                       (i32.load offset=16
                        (local.get $4)
                       )
                      )
                      (call_indirect (type $i32_=>_i32)
                       (local.get $4)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $4)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load8_u
                       (local.get $10)
                      )
                     )
                     (i32.const -1)
                    )
                    (block (result i32)
                     (i32.store
                      (local.get $0)
                      (i32.const 0)
                     )
                     (i32.const 1)
                    )
                    (i32.eqz
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (block $__rjto$4
                  (block $__rjti$4
                   (br_if $__rjti$4
                    (i32.eqz
                     (local.get $3)
                    )
                   )
                   (if
                    (i32.eq
                     (if (result i32)
                      (i32.eq
                       (local.tee $10
                        (i32.load offset=12
                         (local.get $3)
                        )
                       )
                       (i32.load offset=16
                        (local.get $3)
                       )
                      )
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load8_u
                       (local.get $10)
                      )
                     )
                     (i32.const -1)
                    )
                    (block
                     (i32.store
                      (local.get $1)
                      (i32.const 0)
                     )
                     (br $__rjti$4)
                    )
                    (br_if $__rjti$14
                     (i32.eqz
                      (local.get $4)
                     )
                    )
                   )
                   (br $__rjto$4)
                  )
                  (br_if $__rjti$14
                   (local.get $4)
                  )
                  (local.set $3
                   (i32.const 0)
                  )
                 )
                 (br_if $__rjti$14
                  (i32.le_s
                   (i32.shr_s
                    (i32.shl
                     (i32.and
                      (local.tee $4
                       (if (result i32)
                        (i32.eq
                         (local.tee $10
                          (i32.load offset=12
                           (local.tee $4
                            (i32.load
                             (local.get $0)
                            )
                           )
                          )
                         )
                         (i32.load offset=16
                          (local.get $4)
                         )
                        )
                        (call_indirect (type $i32_=>_i32)
                         (local.get $4)
                         (i32.and
                          (i32.load offset=36
                           (i32.load
                            (local.get $4)
                           )
                          )
                          (i32.const 63)
                         )
                        )
                        (i32.load8_u
                         (local.get $10)
                        )
                       )
                      )
                      (i32.const 255)
                     )
                     (i32.const 24)
                    )
                    (i32.const 24)
                   )
                   (i32.const -1)
                  )
                 )
                 (br_if $__rjti$14
                  (i32.eqz
                   (i32.and
                    (i32.load16_s
                     (i32.add
                      (i32.load offset=8
                       (local.get $7)
                      )
                      (i32.shl
                       (i32.shr_s
                        (i32.shl
                         (local.get $4)
                         (i32.const 24)
                        )
                        (i32.const 24)
                       )
                       (i32.const 1)
                      )
                     )
                    )
                    (i32.const 2048)
                   )
                  )
                 )
                 (if
                  (i32.eq
                   (i32.load
                    (local.get $9)
                   )
                   (i32.load
                    (local.get $27)
                   )
                  )
                  (call $__ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                   (local.get $8)
                   (local.get $9)
                   (local.get $27)
                  )
                 )
                 (local.set $4
                  (if (result i32)
                   (i32.eq
                    (local.tee $10
                     (i32.load offset=12
                      (local.tee $4
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                    (i32.load offset=16
                     (local.get $4)
                    )
                   )
                   (call_indirect (type $i32_=>_i32)
                    (local.get $4)
                    (i32.and
                     (i32.load offset=36
                      (i32.load
                       (local.get $4)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                   (i32.load8_u
                    (local.get $10)
                   )
                  )
                 )
                 (i32.store
                  (local.get $9)
                  (i32.add
                   (local.tee $10
                    (i32.load
                     (local.get $9)
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (i32.store8
                  (local.get $10)
                  (local.get $4)
                 )
                 (i32.store
                  (local.get $23)
                  (i32.add
                   (i32.load
                    (local.get $23)
                   )
                   (i32.const -1)
                  )
                 )
                 (if
                  (i32.eq
                   (local.tee $10
                    (i32.load offset=12
                     (local.tee $4
                      (i32.load
                       (local.get $0)
                      )
                     )
                    )
                   )
                   (i32.load offset=16
                    (local.get $4)
                   )
                  )
                  (drop
                   (call_indirect (type $i32_=>_i32)
                    (local.get $4)
                    (i32.and
                     (i32.load offset=40
                      (i32.load
                       (local.get $4)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                  )
                  (block
                   (i32.store offset=12
                    (local.get $4)
                    (i32.add
                     (local.get $10)
                     (i32.const 1)
                    )
                   )
                   (drop
                    (i32.load8_u
                     (local.get $10)
                    )
                   )
                  )
                 )
                 (br $while-in33)
                )
               )
              )
              (br_if $__rjti$15
               (i32.eq
                (i32.load
                 (local.get $9)
                )
                (i32.load
                 (local.get $8)
                )
               )
              )
              (br $label$break$L289)
             )
             (loop $while-in41
              (local.set $3
               (if (result i32)
                (local.tee $3
                 (i32.load
                  (local.get $0)
                 )
                )
                (if (result i32)
                 (i32.eq
                  (if (result i32)
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.get $3)
                     )
                    )
                    (i32.load offset=16
                     (local.get $3)
                    )
                   )
                   (call_indirect (type $i32_=>_i32)
                    (local.get $3)
                    (i32.and
                     (i32.load offset=36
                      (i32.load
                       (local.get $3)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                   (i32.load8_u
                    (local.get $4)
                   )
                  )
                  (i32.const -1)
                 )
                 (block (result i32)
                  (i32.store
                   (local.get $0)
                   (i32.const 0)
                  )
                  (i32.const 1)
                 )
                 (i32.eqz
                  (i32.load
                   (local.get $0)
                  )
                 )
                )
                (i32.const 1)
               )
              )
              (block $__rjto$6
               (block $__rjti$6
                (br_if $__rjti$6
                 (i32.eqz
                  (local.get $12)
                 )
                )
                (if
                 (i32.eq
                  (if (result i32)
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.get $12)
                     )
                    )
                    (i32.load offset=16
                     (local.get $12)
                    )
                   )
                   (call_indirect (type $i32_=>_i32)
                    (local.get $12)
                    (i32.and
                     (i32.load offset=36
                      (i32.load
                       (local.get $12)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                   (i32.load8_u
                    (local.get $4)
                   )
                  )
                  (i32.const -1)
                 )
                 (block
                  (i32.store
                   (local.get $1)
                   (i32.const 0)
                  )
                  (br $__rjti$6)
                 )
                 (br_if $label$break$L289
                  (i32.eqz
                   (local.get $3)
                  )
                 )
                )
                (br $__rjto$6)
               )
               (br_if $label$break$L289
                (local.get $3)
               )
               (local.set $12
                (i32.const 0)
               )
              )
              (br_if $label$break$L289
               (i32.le_s
                (i32.shr_s
                 (i32.shl
                  (i32.and
                   (local.tee $3
                    (if (result i32)
                     (i32.eq
                      (local.tee $4
                       (i32.load offset=12
                        (local.tee $3
                         (i32.load
                          (local.get $0)
                         )
                        )
                       )
                      )
                      (i32.load offset=16
                       (local.get $3)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $3)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $3)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load8_u
                      (local.get $4)
                     )
                    )
                   )
                   (i32.const 255)
                  )
                  (i32.const 24)
                 )
                 (i32.const 24)
                )
                (i32.const -1)
               )
              )
              (br_if $label$break$L289
               (i32.eqz
                (i32.and
                 (i32.load16_s
                  (i32.add
                   (i32.load offset=8
                    (local.get $7)
                   )
                   (i32.shl
                    (i32.shr_s
                     (i32.shl
                      (local.get $3)
                      (i32.const 24)
                     )
                     (i32.const 24)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (i32.const 8192)
                )
               )
              )
              (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
               (local.get $20)
               (i32.and
                (if (result i32)
                 (i32.eq
                  (local.tee $4
                   (i32.load offset=12
                    (local.tee $3
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                  )
                  (i32.load offset=16
                   (local.get $3)
                  )
                 )
                 (call_indirect (type $i32_=>_i32)
                  (local.get $3)
                  (i32.and
                   (i32.load offset=40
                    (i32.load
                     (local.get $3)
                    )
                   )
                   (i32.const 63)
                  )
                 )
                 (block (result i32)
                  (i32.store offset=12
                   (local.get $3)
                   (i32.add
                    (local.get $4)
                    (i32.const 1)
                   )
                  )
                  (i32.load8_u
                   (local.get $4)
                  )
                 )
                )
                (i32.const 255)
               )
              )
              (br $while-in41)
             )
            )
            (local.set $19
             (i32.add
              (local.get $19)
              (i32.const 1)
             )
            )
            (br $label$continue$L21)
           )
          )
          (i32.store
           (local.get $5)
           (i32.or
            (i32.load
             (local.get $5)
            )
            (i32.const 4)
           )
          )
          (br $label$break$L326
           (i32.const 0)
          )
         )
         (i32.store
          (local.get $5)
          (i32.or
           (i32.load
            (local.get $5)
           )
           (i32.const 4)
          )
         )
         (br $label$break$L326
          (i32.const 0)
         )
        )
        (i32.store
         (local.get $5)
         (i32.or
          (i32.load
           (local.get $5)
          )
          (i32.const 4)
         )
        )
        (br $label$break$L326
         (i32.const 0)
        )
       )
       (i32.store
        (local.get $5)
        (i32.or
         (i32.load
          (local.get $5)
         )
         (i32.const 4)
        )
       )
       (br $label$break$L326
        (i32.const 0)
       )
      )
      (i32.store
       (local.get $5)
       (i32.or
        (i32.load
         (local.get $5)
        )
        (i32.const 4)
       )
      )
      (br $label$break$L326
       (i32.const 0)
      )
     )
     (i32.store
      (local.get $5)
      (i32.or
       (i32.load
        (local.get $5)
       )
       (i32.const 4)
      )
     )
     (br $label$break$L326
      (i32.const 0)
     )
    )
    (if
     (local.get $2)
     (block $label$break$L328
      (local.set $6
       (local.get $2)
      )
      (local.set $7
       (i32.const 1)
      )
      (loop $label$continue$L330
       (block $label$break$L330
        (br_if $label$break$L328
         (i32.ge_u
          (local.get $7)
          (if (result i32)
           (i32.lt_s
            (local.tee $3
             (i32.load8_s offset=11
              (local.get $2)
             )
            )
            (i32.const 0)
           )
           (i32.load offset=4
            (local.get $6)
           )
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
          )
         )
        )
        (local.set $4
         (if (result i32)
          (local.tee $3
           (i32.load
            (local.get $0)
           )
          )
          (if (result i32)
           (i32.eq
            (if (result i32)
             (i32.eq
              (local.tee $4
               (i32.load offset=12
                (local.get $3)
               )
              )
              (i32.load offset=16
               (local.get $3)
              )
             )
             (call_indirect (type $i32_=>_i32)
              (local.get $3)
              (i32.and
               (i32.load offset=36
                (i32.load
                 (local.get $3)
                )
               )
               (i32.const 63)
              )
             )
             (i32.load8_u
              (local.get $4)
             )
            )
            (i32.const -1)
           )
           (block (result i32)
            (i32.store
             (local.get $0)
             (i32.const 0)
            )
            (i32.const 1)
           )
           (i32.eqz
            (i32.load
             (local.get $0)
            )
           )
          )
          (i32.const 1)
         )
        )
        (block $__rjto$9
         (block $__rjti$9
          (br_if $__rjti$9
           (i32.eqz
            (local.tee $3
             (i32.load
              (local.get $1)
             )
            )
           )
          )
          (if
           (i32.eq
            (if (result i32)
             (i32.eq
              (local.tee $8
               (i32.load offset=12
                (local.get $3)
               )
              )
              (i32.load offset=16
               (local.get $3)
              )
             )
             (call_indirect (type $i32_=>_i32)
              (local.get $3)
              (i32.and
               (i32.load offset=36
                (i32.load
                 (local.get $3)
                )
               )
               (i32.const 63)
              )
             )
             (i32.load8_u
              (local.get $8)
             )
            )
            (i32.const -1)
           )
           (block
            (i32.store
             (local.get $1)
             (i32.const 0)
            )
            (br $__rjti$9)
           )
           (br_if $label$break$L330
            (i32.eqz
             (local.get $4)
            )
           )
          )
          (br $__rjto$9)
         )
         (br_if $label$break$L330
          (local.get $4)
         )
        )
        (br_if $label$break$L330
         (i32.ne
          (i32.and
           (if (result i32)
            (i32.eq
             (local.tee $4
              (i32.load offset=12
               (local.tee $3
                (i32.load
                 (local.get $0)
                )
               )
              )
             )
             (i32.load offset=16
              (local.get $3)
             )
            )
            (call_indirect (type $i32_=>_i32)
             (local.get $3)
             (i32.and
              (i32.load offset=36
               (i32.load
                (local.get $3)
               )
              )
              (i32.const 63)
             )
            )
            (i32.load8_u
             (local.get $4)
            )
           )
           (i32.const 255)
          )
          (i32.load8_u
           (i32.add
            (if (result i32)
             (i32.lt_s
              (i32.load8_s offset=11
               (local.get $2)
              )
              (i32.const 0)
             )
             (i32.load
              (local.get $2)
             )
             (local.get $2)
            )
            (local.get $7)
           )
          )
         )
        )
        (if
         (i32.eq
          (local.tee $4
           (i32.load offset=12
            (local.tee $3
             (i32.load
              (local.get $0)
             )
            )
           )
          )
          (i32.load offset=16
           (local.get $3)
          )
         )
         (drop
          (call_indirect (type $i32_=>_i32)
           (local.get $3)
           (i32.and
            (i32.load offset=40
             (i32.load
              (local.get $3)
             )
            )
            (i32.const 63)
           )
          )
         )
         (block
          (i32.store offset=12
           (local.get $3)
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (drop
           (i32.load8_u
            (local.get $4)
           )
          )
         )
        )
        (local.set $7
         (i32.add
          (local.get $7)
          (i32.const 1)
         )
        )
        (br $label$continue$L330)
       )
      )
      (i32.store
       (local.get $5)
       (i32.or
        (i32.load
         (local.get $5)
        )
        (i32.const 4)
       )
      )
      (br $label$break$L326
       (i32.const 0)
      )
     )
    )
    (if (result i32)
     (i32.eq
      (local.tee $0
       (i32.load
        (local.get $21)
       )
      )
      (local.tee $1
       (i32.load
        (local.get $18)
       )
      )
     )
     (i32.const 1)
     (block (result i32)
      (i32.store
       (local.get $30)
       (i32.const 0)
      )
      (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
       (local.get $22)
       (local.get $0)
       (local.get $1)
       (local.get $30)
      )
      (if (result i32)
       (i32.load
        (local.get $30)
       )
       (block (result i32)
        (i32.store
         (local.get $5)
         (i32.or
          (i32.load
           (local.get $5)
          )
          (i32.const 4)
         )
        )
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $20)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $16)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $15)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $14)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $22)
  )
  (local.set $0
   (i32.load
    (local.get $21)
   )
  )
  (i32.store
   (local.get $21)
   (i32.const 0)
  )
  (if
   (local.get $0)
   (call_indirect (type $i32_=>_none)
    (local.get $0)
    (i32.add
     (i32.and
      (i32.load offset=4
       (local.get $21)
      )
      (i32.const 127)
     )
     (i32.const 267)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $13)
  )
  (local.get $1)
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $6
   (if (result i32)
    (local.tee $7
     (i32.lt_s
      (local.tee $5
       (i32.load8_s offset=11
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (block (result i32)
     (local.set $4
      (i32.add
       (i32.and
        (i32.load offset=8
         (local.get $0)
        )
        (i32.const 2147483647)
       )
       (i32.const -1)
      )
     )
     (i32.load offset=4
      (local.get $0)
     )
    )
    (block (result i32)
     (local.set $4
      (i32.const 10)
     )
     (i32.and
      (local.get $5)
      (i32.const 255)
     )
    )
   )
  )
  (if
   (local.tee $8
    (i32.sub
     (local.get $2)
     (local.get $1)
    )
   )
   (block $do-once
    (if
     (block (result i32)
      (local.set $9
       (local.tee $7
        (if (result i32)
         (local.get $7)
         (block (result i32)
          (local.set $5
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.load
           (local.get $0)
          )
         )
         (block (result i32)
          (local.set $5
           (i32.and
            (local.get $5)
            (i32.const 255)
           )
          )
          (local.get $0)
         )
        )
       )
      )
      (i32.and
       (i32.lt_u
        (local.get $1)
        (i32.add
         (local.get $5)
         (local.get $7)
        )
       )
       (i32.le_u
        (local.get $9)
        (local.get $1)
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_
       (local.get $3)
       (local.get $1)
       (local.get $2)
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
       (local.get $0)
       (select
        (i32.load
         (local.get $3)
        )
        (local.get $3)
        (local.tee $1
         (i32.lt_s
          (local.tee $0
           (i32.load8_s offset=11
            (local.get $3)
           )
          )
          (i32.const 0)
         )
        )
       )
       (select
        (i32.load offset=4
         (local.get $3)
        )
        (i32.and
         (local.get $0)
         (i32.const 255)
        )
        (local.get $1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
       (local.get $3)
      )
      (br $do-once)
     )
    )
    (if
     (i32.lt_u
      (i32.sub
       (local.get $4)
       (local.get $6)
      )
      (local.get $8)
     )
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm
      (local.get $0)
      (local.get $4)
      (i32.sub
       (i32.add
        (local.get $6)
        (local.get $8)
       )
       (local.get $4)
      )
      (local.get $6)
      (local.get $6)
     )
    )
    (local.set $7
     (i32.add
      (local.get $2)
      (i32.sub
       (local.get $6)
       (local.get $1)
      )
     )
    )
    (local.set $4
     (i32.add
      (local.get $6)
      (local.tee $5
       (if (result i32)
        (i32.lt_s
         (i32.load8_s offset=11
          (local.get $0)
         )
         (i32.const 0)
        )
        (i32.load
         (local.get $0)
        )
        (local.get $0)
       )
      )
     )
    )
    (loop $while-in
     (if
      (i32.ne
       (local.get $1)
       (local.get $2)
      )
      (block
       (i32.store8
        (local.get $4)
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.store8
     (local.get $3)
     (i32.const 0)
    )
    (i32.store8
     (i32.add
      (local.get $5)
      (local.get $7)
     )
     (i32.load8_s
      (local.get $3)
     )
    )
    (local.set $1
     (i32.add
      (local.get $6)
      (local.get $8)
     )
    )
    (if
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $0)
      )
      (i32.const 0)
     )
     (i32.store offset=4
      (local.get $0)
      (local.get $1)
     )
     (i32.store8 offset=11
      (local.get $0)
      (local.get $1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (local $10 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (local.get $0)
    (i32.load offset=44
     (i32.load
      (local.tee $1
       (call $__ZNKSt3__26locale9use_facetERNS0_2idE
        (local.get $1)
        (i32.const 54632)
       )
      )
     )
    )
    (i32.load offset=44
     (i32.load
      (local.tee $1
       (call $__ZNKSt3__26locale9use_facetERNS0_2idE
        (local.get $1)
        (i32.const 54624)
       )
      )
     )
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (i32.add
    (local.get $10)
    (i32.const 12)
   )
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (i32.store align=1
   (local.get $2)
   (i32.load offset=12
    (local.get $10)
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=32
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $8)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $8)
     )
    )
    (call $_free
     (i32.load
      (local.get $8)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $8)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8 offset=12
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.load8_s offset=12
    (local.get $10)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=28
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $7)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $7)
     )
    )
    (call $_free
     (i32.load
      (local.get $7)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $7)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8 offset=12
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.load8_s offset=12
    (local.get $10)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (i32.store8
   (local.get $3)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=12
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (i32.store8
   (local.get $4)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=16
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=20
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $5)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $5)
     )
    )
    (call $_free
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8 offset=12
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.load8_s offset=12
    (local.get $10)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=24
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $6)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $6)
     )
    )
    (call $_free
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $6)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8 offset=12
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.load8_s offset=12
    (local.get $10)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (i32.store
   (local.get $9)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=36
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $__ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (select
    (select
     (local.tee $6
      (i32.shl
       (local.tee $5
        (i32.sub
         (i32.load
          (local.get $2)
         )
         (local.tee $4
          (local.tee $3
           (i32.load
            (local.get $0)
           )
          )
         )
        )
       )
       (i32.const 1)
      )
     )
     (i32.const 1)
     (local.get $6)
    )
    (i32.const -1)
    (i32.lt_u
     (local.get $5)
     (i32.const 2147483647)
    )
   )
  )
  (local.set $6
   (i32.sub
    (i32.load
     (local.get $1)
    )
    (local.get $4)
   )
  )
  (if
   (i32.eqz
    (local.tee $3
     (call $_realloc
      (select
       (local.get $3)
       (i32.const 0)
       (local.tee $4
        (i32.ne
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 94)
        )
       )
      )
      (local.get $5)
     )
    )
   )
   (call $_abort)
  )
  (if
   (local.get $4)
   (i32.store
    (local.get $0)
    (local.get $3)
   )
   (block
    (local.set $4
     (i32.load
      (local.get $0)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $3)
    )
    (if
     (local.get $4)
     (block
      (call_indirect (type $i32_=>_none)
       (local.get $4)
       (i32.add
        (i32.and
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 127)
        )
        (i32.const 267)
       )
      )
      (local.set $3
       (i32.load
        (local.get $0)
       )
      )
     )
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 95)
  )
  (i32.store
   (local.get $1)
   (i32.add
    (local.get $3)
    (local.get $6)
   )
  )
  (i32.store
   (local.get $2)
   (i32.add
    (local.get $5)
    (i32.load
     (local.get $0)
    )
   )
  )
 )
 (func $__ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (select
    (select
     (local.tee $6
      (i32.shl
       (local.tee $5
        (i32.sub
         (i32.load
          (local.get $2)
         )
         (local.tee $4
          (local.tee $3
           (i32.load
            (local.get $0)
           )
          )
         )
        )
       )
       (i32.const 1)
      )
     )
     (i32.const 4)
     (local.get $6)
    )
    (i32.const -1)
    (i32.lt_u
     (local.get $5)
     (i32.const 2147483647)
    )
   )
  )
  (local.set $6
   (i32.shr_s
    (i32.sub
     (i32.load
      (local.get $1)
     )
     (local.get $4)
    )
    (i32.const 2)
   )
  )
  (if
   (i32.eqz
    (local.tee $3
     (call $_realloc
      (select
       (local.get $3)
       (i32.const 0)
       (local.tee $4
        (i32.ne
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 94)
        )
       )
      )
      (local.get $5)
     )
    )
   )
   (call $_abort)
  )
  (if
   (local.get $4)
   (i32.store
    (local.get $0)
    (local.get $3)
   )
   (block
    (local.set $4
     (i32.load
      (local.get $0)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $3)
    )
    (if
     (local.get $4)
     (block
      (call_indirect (type $i32_=>_none)
       (local.get $4)
       (i32.add
        (i32.and
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 127)
        )
        (i32.const 267)
       )
      )
      (local.set $3
       (i32.load
        (local.get $0)
       )
      )
     )
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 95)
  )
  (i32.store
   (local.get $1)
   (i32.add
    (i32.shl
     (local.get $6)
     (i32.const 2)
    )
    (local.get $3)
   )
  )
  (i32.store
   (local.get $2)
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.shl
     (i32.shr_u
      (local.get $5)
      (i32.const 2)
     )
     (i32.const 2)
    )
   )
  )
 )
 (func $__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 592)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 512)
   )
  )
  (local.set $16
   (i32.add
    (local.get $7)
    (i32.const 552)
   )
  )
  (local.set $13
   (i32.add
    (local.get $7)
    (i32.const 564)
   )
  )
  (local.set $14
   (i32.add
    (local.get $7)
    (i32.const 576)
   )
  )
  (local.set $17
   (local.get $7)
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $7)
     (i32.const 568)
    )
   )
   (local.tee $0
    (i32.add
     (local.get $7)
     (i32.const 112)
    )
   )
  )
  (i32.store offset=4
   (local.get $11)
   (i32.const 94)
  )
  (local.set $12
   (i32.add
    (local.get $0)
    (i32.const 400)
   )
  )
  (i32.store
   (local.tee $15
    (i32.add
     (local.get $7)
     (i32.const 560)
    )
   )
   (local.tee $0
    (i32.load offset=28
     (local.get $4)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (local.set $9
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $15)
    (i32.const 54432)
   )
  )
  (i32.store8
   (local.get $14)
   (i32.const 0)
  )
  (i32.store offset=556
   (local.get $7)
   (i32.load
    (local.get $2)
   )
  )
  (local.set $0
   (i32.load offset=4
    (local.get $4)
   )
  )
  (i32.store
   (local.get $10)
   (i32.load offset=556
    (local.get $7)
   )
  )
  (if
   (call $__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_
    (local.get $1)
    (local.get $10)
    (local.get $3)
    (local.get $15)
    (local.get $0)
    (local.get $5)
    (local.get $14)
    (local.get $9)
    (local.get $11)
    (local.get $13)
    (local.get $12)
   )
   (block
    (drop
     (call_indirect (type $i32_i32_i32_i32_=>_i32)
      (local.get $9)
      (i32.const 48731)
      (i32.const 48741)
      (local.get $10)
      (i32.add
       (i32.and
        (i32.load offset=48
         (i32.load
          (local.get $9)
         )
        )
        (i32.const 7)
       )
       (i32.const 114)
      )
     )
    )
    (if
     (i32.gt_s
      (local.tee $0
       (i32.sub
        (local.tee $9
         (i32.load
          (local.get $13)
         )
        )
        (local.tee $4
         (i32.load
          (local.get $11)
         )
        )
       )
      )
      (i32.const 392)
     )
     (block
      (local.set $0
       (local.tee $3
        (call $_malloc
         (i32.add
          (i32.shr_u
           (local.get $0)
           (i32.const 2)
          )
          (i32.const 2)
         )
        )
       )
      )
      (if
       (local.get $3)
       (block
        (local.set $8
         (local.get $3)
        )
        (local.set $18
         (local.get $0)
        )
       )
       (call $_abort)
      )
     )
     (local.set $8
      (local.get $17)
     )
    )
    (if
     (i32.load8_s
      (local.get $14)
     )
     (block
      (i32.store8
       (local.get $8)
       (i32.const 45)
      )
      (local.set $8
       (i32.add
        (local.get $8)
        (i32.const 1)
       )
      )
     )
    )
    (local.set $12
     (i32.add
      (local.get $10)
      (i32.const 40)
     )
    )
    (local.set $3
     (local.get $10)
    )
    (loop $while-in
     (if
      (i32.lt_u
       (local.get $4)
       (local.get $9)
      )
      (block
       (local.set $9
        (i32.load
         (local.get $4)
        )
       )
       (local.set $0
        (local.get $10)
       )
       (loop $while-in1
        (block $while-out0
         (if
          (i32.eq
           (local.get $0)
           (local.get $12)
          )
          (block
           (local.set $0
            (local.get $12)
           )
           (br $while-out0)
          )
         )
         (if
          (i32.ne
           (i32.load
            (local.get $0)
           )
           (local.get $9)
          )
          (block
           (local.set $0
            (i32.add
             (local.get $0)
             (i32.const 4)
            )
           )
           (br $while-in1)
          )
         )
        )
       )
       (i32.store8
        (local.get $8)
        (i32.load8_s
         (i32.add
          (i32.shr_s
           (i32.sub
            (local.get $0)
            (local.get $3)
           )
           (i32.const 2)
          )
          (i32.const 48731)
         )
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 4)
        )
       )
       (local.set $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (local.set $9
        (i32.load
         (local.get $13)
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.store8
     (local.get $8)
     (i32.const 0)
    )
    (i32.store
     (local.get $16)
     (local.get $6)
    )
    (if
     (i32.ne
      (call $_sscanf
       (local.get $17)
       (local.get $16)
      )
      (i32.const 1)
     )
     (call $_abort)
    )
    (if
     (local.get $18)
     (call $_free
      (local.get $18)
     )
    )
   )
  )
  (local.set $3
   (if (result i32)
    (local.tee $3
     (i32.load
      (local.get $1)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $0
         (i32.load offset=12
          (local.get $3)
         )
        )
        (i32.load offset=16
         (local.get $3)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $3)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $0)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $1)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.tee $4
        (i32.load
         (local.get $2)
        )
       )
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $0
          (i32.load offset=12
           (local.get $4)
          )
         )
         (i32.load offset=16
          (local.get $4)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $4)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $4)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $0)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (br $__rjti$0)
      )
      (br_if $__rjti$1
       (i32.eqz
        (local.get $3)
       )
      )
     )
     (br $__rjto$1)
    )
    (br_if $__rjti$1
     (local.get $3)
    )
    (br $__rjto$1)
   )
   (i32.store
    (local.get $5)
    (i32.or
     (i32.load
      (local.get $5)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $1)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $15)
  )
  (local.set $1
   (i32.load
    (local.get $11)
   )
  )
  (i32.store
   (local.get $11)
   (i32.const 0)
  )
  (if
   (local.get $1)
   (call_indirect (type $i32_=>_none)
    (local.get $1)
    (i32.add
     (i32.and
      (i32.load offset=4
       (local.get $11)
      )
      (i32.const 127)
     )
     (i32.const 267)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 432)
   )
  )
  (local.set $8
   (i32.add
    (local.get $0)
    (i32.const 424)
   )
  )
  (local.set $13
   (i32.add
    (local.get $0)
    (i32.const 408)
   )
  )
  (local.set $11
   (i32.add
    (local.get $0)
    (i32.const 428)
   )
  )
  (i32.store
   (local.tee $9
    (i32.add
     (local.get $0)
     (i32.const 416)
    )
   )
   (local.get $0)
  )
  (i32.store offset=4
   (local.get $9)
   (i32.const 94)
  )
  (local.set $14
   (i32.add
    (local.get $0)
    (i32.const 400)
   )
  )
  (i32.store
   (local.tee $12
    (i32.add
     (local.get $0)
     (i32.const 400)
    )
   )
   (local.tee $7
    (i32.load offset=28
     (local.get $4)
    )
   )
  )
  (i32.store offset=4
   (local.get $7)
   (i32.add
    (i32.load offset=4
     (local.get $7)
    )
    (i32.const 1)
   )
  )
  (local.set $7
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $12)
    (i32.const 54432)
   )
  )
  (i32.store8
   (local.get $11)
   (i32.const 0)
  )
  (i32.store offset=404
   (local.get $0)
   (local.tee $10
    (i32.load
     (local.get $2)
    )
   )
  )
  (local.set $4
   (i32.load offset=4
    (local.get $4)
   )
  )
  (i32.store
   (local.get $8)
   (i32.load offset=404
    (local.get $0)
   )
  )
  (if
   (call $__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_
    (local.get $1)
    (local.get $8)
    (local.get $3)
    (local.get $12)
    (local.get $4)
    (local.get $5)
    (local.get $11)
    (local.get $7)
    (local.get $9)
    (local.get $13)
    (local.get $14)
   )
   (block
    (if
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $6)
      )
      (i32.const 0)
     )
     (block
      (local.set $3
       (i32.load
        (local.get $6)
       )
      )
      (i32.store
       (local.get $8)
       (i32.const 0)
      )
      (i32.store
       (local.get $3)
       (i32.load
        (local.get $8)
       )
      )
      (i32.store offset=4
       (local.get $6)
       (i32.const 0)
      )
     )
     (block
      (i32.store
       (local.get $8)
       (i32.const 0)
      )
      (i32.store
       (local.get $6)
       (i32.load
        (local.get $8)
       )
      )
      (i32.store8 offset=11
       (local.get $6)
       (i32.const 0)
      )
     )
    )
    (if
     (i32.load8_s
      (local.get $11)
     )
     (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw
      (local.get $6)
      (call_indirect (type $i32_i32_=>_i32)
       (local.get $7)
       (i32.const 45)
       (i32.add
        (i32.and
         (i32.load offset=44
          (i32.load
           (local.get $7)
          )
         )
         (i32.const 15)
        )
        (i32.const 66)
       )
      )
     )
    )
    (local.set $4
     (call_indirect (type $i32_i32_=>_i32)
      (local.get $7)
      (i32.const 48)
      (i32.add
       (i32.and
        (i32.load offset=44
         (i32.load
          (local.get $7)
         )
        )
        (i32.const 15)
       )
       (i32.const 66)
      )
     )
    )
    (local.set $7
     (i32.add
      (local.tee $8
       (i32.load
        (local.get $13)
       )
      )
      (i32.const -4)
     )
    )
    (local.set $3
     (i32.load
      (local.get $9)
     )
    )
    (loop $while-in
     (block $while-out
      (br_if $while-out
       (i32.ge_u
        (local.get $3)
        (local.get $7)
       )
      )
      (br_if $while-out
       (i32.ne
        (i32.load
         (local.get $3)
        )
        (local.get $4)
       )
      )
      (local.set $3
       (i32.add
        (local.get $3)
        (i32.const 4)
       )
      )
      (br $while-in)
     )
    )
    (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_
     (local.get $6)
     (local.get $3)
     (local.get $8)
    )
   )
  )
  (local.set $3
   (if (result i32)
    (local.tee $3
     (i32.load
      (local.get $1)
     )
    )
    (if (result i32)
     (i32.eq
      (if (result i32)
       (i32.eq
        (local.tee $4
         (i32.load offset=12
          (local.get $3)
         )
        )
        (i32.load offset=16
         (local.get $3)
        )
       )
       (call_indirect (type $i32_=>_i32)
        (local.get $3)
        (i32.and
         (i32.load offset=36
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 63)
        )
       )
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -1)
     )
     (block (result i32)
      (i32.store
       (local.get $1)
       (i32.const 0)
      )
      (i32.const 1)
     )
     (i32.eqz
      (i32.load
       (local.get $1)
      )
     )
    )
    (i32.const 1)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.get $10)
      )
     )
     (if
      (i32.eq
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load offset=12
           (local.get $10)
          )
         )
         (i32.load offset=16
          (local.get $10)
         )
        )
        (call_indirect (type $i32_=>_i32)
         (local.get $10)
         (i32.and
          (i32.load offset=36
           (i32.load
            (local.get $10)
           )
          )
          (i32.const 63)
         )
        )
        (i32.load
         (local.get $4)
        )
       )
       (i32.const -1)
      )
      (block
       (i32.store
        (local.get $2)
        (i32.const 0)
       )
       (br $__rjti$0)
      )
      (br_if $__rjti$1
       (i32.eqz
        (local.get $3)
       )
      )
     )
     (br $__rjto$1)
    )
    (br_if $__rjti$1
     (local.get $3)
    )
    (br $__rjto$1)
   )
   (i32.store
    (local.get $5)
    (i32.or
     (i32.load
      (local.get $5)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $2
   (i32.load
    (local.get $1)
   )
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $12)
  )
  (local.set $1
   (i32.load
    (local.get $9)
   )
  )
  (i32.store
   (local.get $9)
   (i32.const 0)
  )
  (if
   (local.get $1)
   (call_indirect (type $i32_=>_none)
    (local.get $1)
    (i32.add
     (i32.and
      (i32.load offset=4
       (local.get $9)
      )
      (i32.const 127)
     )
     (i32.const 267)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $2)
 )
 (func $__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (result i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 512)
   )
  )
  (local.set $25
   (i32.add
    (local.get $13)
    (i32.const 500)
   )
  )
  (local.set $31
   (i32.add
    (local.get $13)
    (i32.const 472)
   )
  )
  (local.set $32
   (i32.add
    (local.get $13)
    (i32.const 468)
   )
  )
  (local.set $22
   (i32.add
    (local.get $13)
    (i32.const 456)
   )
  )
  (local.set $12
   (i32.add
    (local.get $13)
    (i32.const 444)
   )
  )
  (local.set $15
   (i32.add
    (local.get $13)
    (i32.const 432)
   )
  )
  (local.set $16
   (i32.add
    (local.get $13)
    (i32.const 420)
   )
  )
  (local.set $19
   (i32.add
    (local.get $13)
    (i32.const 408)
   )
  )
  (local.set $23
   (i32.add
    (local.get $13)
    (i32.const 404)
   )
  )
  (local.set $28
   (i32.add
    (local.get $13)
    (i32.const 400)
   )
  )
  (i32.store
   (local.tee $26
    (i32.add
     (local.get $13)
     (i32.const 496)
    )
   )
   (local.get $10)
  )
  (i32.store
   (local.tee $20
    (i32.add
     (local.get $13)
     (i32.const 488)
    )
   )
   (local.get $13)
  )
  (i32.store offset=4
   (local.get $20)
   (i32.const 94)
  )
  (i32.store
   (local.tee $17
    (i32.add
     (local.get $13)
     (i32.const 480)
    )
   )
   (local.get $13)
  )
  (i32.store
   (local.tee $27
    (i32.add
     (local.get $13)
     (i32.const 476)
    )
   )
   (i32.add
    (local.get $13)
    (i32.const 400)
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $22)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $12)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $15)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $16)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (local.set $10
   (i32.const 0)
  )
  (loop $while-in7
   (if
    (i32.ne
     (local.get $10)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $10)
        (i32.const 2)
       )
       (local.get $19)
      )
      (i32.const 0)
     )
     (local.set $10
      (i32.add
       (local.get $10)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (call $__ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri
   (local.get $2)
   (local.get $3)
   (local.get $25)
   (local.get $31)
   (local.get $32)
   (local.get $22)
   (local.get $12)
   (local.get $15)
   (local.get $16)
   (local.get $23)
  )
  (i32.store
   (local.get $9)
   (i32.load
    (local.get $8)
   )
  )
  (local.set $33
   (i32.ne
    (i32.and
     (local.get $4)
     (i32.const 512)
    )
    (i32.const 0)
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (local.set $1
   (block $label$break$L322 (result i32)
    (block $__rjti$16
     (block $__rjti$15
      (block $__rjti$14
       (block $__rjti$13
        (block $__rjti$12
         (block $__rjti$11
          (loop $label$continue$L21
           (block $__rjti$10
            (br_if $__rjti$16
             (i32.ge_u
              (local.get $18)
              (i32.const 4)
             )
            )
            (local.set $3
             (if (result i32)
              (local.tee $3
               (i32.load
                (local.get $0)
               )
              )
              (if (result i32)
               (i32.eq
                (if (result i32)
                 (i32.eq
                  (local.tee $4
                   (i32.load offset=12
                    (local.get $3)
                   )
                  )
                  (i32.load offset=16
                   (local.get $3)
                  )
                 )
                 (call_indirect (type $i32_=>_i32)
                  (local.get $3)
                  (i32.and
                   (i32.load offset=36
                    (i32.load
                     (local.get $3)
                    )
                   )
                   (i32.const 63)
                  )
                 )
                 (i32.load
                  (local.get $4)
                 )
                )
                (i32.const -1)
               )
               (block (result i32)
                (i32.store
                 (local.get $0)
                 (i32.const 0)
                )
                (i32.const 1)
               )
               (i32.eqz
                (i32.load
                 (local.get $0)
                )
               )
              )
              (i32.const 1)
             )
            )
            (block $__rjto$7
             (block $__rjti$7
              (br_if $__rjti$7
               (i32.eqz
                (local.tee $11
                 (i32.load
                  (local.get $1)
                 )
                )
               )
              )
              (if
               (i32.eq
                (if (result i32)
                 (i32.eq
                  (local.tee $4
                   (i32.load offset=12
                    (local.get $11)
                   )
                  )
                  (i32.load offset=16
                   (local.get $11)
                  )
                 )
                 (call_indirect (type $i32_=>_i32)
                  (local.get $11)
                  (i32.and
                   (i32.load offset=36
                    (i32.load
                     (local.get $11)
                    )
                   )
                   (i32.const 63)
                  )
                 )
                 (i32.load
                  (local.get $4)
                 )
                )
                (i32.const -1)
               )
               (block
                (i32.store
                 (local.get $1)
                 (i32.const 0)
                )
                (br $__rjti$7)
               )
               (br_if $__rjti$16
                (i32.eqz
                 (local.get $3)
                )
               )
              )
              (br $__rjto$7)
             )
             (br_if $__rjti$16
              (local.get $3)
             )
             (local.set $11
              (i32.const 0)
             )
            )
            (block $label$break$L286
             (block $__rjti$8
              (block $switch-case38
               (block $switch-case22
                (block $switch-case12
                 (block $switch-case11
                  (block $switch-case
                   (br_table $switch-case11 $switch-case $switch-case22 $switch-case12 $switch-case38 $label$break$L286
                    (i32.load8_s
                     (i32.add
                      (local.get $18)
                      (local.get $25)
                     )
                    )
                   )
                  )
                  (if
                   (i32.ne
                    (local.get $18)
                    (i32.const 3)
                   )
                   (block
                    (br_if $__rjti$10
                     (i32.eqz
                      (call_indirect (type $i32_i32_i32_=>_i32)
                       (local.get $7)
                       (i32.const 8192)
                       (if (result i32)
                        (i32.eq
                         (local.tee $4
                          (i32.load offset=12
                           (local.tee $3
                            (i32.load
                             (local.get $0)
                            )
                           )
                          )
                         )
                         (i32.load offset=16
                          (local.get $3)
                         )
                        )
                        (call_indirect (type $i32_=>_i32)
                         (local.get $3)
                         (i32.and
                          (i32.load offset=36
                           (i32.load
                            (local.get $3)
                           )
                          )
                          (i32.const 63)
                         )
                        )
                        (i32.load
                         (local.get $4)
                        )
                       )
                       (i32.add
                        (i32.and
                         (i32.load offset=12
                          (i32.load
                           (local.get $7)
                          )
                         )
                         (i32.const 31)
                        )
                        (i32.const 82)
                       )
                      )
                     )
                    )
                    (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw
                     (local.get $19)
                     (if (result i32)
                      (i32.eq
                       (local.tee $4
                        (i32.load offset=12
                         (local.tee $3
                          (i32.load
                           (local.get $0)
                          )
                         )
                        )
                       )
                       (i32.load offset=16
                        (local.get $3)
                       )
                      )
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=40
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (block (result i32)
                       (i32.store offset=12
                        (local.get $3)
                        (i32.add
                         (local.get $4)
                         (i32.const 4)
                        )
                       )
                       (i32.load
                        (local.get $4)
                       )
                      )
                     )
                    )
                    (br $__rjti$8)
                   )
                  )
                  (br $label$break$L286)
                 )
                 (br_if $__rjti$8
                  (i32.ne
                   (local.get $18)
                   (i32.const 3)
                  )
                 )
                 (br $label$break$L286)
                )
                (if
                 (i32.ne
                  (local.tee $11
                   (select
                    (i32.load offset=4
                     (local.get $15)
                    )
                    (i32.and
                     (local.tee $3
                      (i32.load8_s offset=11
                       (local.get $15)
                      )
                     )
                     (i32.const 255)
                    )
                    (i32.lt_s
                     (local.get $3)
                     (i32.const 0)
                    )
                   )
                  )
                  (i32.sub
                   (i32.const 0)
                   (local.tee $14
                    (select
                     (i32.load offset=4
                      (local.get $16)
                     )
                     (i32.and
                      (local.tee $3
                       (i32.load8_s offset=11
                        (local.get $16)
                       )
                      )
                      (i32.const 255)
                     )
                     (i32.lt_s
                      (local.get $3)
                      (i32.const 0)
                     )
                    )
                   )
                  )
                 )
                 (block
                  (local.set $10
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.tee $3
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                    (i32.load offset=16
                     (local.get $3)
                    )
                   )
                  )
                  (if
                   (i32.or
                    (local.tee $11
                     (i32.eqz
                      (local.get $11)
                     )
                    )
                    (i32.eqz
                     (local.get $14)
                    )
                   )
                   (block
                    (local.set $3
                     (if (result i32)
                      (local.get $10)
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load
                       (local.get $4)
                      )
                     )
                    )
                    (if
                     (local.get $11)
                     (block
                      (br_if $label$break$L286
                       (i32.ne
                        (i32.load
                         (select
                          (i32.load
                           (local.get $16)
                          )
                          (local.get $16)
                          (i32.lt_s
                           (i32.load8_s offset=11
                            (local.get $16)
                           )
                           (i32.const 0)
                          )
                         )
                        )
                        (local.get $3)
                       )
                      )
                      (if
                       (i32.eq
                        (local.tee $4
                         (i32.load offset=12
                          (local.tee $3
                           (i32.load
                            (local.get $0)
                           )
                          )
                         )
                        )
                        (i32.load offset=16
                         (local.get $3)
                        )
                       )
                       (drop
                        (call_indirect (type $i32_=>_i32)
                         (local.get $3)
                         (i32.and
                          (i32.load offset=40
                           (i32.load
                            (local.get $3)
                           )
                          )
                          (i32.const 63)
                         )
                        )
                       )
                       (block
                        (i32.store offset=12
                         (local.get $3)
                         (i32.add
                          (local.get $4)
                          (i32.const 4)
                         )
                        )
                        (drop
                         (i32.load
                          (local.get $4)
                         )
                        )
                       )
                      )
                      (i32.store8
                       (local.get $6)
                       (i32.const 1)
                      )
                      (local.set $2
                       (select
                        (local.get $16)
                        (local.get $2)
                        (i32.gt_u
                         (select
                          (i32.load offset=4
                           (local.get $16)
                          )
                          (i32.and
                           (local.tee $2
                            (i32.load8_s offset=11
                             (local.get $16)
                            )
                           )
                           (i32.const 255)
                          )
                          (i32.lt_s
                           (local.get $2)
                           (i32.const 0)
                          )
                         )
                         (i32.const 1)
                        )
                       )
                      )
                      (br $label$break$L286)
                     )
                    )
                    (if
                     (i32.ne
                      (i32.load
                       (select
                        (i32.load
                         (local.get $15)
                        )
                        (local.get $15)
                        (i32.lt_s
                         (i32.load8_s offset=11
                          (local.get $15)
                         )
                         (i32.const 0)
                        )
                       )
                      )
                      (local.get $3)
                     )
                     (block
                      (i32.store8
                       (local.get $6)
                       (i32.const 1)
                      )
                      (br $label$break$L286)
                     )
                    )
                    (if
                     (i32.eq
                      (local.tee $4
                       (i32.load offset=12
                        (local.tee $3
                         (i32.load
                          (local.get $0)
                         )
                        )
                       )
                      )
                      (i32.load offset=16
                       (local.get $3)
                      )
                     )
                     (drop
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=40
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                     )
                     (block
                      (i32.store offset=12
                       (local.get $3)
                       (i32.add
                        (local.get $4)
                        (i32.const 4)
                       )
                      )
                      (drop
                       (i32.load
                        (local.get $4)
                       )
                      )
                     )
                    )
                    (local.set $2
                     (select
                      (local.get $15)
                      (local.get $2)
                      (i32.gt_u
                       (select
                        (i32.load offset=4
                         (local.get $15)
                        )
                        (i32.and
                         (local.tee $2
                          (i32.load8_s offset=11
                           (local.get $15)
                          )
                         )
                         (i32.const 255)
                        )
                        (i32.lt_s
                         (local.get $2)
                         (i32.const 0)
                        )
                       )
                       (i32.const 1)
                      )
                     )
                    )
                    (br $label$break$L286)
                   )
                  )
                  (local.set $11
                   (if (result i32)
                    (local.get $10)
                    (call_indirect (type $i32_=>_i32)
                     (local.get $3)
                     (i32.and
                      (i32.load offset=36
                       (i32.load
                        (local.get $3)
                       )
                      )
                      (i32.const 63)
                     )
                    )
                    (i32.load
                     (local.get $4)
                    )
                   )
                  )
                  (local.set $10
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.tee $3
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                    (i32.load offset=16
                     (local.get $3)
                    )
                   )
                  )
                  (if
                   (i32.eq
                    (local.get $11)
                    (i32.load
                     (select
                      (i32.load
                       (local.get $15)
                      )
                      (local.get $15)
                      (i32.lt_s
                       (i32.load8_s offset=11
                        (local.get $15)
                       )
                       (i32.const 0)
                      )
                     )
                    )
                   )
                   (block
                    (if
                     (local.get $10)
                     (drop
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=40
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                     )
                     (block
                      (i32.store offset=12
                       (local.get $3)
                       (i32.add
                        (local.get $4)
                        (i32.const 4)
                       )
                      )
                      (drop
                       (i32.load
                        (local.get $4)
                       )
                      )
                     )
                    )
                    (local.set $2
                     (select
                      (local.get $15)
                      (local.get $2)
                      (i32.gt_u
                       (select
                        (i32.load offset=4
                         (local.get $15)
                        )
                        (i32.and
                         (local.tee $2
                          (i32.load8_s offset=11
                           (local.get $15)
                          )
                         )
                         (i32.const 255)
                        )
                        (i32.lt_s
                         (local.get $2)
                         (i32.const 0)
                        )
                       )
                       (i32.const 1)
                      )
                     )
                    )
                    (br $label$break$L286)
                   )
                  )
                  (br_if $__rjti$11
                   (i32.ne
                    (if (result i32)
                     (local.get $10)
                     (call_indirect (type $i32_=>_i32)
                      (local.get $3)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $3)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load
                      (local.get $4)
                     )
                    )
                    (i32.load
                     (select
                      (i32.load
                       (local.get $16)
                      )
                      (local.get $16)
                      (i32.lt_s
                       (i32.load8_s offset=11
                        (local.get $16)
                       )
                       (i32.const 0)
                      )
                     )
                    )
                   )
                  )
                  (if
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.tee $3
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                    (i32.load offset=16
                     (local.get $3)
                    )
                   )
                   (drop
                    (call_indirect (type $i32_=>_i32)
                     (local.get $3)
                     (i32.and
                      (i32.load offset=40
                       (i32.load
                        (local.get $3)
                       )
                      )
                      (i32.const 63)
                     )
                    )
                   )
                   (block
                    (i32.store offset=12
                     (local.get $3)
                     (i32.add
                      (local.get $4)
                      (i32.const 4)
                     )
                    )
                    (drop
                     (i32.load
                      (local.get $4)
                     )
                    )
                   )
                  )
                  (i32.store8
                   (local.get $6)
                   (i32.const 1)
                  )
                  (local.set $2
                   (select
                    (local.get $16)
                    (local.get $2)
                    (i32.gt_u
                     (select
                      (i32.load offset=4
                       (local.get $16)
                      )
                      (i32.and
                       (local.tee $2
                        (i32.load8_s offset=11
                         (local.get $16)
                        )
                       )
                       (i32.const 255)
                      )
                      (i32.lt_s
                       (local.get $2)
                       (i32.const 0)
                      )
                     )
                     (i32.const 1)
                    )
                   )
                  )
                 )
                )
                (br $label$break$L286)
               )
               (block $label$break$L108
                (block $__rjti$2
                 (if
                  (i32.or
                   (i32.lt_u
                    (local.get $18)
                    (i32.const 2)
                   )
                   (local.get $2)
                  )
                  (block
                   (local.set $3
                    (select
                     (local.tee $4
                      (i32.load
                       (local.get $12)
                      )
                     )
                     (local.get $12)
                     (i32.lt_s
                      (local.tee $10
                       (i32.load8_s offset=11
                        (local.get $12)
                       )
                      )
                      (i32.const 0)
                     )
                    )
                   )
                   (br_if $__rjti$2
                    (local.get $18)
                   )
                  )
                  (block
                   (if
                    (i32.eqz
                     (i32.or
                      (i32.and
                       (i32.eq
                        (local.get $18)
                        (i32.const 2)
                       )
                       (i32.ne
                        (i32.load8_s offset=3
                         (local.get $25)
                        )
                        (i32.const 0)
                       )
                      )
                      (local.get $33)
                     )
                    )
                    (block
                     (local.set $2
                      (i32.const 0)
                     )
                     (br $label$break$L286)
                    )
                   )
                   (local.set $3
                    (select
                     (local.tee $4
                      (i32.load
                       (local.get $12)
                      )
                     )
                     (local.get $12)
                     (i32.lt_s
                      (local.tee $10
                       (i32.load8_s offset=11
                        (local.get $12)
                       )
                      )
                      (i32.const 0)
                     )
                    )
                   )
                   (br $__rjti$2)
                  )
                 )
                 (br $label$break$L108)
                )
                (if
                 (i32.lt_s
                  (i32.load8_u
                   (i32.add
                    (local.get $25)
                    (i32.add
                     (local.get $18)
                     (i32.const -1)
                    )
                   )
                  )
                  (i32.const 2)
                 )
                 (block
                  (block $__rjto$0
                   (block $__rjti$0
                    (loop $while-in15
                     (if
                      (i32.ne
                       (local.get $3)
                       (i32.add
                        (i32.shl
                         (select
                          (i32.load offset=4
                           (local.get $12)
                          )
                          (i32.and
                           (local.get $10)
                           (i32.const 255)
                          )
                          (local.tee $14
                           (i32.lt_s
                            (i32.shr_s
                             (i32.shl
                              (local.get $10)
                              (i32.const 24)
                             )
                             (i32.const 24)
                            )
                            (i32.const 0)
                           )
                          )
                         )
                         (i32.const 2)
                        )
                        (select
                         (local.get $4)
                         (local.get $12)
                         (local.get $14)
                        )
                       )
                      )
                      (block
                       (br_if $__rjti$0
                        (i32.eqz
                         (call_indirect (type $i32_i32_i32_=>_i32)
                          (local.get $7)
                          (i32.const 8192)
                          (i32.load
                           (local.get $3)
                          )
                          (i32.add
                           (i32.and
                            (i32.load offset=12
                             (i32.load
                              (local.get $7)
                             )
                            )
                            (i32.const 31)
                           )
                           (i32.const 82)
                          )
                         )
                        )
                       )
                       (local.set $3
                        (i32.add
                         (local.get $3)
                         (i32.const 4)
                        )
                       )
                       (local.set $10
                        (i32.load8_s offset=11
                         (local.get $12)
                        )
                       )
                       (local.set $4
                        (i32.load
                         (local.get $12)
                        )
                       )
                       (br $while-in15)
                      )
                     )
                    )
                    (br $__rjto$0)
                   )
                   (local.set $10
                    (i32.load8_s offset=11
                     (local.get $12)
                    )
                   )
                   (local.set $4
                    (i32.load
                     (local.get $12)
                    )
                   )
                  )
                  (local.set $21
                   (i32.lt_s
                    (local.tee $24
                     (i32.load8_s offset=11
                      (local.get $19)
                     )
                    )
                    (i32.const 0)
                   )
                  )
                  (local.set $3
                   (if (result i32)
                    (i32.gt_u
                     (local.tee $34
                      (i32.shr_s
                       (i32.sub
                        (local.get $3)
                        (local.tee $14
                         (local.tee $29
                          (select
                           (local.get $4)
                           (local.get $12)
                           (i32.lt_s
                            (i32.shr_s
                             (i32.shl
                              (local.get $10)
                              (i32.const 24)
                             )
                             (i32.const 24)
                            )
                            (i32.const 0)
                           )
                          )
                         )
                        )
                       )
                       (i32.const 2)
                      )
                     )
                     (select
                      (local.tee $30
                       (i32.load offset=4
                        (local.get $19)
                       )
                      )
                      (local.tee $24
                       (i32.and
                        (local.get $24)
                        (i32.const 255)
                       )
                      )
                      (local.get $21)
                     )
                    )
                    (local.get $14)
                    (block (result i32)
                     (local.set $35
                      (select
                       (local.tee $30
                        (i32.add
                         (i32.load
                          (local.get $19)
                         )
                         (i32.shl
                          (local.get $30)
                          (i32.const 2)
                         )
                        )
                       )
                       (local.tee $24
                        (i32.add
                         (i32.shl
                          (local.get $24)
                          (i32.const 2)
                         )
                         (local.get $19)
                        )
                       )
                       (local.get $21)
                      )
                     )
                     (local.set $21
                      (i32.add
                       (i32.shl
                        (i32.sub
                         (i32.const 0)
                         (local.get $34)
                        )
                        (i32.const 2)
                       )
                       (select
                        (local.get $30)
                        (local.get $24)
                        (local.get $21)
                       )
                      )
                     )
                     (loop $while-in17 (result i32)
                      (br_if $label$break$L108
                       (i32.eq
                        (local.get $21)
                        (local.get $35)
                       )
                      )
                      (if (result i32)
                       (i32.eq
                        (i32.load
                         (local.get $21)
                        )
                        (i32.load
                         (local.get $29)
                        )
                       )
                       (block
                        (local.set $29
                         (i32.add
                          (local.get $29)
                          (i32.const 4)
                         )
                        )
                        (local.set $21
                         (i32.add
                          (local.get $21)
                          (i32.const 4)
                         )
                        )
                        (br $while-in17)
                       )
                       (local.get $14)
                      )
                     )
                    )
                   )
                  )
                 )
                )
               )
               (loop $label$continue$L124
                (block $label$break$L124
                 (br_if $label$break$L124
                  (i32.eq
                   (local.get $3)
                   (i32.add
                    (i32.shl
                     (select
                      (i32.load offset=4
                       (local.get $12)
                      )
                      (i32.and
                       (local.get $10)
                       (i32.const 255)
                      )
                      (local.tee $10
                       (i32.lt_s
                        (i32.shr_s
                         (i32.shl
                          (local.get $10)
                          (i32.const 24)
                         )
                         (i32.const 24)
                        )
                        (i32.const 0)
                       )
                      )
                     )
                     (i32.const 2)
                    )
                    (select
                     (local.get $4)
                     (local.get $12)
                     (local.get $10)
                    )
                   )
                  )
                 )
                 (local.set $4
                  (if (result i32)
                   (local.tee $4
                    (i32.load
                     (local.get $0)
                    )
                   )
                   (if (result i32)
                    (i32.eq
                     (if (result i32)
                      (i32.eq
                       (local.tee $10
                        (i32.load offset=12
                         (local.get $4)
                        )
                       )
                       (i32.load offset=16
                        (local.get $4)
                       )
                      )
                      (call_indirect (type $i32_=>_i32)
                       (local.get $4)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $4)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load
                       (local.get $10)
                      )
                     )
                     (i32.const -1)
                    )
                    (block (result i32)
                     (i32.store
                      (local.get $0)
                      (i32.const 0)
                     )
                     (i32.const 1)
                    )
                    (i32.eqz
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (block $__rjto$1
                  (block $__rjti$1
                   (br_if $__rjti$1
                    (i32.eqz
                     (local.get $11)
                    )
                   )
                   (if
                    (i32.eq
                     (if (result i32)
                      (i32.eq
                       (local.tee $10
                        (i32.load offset=12
                         (local.get $11)
                        )
                       )
                       (i32.load offset=16
                        (local.get $11)
                       )
                      )
                      (call_indirect (type $i32_=>_i32)
                       (local.get $11)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $11)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load
                       (local.get $10)
                      )
                     )
                     (i32.const -1)
                    )
                    (block
                     (i32.store
                      (local.get $1)
                      (i32.const 0)
                     )
                     (br $__rjti$1)
                    )
                    (br_if $label$break$L124
                     (i32.eqz
                      (local.get $4)
                     )
                    )
                   )
                   (br $__rjto$1)
                  )
                  (br_if $label$break$L124
                   (local.get $4)
                  )
                  (local.set $11
                   (i32.const 0)
                  )
                 )
                 (br_if $label$break$L124
                  (i32.ne
                   (if (result i32)
                    (i32.eq
                     (local.tee $10
                      (i32.load offset=12
                       (local.tee $4
                        (i32.load
                         (local.get $0)
                        )
                       )
                      )
                     )
                     (i32.load offset=16
                      (local.get $4)
                     )
                    )
                    (call_indirect (type $i32_=>_i32)
                     (local.get $4)
                     (i32.and
                      (i32.load offset=36
                       (i32.load
                        (local.get $4)
                       )
                      )
                      (i32.const 63)
                     )
                    )
                    (i32.load
                     (local.get $10)
                    )
                   )
                   (i32.load
                    (local.get $3)
                   )
                  )
                 )
                 (if
                  (i32.eq
                   (local.tee $10
                    (i32.load offset=12
                     (local.tee $4
                      (i32.load
                       (local.get $0)
                      )
                     )
                    )
                   )
                   (i32.load offset=16
                    (local.get $4)
                   )
                  )
                  (drop
                   (call_indirect (type $i32_=>_i32)
                    (local.get $4)
                    (i32.and
                     (i32.load offset=40
                      (i32.load
                       (local.get $4)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                  )
                  (block
                   (i32.store offset=12
                    (local.get $4)
                    (i32.add
                     (local.get $10)
                     (i32.const 4)
                    )
                   )
                   (drop
                    (i32.load
                     (local.get $10)
                    )
                   )
                  )
                 )
                 (local.set $3
                  (i32.add
                   (local.get $3)
                   (i32.const 4)
                  )
                 )
                 (local.set $10
                  (i32.load8_s offset=11
                   (local.get $12)
                  )
                 )
                 (local.set $4
                  (i32.load
                   (local.get $12)
                  )
                 )
                 (br $label$continue$L124)
                )
               )
               (if
                (local.get $33)
                (block
                 (local.set $4
                  (i32.lt_s
                   (local.tee $10
                    (i32.load8_s offset=11
                     (local.get $12)
                    )
                   )
                   (i32.const 0)
                  )
                 )
                 (br_if $__rjti$12
                  (i32.ne
                   (i32.add
                    (i32.shl
                     (select
                      (i32.load offset=4
                       (local.get $12)
                      )
                      (i32.and
                       (local.get $10)
                       (i32.const 255)
                      )
                      (local.get $4)
                     )
                     (i32.const 2)
                    )
                    (select
                     (i32.load
                      (local.get $12)
                     )
                     (local.get $12)
                     (local.get $4)
                    )
                   )
                   (local.get $3)
                  )
                 )
                )
               )
               (br $label$break$L286)
              )
              (local.set $4
               (i32.const 0)
              )
              (local.set $3
               (local.get $11)
              )
              (loop $label$continue$L161
               (block $label$break$L161
                (local.set $10
                 (if (result i32)
                  (local.tee $10
                   (i32.load
                    (local.get $0)
                   )
                  )
                  (if (result i32)
                   (i32.eq
                    (if (result i32)
                     (i32.eq
                      (local.tee $14
                       (i32.load offset=12
                        (local.get $10)
                       )
                      )
                      (i32.load offset=16
                       (local.get $10)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $10)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $10)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load
                      (local.get $14)
                     )
                    )
                    (i32.const -1)
                   )
                   (block (result i32)
                    (i32.store
                     (local.get $0)
                     (i32.const 0)
                    )
                    (i32.const 1)
                   )
                   (i32.eqz
                    (i32.load
                     (local.get $0)
                    )
                   )
                  )
                  (i32.const 1)
                 )
                )
                (block $__rjto$3
                 (block $__rjti$3
                  (br_if $__rjti$3
                   (i32.eqz
                    (local.get $11)
                   )
                  )
                  (if
                   (i32.eq
                    (if (result i32)
                     (i32.eq
                      (local.tee $14
                       (i32.load offset=12
                        (local.get $11)
                       )
                      )
                      (i32.load offset=16
                       (local.get $11)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $11)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $11)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load
                      (local.get $14)
                     )
                    )
                    (i32.const -1)
                   )
                   (block
                    (i32.store
                     (local.get $1)
                     (i32.const 0)
                    )
                    (local.set $3
                     (i32.const 0)
                    )
                    (br $__rjti$3)
                   )
                   (br_if $label$break$L161
                    (i32.eqz
                     (local.get $10)
                    )
                   )
                  )
                  (br $__rjto$3)
                 )
                 (br_if $label$break$L161
                  (local.get $10)
                 )
                 (local.set $11
                  (i32.const 0)
                 )
                )
                (local.set $4
                 (if (result i32)
                  (call_indirect (type $i32_i32_i32_=>_i32)
                   (local.get $7)
                   (i32.const 2048)
                   (local.tee $14
                    (if (result i32)
                     (i32.eq
                      (local.tee $14
                       (i32.load offset=12
                        (local.tee $10
                         (i32.load
                          (local.get $0)
                         )
                        )
                       )
                      )
                      (i32.load offset=16
                       (local.get $10)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $10)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $10)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load
                      (local.get $14)
                     )
                    )
                   )
                   (i32.add
                    (i32.and
                     (i32.load offset=12
                      (i32.load
                       (local.get $7)
                      )
                     )
                     (i32.const 31)
                    )
                    (i32.const 82)
                   )
                  )
                  (block (result i32)
                   (if
                    (i32.eq
                     (local.tee $10
                      (i32.load
                       (local.get $9)
                      )
                     )
                     (i32.load
                      (local.get $26)
                     )
                    )
                    (block
                     (call $__ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                      (local.get $8)
                      (local.get $9)
                      (local.get $26)
                     )
                     (local.set $10
                      (i32.load
                       (local.get $9)
                      )
                     )
                    )
                   )
                   (i32.store
                    (local.get $9)
                    (i32.add
                     (local.get $10)
                     (i32.const 4)
                    )
                   )
                   (i32.store
                    (local.get $10)
                    (local.get $14)
                   )
                   (i32.add
                    (local.get $4)
                    (i32.const 1)
                   )
                  )
                  (block (result i32)
                   (br_if $label$break$L161
                    (i32.eqz
                     (i32.and
                      (i32.and
                       (i32.ne
                        (select
                         (i32.load offset=4
                          (local.get $22)
                         )
                         (i32.and
                          (local.tee $10
                           (i32.load8_s offset=11
                            (local.get $22)
                           )
                          )
                          (i32.const 255)
                         )
                         (i32.lt_s
                          (local.get $10)
                          (i32.const 0)
                         )
                        )
                        (i32.const 0)
                       )
                       (i32.ne
                        (local.get $4)
                        (i32.const 0)
                       )
                      )
                      (i32.eq
                       (local.get $14)
                       (i32.load
                        (local.get $32)
                       )
                      )
                     )
                    )
                   )
                   (if
                    (i32.eq
                     (local.tee $10
                      (i32.load
                       (local.get $17)
                      )
                     )
                     (i32.load
                      (local.get $27)
                     )
                    )
                    (block
                     (call $__ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                      (local.get $20)
                      (local.get $17)
                      (local.get $27)
                     )
                     (local.set $10
                      (i32.load
                       (local.get $17)
                      )
                     )
                    )
                   )
                   (i32.store
                    (local.get $17)
                    (i32.add
                     (local.get $10)
                     (i32.const 4)
                    )
                   )
                   (i32.store
                    (local.get $10)
                    (local.get $4)
                   )
                   (i32.const 0)
                  )
                 )
                )
                (if
                 (i32.eq
                  (local.tee $14
                   (i32.load offset=12
                    (local.tee $10
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                  )
                  (i32.load offset=16
                   (local.get $10)
                  )
                 )
                 (drop
                  (call_indirect (type $i32_=>_i32)
                   (local.get $10)
                   (i32.and
                    (i32.load offset=40
                     (i32.load
                      (local.get $10)
                     )
                    )
                    (i32.const 63)
                   )
                  )
                 )
                 (block
                  (i32.store offset=12
                   (local.get $10)
                   (i32.add
                    (local.get $14)
                    (i32.const 4)
                   )
                  )
                  (drop
                   (i32.load
                    (local.get $14)
                   )
                  )
                 )
                )
                (br $label$continue$L161)
               )
              )
              (if
               (i32.and
                (i32.ne
                 (local.tee $10
                  (i32.load
                   (local.get $17)
                  )
                 )
                 (i32.load
                  (local.get $20)
                 )
                )
                (i32.ne
                 (local.get $4)
                 (i32.const 0)
                )
               )
               (block
                (if
                 (i32.eq
                  (local.get $10)
                  (i32.load
                   (local.get $27)
                  )
                 )
                 (block
                  (call $__ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                   (local.get $20)
                   (local.get $17)
                   (local.get $27)
                  )
                  (local.set $10
                   (i32.load
                    (local.get $17)
                   )
                  )
                 )
                )
                (i32.store
                 (local.get $17)
                 (i32.add
                  (local.get $10)
                  (i32.const 4)
                 )
                )
                (i32.store
                 (local.get $10)
                 (local.get $4)
                )
               )
              )
              (if
               (i32.gt_s
                (i32.load
                 (local.get $23)
                )
                (i32.const 0)
               )
               (block $label$break$L211
                (local.set $4
                 (if (result i32)
                  (local.tee $4
                   (i32.load
                    (local.get $0)
                   )
                  )
                  (if (result i32)
                   (i32.eq
                    (if (result i32)
                     (i32.eq
                      (local.tee $10
                       (i32.load offset=12
                        (local.get $4)
                       )
                      )
                      (i32.load offset=16
                       (local.get $4)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $4)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $4)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load
                      (local.get $10)
                     )
                    )
                    (i32.const -1)
                   )
                   (block (result i32)
                    (i32.store
                     (local.get $0)
                     (i32.const 0)
                    )
                    (i32.const 1)
                   )
                   (i32.eqz
                    (i32.load
                     (local.get $0)
                    )
                   )
                  )
                  (i32.const 1)
                 )
                )
                (block $__rjto$5
                 (block $__rjti$5
                  (br_if $__rjti$5
                   (i32.eqz
                    (local.get $3)
                   )
                  )
                  (if
                   (i32.eq
                    (if (result i32)
                     (i32.eq
                      (local.tee $10
                       (i32.load offset=12
                        (local.get $3)
                       )
                      )
                      (i32.load offset=16
                       (local.get $3)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $3)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $3)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load
                      (local.get $10)
                     )
                    )
                    (i32.const -1)
                   )
                   (block
                    (i32.store
                     (local.get $1)
                     (i32.const 0)
                    )
                    (br $__rjti$5)
                   )
                   (br_if $__rjti$13
                    (i32.eqz
                     (local.get $4)
                    )
                   )
                  )
                  (br $__rjto$5)
                 )
                 (br_if $__rjti$13
                  (local.get $4)
                 )
                 (local.set $3
                  (i32.const 0)
                 )
                )
                (br_if $__rjti$13
                 (i32.ne
                  (if (result i32)
                   (i32.eq
                    (local.tee $10
                     (i32.load offset=12
                      (local.tee $4
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                    (i32.load offset=16
                     (local.get $4)
                    )
                   )
                   (call_indirect (type $i32_=>_i32)
                    (local.get $4)
                    (i32.and
                     (i32.load offset=36
                      (i32.load
                       (local.get $4)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                   (i32.load
                    (local.get $10)
                   )
                  )
                  (i32.load
                   (local.get $31)
                  )
                 )
                )
                (if
                 (i32.eq
                  (local.tee $10
                   (i32.load offset=12
                    (local.tee $4
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                  )
                  (i32.load offset=16
                   (local.get $4)
                  )
                 )
                 (drop
                  (call_indirect (type $i32_=>_i32)
                   (local.get $4)
                   (i32.and
                    (i32.load offset=40
                     (i32.load
                      (local.get $4)
                     )
                    )
                    (i32.const 63)
                   )
                  )
                 )
                 (block
                  (i32.store offset=12
                   (local.get $4)
                   (i32.add
                    (local.get $10)
                    (i32.const 4)
                   )
                  )
                  (drop
                   (i32.load
                    (local.get $10)
                   )
                  )
                 )
                )
                (loop $while-in33
                 (br_if $label$break$L211
                  (i32.le_s
                   (i32.load
                    (local.get $23)
                   )
                   (i32.const 0)
                  )
                 )
                 (local.set $4
                  (if (result i32)
                   (local.tee $4
                    (i32.load
                     (local.get $0)
                    )
                   )
                   (if (result i32)
                    (i32.eq
                     (if (result i32)
                      (i32.eq
                       (local.tee $10
                        (i32.load offset=12
                         (local.get $4)
                        )
                       )
                       (i32.load offset=16
                        (local.get $4)
                       )
                      )
                      (call_indirect (type $i32_=>_i32)
                       (local.get $4)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $4)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load
                       (local.get $10)
                      )
                     )
                     (i32.const -1)
                    )
                    (block (result i32)
                     (i32.store
                      (local.get $0)
                      (i32.const 0)
                     )
                     (i32.const 1)
                    )
                    (i32.eqz
                     (i32.load
                      (local.get $0)
                     )
                    )
                   )
                   (i32.const 1)
                  )
                 )
                 (block $__rjto$4
                  (block $__rjti$4
                   (br_if $__rjti$4
                    (i32.eqz
                     (local.get $3)
                    )
                   )
                   (if
                    (i32.eq
                     (if (result i32)
                      (i32.eq
                       (local.tee $10
                        (i32.load offset=12
                         (local.get $3)
                        )
                       )
                       (i32.load offset=16
                        (local.get $3)
                       )
                      )
                      (call_indirect (type $i32_=>_i32)
                       (local.get $3)
                       (i32.and
                        (i32.load offset=36
                         (i32.load
                          (local.get $3)
                         )
                        )
                        (i32.const 63)
                       )
                      )
                      (i32.load
                       (local.get $10)
                      )
                     )
                     (i32.const -1)
                    )
                    (block
                     (i32.store
                      (local.get $1)
                      (i32.const 0)
                     )
                     (br $__rjti$4)
                    )
                    (br_if $__rjti$14
                     (i32.eqz
                      (local.get $4)
                     )
                    )
                   )
                   (br $__rjto$4)
                  )
                  (br_if $__rjti$14
                   (local.get $4)
                  )
                  (local.set $3
                   (i32.const 0)
                  )
                 )
                 (br_if $__rjti$14
                  (i32.eqz
                   (call_indirect (type $i32_i32_i32_=>_i32)
                    (local.get $7)
                    (i32.const 2048)
                    (if (result i32)
                     (i32.eq
                      (local.tee $10
                       (i32.load offset=12
                        (local.tee $4
                         (i32.load
                          (local.get $0)
                         )
                        )
                       )
                      )
                      (i32.load offset=16
                       (local.get $4)
                      )
                     )
                     (call_indirect (type $i32_=>_i32)
                      (local.get $4)
                      (i32.and
                       (i32.load offset=36
                        (i32.load
                         (local.get $4)
                        )
                       )
                       (i32.const 63)
                      )
                     )
                     (i32.load
                      (local.get $10)
                     )
                    )
                    (i32.add
                     (i32.and
                      (i32.load offset=12
                       (i32.load
                        (local.get $7)
                       )
                      )
                      (i32.const 31)
                     )
                     (i32.const 82)
                    )
                   )
                  )
                 )
                 (if
                  (i32.eq
                   (i32.load
                    (local.get $9)
                   )
                   (i32.load
                    (local.get $26)
                   )
                  )
                  (call $__ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                   (local.get $8)
                   (local.get $9)
                   (local.get $26)
                  )
                 )
                 (local.set $4
                  (if (result i32)
                   (i32.eq
                    (local.tee $10
                     (i32.load offset=12
                      (local.tee $4
                       (i32.load
                        (local.get $0)
                       )
                      )
                     )
                    )
                    (i32.load offset=16
                     (local.get $4)
                    )
                   )
                   (call_indirect (type $i32_=>_i32)
                    (local.get $4)
                    (i32.and
                     (i32.load offset=36
                      (i32.load
                       (local.get $4)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                   (i32.load
                    (local.get $10)
                   )
                  )
                 )
                 (i32.store
                  (local.get $9)
                  (i32.add
                   (local.tee $10
                    (i32.load
                     (local.get $9)
                    )
                   )
                   (i32.const 4)
                  )
                 )
                 (i32.store
                  (local.get $10)
                  (local.get $4)
                 )
                 (i32.store
                  (local.get $23)
                  (i32.add
                   (i32.load
                    (local.get $23)
                   )
                   (i32.const -1)
                  )
                 )
                 (if
                  (i32.eq
                   (local.tee $10
                    (i32.load offset=12
                     (local.tee $4
                      (i32.load
                       (local.get $0)
                      )
                     )
                    )
                   )
                   (i32.load offset=16
                    (local.get $4)
                   )
                  )
                  (drop
                   (call_indirect (type $i32_=>_i32)
                    (local.get $4)
                    (i32.and
                     (i32.load offset=40
                      (i32.load
                       (local.get $4)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                  )
                  (block
                   (i32.store offset=12
                    (local.get $4)
                    (i32.add
                     (local.get $10)
                     (i32.const 4)
                    )
                   )
                   (drop
                    (i32.load
                     (local.get $10)
                    )
                   )
                  )
                 )
                 (br $while-in33)
                )
               )
              )
              (br_if $__rjti$15
               (i32.eq
                (i32.load
                 (local.get $9)
                )
                (i32.load
                 (local.get $8)
                )
               )
              )
              (br $label$break$L286)
             )
             (loop $while-in41
              (local.set $3
               (if (result i32)
                (local.tee $3
                 (i32.load
                  (local.get $0)
                 )
                )
                (if (result i32)
                 (i32.eq
                  (if (result i32)
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.get $3)
                     )
                    )
                    (i32.load offset=16
                     (local.get $3)
                    )
                   )
                   (call_indirect (type $i32_=>_i32)
                    (local.get $3)
                    (i32.and
                     (i32.load offset=36
                      (i32.load
                       (local.get $3)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                   (i32.load
                    (local.get $4)
                   )
                  )
                  (i32.const -1)
                 )
                 (block (result i32)
                  (i32.store
                   (local.get $0)
                   (i32.const 0)
                  )
                  (i32.const 1)
                 )
                 (i32.eqz
                  (i32.load
                   (local.get $0)
                  )
                 )
                )
                (i32.const 1)
               )
              )
              (block $__rjto$6
               (block $__rjti$6
                (br_if $__rjti$6
                 (i32.eqz
                  (local.get $11)
                 )
                )
                (if
                 (i32.eq
                  (if (result i32)
                   (i32.eq
                    (local.tee $4
                     (i32.load offset=12
                      (local.get $11)
                     )
                    )
                    (i32.load offset=16
                     (local.get $11)
                    )
                   )
                   (call_indirect (type $i32_=>_i32)
                    (local.get $11)
                    (i32.and
                     (i32.load offset=36
                      (i32.load
                       (local.get $11)
                      )
                     )
                     (i32.const 63)
                    )
                   )
                   (i32.load
                    (local.get $4)
                   )
                  )
                  (i32.const -1)
                 )
                 (block
                  (i32.store
                   (local.get $1)
                   (i32.const 0)
                  )
                  (br $__rjti$6)
                 )
                 (br_if $label$break$L286
                  (i32.eqz
                   (local.get $3)
                  )
                 )
                )
                (br $__rjto$6)
               )
               (br_if $label$break$L286
                (local.get $3)
               )
               (local.set $11
                (i32.const 0)
               )
              )
              (br_if $label$break$L286
               (i32.eqz
                (call_indirect (type $i32_i32_i32_=>_i32)
                 (local.get $7)
                 (i32.const 8192)
                 (if (result i32)
                  (i32.eq
                   (local.tee $4
                    (i32.load offset=12
                     (local.tee $3
                      (i32.load
                       (local.get $0)
                      )
                     )
                    )
                   )
                   (i32.load offset=16
                    (local.get $3)
                   )
                  )
                  (call_indirect (type $i32_=>_i32)
                   (local.get $3)
                   (i32.and
                    (i32.load offset=36
                     (i32.load
                      (local.get $3)
                     )
                    )
                    (i32.const 63)
                   )
                  )
                  (i32.load
                   (local.get $4)
                  )
                 )
                 (i32.add
                  (i32.and
                   (i32.load offset=12
                    (i32.load
                     (local.get $7)
                    )
                   )
                   (i32.const 31)
                  )
                  (i32.const 82)
                 )
                )
               )
              )
              (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw
               (local.get $19)
               (if (result i32)
                (i32.eq
                 (local.tee $4
                  (i32.load offset=12
                   (local.tee $3
                    (i32.load
                     (local.get $0)
                    )
                   )
                  )
                 )
                 (i32.load offset=16
                  (local.get $3)
                 )
                )
                (call_indirect (type $i32_=>_i32)
                 (local.get $3)
                 (i32.and
                  (i32.load offset=40
                   (i32.load
                    (local.get $3)
                   )
                  )
                  (i32.const 63)
                 )
                )
                (block (result i32)
                 (i32.store offset=12
                  (local.get $3)
                  (i32.add
                   (local.get $4)
                   (i32.const 4)
                  )
                 )
                 (i32.load
                  (local.get $4)
                 )
                )
               )
              )
              (br $while-in41)
             )
            )
            (local.set $18
             (i32.add
              (local.get $18)
              (i32.const 1)
             )
            )
            (br $label$continue$L21)
           )
          )
          (i32.store
           (local.get $5)
           (i32.or
            (i32.load
             (local.get $5)
            )
            (i32.const 4)
           )
          )
          (br $label$break$L322
           (i32.const 0)
          )
         )
         (i32.store
          (local.get $5)
          (i32.or
           (i32.load
            (local.get $5)
           )
           (i32.const 4)
          )
         )
         (br $label$break$L322
          (i32.const 0)
         )
        )
        (i32.store
         (local.get $5)
         (i32.or
          (i32.load
           (local.get $5)
          )
          (i32.const 4)
         )
        )
        (br $label$break$L322
         (i32.const 0)
        )
       )
       (i32.store
        (local.get $5)
        (i32.or
         (i32.load
          (local.get $5)
         )
         (i32.const 4)
        )
       )
       (br $label$break$L322
        (i32.const 0)
       )
      )
      (i32.store
       (local.get $5)
       (i32.or
        (i32.load
         (local.get $5)
        )
        (i32.const 4)
       )
      )
      (br $label$break$L322
       (i32.const 0)
      )
     )
     (i32.store
      (local.get $5)
      (i32.or
       (i32.load
        (local.get $5)
       )
       (i32.const 4)
      )
     )
     (br $label$break$L322
      (i32.const 0)
     )
    )
    (if
     (local.get $2)
     (block $label$break$L324
      (local.set $6
       (local.get $2)
      )
      (local.set $7
       (i32.const 1)
      )
      (loop $label$continue$L326
       (block $label$break$L326
        (br_if $label$break$L324
         (i32.ge_u
          (local.get $7)
          (if (result i32)
           (i32.lt_s
            (local.tee $3
             (i32.load8_s offset=11
              (local.get $2)
             )
            )
            (i32.const 0)
           )
           (i32.load offset=4
            (local.get $6)
           )
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
          )
         )
        )
        (local.set $4
         (if (result i32)
          (local.tee $3
           (i32.load
            (local.get $0)
           )
          )
          (if (result i32)
           (i32.eq
            (if (result i32)
             (i32.eq
              (local.tee $4
               (i32.load offset=12
                (local.get $3)
               )
              )
              (i32.load offset=16
               (local.get $3)
              )
             )
             (call_indirect (type $i32_=>_i32)
              (local.get $3)
              (i32.and
               (i32.load offset=36
                (i32.load
                 (local.get $3)
                )
               )
               (i32.const 63)
              )
             )
             (i32.load
              (local.get $4)
             )
            )
            (i32.const -1)
           )
           (block (result i32)
            (i32.store
             (local.get $0)
             (i32.const 0)
            )
            (i32.const 1)
           )
           (i32.eqz
            (i32.load
             (local.get $0)
            )
           )
          )
          (i32.const 1)
         )
        )
        (block $__rjto$9
         (block $__rjti$9
          (br_if $__rjti$9
           (i32.eqz
            (local.tee $3
             (i32.load
              (local.get $1)
             )
            )
           )
          )
          (if
           (i32.eq
            (if (result i32)
             (i32.eq
              (local.tee $8
               (i32.load offset=12
                (local.get $3)
               )
              )
              (i32.load offset=16
               (local.get $3)
              )
             )
             (call_indirect (type $i32_=>_i32)
              (local.get $3)
              (i32.and
               (i32.load offset=36
                (i32.load
                 (local.get $3)
                )
               )
               (i32.const 63)
              )
             )
             (i32.load
              (local.get $8)
             )
            )
            (i32.const -1)
           )
           (block
            (i32.store
             (local.get $1)
             (i32.const 0)
            )
            (br $__rjti$9)
           )
           (br_if $label$break$L326
            (i32.eqz
             (local.get $4)
            )
           )
          )
          (br $__rjto$9)
         )
         (br_if $label$break$L326
          (local.get $4)
         )
        )
        (br_if $label$break$L326
         (i32.ne
          (if (result i32)
           (i32.eq
            (local.tee $4
             (i32.load offset=12
              (local.tee $3
               (i32.load
                (local.get $0)
               )
              )
             )
            )
            (i32.load offset=16
             (local.get $3)
            )
           )
           (call_indirect (type $i32_=>_i32)
            (local.get $3)
            (i32.and
             (i32.load offset=36
              (i32.load
               (local.get $3)
              )
             )
             (i32.const 63)
            )
           )
           (i32.load
            (local.get $4)
           )
          )
          (i32.load
           (i32.add
            (if (result i32)
             (i32.lt_s
              (i32.load8_s offset=11
               (local.get $2)
              )
              (i32.const 0)
             )
             (i32.load
              (local.get $2)
             )
             (local.get $2)
            )
            (i32.shl
             (local.get $7)
             (i32.const 2)
            )
           )
          )
         )
        )
        (if
         (i32.eq
          (local.tee $4
           (i32.load offset=12
            (local.tee $3
             (i32.load
              (local.get $0)
             )
            )
           )
          )
          (i32.load offset=16
           (local.get $3)
          )
         )
         (drop
          (call_indirect (type $i32_=>_i32)
           (local.get $3)
           (i32.and
            (i32.load offset=40
             (i32.load
              (local.get $3)
             )
            )
            (i32.const 63)
           )
          )
         )
         (block
          (i32.store offset=12
           (local.get $3)
           (i32.add
            (local.get $4)
            (i32.const 4)
           )
          )
          (drop
           (i32.load
            (local.get $4)
           )
          )
         )
        )
        (local.set $7
         (i32.add
          (local.get $7)
          (i32.const 1)
         )
        )
        (br $label$continue$L326)
       )
      )
      (i32.store
       (local.get $5)
       (i32.or
        (i32.load
         (local.get $5)
        )
        (i32.const 4)
       )
      )
      (br $label$break$L322
       (i32.const 0)
      )
     )
    )
    (if (result i32)
     (i32.eq
      (local.tee $0
       (i32.load
        (local.get $20)
       )
      )
      (local.tee $1
       (i32.load
        (local.get $17)
       )
      )
     )
     (i32.const 1)
     (block (result i32)
      (i32.store
       (local.get $28)
       (i32.const 0)
      )
      (call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
       (local.get $22)
       (local.get $0)
       (local.get $1)
       (local.get $28)
      )
      (if (result i32)
       (i32.load
        (local.get $28)
       )
       (block (result i32)
        (i32.store
         (local.get $5)
         (i32.or
          (i32.load
           (local.get $5)
          )
          (i32.const 4)
         )
        )
        (i32.const 0)
       )
       (i32.const 1)
      )
     )
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $19)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $16)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $15)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $12)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $22)
  )
  (local.set $0
   (i32.load
    (local.get $20)
   )
  )
  (i32.store
   (local.get $20)
   (i32.const 0)
  )
  (if
   (local.get $0)
   (call_indirect (type $i32_=>_none)
    (local.get $0)
    (i32.add
     (i32.and
      (i32.load offset=4
       (local.get $20)
      )
      (i32.const 127)
     )
     (i32.const 267)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $13)
  )
  (local.get $1)
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $5
   (if (result i32)
    (local.tee $7
     (i32.lt_s
      (local.tee $6
       (i32.load8_s offset=11
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (block (result i32)
     (local.set $4
      (i32.add
       (i32.and
        (i32.load offset=8
         (local.get $0)
        )
        (i32.const 2147483647)
       )
       (i32.const -1)
      )
     )
     (i32.load offset=4
      (local.get $0)
     )
    )
    (block (result i32)
     (local.set $4
      (i32.const 1)
     )
     (i32.and
      (local.get $6)
      (i32.const 255)
     )
    )
   )
  )
  (local.set $9
   (i32.shr_s
    (local.tee $8
     (i32.sub
      (local.get $2)
      (local.get $1)
     )
    )
    (i32.const 2)
   )
  )
  (if
   (local.get $8)
   (block $do-once
    (if
     (block (result i32)
      (local.set $8
       (local.tee $7
        (if (result i32)
         (local.get $7)
         (block (result i32)
          (local.set $6
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.load
           (local.get $0)
          )
         )
         (block (result i32)
          (local.set $6
           (i32.and
            (local.get $6)
            (i32.const 255)
           )
          )
          (local.get $0)
         )
        )
       )
      )
      (i32.and
       (i32.lt_u
        (local.get $1)
        (i32.add
         (i32.shl
          (local.get $6)
          (i32.const 2)
         )
         (local.get $7)
        )
       )
       (i32.le_u
        (local.get $8)
        (local.get $1)
       )
      )
     )
     (block
      (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_
       (local.get $3)
       (local.get $1)
       (local.get $2)
      )
      (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm
       (local.get $0)
       (select
        (i32.load
         (local.get $3)
        )
        (local.get $3)
        (local.tee $1
         (i32.lt_s
          (local.tee $0
           (i32.load8_s offset=11
            (local.get $3)
           )
          )
          (i32.const 0)
         )
        )
       )
       (select
        (i32.load offset=4
         (local.get $3)
        )
        (i32.and
         (local.get $0)
         (i32.const 255)
        )
        (local.get $1)
       )
      )
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
       (local.get $3)
      )
      (br $do-once)
     )
    )
    (if
     (i32.lt_u
      (i32.sub
       (local.get $4)
       (local.get $5)
      )
      (local.get $9)
     )
     (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm
      (local.get $0)
      (local.get $4)
      (i32.sub
       (i32.add
        (local.get $5)
        (local.get $9)
       )
       (local.get $4)
      )
      (local.get $5)
      (local.get $5)
     )
    )
    (local.set $4
     (i32.add
      (if (result i32)
       (i32.lt_s
        (i32.load8_s offset=11
         (local.get $0)
        )
        (i32.const 0)
       )
       (i32.load
        (local.get $0)
       )
       (local.get $0)
      )
      (i32.shl
       (local.get $5)
       (i32.const 2)
      )
     )
    )
    (loop $while-in
     (if
      (i32.ne
       (local.get $1)
       (local.get $2)
      )
      (block
       (i32.store
        (local.get $4)
        (i32.load
         (local.get $1)
        )
       )
       (local.set $4
        (i32.add
         (local.get $4)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.store
     (local.get $3)
     (i32.const 0)
    )
    (i32.store
     (local.get $4)
     (i32.load
      (local.get $3)
     )
    )
    (local.set $1
     (i32.add
      (local.get $5)
      (local.get $9)
     )
    )
    (if
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $0)
      )
      (i32.const 0)
     )
     (i32.store offset=4
      (local.get $0)
      (local.get $1)
     )
     (i32.store8 offset=11
      (local.get $0)
      (local.get $1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (local $10 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (local.get $0)
    (i32.load offset=44
     (i32.load
      (local.tee $1
       (call $__ZNKSt3__26locale9use_facetERNS0_2idE
        (local.get $1)
        (i32.const 54648)
       )
      )
     )
    )
    (i32.load offset=44
     (i32.load
      (local.tee $1
       (call $__ZNKSt3__26locale9use_facetERNS0_2idE
        (local.get $1)
        (i32.const 54640)
       )
      )
     )
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (i32.add
    (local.get $10)
    (i32.const 12)
   )
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (i32.store align=1
   (local.get $2)
   (i32.load offset=12
    (local.get $10)
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=32
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $8)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $8)
     )
    )
    (call $_free
     (i32.load
      (local.get $8)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $8)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store offset=12
   (local.get $10)
   (i32.const 0)
  )
  (i32.store
   (local.get $10)
   (i32.load offset=12
    (local.get $10)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=28
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $7)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $7)
     )
    )
    (call $_free
     (i32.load
      (local.get $7)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $7)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store offset=12
   (local.get $10)
   (i32.const 0)
  )
  (i32.store
   (local.get $10)
   (i32.load offset=12
    (local.get $10)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (i32.store
   (local.get $3)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=12
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (i32.store
   (local.get $4)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=16
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=20
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $5)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $5)
     )
    )
    (call $_free
     (i32.load
      (local.get $5)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8 offset=12
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.load8_s offset=12
    (local.get $10)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $1)
   (i32.add
    (i32.and
     (i32.load offset=24
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $6)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $6)
     )
    )
    (call $_free
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $6)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store offset=12
   (local.get $10)
   (i32.const 0)
  )
  (i32.store
   (local.get $10)
   (i32.load offset=12
    (local.get $10)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (i32.store
   (local.get $9)
   (call_indirect (type $i32_=>_i32)
    (local.get $1)
    (i32.and
     (i32.load offset=36
      (i32.load
       (local.get $1)
      )
     )
     (i32.const 63)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 416)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 328)
   )
  )
  (local.set $12
   (i32.add
    (local.get $6)
    (i32.const 112)
   )
  )
  (i32.store
   (local.tee $14
    (i32.add
     (local.get $6)
     (i32.const 400)
    )
   )
   (local.tee $0
    (i32.add
     (local.get $6)
     (i32.const 224)
    )
   )
  )
  (f64.store
   (local.tee $17
    (i32.add
     (local.get $6)
     (i32.const 336)
    )
   )
   (local.get $5)
  )
  (if
   (i32.gt_u
    (local.tee $0
     (call $_snprintf
      (local.get $0)
      (local.get $17)
     )
    )
    (i32.const 99)
   )
   (block
    (local.set $0
     (call $__ZNSt3__26__clocEv)
    )
    (f64.store
     (local.get $7)
     (local.get $5)
    )
    (local.set $13
     (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
      (local.get $14)
      (local.get $0)
      (i32.const 48837)
      (local.get $7)
     )
    )
    (if
     (i32.eqz
      (local.tee $12
       (i32.load
        (local.get $14)
       )
      )
     )
     (call $_abort)
    )
    (local.set $0
     (local.tee $7
      (call $_malloc
       (local.get $13)
      )
     )
    )
    (if
     (local.get $7)
     (block
      (local.set $15
       (local.get $7)
      )
      (local.set $10
       (local.get $13)
      )
      (local.set $20
       (local.get $0)
      )
      (local.set $21
       (local.get $12)
      )
     )
     (call $_abort)
    )
   )
   (block
    (local.set $15
     (local.get $12)
    )
    (local.set $10
     (local.get $0)
    )
   )
  )
  (local.set $22
   (i32.add
    (local.get $6)
    (i32.const 408)
   )
  )
  (local.set $23
   (i32.add
    (local.get $6)
    (i32.const 405)
   )
  )
  (local.set $24
   (i32.add
    (local.get $6)
    (i32.const 404)
   )
  )
  (local.set $16
   (i32.add
    (local.get $6)
    (i32.const 384)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 372)
   )
  )
  (local.set $11
   (i32.add
    (local.get $6)
    (i32.const 360)
   )
  )
  (local.set $9
   (i32.add
    (local.get $6)
    (i32.const 356)
   )
  )
  (local.set $12
   (local.get $6)
  )
  (local.set $25
   (i32.add
    (local.get $6)
    (i32.const 352)
   )
  )
  (local.set $26
   (i32.add
    (local.get $6)
    (i32.const 348)
   )
  )
  (i32.store
   (local.tee $18
    (i32.add
     (local.get $6)
     (i32.const 396)
    )
   )
   (local.tee $0
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (local.set $7
   (i32.load offset=32
    (i32.load
     (local.tee $13
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $18)
       (i32.const 54400)
      )
     )
    )
   )
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $13)
    (local.tee $0
     (i32.load
      (local.get $14)
     )
    )
    (i32.add
     (local.get $0)
     (local.get $10)
    )
    (local.get $15)
    (i32.add
     (i32.and
      (local.get $7)
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (local.set $7
   (if (result i32)
    (local.get $10)
    (i32.eq
     (i32.load8_s
      (i32.load
       (local.get $14)
      )
     )
     (i32.const 45)
    )
    (i32.const 0)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $16)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $8)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $11)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (call $__ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri
   (local.get $2)
   (local.get $7)
   (local.get $18)
   (local.get $22)
   (local.get $23)
   (local.get $24)
   (local.get $16)
   (local.get $8)
   (local.get $11)
   (local.get $9)
  )
  (if
   (i32.gt_u
    (local.tee $0
     (i32.add
      (i32.add
       (if (result i32)
        (i32.gt_s
         (local.get $10)
         (local.tee $9
          (i32.load
           (local.get $9)
          )
         )
        )
        (block (result i32)
         (local.set $2
          (select
           (i32.load offset=4
            (local.get $8)
           )
           (i32.and
            (local.tee $0
             (i32.load8_s offset=11
              (local.get $8)
             )
            )
            (i32.const 255)
           )
           (i32.lt_s
            (local.get $0)
            (i32.const 0)
           )
          )
         )
         (i32.add
          (i32.add
           (local.get $9)
           (i32.const 1)
          )
          (i32.shl
           (i32.sub
            (local.get $10)
            (local.get $9)
           )
           (i32.const 1)
          )
         )
        )
        (block (result i32)
         (local.set $2
          (select
           (i32.load offset=4
            (local.get $8)
           )
           (i32.and
            (local.tee $0
             (i32.load8_s offset=11
              (local.get $8)
             )
            )
            (i32.const 255)
           )
           (i32.lt_s
            (local.get $0)
            (i32.const 0)
           )
          )
         )
         (i32.add
          (local.get $9)
          (i32.const 2)
         )
        )
       )
       (select
        (i32.load offset=4
         (local.get $11)
        )
        (i32.and
         (local.tee $0
          (i32.load8_s offset=11
           (local.get $11)
          )
         )
         (i32.const 255)
        )
        (i32.lt_s
         (local.get $0)
         (i32.const 0)
        )
       )
      )
      (local.get $2)
     )
    )
    (i32.const 100)
   )
   (block
    (local.set $0
     (local.tee $2
      (call $_malloc
       (local.get $0)
      )
     )
    )
    (if
     (local.get $2)
     (block
      (local.set $19
       (local.get $2)
      )
      (local.set $27
       (local.get $0)
      )
     )
     (call $_abort)
    )
   )
   (local.set $19
    (local.get $12)
   )
  )
  (call $__ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i
   (local.get $19)
   (local.get $25)
   (local.get $26)
   (i32.load offset=4
    (local.get $3)
   )
   (local.get $15)
   (i32.add
    (local.get $10)
    (local.get $15)
   )
   (local.get $13)
   (local.get $7)
   (local.get $22)
   (i32.load8_s
    (local.get $23)
   )
   (i32.load8_s
    (local.get $24)
   )
   (local.get $16)
   (local.get $8)
   (local.get $11)
   (local.get $9)
  )
  (i32.store offset=344
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $25)
   )
  )
  (local.set $0
   (i32.load
    (local.get $26)
   )
  )
  (i32.store
   (local.get $17)
   (i32.load offset=344
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $17)
    (local.get $19)
    (local.get $1)
    (local.get $0)
    (local.get $3)
    (local.get $4)
   )
  )
  (if
   (local.get $27)
   (call $_free
    (local.get $27)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $8)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $16)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $18)
  )
  (if
   (local.get $20)
   (call $_free
    (local.get $20)
   )
  )
  (if
   (local.get $21)
   (call $_free
    (local.get $21)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 176)
   )
  )
  (local.set $16
   (i32.add
    (local.get $7)
    (i32.const 156)
   )
  )
  (local.set $17
   (i32.add
    (local.get $7)
    (i32.const 164)
   )
  )
  (local.set $18
   (i32.add
    (local.get $7)
    (i32.const 161)
   )
  )
  (local.set $19
   (i32.add
    (local.get $7)
    (i32.const 160)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 140)
   )
  )
  (local.set $9
   (i32.add
    (local.get $7)
    (i32.const 128)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 116)
   )
  )
  (local.set $8
   (i32.add
    (local.get $7)
    (i32.const 112)
   )
  )
  (local.set $0
   (local.get $7)
  )
  (local.set $20
   (i32.add
    (local.get $7)
    (i32.const 108)
   )
  )
  (local.set $21
   (i32.add
    (local.get $7)
    (i32.const 104)
   )
  )
  (i32.store
   (local.tee $13
    (i32.add
     (local.get $7)
     (i32.const 152)
    )
   )
   (local.tee $6
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.add
    (i32.load offset=4
     (local.get $6)
    )
    (i32.const 1)
   )
  )
  (local.set $14
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $13)
    (i32.const 54400)
   )
  )
  (local.set $11
   (i32.lt_s
    (local.tee $6
     (i32.load8_s offset=11
      (local.get $5)
     )
    )
    (i32.const 0)
   )
  )
  (local.set $22
   (if (result i32)
    (select
     (i32.load offset=4
      (local.get $5)
     )
     (i32.and
      (local.get $6)
      (i32.const 255)
     )
     (local.get $11)
    )
    (i32.eq
     (i32.load8_u
      (select
       (i32.load
        (local.get $5)
       )
       (local.get $5)
       (local.get $11)
      )
     )
     (i32.and
      (call_indirect (type $i32_i32_=>_i32)
       (local.get $14)
       (i32.const 45)
       (i32.add
        (i32.and
         (i32.load offset=28
          (i32.load
           (local.get $14)
          )
         )
         (i32.const 15)
        )
        (i32.const 66)
       )
      )
      (i32.const 255)
     )
    )
    (i32.const 0)
   )
  )
  (local.set $6
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $6)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
       (local.get $12)
      )
      (i32.const 0)
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $6
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (local.get $6)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
       (local.get $9)
      )
      (i32.const 0)
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (local.set $6
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (local.get $6)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
       (local.get $10)
      )
      (i32.const 0)
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (call $__ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri
   (local.get $2)
   (local.get $22)
   (local.get $13)
   (local.get $17)
   (local.get $18)
   (local.get $19)
   (local.get $12)
   (local.get $9)
   (local.get $10)
   (local.get $8)
  )
  (local.set $11
   (i32.lt_s
    (local.tee $2
     (i32.load8_s offset=11
      (local.get $5)
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.gt_u
    (local.tee $2
     (i32.add
      (i32.add
       (if (result i32)
        (i32.gt_s
         (local.tee $6
          (select
           (i32.load offset=4
            (local.get $5)
           )
           (i32.and
            (local.get $2)
            (i32.const 255)
           )
           (local.get $11)
          )
         )
         (local.tee $8
          (i32.load
           (local.get $8)
          )
         )
        )
        (i32.add
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
         (i32.shl
          (i32.sub
           (local.get $6)
           (local.get $8)
          )
          (i32.const 1)
         )
        )
        (i32.add
         (local.get $8)
         (i32.const 2)
        )
       )
       (select
        (i32.load offset=4
         (local.get $10)
        )
        (i32.and
         (local.tee $2
          (i32.load8_s offset=11
           (local.get $10)
          )
         )
         (i32.const 255)
        )
        (i32.lt_s
         (local.get $2)
         (i32.const 0)
        )
       )
      )
      (select
       (i32.load offset=4
        (local.get $9)
       )
       (i32.and
        (local.tee $2
         (i32.load8_s offset=11
          (local.get $9)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $2)
        (i32.const 0)
       )
      )
     )
    )
    (i32.const 100)
   )
   (block
    (local.set $0
     (local.tee $2
      (call $_malloc
       (local.get $2)
      )
     )
    )
    (if
     (local.get $2)
     (block
      (local.set $15
       (local.get $2)
      )
      (local.set $23
       (local.get $0)
      )
     )
     (call $_abort)
    )
   )
   (local.set $15
    (local.get $0)
   )
  )
  (call $__ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i
   (local.get $15)
   (local.get $20)
   (local.get $21)
   (i32.load offset=4
    (local.get $3)
   )
   (local.tee $0
    (select
     (i32.load
      (local.get $5)
     )
     (local.get $5)
     (local.get $11)
    )
   )
   (i32.add
    (local.get $0)
    (local.get $6)
   )
   (local.get $14)
   (local.get $22)
   (local.get $17)
   (i32.load8_s
    (local.get $18)
   )
   (i32.load8_s
    (local.get $19)
   )
   (local.get $12)
   (local.get $9)
   (local.get $10)
   (local.get $8)
  )
  (i32.store offset=100
   (local.get $7)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $20)
   )
  )
  (local.set $0
   (i32.load
    (local.get $21)
   )
  )
  (i32.store
   (local.get $16)
   (i32.load offset=100
    (local.get $7)
   )
  )
  (local.set $0
   (call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $16)
    (local.get $15)
    (local.get $1)
    (local.get $0)
    (local.get $3)
    (local.get $4)
   )
  )
  (if
   (local.get $23)
   (call $_free
    (local.get $23)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $9)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $12)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $13)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (local $10 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (local.get $0)
    (call $__ZNKSt3__26locale9use_facetERNS0_2idE
     (local.get $2)
     (i32.const 54632)
    )
    (call $__ZNKSt3__26locale9use_facetERNS0_2idE
     (local.get $2)
     (i32.const 54624)
    )
   )
  )
  (local.set $2
   (i32.add
    (local.get $10)
    (i32.const 12)
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $0)
   (i32.add
    (i32.and
     (if (result i32)
      (local.get $1)
      (block (result i32)
       (call_indirect (type $i32_i32_=>_none)
        (local.get $2)
        (local.get $0)
        (i32.add
         (i32.and
          (i32.load offset=44
           (i32.load
            (local.get $0)
           )
          )
          (i32.const 63)
         )
         (i32.const 395)
        )
       )
       (i32.store align=1
        (local.get $3)
        (i32.load
         (local.get $2)
        )
       )
       (i32.load offset=32
        (i32.load
         (local.get $0)
        )
       )
      )
      (block (result i32)
       (call_indirect (type $i32_i32_=>_none)
        (local.get $2)
        (local.get $0)
        (i32.add
         (i32.and
          (i32.load offset=40
           (i32.load
            (local.get $0)
           )
          )
          (i32.const 63)
         )
         (i32.const 395)
        )
       )
       (i32.store align=1
        (local.get $3)
        (i32.load
         (local.get $2)
        )
       )
       (i32.load offset=28
        (i32.load
         (local.get $0)
        )
       )
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $8)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $8)
     )
    )
    (call $_free
     (i32.load
      (local.get $8)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $8)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8
   (local.get $2)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.load8_s
    (local.get $2)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (i32.store8
   (local.get $4)
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (i32.load offset=12
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
   )
  )
  (i32.store8
   (local.get $5)
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (i32.load offset=16
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $0)
   (i32.add
    (i32.and
     (i32.load offset=20
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $6)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $6)
     )
    )
    (call $_free
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $6)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8
   (local.get $2)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.load8_s
    (local.get $2)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $0)
   (i32.add
    (i32.and
     (i32.load offset=24
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $7)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $7)
     )
    )
    (call $_free
     (i32.load
      (local.get $7)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $7)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8
   (local.get $2)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.load8_s
    (local.get $2)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (i32.store
   (local.get $9)
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (i32.load offset=36
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $__ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (local.set $23
   (i32.eqz
    (i32.and
     (local.get $3)
     (i32.const 512)
    )
   )
  )
  (local.set $24
   (i32.gt_s
    (local.get $14)
    (i32.const 0)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $21)
     (i32.const 4)
    )
    (block
     (block $label$break$L4
      (block $switch-case14
       (block $switch-case2
        (block $switch-case1
         (block $switch-case0
          (block $switch-case
           (br_table $switch-case $switch-case0 $switch-case2 $switch-case1 $switch-case14 $label$break$L4
            (i32.load8_s
             (i32.add
              (local.get $8)
              (local.get $21)
             )
            )
           )
          )
          (i32.store
           (local.get $1)
           (i32.load
            (local.get $2)
           )
          )
          (br $label$break$L4)
         )
         (i32.store
          (local.get $1)
          (i32.load
           (local.get $2)
          )
         )
         (local.set $15
          (i32.load offset=28
           (i32.load
            (local.get $6)
           )
          )
         )
         (local.set $16
          (call_indirect (type $i32_i32_=>_i32)
           (local.get $6)
           (i32.const 32)
           (i32.add
            (i32.and
             (local.get $15)
             (i32.const 15)
            )
            (i32.const 66)
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (local.tee $15
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $15)
          (local.get $16)
         )
         (br $label$break$L4)
        )
        (local.set $16
         (i32.lt_s
          (local.tee $15
           (i32.load8_s offset=11
            (local.get $13)
           )
          )
          (i32.const 0)
         )
        )
        (if
         (select
          (i32.load offset=4
           (local.get $13)
          )
          (i32.and
           (local.get $15)
           (i32.const 255)
          )
          (local.get $16)
         )
         (block
          (local.set $16
           (i32.load8_s
            (select
             (i32.load
              (local.get $13)
             )
             (local.get $13)
             (local.get $16)
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.tee $15
             (i32.load
              (local.get $2)
             )
            )
            (i32.const 1)
           )
          )
          (i32.store8
           (local.get $15)
           (local.get $16)
          )
         )
        )
        (br $label$break$L4)
       )
       (local.set $17
        (i32.lt_s
         (local.tee $15
          (i32.load8_s offset=11
           (local.get $12)
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.eqz
         (i32.or
          (local.get $23)
          (i32.eqz
           (local.tee $16
            (select
             (i32.load offset=4
              (local.get $12)
             )
             (i32.and
              (local.get $15)
              (i32.const 255)
             )
             (local.get $17)
            )
           )
          )
         )
        )
        (block
         (drop
          (call $_memmove
           (local.tee $15
            (i32.load
             (local.get $2)
            )
           )
           (select
            (i32.load
             (local.get $12)
            )
            (local.get $12)
            (local.get $17)
           )
           (local.get $16)
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (local.get $15)
           (local.get $16)
          )
         )
        )
       )
       (br $label$break$L4)
      )
      (local.set $18
       (i32.load
        (local.get $2)
       )
      )
      (local.set $4
       (local.tee $19
        (select
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
         (local.get $4)
         (local.get $7)
        )
       )
      )
      (loop $while-in4
       (block $while-out3
        (br_if $while-out3
         (i32.ge_u
          (local.get $4)
          (local.get $5)
         )
        )
        (br_if $while-out3
         (i32.le_s
          (local.tee $15
           (i32.load8_s
            (local.get $4)
           )
          )
          (i32.const -1)
         )
        )
        (br_if $while-out3
         (i32.eqz
          (i32.and
           (i32.load16_s
            (i32.add
             (i32.load offset=8
              (local.get $6)
             )
             (i32.shl
              (local.get $15)
              (i32.const 1)
             )
            )
           )
           (i32.const 2048)
          )
         )
        )
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 1)
         )
        )
        (br $while-in4)
       )
      )
      (if
       (local.get $24)
       (block
        (local.set $15
         (local.get $14)
        )
        (loop $while-in6
         (if
          (i32.and
           (local.tee $16
            (i32.gt_s
             (local.get $15)
             (i32.const 0)
            )
           )
           (i32.gt_u
            (local.get $4)
            (local.get $19)
           )
          )
          (block
           (local.set $17
            (i32.load8_s
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const -1)
              )
             )
            )
           )
           (i32.store
            (local.get $2)
            (i32.add
             (local.tee $16
              (i32.load
               (local.get $2)
              )
             )
             (i32.const 1)
            )
           )
           (i32.store8
            (local.get $16)
            (local.get $17)
           )
           (local.set $15
            (i32.add
             (local.get $15)
             (i32.const -1)
            )
           )
           (br $while-in6)
          )
         )
        )
        (local.set $17
         (if (result i32)
          (local.get $16)
          (block (result i32)
           (local.set $16
            (i32.load offset=28
             (i32.load
              (local.get $6)
             )
            )
           )
           (call_indirect (type $i32_i32_=>_i32)
            (local.get $6)
            (i32.const 48)
            (i32.add
             (i32.and
              (local.get $16)
              (i32.const 15)
             )
             (i32.const 66)
            )
           )
          )
          (i32.const 0)
         )
        )
        (loop $while-in8
         (i32.store
          (local.get $2)
          (i32.add
           (local.tee $16
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 1)
          )
         )
         (if
          (i32.gt_s
           (local.get $15)
           (i32.const 0)
          )
          (block
           (i32.store8
            (local.get $16)
            (local.get $17)
           )
           (local.set $15
            (i32.add
             (local.get $15)
             (i32.const -1)
            )
           )
           (br $while-in8)
          )
         )
        )
        (i32.store8
         (local.get $16)
         (local.get $9)
        )
       )
      )
      (if
       (i32.eq
        (local.get $4)
        (local.get $19)
       )
       (block
        (local.set $4
         (i32.load offset=28
          (i32.load
           (local.get $6)
          )
         )
        )
        (local.set $15
         (call_indirect (type $i32_i32_=>_i32)
          (local.get $6)
          (i32.const 48)
          (i32.add
           (i32.and
            (local.get $4)
            (i32.const 15)
           )
           (i32.const 66)
          )
         )
        )
        (i32.store
         (local.get $2)
         (i32.add
          (local.tee $4
           (i32.load
            (local.get $2)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $4)
         (local.get $15)
        )
       )
       (block $label$break$L32
        (local.set $16
         (i32.lt_s
          (local.tee $15
           (i32.load8_s offset=11
            (local.get $11)
           )
          )
          (i32.const 0)
         )
        )
        (local.set $15
         (if (result i32)
          (select
           (i32.load offset=4
            (local.get $11)
           )
           (i32.and
            (local.get $15)
            (i32.const 255)
           )
           (local.get $16)
          )
          (i32.load8_s
           (select
            (i32.load
             (local.get $11)
            )
            (local.get $11)
            (local.get $16)
           )
          )
          (i32.const -1)
         )
        )
        (local.set $17
         (i32.const 0)
        )
        (local.set $20
         (i32.const 0)
        )
        (local.set $16
         (local.get $4)
        )
        (loop $while-in11
         (br_if $label$break$L32
          (i32.eq
           (local.get $16)
           (local.get $19)
          )
         )
         (if
          (i32.eq
           (local.get $15)
           (local.get $20)
          )
          (block
           (i32.store
            (local.get $2)
            (i32.add
             (local.tee $4
              (i32.load
               (local.get $2)
              )
             )
             (i32.const 1)
            )
           )
           (i32.store8
            (local.get $4)
            (local.get $10)
           )
           (local.set $22
            (i32.lt_s
             (local.tee $15
              (i32.load8_s offset=11
               (local.get $11)
              )
             )
             (i32.const 0)
            )
           )
           (if
            (i32.lt_u
             (local.tee $4
              (i32.add
               (local.get $17)
               (i32.const 1)
              )
             )
             (select
              (i32.load offset=4
               (local.get $11)
              )
              (i32.and
               (local.get $15)
               (i32.const 255)
              )
              (local.get $22)
             )
            )
            (local.set $15
             (select
              (i32.const -1)
              (local.tee $15
               (i32.load8_s
                (i32.add
                 (local.get $4)
                 (select
                  (i32.load
                   (local.get $11)
                  )
                  (local.get $11)
                  (local.get $22)
                 )
                )
               )
              )
              (i32.eq
               (local.get $15)
               (i32.const 127)
              )
             )
            )
            (local.set $15
             (local.get $20)
            )
           )
           (local.set $20
            (i32.const 0)
           )
          )
          (local.set $4
           (local.get $17)
          )
         )
         (local.set $22
          (i32.load8_s
           (local.tee $16
            (i32.add
             (local.get $16)
             (i32.const -1)
            )
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (local.tee $17
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $17)
          (local.get $22)
         )
         (local.set $17
          (local.get $4)
         )
         (local.set $20
          (i32.add
           (local.get $20)
           (i32.const 1)
          )
         )
         (br $while-in11)
        )
       )
      )
      (local.set $4
       (if (result i32)
        (i32.eq
         (local.tee $4
          (i32.load
           (local.get $2)
          )
         )
         (local.get $18)
        )
        (local.get $19)
        (loop $while-in13
         (if
          (i32.lt_u
           (local.get $18)
           (local.tee $4
            (i32.add
             (local.get $4)
             (i32.const -1)
            )
           )
          )
          (block
           (local.set $15
            (i32.load8_s
             (local.get $18)
            )
           )
           (i32.store8
            (local.get $18)
            (i32.load8_s
             (local.get $4)
            )
           )
           (i32.store8
            (local.get $4)
            (local.get $15)
           )
           (local.set $18
            (i32.add
             (local.get $18)
             (i32.const 1)
            )
           )
           (br $while-in13)
          )
          (block
           (local.set $4
            (local.get $19)
           )
           (br $label$break$L4)
          )
         )
        )
       )
      )
     )
     (local.set $21
      (i32.add
       (local.get $21)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $6
   (i32.lt_s
    (local.tee $4
     (i32.load8_s offset=11
      (local.get $13)
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.gt_u
    (local.tee $4
     (select
      (i32.load offset=4
       (local.get $13)
      )
      (i32.and
       (local.get $4)
       (i32.const 255)
      )
      (local.get $6)
     )
    )
    (i32.const 1)
   )
   (block
    (drop
     (call $_memmove
      (local.tee $5
       (i32.load
        (local.get $2)
       )
      )
      (i32.add
       (select
        (i32.load
         (local.get $13)
        )
        (local.get $13)
        (local.get $6)
       )
       (i32.const 1)
      )
      (local.tee $4
       (i32.add
        (local.get $4)
        (i32.const -1)
       )
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.add
      (local.get $4)
      (local.get $5)
     )
    )
   )
  )
  (block $switch15
   (block $switch-default18
    (block $switch-case16
     (br_table $switch15 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-default18 $switch-case16 $switch-default18
      (i32.sub
       (i32.shr_s
        (i32.shl
         (i32.and
          (local.get $3)
          (i32.const 176)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 16)
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.load
      (local.get $2)
     )
    )
    (br $switch15)
   )
   (i32.store
    (local.get $1)
    (local.get $0)
   )
  )
 )
 (func $__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 992)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 904)
   )
  )
  (local.set $12
   (i32.add
    (local.get $6)
    (i32.const 400)
   )
  )
  (i32.store
   (local.tee $14
    (i32.add
     (local.get $6)
     (i32.const 984)
    )
   )
   (local.tee $0
    (i32.add
     (local.get $6)
     (i32.const 800)
    )
   )
  )
  (f64.store
   (local.tee $17
    (i32.add
     (local.get $6)
     (i32.const 912)
    )
   )
   (local.get $5)
  )
  (if
   (i32.gt_u
    (local.tee $0
     (call $_snprintf
      (local.get $0)
      (local.get $17)
     )
    )
    (i32.const 99)
   )
   (block
    (local.set $0
     (call $__ZNSt3__26__clocEv)
    )
    (f64.store
     (local.get $7)
     (local.get $5)
    )
    (local.set $13
     (call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
      (local.get $14)
      (local.get $0)
      (i32.const 48837)
      (local.get $7)
     )
    )
    (if
     (i32.eqz
      (local.tee $12
       (i32.load
        (local.get $14)
       )
      )
     )
     (call $_abort)
    )
    (local.set $0
     (local.tee $7
      (call $_malloc
       (i32.shl
        (local.get $13)
        (i32.const 2)
       )
      )
     )
    )
    (if
     (local.get $7)
     (block
      (local.set $15
       (local.get $7)
      )
      (local.set $10
       (local.get $13)
      )
      (local.set $20
       (local.get $0)
      )
      (local.set $21
       (local.get $12)
      )
     )
     (call $_abort)
    )
   )
   (block
    (local.set $15
     (local.get $12)
    )
    (local.set $10
     (local.get $0)
    )
   )
  )
  (local.set $22
   (i32.add
    (local.get $6)
    (i32.const 988)
   )
  )
  (local.set $23
   (i32.add
    (local.get $6)
    (i32.const 976)
   )
  )
  (local.set $24
   (i32.add
    (local.get $6)
    (i32.const 972)
   )
  )
  (local.set $16
   (i32.add
    (local.get $6)
    (i32.const 960)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 948)
   )
  )
  (local.set $11
   (i32.add
    (local.get $6)
    (i32.const 936)
   )
  )
  (local.set $9
   (i32.add
    (local.get $6)
    (i32.const 932)
   )
  )
  (local.set $12
   (local.get $6)
  )
  (local.set $25
   (i32.add
    (local.get $6)
    (i32.const 928)
   )
  )
  (local.set $26
   (i32.add
    (local.get $6)
    (i32.const 924)
   )
  )
  (i32.store
   (local.tee $18
    (i32.add
     (local.get $6)
     (i32.const 980)
    )
   )
   (local.tee $0
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (local.set $7
   (i32.load offset=48
    (i32.load
     (local.tee $13
      (call $__ZNKSt3__26locale9use_facetERNS0_2idE
       (local.get $18)
       (i32.const 54432)
      )
     )
    )
   )
  )
  (drop
   (call_indirect (type $i32_i32_i32_i32_=>_i32)
    (local.get $13)
    (local.tee $0
     (i32.load
      (local.get $14)
     )
    )
    (i32.add
     (local.get $0)
     (local.get $10)
    )
    (local.get $15)
    (i32.add
     (i32.and
      (local.get $7)
      (i32.const 7)
     )
     (i32.const 114)
    )
   )
  )
  (local.set $7
   (if (result i32)
    (local.get $10)
    (i32.eq
     (i32.load8_s
      (i32.load
       (local.get $14)
      )
     )
     (i32.const 45)
    )
    (i32.const 0)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $16)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $8)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $11)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (call $__ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri
   (local.get $2)
   (local.get $7)
   (local.get $18)
   (local.get $22)
   (local.get $23)
   (local.get $24)
   (local.get $16)
   (local.get $8)
   (local.get $11)
   (local.get $9)
  )
  (if
   (i32.gt_u
    (local.tee $0
     (i32.add
      (i32.add
       (if (result i32)
        (i32.gt_s
         (local.get $10)
         (local.tee $9
          (i32.load
           (local.get $9)
          )
         )
        )
        (block (result i32)
         (local.set $2
          (select
           (i32.load offset=4
            (local.get $8)
           )
           (i32.and
            (local.tee $0
             (i32.load8_s offset=11
              (local.get $8)
             )
            )
            (i32.const 255)
           )
           (i32.lt_s
            (local.get $0)
            (i32.const 0)
           )
          )
         )
         (i32.add
          (i32.add
           (local.get $9)
           (i32.const 1)
          )
          (i32.shl
           (i32.sub
            (local.get $10)
            (local.get $9)
           )
           (i32.const 1)
          )
         )
        )
        (block (result i32)
         (local.set $2
          (select
           (i32.load offset=4
            (local.get $8)
           )
           (i32.and
            (local.tee $0
             (i32.load8_s offset=11
              (local.get $8)
             )
            )
            (i32.const 255)
           )
           (i32.lt_s
            (local.get $0)
            (i32.const 0)
           )
          )
         )
         (i32.add
          (local.get $9)
          (i32.const 2)
         )
        )
       )
       (select
        (i32.load offset=4
         (local.get $11)
        )
        (i32.and
         (local.tee $0
          (i32.load8_s offset=11
           (local.get $11)
          )
         )
         (i32.const 255)
        )
        (i32.lt_s
         (local.get $0)
         (i32.const 0)
        )
       )
      )
      (local.get $2)
     )
    )
    (i32.const 100)
   )
   (block
    (local.set $0
     (local.tee $2
      (call $_malloc
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
      )
     )
    )
    (if
     (local.get $2)
     (block
      (local.set $19
       (local.get $2)
      )
      (local.set $27
       (local.get $0)
      )
     )
     (call $_abort)
    )
   )
   (local.set $19
    (local.get $12)
   )
  )
  (call $__ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i
   (local.get $19)
   (local.get $25)
   (local.get $26)
   (i32.load offset=4
    (local.get $3)
   )
   (local.get $15)
   (i32.add
    (i32.shl
     (local.get $10)
     (i32.const 2)
    )
    (local.get $15)
   )
   (local.get $13)
   (local.get $7)
   (local.get $22)
   (i32.load
    (local.get $23)
   )
   (i32.load
    (local.get $24)
   )
   (local.get $16)
   (local.get $8)
   (local.get $11)
   (local.get $9)
  )
  (i32.store offset=920
   (local.get $6)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $25)
   )
  )
  (local.set $0
   (i32.load
    (local.get $26)
   )
  )
  (i32.store
   (local.get $17)
   (i32.load offset=920
    (local.get $6)
   )
  )
  (local.set $0
   (call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $17)
    (local.get $19)
    (local.get $1)
    (local.get $0)
    (local.get $3)
    (local.get $4)
   )
  )
  (if
   (local.get $27)
   (call $_free
    (local.get $27)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $11)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $8)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $16)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $18)
  )
  (if
   (local.get $20)
   (call $_free
    (local.get $20)
   )
  )
  (if
   (local.get $21)
   (call $_free
    (local.get $21)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 480)
   )
  )
  (local.set $16
   (i32.add
    (local.get $7)
    (i32.const 464)
   )
  )
  (local.set $17
   (i32.add
    (local.get $7)
    (i32.const 468)
   )
  )
  (local.set $18
   (i32.add
    (local.get $7)
    (i32.const 456)
   )
  )
  (local.set $19
   (i32.add
    (local.get $7)
    (i32.const 452)
   )
  )
  (local.set $12
   (i32.add
    (local.get $7)
    (i32.const 440)
   )
  )
  (local.set $9
   (i32.add
    (local.get $7)
    (i32.const 428)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 416)
   )
  )
  (local.set $8
   (i32.add
    (local.get $7)
    (i32.const 412)
   )
  )
  (local.set $0
   (local.get $7)
  )
  (local.set $20
   (i32.add
    (local.get $7)
    (i32.const 408)
   )
  )
  (local.set $21
   (i32.add
    (local.get $7)
    (i32.const 404)
   )
  )
  (i32.store
   (local.tee $13
    (i32.add
     (local.get $7)
     (i32.const 460)
    )
   )
   (local.tee $6
    (i32.load offset=28
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $6)
   (i32.add
    (i32.load offset=4
     (local.get $6)
    )
    (i32.const 1)
   )
  )
  (local.set $14
   (call $__ZNKSt3__26locale9use_facetERNS0_2idE
    (local.get $13)
    (i32.const 54432)
   )
  )
  (local.set $11
   (i32.lt_s
    (local.tee $6
     (i32.load8_s offset=11
      (local.get $5)
     )
    )
    (i32.const 0)
   )
  )
  (local.set $22
   (if (result i32)
    (select
     (i32.load offset=4
      (local.get $5)
     )
     (i32.and
      (local.get $6)
      (i32.const 255)
     )
     (local.get $11)
    )
    (i32.eq
     (i32.load
      (select
       (i32.load
        (local.get $5)
       )
       (local.get $5)
       (local.get $11)
      )
     )
     (call_indirect (type $i32_i32_=>_i32)
      (local.get $14)
      (i32.const 45)
      (i32.add
       (i32.and
        (i32.load offset=44
         (i32.load
          (local.get $14)
         )
        )
        (i32.const 15)
       )
       (i32.const 66)
      )
     )
    )
    (i32.const 0)
   )
  )
  (local.set $6
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $6)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
       (local.get $12)
      )
      (i32.const 0)
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $6
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (i32.ne
     (local.get $6)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
       (local.get $9)
      )
      (i32.const 0)
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (local.set $6
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (local.get $6)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
       (local.get $10)
      )
      (i32.const 0)
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (call $__ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri
   (local.get $2)
   (local.get $22)
   (local.get $13)
   (local.get $17)
   (local.get $18)
   (local.get $19)
   (local.get $12)
   (local.get $9)
   (local.get $10)
   (local.get $8)
  )
  (local.set $11
   (i32.lt_s
    (local.tee $2
     (i32.load8_s offset=11
      (local.get $5)
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.gt_u
    (local.tee $2
     (i32.add
      (i32.add
       (if (result i32)
        (i32.gt_s
         (local.tee $6
          (select
           (i32.load offset=4
            (local.get $5)
           )
           (i32.and
            (local.get $2)
            (i32.const 255)
           )
           (local.get $11)
          )
         )
         (local.tee $8
          (i32.load
           (local.get $8)
          )
         )
        )
        (i32.add
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
         (i32.shl
          (i32.sub
           (local.get $6)
           (local.get $8)
          )
          (i32.const 1)
         )
        )
        (i32.add
         (local.get $8)
         (i32.const 2)
        )
       )
       (select
        (i32.load offset=4
         (local.get $10)
        )
        (i32.and
         (local.tee $2
          (i32.load8_s offset=11
           (local.get $10)
          )
         )
         (i32.const 255)
        )
        (i32.lt_s
         (local.get $2)
         (i32.const 0)
        )
       )
      )
      (select
       (i32.load offset=4
        (local.get $9)
       )
       (i32.and
        (local.tee $2
         (i32.load8_s offset=11
          (local.get $9)
         )
        )
        (i32.const 255)
       )
       (i32.lt_s
        (local.get $2)
        (i32.const 0)
       )
      )
     )
    )
    (i32.const 100)
   )
   (block
    (local.set $0
     (local.tee $2
      (call $_malloc
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
      )
     )
    )
    (if
     (local.get $2)
     (block
      (local.set $15
       (local.get $2)
      )
      (local.set $23
       (local.get $0)
      )
     )
     (call $_abort)
    )
   )
   (local.set $15
    (local.get $0)
   )
  )
  (call $__ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i
   (local.get $15)
   (local.get $20)
   (local.get $21)
   (i32.load offset=4
    (local.get $3)
   )
   (local.tee $0
    (select
     (i32.load
      (local.get $5)
     )
     (local.get $5)
     (local.get $11)
    )
   )
   (i32.add
    (i32.shl
     (local.get $6)
     (i32.const 2)
    )
    (local.get $0)
   )
   (local.get $14)
   (local.get $22)
   (local.get $17)
   (i32.load
    (local.get $18)
   )
   (i32.load
    (local.get $19)
   )
   (local.get $12)
   (local.get $9)
   (local.get $10)
   (local.get $8)
  )
  (i32.store offset=400
   (local.get $7)
   (i32.load
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $20)
   )
  )
  (local.set $0
   (i32.load
    (local.get $21)
   )
  )
  (i32.store
   (local.get $16)
   (i32.load offset=400
    (local.get $7)
   )
  )
  (local.set $0
   (call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    (local.get $16)
    (local.get $15)
    (local.get $1)
    (local.get $0)
    (local.get $3)
    (local.get $4)
   )
  )
  (if
   (local.get $23)
   (call $_free
    (local.get $23)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $9)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $12)
  )
  (call $__ZNSt3__26localeD2Ev
   (local.get $13)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $__ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (local $10 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (local.get $0)
    (call $__ZNKSt3__26locale9use_facetERNS0_2idE
     (local.get $2)
     (i32.const 54648)
    )
    (call $__ZNKSt3__26locale9use_facetERNS0_2idE
     (local.get $2)
     (i32.const 54640)
    )
   )
  )
  (local.set $2
   (i32.add
    (local.get $10)
    (i32.const 12)
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $0)
   (i32.add
    (i32.and
     (if (result i32)
      (local.get $1)
      (block (result i32)
       (call_indirect (type $i32_i32_=>_none)
        (local.get $2)
        (local.get $0)
        (i32.add
         (i32.and
          (i32.load offset=44
           (i32.load
            (local.get $0)
           )
          )
          (i32.const 63)
         )
         (i32.const 395)
        )
       )
       (i32.store align=1
        (local.get $3)
        (i32.load
         (local.get $2)
        )
       )
       (i32.load offset=32
        (i32.load
         (local.get $0)
        )
       )
      )
      (block (result i32)
       (call_indirect (type $i32_i32_=>_none)
        (local.get $2)
        (local.get $0)
        (i32.add
         (i32.and
          (i32.load offset=40
           (i32.load
            (local.get $0)
           )
          )
          (i32.const 63)
         )
         (i32.const 395)
        )
       )
       (i32.store align=1
        (local.get $3)
        (i32.load
         (local.get $2)
        )
       )
       (i32.load offset=28
        (i32.load
         (local.get $0)
        )
       )
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $8)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $8)
     )
    )
    (call $_free
     (i32.load
      (local.get $8)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $8)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store
   (local.get $2)
   (i32.const 0)
  )
  (i32.store
   (local.get $10)
   (i32.load
    (local.get $2)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (i32.store
   (local.get $4)
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (i32.load offset=12
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
   )
  )
  (i32.store
   (local.get $5)
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (i32.load offset=16
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
   )
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $0)
   (i32.add
    (i32.and
     (i32.load offset=20
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $6)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $6)
     )
    )
    (call $_free
     (i32.load
      (local.get $6)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $6)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store8
   (local.get $2)
   (i32.const 0)
  )
  (i32.store8
   (local.get $10)
   (i32.load8_s
    (local.get $2)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (call_indirect (type $i32_i32_=>_none)
   (local.get $10)
   (local.get $0)
   (i32.add
    (i32.and
     (i32.load offset=24
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $7)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $7)
     )
    )
    (call $_free
     (i32.load
      (local.get $7)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $7)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i32.store8 offset=11
   (local.get $10)
   (i32.const 0)
  )
  (i32.store
   (local.get $2)
   (i32.const 0)
  )
  (i32.store
   (local.get $10)
   (i32.load
    (local.get $2)
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $10)
  )
  (i32.store
   (local.get $9)
   (call_indirect (type $i32_=>_i32)
    (local.get $0)
    (i32.and
     (i32.load offset=36
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 63)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $__ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32) (param $12 i32) (param $13 i32) (param $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (local.set $24
   (i32.add
    (local.get $13)
    (i32.const 4)
   )
  )
  (local.set $25
   (i32.eqz
    (i32.and
     (local.get $3)
     (i32.const 512)
    )
   )
  )
  (local.set $26
   (i32.gt_s
    (local.get $14)
    (i32.const 0)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $23)
     (i32.const 4)
    )
    (block
     (block $label$break$L4
      (block $switch-case13
       (block $switch-case2
        (block $switch-case1
         (block $switch-case0
          (block $switch-case
           (br_table $switch-case $switch-case0 $switch-case2 $switch-case1 $switch-case13 $label$break$L4
            (i32.load8_s
             (i32.add
              (local.get $8)
              (local.get $23)
             )
            )
           )
          )
          (i32.store
           (local.get $1)
           (i32.load
            (local.get $2)
           )
          )
          (br $label$break$L4)
         )
         (i32.store
          (local.get $1)
          (i32.load
           (local.get $2)
          )
         )
         (local.set $15
          (i32.load offset=44
           (i32.load
            (local.get $6)
           )
          )
         )
         (local.set $16
          (call_indirect (type $i32_i32_=>_i32)
           (local.get $6)
           (i32.const 32)
           (i32.add
            (i32.and
             (local.get $15)
             (i32.const 15)
            )
            (i32.const 66)
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (local.tee $15
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 4)
          )
         )
         (i32.store
          (local.get $15)
          (local.get $16)
         )
         (br $label$break$L4)
        )
        (local.set $16
         (i32.lt_s
          (local.tee $15
           (i32.load8_s offset=11
            (local.get $13)
           )
          )
          (i32.const 0)
         )
        )
        (if
         (select
          (i32.load
           (local.get $24)
          )
          (i32.and
           (local.get $15)
           (i32.const 255)
          )
          (local.get $16)
         )
         (block
          (local.set $16
           (i32.load
            (select
             (i32.load
              (local.get $13)
             )
             (local.get $13)
             (local.get $16)
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.tee $15
             (i32.load
              (local.get $2)
             )
            )
            (i32.const 4)
           )
          )
          (i32.store
           (local.get $15)
           (local.get $16)
          )
         )
        )
        (br $label$break$L4)
       )
       (local.set $18
        (i32.lt_s
         (local.tee $15
          (i32.load8_s offset=11
           (local.get $12)
          )
         )
         (i32.const 0)
        )
       )
       (if
        (i32.eqz
         (i32.or
          (local.get $25)
          (i32.eqz
           (local.tee $15
            (select
             (i32.load offset=4
              (local.get $12)
             )
             (i32.and
              (local.get $15)
              (i32.const 255)
             )
             (local.get $18)
            )
           )
          )
         )
        )
        (block
         (local.set $16
          (i32.shr_s
           (local.tee $17
            (i32.shl
             (local.get $15)
             (i32.const 2)
            )
           )
           (i32.const 2)
          )
         )
         (drop
          (call $_memmove
           (local.tee $15
            (i32.load
             (local.get $2)
            )
           )
           (select
            (i32.load
             (local.get $12)
            )
            (local.get $12)
            (local.get $18)
           )
           (local.get $17)
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (i32.shl
            (local.get $16)
            (i32.const 2)
           )
           (local.get $15)
          )
         )
        )
       )
       (br $label$break$L4)
      )
      (local.set $19
       (i32.load
        (local.get $2)
       )
      )
      (local.set $4
       (local.tee $22
        (select
         (i32.add
          (local.get $4)
          (i32.const 4)
         )
         (local.get $4)
         (local.get $7)
        )
       )
      )
      (loop $while-in4
       (block $while-out3
        (br_if $while-out3
         (i32.ge_u
          (local.get $4)
          (local.get $5)
         )
        )
        (local.set $15
         (i32.load offset=12
          (i32.load
           (local.get $6)
          )
         )
        )
        (br_if $while-out3
         (i32.eqz
          (call_indirect (type $i32_i32_i32_=>_i32)
           (local.get $6)
           (i32.const 2048)
           (i32.load
            (local.get $4)
           )
           (i32.add
            (i32.and
             (local.get $15)
             (i32.const 31)
            )
            (i32.const 82)
           )
          )
         )
        )
        (local.set $4
         (i32.add
          (local.get $4)
          (i32.const 4)
         )
        )
        (br $while-in4)
       )
      )
      (if
       (local.get $26)
       (block
        (local.set $15
         (local.get $14)
        )
        (loop $while-in6
         (if
          (i32.and
           (local.tee $16
            (i32.gt_s
             (local.get $15)
             (i32.const 0)
            )
           )
           (i32.gt_u
            (local.get $4)
            (local.get $22)
           )
          )
          (block
           (local.set $17
            (i32.load
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const -4)
              )
             )
            )
           )
           (i32.store
            (local.get $2)
            (i32.add
             (local.tee $16
              (i32.load
               (local.get $2)
              )
             )
             (i32.const 4)
            )
           )
           (i32.store
            (local.get $16)
            (local.get $17)
           )
           (local.set $15
            (i32.add
             (local.get $15)
             (i32.const -1)
            )
           )
           (br $while-in6)
          )
         )
        )
        (local.set $18
         (if (result i32)
          (local.get $16)
          (block (result i32)
           (local.set $16
            (i32.load offset=44
             (i32.load
              (local.get $6)
             )
            )
           )
           (call_indirect (type $i32_i32_=>_i32)
            (local.get $6)
            (i32.const 48)
            (i32.add
             (i32.and
              (local.get $16)
              (i32.const 15)
             )
             (i32.const 66)
            )
           )
          )
          (i32.const 0)
         )
        )
        (local.set $17
         (local.get $15)
        )
        (local.set $16
         (i32.load
          (local.get $2)
         )
        )
        (loop $while-in8
         (local.set $15
          (i32.add
           (local.get $16)
           (i32.const 4)
          )
         )
         (if
          (i32.gt_s
           (local.get $17)
           (i32.const 0)
          )
          (block
           (i32.store
            (local.get $16)
            (local.get $18)
           )
           (local.set $17
            (i32.add
             (local.get $17)
             (i32.const -1)
            )
           )
           (local.set $16
            (local.get $15)
           )
           (br $while-in8)
          )
         )
        )
        (i32.store
         (local.get $2)
         (local.get $15)
        )
        (i32.store
         (local.get $16)
         (local.get $9)
        )
       )
      )
      (if
       (i32.eq
        (local.get $4)
        (local.get $22)
       )
       (block
        (local.set $4
         (i32.load offset=44
          (i32.load
           (local.get $6)
          )
         )
        )
        (local.set $16
         (call_indirect (type $i32_i32_=>_i32)
          (local.get $6)
          (i32.const 48)
          (i32.add
           (i32.and
            (local.get $4)
            (i32.const 15)
           )
           (i32.const 66)
          )
         )
        )
        (i32.store
         (local.get $2)
         (local.tee $4
          (i32.add
           (local.tee $15
            (i32.load
             (local.get $2)
            )
           )
           (i32.const 4)
          )
         )
        )
        (i32.store
         (local.get $15)
         (local.get $16)
        )
       )
       (block
        (local.set $16
         (i32.lt_s
          (local.tee $15
           (i32.load8_s offset=11
            (local.get $11)
           )
          )
          (i32.const 0)
         )
        )
        (local.set $15
         (if (result i32)
          (select
           (i32.load offset=4
            (local.get $11)
           )
           (i32.and
            (local.get $15)
            (i32.const 255)
           )
           (local.get $16)
          )
          (i32.load8_s
           (select
            (i32.load
             (local.get $11)
            )
            (local.get $11)
            (local.get $16)
           )
          )
          (i32.const -1)
         )
        )
        (local.set $16
         (i32.const 0)
        )
        (local.set $20
         (i32.const 0)
        )
        (local.set $17
         (local.get $4)
        )
        (loop $while-in10
         (if
          (i32.ne
           (local.get $17)
           (local.get $22)
          )
          (block
           (local.set $21
            (i32.load
             (local.get $2)
            )
           )
           (local.set $16
            (if (result i32)
             (i32.eq
              (local.get $15)
              (local.get $20)
             )
             (block (result i32)
              (i32.store
               (local.get $2)
               (local.tee $18
                (i32.add
                 (local.get $21)
                 (i32.const 4)
                )
               )
              )
              (i32.store
               (local.get $21)
               (local.get $10)
              )
              (local.set $21
               (i32.lt_s
                (local.tee $15
                 (i32.load8_s offset=11
                  (local.get $11)
                 )
                )
                (i32.const 0)
               )
              )
              (if
               (i32.lt_u
                (local.tee $4
                 (i32.add
                  (local.get $16)
                  (i32.const 1)
                 )
                )
                (select
                 (i32.load offset=4
                  (local.get $11)
                 )
                 (i32.and
                  (local.get $15)
                  (i32.const 255)
                 )
                 (local.get $21)
                )
               )
               (local.set $15
                (select
                 (i32.const -1)
                 (local.tee $15
                  (i32.load8_s
                   (i32.add
                    (local.get $4)
                    (select
                     (i32.load
                      (local.get $11)
                     )
                     (local.get $11)
                     (local.get $21)
                    )
                   )
                  )
                 )
                 (i32.eq
                  (local.get $15)
                  (i32.const 127)
                 )
                )
               )
               (local.set $15
                (local.get $20)
               )
              )
              (local.set $20
               (i32.const 0)
              )
              (local.get $18)
             )
             (block (result i32)
              (local.set $4
               (local.get $16)
              )
              (local.get $21)
             )
            )
           )
           (local.set $18
            (i32.load
             (local.tee $17
              (i32.add
               (local.get $17)
               (i32.const -4)
              )
             )
            )
           )
           (i32.store
            (local.get $2)
            (i32.add
             (local.get $16)
             (i32.const 4)
            )
           )
           (i32.store
            (local.get $16)
            (local.get $18)
           )
           (local.set $16
            (local.get $4)
           )
           (local.set $20
            (i32.add
             (local.get $20)
             (i32.const 1)
            )
           )
           (br $while-in10)
          )
         )
        )
        (local.set $4
         (i32.load
          (local.get $2)
         )
        )
       )
      )
      (local.set $4
       (if (result i32)
        (i32.eq
         (local.get $4)
         (local.get $19)
        )
        (local.get $22)
        (loop $while-in12
         (if
          (i32.lt_u
           (local.get $19)
           (local.tee $4
            (i32.add
             (local.get $4)
             (i32.const -4)
            )
           )
          )
          (block
           (local.set $15
            (i32.load
             (local.get $19)
            )
           )
           (i32.store
            (local.get $19)
            (i32.load
             (local.get $4)
            )
           )
           (i32.store
            (local.get $4)
            (local.get $15)
           )
           (local.set $19
            (i32.add
             (local.get $19)
             (i32.const 4)
            )
           )
           (br $while-in12)
          )
          (block
           (local.set $4
            (local.get $22)
           )
           (br $label$break$L4)
          )
         )
        )
       )
      )
     )
     (local.set $23
      (i32.add
       (local.get $23)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $8
   (i32.lt_s
    (local.tee $4
     (i32.load8_s offset=11
      (local.get $13)
     )
    )
    (i32.const 0)
   )
  )
  (if
   (i32.gt_u
    (local.tee $5
     (select
      (i32.load
       (local.get $24)
      )
      (i32.and
       (local.get $4)
       (i32.const 255)
      )
      (local.get $8)
     )
    )
    (i32.const 1)
   )
   (block
    (local.set $7
     (select
      (i32.add
       (local.tee $4
        (i32.load
         (local.get $13)
        )
       )
       (i32.const 4)
      )
      (local.get $24)
      (local.get $8)
     )
    )
    (local.set $6
     (i32.load
      (local.get $2)
     )
    )
    (if
     (local.tee $4
      (i32.sub
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
        (select
         (local.get $4)
         (local.get $13)
         (local.get $8)
        )
       )
       (local.get $7)
      )
     )
     (drop
      (call $_memmove
       (local.get $6)
       (local.get $7)
       (local.get $4)
      )
     )
    )
    (i32.store
     (local.get $2)
     (i32.add
      (i32.shl
       (i32.shr_s
        (local.get $4)
        (i32.const 2)
       )
       (i32.const 2)
      )
      (local.get $6)
     )
    )
   )
  )
  (block $switch14
   (block $switch-default17
    (block $switch-case15
     (br_table $switch14 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-default17 $switch-case15 $switch-default17
      (i32.sub
       (i32.shr_s
        (i32.shl
         (i32.and
          (local.get $3)
          (i32.const 176)
         )
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 16)
      )
     )
    )
    (i32.store
     (local.get $1)
     (i32.load
      (local.get $2)
     )
    )
    (br $switch14)
   )
   (i32.store
    (local.get $1)
    (local.get $0)
   )
  )
 )
 (func $__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (drop
   (select
    (i32.load
     (local.get $1)
    )
    (local.get $1)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $1)
     )
     (i32.const 0)
    )
   )
  )
  (i32.const -1)
 )
 (func $__ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $6)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
       (local.get $1)
      )
      (i32.const 0)
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.set $3
   (i32.add
    (local.tee $2
     (select
      (i32.load
       (local.get $5)
      )
      (local.get $5)
      (local.tee $4
       (i32.lt_s
        (local.tee $3
         (i32.load8_s offset=11
          (local.get $5)
         )
        )
        (i32.const 0)
       )
      )
     )
    )
    (select
     (i32.load offset=4
      (local.get $5)
     )
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
     (local.get $4)
    )
   )
  )
  (local.set $5
   (local.get $2)
  )
  (loop $while-in1
   (if
    (i32.lt_u
     (local.get $5)
     (local.get $3)
    )
    (block
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
      (local.get $1)
      (i32.load8_s
       (local.get $5)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br $while-in1)
    )
   )
  )
  (local.set $4
   (local.tee $2
    (select
     (i32.load
      (local.get $1)
     )
     (local.get $1)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $1)
      )
      (i32.const 0)
     )
    )
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in3
   (if
    (i32.ne
     (local.get $3)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $0)
      )
      (i32.const 0)
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (br $while-in3)
    )
   )
  )
  (local.set $3
   (i32.add
    (call $_strlen
     (local.get $4)
    )
    (local.get $2)
   )
  )
  (loop $while-in5
   (if
    (i32.lt_u
     (local.get $2)
     (local.get $3)
    )
    (block
     (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
      (local.get $0)
      (i32.load8_s
       (local.get $2)
      )
     )
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $__ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 176)
   )
  )
  (local.set $12
   (i32.add
    (local.get $4)
    (i32.const 168)
   )
  )
  (local.set $1
   (local.get $4)
  )
  (local.set $10
   (i32.add
    (local.get $4)
    (i32.const 164)
   )
  )
  (local.set $7
   (i32.add
    (local.get $4)
    (i32.const 160)
   )
  )
  (local.set $8
   (i32.add
    (local.get $4)
    (i32.const 128)
   )
  )
  (local.set $2
   (i32.add
    (local.get $4)
    (i32.const 152)
   )
  )
  (local.set $11
   (i32.add
    (local.get $4)
    (i32.const 144)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $6)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 2)
       )
       (local.get $8)
      )
      (i32.const 0)
     )
     (local.set $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store offset=4
   (local.get $2)
   (i32.const 0)
  )
  (i32.store
   (local.get $2)
   (i32.const 40108)
  )
  (local.set $3
   (i32.add
    (local.tee $6
     (select
      (i32.load
       (local.get $5)
      )
      (local.get $5)
      (local.tee $9
       (i32.lt_s
        (local.tee $3
         (i32.load8_s offset=11
          (local.get $5)
         )
        )
        (i32.const 0)
       )
      )
     )
    )
    (i32.shl
     (select
      (i32.load offset=4
       (local.get $5)
      )
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
      (local.get $9)
     )
     (i32.const 2)
    )
   )
  )
  (local.set $9
   (i32.add
    (local.get $1)
    (i32.const 32)
   )
  )
  (local.set $5
   (i32.const 0)
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in1
     (if
      (i32.and
       (i32.ne
        (local.get $5)
        (i32.const 2)
       )
       (i32.lt_u
        (local.get $6)
        (local.get $3)
       )
      )
      (block
       (i32.store
        (local.get $7)
        (local.get $6)
       )
       (br_if $__rjti$0
        (i32.or
         (i32.eq
          (local.tee $5
           (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
            (local.get $2)
            (local.get $12)
            (local.get $6)
            (local.get $3)
            (local.get $7)
            (local.get $1)
            (local.get $9)
            (local.get $10)
            (i32.add
             (i32.and
              (i32.load offset=12
               (i32.load
                (local.get $2)
               )
              )
              (i32.const 15)
             )
             (i32.const 238)
            )
           )
          )
          (i32.const 2)
         )
         (i32.eq
          (local.get $6)
          (i32.load
           (local.get $7)
          )
         )
        )
       )
       (local.set $6
        (local.get $1)
       )
       (loop $while-in3
        (if
         (i32.lt_u
          (local.get $6)
          (i32.load
           (local.get $10)
          )
         )
         (block
          (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
           (local.get $8)
           (i32.load8_s
            (local.get $6)
           )
          )
          (local.set $6
           (i32.add
            (local.get $6)
            (i32.const 1)
           )
          )
          (br $while-in3)
         )
        )
       )
       (local.set $6
        (i32.load
         (local.get $7)
        )
       )
       (br $while-in1)
      )
     )
    )
    (br $__rjto$0)
   )
   (call $_abort)
  )
  (local.set $5
   (local.tee $3
    (select
     (i32.load
      (local.get $8)
     )
     (local.get $8)
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $8)
      )
      (i32.const 0)
     )
    )
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in5
   (if
    (i32.ne
     (local.get $2)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
       (local.get $0)
      )
      (i32.const 0)
     )
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (i32.store offset=4
   (local.get $11)
   (i32.const 0)
  )
  (i32.store
   (local.get $11)
   (i32.const 40156)
  )
  (local.set $6
   (local.tee $5
    (i32.add
     (call $_strlen
      (local.get $5)
     )
     (local.get $3)
    )
   )
  )
  (local.set $9
   (i32.add
    (local.get $1)
    (i32.const 128)
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (block $__rjto$2
   (block $__rjti$2
    (loop $while-in7
     (block $__rjti$1
      (br_if $__rjti$2
       (i32.eqz
        (i32.and
         (i32.ne
          (local.get $2)
          (i32.const 2)
         )
         (i32.lt_u
          (local.get $3)
          (local.get $5)
         )
        )
       )
      )
      (i32.store
       (local.get $7)
       (local.get $3)
      )
      (br_if $__rjti$1
       (i32.or
        (i32.eq
         (local.tee $2
          (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
           (local.get $11)
           (local.get $12)
           (local.get $3)
           (select
            (i32.add
             (local.get $3)
             (i32.const 32)
            )
            (local.get $5)
            (i32.gt_s
             (i32.sub
              (local.get $6)
              (local.get $3)
             )
             (i32.const 32)
            )
           )
           (local.get $7)
           (local.get $1)
           (local.get $9)
           (local.get $10)
           (i32.add
            (i32.and
             (i32.load offset=16
              (i32.load
               (local.get $11)
              )
             )
             (i32.const 15)
            )
            (i32.const 238)
           )
          )
         )
         (i32.const 2)
        )
        (i32.eq
         (local.get $3)
         (i32.load
          (local.get $7)
         )
        )
       )
      )
      (local.set $3
       (local.get $1)
      )
      (loop $while-in9
       (if
        (i32.lt_u
         (local.get $3)
         (i32.load
          (local.get $10)
         )
        )
        (block
         (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw
          (local.get $0)
          (i32.load
           (local.get $3)
          )
         )
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 4)
          )
         )
         (br $while-in9)
        )
       )
      )
      (local.set $3
       (i32.load
        (local.get $7)
       )
      )
      (br $while-in7)
     )
    )
    (call $_abort)
    (br $__rjto$2)
   )
   (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
    (local.get $8)
   )
   (global.set $STACKTOP
    (local.get $4)
   )
  )
 )
 (func $__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $0)
     (i32.const 4)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.get $0)
   (local.get $5)
  )
  (local.set $2
   (call $__ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE
    (local.get $2)
    (local.get $3)
    (local.get $1)
    (local.get $5)
    (local.get $6)
    (local.get $0)
   )
  )
  (i32.store
   (local.get $4)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $2)
 )
 (func $__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $0)
     (i32.const 4)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.get $0)
   (local.get $5)
  )
  (local.set $2
   (call $__ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE
    (local.get $2)
    (local.get $3)
    (local.get $1)
    (local.get $5)
    (local.get $6)
    (local.get $0)
   )
  )
  (i32.store
   (local.get $4)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $2)
 )
 (func $__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (i32.store
   (local.get $4)
   (local.get $2)
  )
  (i32.const 3)
 )
 (func $__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (call $__ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE
   (local.get $2)
   (local.get $3)
   (local.get $4)
  )
 )
 (func $__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.const 4)
 )
 (func $__ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (local.get $1)
  )
  (local.set $1
   (local.get $0)
  )
  (loop $label$continue$L7
   (block $label$break$L7
    (br_if $label$break$L7
     (i32.eqz
      (i32.and
       (i32.lt_u
        (local.get $1)
        (local.get $6)
       )
       (i32.lt_u
        (local.get $9)
        (local.get $2)
       )
      )
     )
    )
    (local.set $7
     (i32.and
      (local.tee $3
       (i32.load8_s
        (local.get $1)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $1
     (if (result i32)
      (i32.gt_s
       (local.get $3)
       (i32.const -1)
      )
      (block (result i32)
       (br_if $label$break$L7
        (i32.gt_u
         (local.get $7)
         (i32.const 1114111)
        )
       )
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (block $do-once (result i32)
       (br_if $label$break$L7
        (i32.lt_s
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 194)
        )
       )
       (if
        (i32.lt_s
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 224)
        )
        (block
         (br_if $label$break$L7
          (i32.lt_s
           (i32.sub
            (local.get $6)
            (local.get $1)
           )
           (i32.const 2)
          )
         )
         (br_if $label$break$L7
          (i32.ne
           (i32.and
            (local.tee $4
             (i32.load8_u offset=1
              (local.get $1)
             )
            )
            (i32.const 192)
           )
           (i32.const 128)
          )
         )
         (br_if $label$break$L7
          (i32.gt_u
           (i32.or
            (i32.and
             (i32.shl
              (local.get $7)
              (i32.const 6)
             )
             (i32.const 1984)
            )
            (i32.and
             (local.get $4)
             (i32.const 63)
            )
           )
           (i32.const 1114111)
          )
         )
         (br $do-once
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
        )
       )
       (if
        (i32.lt_s
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 240)
        )
        (block
         (br_if $label$break$L7
          (i32.lt_s
           (i32.sub
            (local.get $6)
            (local.get $1)
           )
           (i32.const 3)
          )
         )
         (local.set $5
          (i32.load8_s offset=1
           (local.get $1)
          )
         )
         (local.set $4
          (i32.load8_u offset=2
           (local.get $1)
          )
         )
         (block $switch
          (block $switch-default
           (block $switch-case0
            (block $switch-case
             (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default
              (i32.sub
               (local.get $3)
               (i32.const -32)
              )
             )
            )
            (br_if $label$break$L7
             (i32.ne
              (i32.and
               (local.get $5)
               (i32.const 224)
              )
              (i32.const 160)
             )
            )
            (br $switch)
           )
           (br_if $label$break$L7
            (i32.ne
             (i32.and
              (local.get $5)
              (i32.const 224)
             )
             (i32.const 128)
            )
           )
           (br $switch)
          )
          (br_if $label$break$L7
           (i32.ne
            (i32.and
             (local.get $5)
             (i32.const 192)
            )
            (i32.const 128)
           )
          )
         )
         (br_if $label$break$L7
          (i32.ne
           (i32.and
            (local.get $4)
            (i32.const 192)
           )
           (i32.const 128)
          )
         )
         (br_if $label$break$L7
          (i32.gt_u
           (i32.or
            (i32.and
             (local.get $4)
             (i32.const 63)
            )
            (i32.or
             (i32.and
              (i32.shl
               (local.get $7)
               (i32.const 12)
              )
              (i32.const 61440)
             )
             (i32.shl
              (i32.and
               (local.get $5)
               (i32.const 63)
              )
              (i32.const 6)
             )
            )
           )
           (i32.const 1114111)
          )
         )
         (br $do-once
          (i32.add
           (local.get $1)
           (i32.const 3)
          )
         )
        )
       )
       (br_if $label$break$L7
        (i32.ge_s
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 245)
        )
       )
       (br_if $label$break$L7
        (i32.lt_s
         (i32.sub
          (local.get $6)
          (local.get $1)
         )
         (i32.const 4)
        )
       )
       (local.set $8
        (i32.load8_s offset=1
         (local.get $1)
        )
       )
       (local.set $4
        (i32.load8_u offset=2
         (local.get $1)
        )
       )
       (local.set $5
        (i32.load8_u offset=3
         (local.get $1)
        )
       )
       (block $switch1
        (block $switch-default4
         (block $switch-case3
          (block $switch-case2
           (br_table $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-case3 $switch-default4
            (i32.sub
             (local.get $3)
             (i32.const -16)
            )
           )
          )
          (br_if $label$break$L7
           (i32.ge_s
            (i32.and
             (i32.shr_s
              (i32.shl
               (i32.add
                (local.get $8)
                (i32.const 112)
               )
               (i32.const 24)
              )
              (i32.const 24)
             )
             (i32.const 255)
            )
            (i32.const 48)
           )
          )
          (br $switch1)
         )
         (br_if $label$break$L7
          (i32.ne
           (i32.and
            (local.get $8)
            (i32.const 240)
           )
           (i32.const 128)
          )
         )
         (br $switch1)
        )
        (br_if $label$break$L7
         (i32.ne
          (i32.and
           (local.get $8)
           (i32.const 192)
          )
          (i32.const 128)
         )
        )
       )
       (br_if $label$break$L7
        (i32.ne
         (i32.and
          (local.get $4)
          (i32.const 192)
         )
         (i32.const 128)
        )
       )
       (br_if $label$break$L7
        (i32.ne
         (i32.and
          (local.get $5)
          (i32.const 192)
         )
         (i32.const 128)
        )
       )
       (br_if $label$break$L7
        (i32.gt_u
         (i32.or
          (i32.and
           (local.get $5)
           (i32.const 63)
          )
          (i32.or
           (i32.and
            (i32.shl
             (local.get $4)
             (i32.const 6)
            )
            (i32.const 4032)
           )
           (i32.or
            (i32.and
             (i32.shl
              (local.get $7)
              (i32.const 18)
             )
             (i32.const 1835008)
            )
            (i32.shl
             (i32.and
              (local.get $8)
              (i32.const 63)
             )
             (i32.const 12)
            )
           )
          )
         )
         (i32.const 1114111)
        )
       )
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
     )
    )
    (local.set $9
     (i32.add
      (local.get $9)
      (i32.const 1)
     )
    )
    (br $label$continue$L7)
   )
  )
  (i32.sub
   (local.get $1)
   (local.get $0)
  )
 )
 (func $__ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (i32.store
   (local.get $5)
   (local.get $3)
  )
  (loop $label$continue$L9
   (block $label$break$L9
    (if
     (i32.ge_u
      (local.tee $6
       (i32.load
        (local.get $2)
       )
      )
      (local.get $1)
     )
     (block
      (local.set $0
       (i32.const 0)
      )
      (br $label$break$L9)
     )
    )
    (if
     (i32.ge_u
      (local.tee $10
       (i32.load
        (local.get $5)
       )
      )
      (local.get $4)
     )
     (block
      (local.set $0
       (i32.const 1)
      )
      (br $label$break$L9)
     )
    )
    (local.set $3
     (i32.and
      (local.tee $7
       (i32.load8_s
        (local.get $6)
       )
      )
      (i32.const 255)
     )
    )
    (local.set $0
     (if (result i32)
      (i32.gt_s
       (local.get $7)
       (i32.const -1)
      )
      (if (result i32)
       (i32.gt_u
        (local.get $3)
        (i32.const 1114111)
       )
       (block
        (local.set $0
         (i32.const 2)
        )
        (br $label$break$L9)
       )
       (i32.const 1)
      )
      (block $do-once (result i32)
       (if
        (i32.lt_s
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 194)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.lt_s
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 224)
        )
        (block
         (if
          (i32.lt_s
           (i32.sub
            (local.get $1)
            (local.get $6)
           )
           (i32.const 2)
          )
          (block
           (local.set $0
            (i32.const 1)
           )
           (br $label$break$L9)
          )
         )
         (if
          (i32.ne
           (i32.and
            (local.tee $0
             (i32.load8_u offset=1
              (local.get $6)
             )
            )
            (i32.const 192)
           )
           (i32.const 128)
          )
          (block
           (local.set $0
            (i32.const 2)
           )
           (br $label$break$L9)
          )
         )
         (drop
          (br_if $do-once
           (i32.const 2)
           (i32.le_u
            (local.tee $3
             (i32.or
              (i32.and
               (i32.shl
                (local.get $3)
                (i32.const 6)
               )
               (i32.const 1984)
              )
              (i32.and
               (local.get $0)
               (i32.const 63)
              )
             )
            )
            (i32.const 1114111)
           )
          )
         )
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.lt_s
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 240)
        )
        (block
         (if
          (i32.lt_s
           (i32.sub
            (local.get $1)
            (local.get $6)
           )
           (i32.const 3)
          )
          (block
           (local.set $0
            (i32.const 1)
           )
           (br $label$break$L9)
          )
         )
         (local.set $8
          (i32.load8_s offset=1
           (local.get $6)
          )
         )
         (local.set $0
          (i32.load8_u offset=2
           (local.get $6)
          )
         )
         (block $switch
          (block $switch-default
           (block $switch-case0
            (block $switch-case
             (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default
              (i32.sub
               (local.get $7)
               (i32.const -32)
              )
             )
            )
            (if
             (i32.ne
              (i32.and
               (local.get $8)
               (i32.const 224)
              )
              (i32.const 160)
             )
             (block
              (local.set $0
               (i32.const 2)
              )
              (br $label$break$L9)
             )
            )
            (br $switch)
           )
           (if
            (i32.ne
             (i32.and
              (local.get $8)
              (i32.const 224)
             )
             (i32.const 128)
            )
            (block
             (local.set $0
              (i32.const 2)
             )
             (br $label$break$L9)
            )
           )
           (br $switch)
          )
          (if
           (i32.ne
            (i32.and
             (local.get $8)
             (i32.const 192)
            )
            (i32.const 128)
           )
           (block
            (local.set $0
             (i32.const 2)
            )
            (br $label$break$L9)
           )
          )
         )
         (if
          (i32.ne
           (i32.and
            (local.get $0)
            (i32.const 192)
           )
           (i32.const 128)
          )
          (block
           (local.set $0
            (i32.const 2)
           )
           (br $label$break$L9)
          )
         )
         (drop
          (br_if $do-once
           (i32.const 3)
           (i32.le_u
            (local.tee $3
             (i32.or
              (i32.and
               (local.get $0)
               (i32.const 63)
              )
              (i32.or
               (i32.and
                (i32.shl
                 (local.get $3)
                 (i32.const 12)
                )
                (i32.const 61440)
               )
               (i32.shl
                (i32.and
                 (local.get $8)
                 (i32.const 63)
                )
                (i32.const 6)
               )
              )
             )
            )
            (i32.const 1114111)
           )
          )
         )
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.ge_s
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 245)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.lt_s
         (i32.sub
          (local.get $1)
          (local.get $6)
         )
         (i32.const 4)
        )
        (block
         (local.set $0
          (i32.const 1)
         )
         (br $label$break$L9)
        )
       )
       (local.set $9
        (i32.load8_s offset=1
         (local.get $6)
        )
       )
       (local.set $0
        (i32.load8_u offset=2
         (local.get $6)
        )
       )
       (local.set $8
        (i32.load8_u offset=3
         (local.get $6)
        )
       )
       (block $switch1
        (block $switch-default4
         (block $switch-case3
          (block $switch-case2
           (br_table $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-case3 $switch-default4
            (i32.sub
             (local.get $7)
             (i32.const -16)
            )
           )
          )
          (if
           (i32.ge_s
            (i32.and
             (i32.shr_s
              (i32.shl
               (i32.add
                (local.get $9)
                (i32.const 112)
               )
               (i32.const 24)
              )
              (i32.const 24)
             )
             (i32.const 255)
            )
            (i32.const 48)
           )
           (block
            (local.set $0
             (i32.const 2)
            )
            (br $label$break$L9)
           )
          )
          (br $switch1)
         )
         (if
          (i32.ne
           (i32.and
            (local.get $9)
            (i32.const 240)
           )
           (i32.const 128)
          )
          (block
           (local.set $0
            (i32.const 2)
           )
           (br $label$break$L9)
          )
         )
         (br $switch1)
        )
        (if
         (i32.ne
          (i32.and
           (local.get $9)
           (i32.const 192)
          )
          (i32.const 128)
         )
         (block
          (local.set $0
           (i32.const 2)
          )
          (br $label$break$L9)
         )
        )
       )
       (if
        (i32.ne
         (i32.and
          (local.get $0)
          (i32.const 192)
         )
         (i32.const 128)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.ne
         (i32.and
          (local.get $8)
          (i32.const 192)
         )
         (i32.const 128)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if (result i32)
        (i32.gt_u
         (local.tee $3
          (i32.or
           (i32.and
            (local.get $8)
            (i32.const 63)
           )
           (i32.or
            (i32.and
             (i32.shl
              (local.get $0)
              (i32.const 6)
             )
             (i32.const 4032)
            )
            (i32.or
             (i32.and
              (i32.shl
               (local.get $3)
               (i32.const 18)
              )
              (i32.const 1835008)
             )
             (i32.shl
              (i32.and
               (local.get $9)
               (i32.const 63)
              )
              (i32.const 12)
             )
            )
           )
          )
         )
         (i32.const 1114111)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
        (i32.const 4)
       )
      )
     )
    )
    (i32.store
     (local.get $10)
     (local.get $3)
    )
    (i32.store
     (local.get $2)
     (i32.add
      (local.get $0)
      (local.get $6)
     )
    )
    (i32.store
     (local.get $5)
     (i32.add
      (i32.load
       (local.get $5)
      )
      (i32.const 4)
     )
    )
    (br $label$continue$L9)
   )
  )
  (local.get $0)
 )
 (func $__ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (i32.store
   (local.get $5)
   (local.get $3)
  )
  (local.set $0
   (i32.load
    (local.get $2)
   )
  )
  (loop $while-in
   (block $label$break$L4
    (if
     (i32.ge_u
      (local.get $0)
      (local.get $1)
     )
     (block
      (local.set $0
       (i32.const 0)
      )
      (br $label$break$L4)
     )
    )
    (if
     (i32.or
      (i32.eq
       (i32.and
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
        (i32.const -2048)
       )
       (i32.const 55296)
      )
      (i32.gt_u
       (local.get $0)
       (i32.const 1114111)
      )
     )
     (block
      (local.set $0
       (i32.const 2)
      )
      (br $label$break$L4)
     )
    )
    (if
     (i32.lt_u
      (local.get $0)
      (i32.const 128)
     )
     (block
      (if
       (i32.lt_s
        (i32.sub
         (local.get $4)
         (local.tee $3
          (i32.load
           (local.get $5)
          )
         )
        )
        (i32.const 1)
       )
       (block
        (local.set $0
         (i32.const 1)
        )
        (br $label$break$L4)
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $3)
       (local.get $0)
      )
     )
     (block
      (block $do-once
       (if
        (i32.lt_u
         (local.get $0)
         (i32.const 2048)
        )
        (block
         (if
          (i32.lt_s
           (i32.sub
            (local.get $4)
            (local.tee $3
             (i32.load
              (local.get $5)
             )
            )
           )
           (i32.const 2)
          )
          (block
           (local.set $0
            (i32.const 1)
           )
           (br $label$break$L4)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $3)
          (i32.or
           (i32.shr_u
            (local.get $0)
            (i32.const 6)
           )
           (i32.const 192)
          )
         )
         (br $do-once)
        )
       )
       (local.set $6
        (i32.sub
         (local.get $4)
         (local.tee $3
          (i32.load
           (local.get $5)
          )
         )
        )
       )
       (if
        (i32.lt_u
         (local.get $0)
         (i32.const 65536)
        )
        (block
         (if
          (i32.lt_s
           (local.get $6)
           (i32.const 3)
          )
          (block
           (local.set $0
            (i32.const 1)
           )
           (br $label$break$L4)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $3)
          (i32.or
           (i32.shr_u
            (local.get $0)
            (i32.const 12)
           )
           (i32.const 224)
          )
         )
        )
        (block
         (if
          (i32.lt_s
           (local.get $6)
           (i32.const 4)
          )
          (block
           (local.set $0
            (i32.const 1)
           )
           (br $label$break$L4)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $3)
          (i32.or
           (i32.shr_u
            (local.get $0)
            (i32.const 18)
           )
           (i32.const 240)
          )
         )
         (i32.store
          (local.get $5)
          (i32.add
           (local.tee $3
            (i32.load
             (local.get $5)
            )
           )
           (i32.const 1)
          )
         )
         (i32.store8
          (local.get $3)
          (i32.or
           (i32.and
            (i32.shr_u
             (local.get $0)
             (i32.const 12)
            )
            (i32.const 63)
           )
           (i32.const 128)
          )
         )
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.tee $3
          (i32.load
           (local.get $5)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $3)
        (i32.or
         (i32.and
          (i32.shr_u
           (local.get $0)
           (i32.const 6)
          )
          (i32.const 63)
         )
         (i32.const 128)
        )
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.tee $3
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $3)
       (i32.or
        (i32.and
         (local.get $0)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
     )
    )
    (i32.store
     (local.get $2)
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 4)
      )
     )
    )
    (br $while-in)
   )
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (i32.store
   (local.get $4)
   (local.get $2)
  )
  (i32.store
   (local.get $7)
   (local.get $5)
  )
  (i32.const 3)
 )
 (func $__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.const 1)
 )
 (func $__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (select
   (local.tee $0
    (i32.sub
     (local.get $3)
     (local.get $2)
    )
   )
   (local.get $4)
   (i32.lt_u
    (local.get $0)
    (local.get $4)
   )
  )
 )
 (func $__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $12
   (i32.add
    (local.get $11)
    (i32.const 8)
   )
  )
  (local.set $8
   (local.get $2)
  )
  (loop $while-in
   (block $while-out
    (if
     (i32.eq
      (local.get $3)
      (local.get $8)
     )
     (block
      (local.set $8
       (local.get $3)
      )
      (br $while-out)
     )
    )
    (if
     (i32.load
      (local.get $8)
     )
     (block
      (local.set $8
       (i32.add
        (local.get $8)
        (i32.const 4)
       )
      )
      (br $while-in)
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (local.get $5)
  )
  (i32.store
   (local.get $4)
   (local.get $2)
  )
  (local.set $10
   (local.get $6)
  )
  (local.set $6
   (local.get $8)
  )
  (local.set $0
   (block $__rjto$4 (result i32)
    (block $__rjti$4
     (block $__rjti$2
      (loop $label$continue$L6
       (block $__rjti$0
        (br_if $__rjti$4
         (i32.or
          (i32.eq
           (local.get $2)
           (local.get $3)
          )
          (i32.eq
           (local.get $5)
           (local.get $10)
          )
         )
        )
        (i64.store
         (local.get $11)
         (i64.load align=4
          (local.get $1)
         )
        )
        (local.set $13
         (i32.shr_s
          (i32.sub
           (local.get $6)
           (local.get $2)
          )
          (i32.const 2)
         )
        )
        (local.set $14
         (i32.sub
          (local.get $10)
          (local.get $5)
         )
        )
        (local.set $8
         (i32.load
          (i32.const 37316)
         )
        )
        (if
         (local.tee $9
          (i32.load offset=8
           (local.get $0)
          )
         )
         (i32.store
          (i32.const 37316)
          (select
           (i32.const 53288)
           (local.get $9)
           (i32.eq
            (local.get $9)
            (i32.const -1)
           )
          )
         )
        )
        (local.set $8
         (select
          (i32.const -1)
          (local.get $8)
          (i32.eq
           (local.get $8)
           (i32.const 53288)
          )
         )
        )
        (local.set $9
         (call $_wcsnrtombs
          (local.get $5)
          (local.get $4)
          (local.get $13)
          (local.get $14)
         )
        )
        (if
         (local.get $8)
         (block
          (drop
           (i32.load
            (i32.const 37316)
           )
          )
          (if
           (local.get $8)
           (i32.store
            (i32.const 37316)
            (select
             (i32.const 53288)
             (local.get $8)
             (i32.eq
              (local.get $8)
              (i32.const -1)
             )
            )
           )
          )
         )
        )
        (block $switch
         (block $switch-case0
          (br_table $__rjti$0 $switch-case0 $switch
           (i32.sub
            (local.get $9)
            (i32.const -1)
           )
          )
         )
         (br $__rjto$4
          (i32.const 1)
         )
        )
        (i32.store
         (local.get $7)
         (local.tee $5
          (i32.add
           (local.get $9)
           (i32.load
            (local.get $7)
           )
          )
         )
        )
        (br_if $__rjti$2
         (i32.eq
          (local.get $5)
          (local.get $10)
         )
        )
        (if
         (i32.eq
          (local.get $3)
          (local.get $6)
         )
         (block
          (local.set $6
           (local.get $3)
          )
          (local.set $2
           (i32.load
            (local.get $4)
           )
          )
         )
         (block
          (local.set $2
           (i32.load
            (i32.const 37316)
           )
          )
          (if
           (local.tee $5
            (i32.load offset=8
             (local.get $0)
            )
           )
           (i32.store
            (i32.const 37316)
            (select
             (i32.const 53288)
             (local.get $5)
             (i32.eq
              (local.get $5)
              (i32.const -1)
             )
            )
           )
          )
          (local.set $5
           (select
            (i32.const -1)
            (local.get $2)
            (i32.eq
             (local.get $2)
             (i32.const 53288)
            )
           )
          )
          (local.set $2
           (call $_wcrtomb
            (local.get $12)
            (i32.const 0)
           )
          )
          (if
           (local.get $5)
           (block
            (drop
             (i32.load
              (i32.const 37316)
             )
            )
            (if
             (local.get $5)
             (i32.store
              (i32.const 37316)
              (select
               (i32.const 53288)
               (local.get $5)
               (i32.eq
                (local.get $5)
                (i32.const -1)
               )
              )
             )
            )
           )
          )
          (drop
           (br_if $__rjto$4
            (i32.const 2)
            (i32.eq
             (local.get $2)
             (i32.const -1)
            )
           )
          )
          (drop
           (br_if $__rjto$4
            (i32.const 1)
            (i32.gt_u
             (local.get $2)
             (i32.sub
              (local.get $10)
              (i32.load
               (local.get $7)
              )
             )
            )
           )
          )
          (local.set $5
           (local.get $12)
          )
          (loop $while-in2
           (if
            (local.get $2)
            (block
             (local.set $6
              (i32.load8_s
               (local.get $5)
              )
             )
             (i32.store
              (local.get $7)
              (i32.add
               (local.tee $8
                (i32.load
                 (local.get $7)
                )
               )
               (i32.const 1)
              )
             )
             (i32.store8
              (local.get $8)
              (local.get $6)
             )
             (local.set $5
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (local.set $2
              (i32.add
               (local.get $2)
               (i32.const -1)
              )
             )
             (br $while-in2)
            )
           )
          )
          (i32.store
           (local.get $4)
           (local.tee $2
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 4)
            )
           )
          )
          (local.set $6
           (local.get $2)
          )
          (loop $while-in4
           (block $while-out3
            (if
             (i32.eq
              (local.get $3)
              (local.get $6)
             )
             (block
              (local.set $6
               (local.get $3)
              )
              (br $while-out3)
             )
            )
            (if
             (i32.load
              (local.get $6)
             )
             (block
              (local.set $6
               (i32.add
                (local.get $6)
                (i32.const 4)
               )
              )
              (br $while-in4)
             )
            )
           )
          )
          (local.set $5
           (i32.load
            (local.get $7)
           )
          )
         )
        )
        (br $label$continue$L6)
       )
      )
      (i32.store
       (local.get $7)
       (local.get $5)
      )
      (loop $while-in6
       (block $while-out5
        (br_if $while-out5
         (i32.eq
          (local.get $2)
          (i32.load
           (local.get $4)
          )
         )
        )
        (local.set $6
         (i32.load
          (local.get $2)
         )
        )
        (local.set $1
         (i32.load
          (i32.const 37316)
         )
        )
        (if
         (local.tee $3
          (i32.load offset=8
           (local.get $0)
          )
         )
         (i32.store
          (i32.const 37316)
          (select
           (i32.const 53288)
           (local.get $3)
           (i32.eq
            (local.get $3)
            (i32.const -1)
           )
          )
         )
        )
        (local.set $1
         (select
          (i32.const -1)
          (local.get $1)
          (i32.eq
           (local.get $1)
           (i32.const 53288)
          )
         )
        )
        (local.set $3
         (call $_wcrtomb
          (local.get $5)
          (local.get $6)
         )
        )
        (if
         (local.get $1)
         (block
          (drop
           (i32.load
            (i32.const 37316)
           )
          )
          (if
           (local.get $1)
           (i32.store
            (i32.const 37316)
            (select
             (i32.const 53288)
             (local.get $1)
             (i32.eq
              (local.get $1)
              (i32.const -1)
             )
            )
           )
          )
         )
        )
        (br_if $while-out5
         (i32.eq
          (local.get $3)
          (i32.const -1)
         )
        )
        (i32.store
         (local.get $7)
         (local.tee $5
          (i32.add
           (local.get $3)
           (i32.load
            (local.get $7)
           )
          )
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 4)
         )
        )
        (br $while-in6)
       )
      )
      (i32.store
       (local.get $4)
       (local.get $2)
      )
      (br $__rjto$4
       (i32.const 2)
      )
     )
     (local.set $2
      (i32.load
       (local.get $4)
      )
     )
    )
    (i32.ne
     (local.get $2)
     (local.get $3)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $11)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $8
   (local.get $2)
  )
  (loop $while-in
   (block $while-out
    (if
     (i32.eq
      (local.get $3)
      (local.get $8)
     )
     (block
      (local.set $8
       (local.get $3)
      )
      (br $while-out)
     )
    )
    (if
     (i32.load8_s
      (local.get $8)
     )
     (block
      (local.set $8
       (i32.add
        (local.get $8)
        (i32.const 1)
       )
      )
      (br $while-in)
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (local.get $5)
  )
  (i32.store
   (local.get $4)
   (local.get $2)
  )
  (local.set $9
   (local.get $6)
  )
  (local.set $6
   (local.get $8)
  )
  (local.set $0
   (block $__rjto$6 (result i32)
    (block $__rjti$6
     (block $__rjti$4
      (loop $while-in1
       (block $__rjti$3
        (br_if $__rjti$6
         (i32.or
          (i32.eq
           (local.get $2)
           (local.get $3)
          )
          (i32.eq
           (local.get $5)
           (local.get $9)
          )
         )
        )
        (i64.store
         (local.get $11)
         (i64.load align=4
          (local.get $1)
         )
        )
        (local.set $12
         (i32.sub
          (local.get $6)
          (local.get $2)
         )
        )
        (local.set $13
         (i32.shr_s
          (i32.sub
           (local.get $9)
           (local.get $5)
          )
          (i32.const 2)
         )
        )
        (local.set $8
         (i32.load
          (i32.const 37316)
         )
        )
        (if
         (local.tee $10
          (i32.load offset=8
           (local.get $0)
          )
         )
         (i32.store
          (i32.const 37316)
          (select
           (i32.const 53288)
           (local.get $10)
           (i32.eq
            (local.get $10)
            (i32.const -1)
           )
          )
         )
        )
        (local.set $8
         (select
          (i32.const -1)
          (local.get $8)
          (i32.eq
           (local.get $8)
           (i32.const 53288)
          )
         )
        )
        (local.set $10
         (call $_mbsnrtowcs
          (local.get $5)
          (local.get $4)
          (local.get $12)
          (local.get $13)
          (local.get $1)
         )
        )
        (if
         (local.get $8)
         (block
          (drop
           (i32.load
            (i32.const 37316)
           )
          )
          (if
           (local.get $8)
           (i32.store
            (i32.const 37316)
            (select
             (i32.const 53288)
             (local.get $8)
             (i32.eq
              (local.get $8)
              (i32.const -1)
             )
            )
           )
          )
         )
        )
        (br_if $__rjti$3
         (i32.eq
          (local.get $10)
          (i32.const -1)
         )
        )
        (i32.store
         (local.get $7)
         (local.tee $5
          (i32.add
           (i32.load
            (local.get $7)
           )
           (i32.shl
            (local.get $10)
            (i32.const 2)
           )
          )
         )
        )
        (br_if $__rjti$4
         (i32.eq
          (local.get $5)
          (local.get $9)
         )
        )
        (local.set $2
         (i32.load
          (local.get $4)
         )
        )
        (if
         (i32.eq
          (local.get $3)
          (local.get $6)
         )
         (local.set $6
          (local.get $3)
         )
         (block
          (local.set $6
           (i32.load
            (i32.const 37316)
           )
          )
          (if
           (local.tee $8
            (i32.load offset=8
             (local.get $0)
            )
           )
           (i32.store
            (i32.const 37316)
            (select
             (i32.const 53288)
             (local.get $8)
             (i32.eq
              (local.get $8)
              (i32.const -1)
             )
            )
           )
          )
          (local.set $6
           (select
            (i32.const -1)
            (local.get $6)
            (i32.eq
             (local.get $6)
             (i32.const 53288)
            )
           )
          )
          (local.set $2
           (call $_mbrtowc
            (local.get $5)
            (local.get $2)
            (i32.const 1)
            (local.get $1)
           )
          )
          (if
           (local.get $6)
           (block
            (drop
             (i32.load
              (i32.const 37316)
             )
            )
            (if
             (local.get $6)
             (i32.store
              (i32.const 37316)
              (select
               (i32.const 53288)
               (local.get $6)
               (i32.eq
                (local.get $6)
                (i32.const -1)
               )
              )
             )
            )
           )
          )
          (drop
           (br_if $__rjto$6
            (i32.const 2)
            (local.get $2)
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (i32.load
             (local.get $7)
            )
            (i32.const 4)
           )
          )
          (i32.store
           (local.get $4)
           (local.tee $2
            (i32.add
             (i32.load
              (local.get $4)
             )
             (i32.const 1)
            )
           )
          )
          (local.set $6
           (local.get $2)
          )
          (loop $while-in3
           (block $while-out2
            (if
             (i32.eq
              (local.get $3)
              (local.get $6)
             )
             (block
              (local.set $6
               (local.get $3)
              )
              (br $while-out2)
             )
            )
            (if
             (i32.load8_s
              (local.get $6)
             )
             (block
              (local.set $6
               (i32.add
                (local.get $6)
                (i32.const 1)
               )
              )
              (br $while-in3)
             )
            )
           )
          )
          (local.set $5
           (i32.load
            (local.get $7)
           )
          )
         )
        )
        (br $while-in1)
       )
      )
      (block $__rjti$2
       (block $__rjti$1
        (loop $label$continue$L29
         (block $__rjti$0
          (i32.store
           (local.get $7)
           (local.get $5)
          )
          (br_if $__rjti$2
           (i32.eq
            (local.get $2)
            (i32.load
             (local.get $4)
            )
           )
          )
          (local.set $9
           (i32.sub
            (local.get $6)
            (local.get $2)
           )
          )
          (local.set $1
           (i32.load
            (i32.const 37316)
           )
          )
          (if
           (local.tee $8
            (i32.load offset=8
             (local.get $0)
            )
           )
           (i32.store
            (i32.const 37316)
            (select
             (i32.const 53288)
             (local.get $8)
             (i32.eq
              (local.get $8)
              (i32.const -1)
             )
            )
           )
          )
          (local.set $8
           (select
            (i32.const -1)
            (local.get $1)
            (i32.eq
             (local.get $1)
             (i32.const 53288)
            )
           )
          )
          (local.set $1
           (call $_mbrtowc
            (local.get $5)
            (local.get $2)
            (local.get $9)
            (local.get $11)
           )
          )
          (if
           (local.get $8)
           (block
            (drop
             (i32.load
              (i32.const 37316)
             )
            )
            (if
             (local.get $8)
             (i32.store
              (i32.const 37316)
              (select
               (i32.const 53288)
               (local.get $8)
               (i32.eq
                (local.get $8)
                (i32.const -1)
               )
              )
             )
            )
           )
          )
          (block $switch
           (block $switch-case5
            (br_table $__rjti$1 $__rjti$0 $switch-case5 $switch
             (i32.sub
              (local.get $1)
              (i32.const -2)
             )
            )
           )
           (local.set $1
            (i32.const 1)
           )
          )
          (local.set $2
           (i32.add
            (local.get $1)
            (local.get $2)
           )
          )
          (local.set $5
           (i32.add
            (i32.load
             (local.get $7)
            )
            (i32.const 4)
           )
          )
          (br $label$continue$L29)
         )
        )
        (i32.store
         (local.get $4)
         (local.get $2)
        )
        (br $__rjto$6
         (i32.const 2)
        )
       )
       (i32.store
        (local.get $4)
        (local.get $2)
       )
       (br $__rjto$6
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $4)
       (local.get $2)
      )
      (br $__rjto$6
       (i32.ne
        (local.get $2)
        (local.get $3)
       )
      )
     )
     (local.set $2
      (i32.load
       (local.get $4)
      )
     )
    )
    (i32.ne
     (local.get $2)
     (local.get $3)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $11)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $5
   (local.get $1)
  )
  (i32.store
   (local.get $4)
   (local.get $2)
  )
  (local.set $2
   (i32.load
    (i32.const 37316)
   )
  )
  (if
   (local.tee $0
    (i32.load offset=8
     (local.get $0)
    )
   )
   (i32.store
    (i32.const 37316)
    (select
     (i32.const 53288)
     (local.get $0)
     (i32.eq
      (local.get $0)
      (i32.const -1)
     )
    )
   )
  )
  (local.set $0
   (select
    (i32.const -1)
    (local.get $2)
    (i32.eq
     (local.get $2)
     (i32.const 53288)
    )
   )
  )
  (local.set $2
   (call $_wcrtomb
    (local.get $1)
    (i32.const 0)
   )
  )
  (if
   (local.get $0)
   (block
    (drop
     (i32.load
      (i32.const 37316)
     )
    )
    (if
     (local.get $0)
     (i32.store
      (i32.const 37316)
      (select
       (i32.const 53288)
       (local.get $0)
       (i32.eq
        (local.get $0)
        (i32.const -1)
       )
      )
     )
    )
   )
  )
  (local.set $0
   (if (result i32)
    (i32.lt_u
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
     (i32.const 2)
    )
    (i32.const 2)
    (if (result i32)
     (i32.gt_u
      (local.tee $0
       (i32.add
        (local.get $2)
        (i32.const -1)
       )
      )
      (i32.sub
       (local.get $3)
       (i32.load
        (local.get $4)
       )
      )
     )
     (i32.const 1)
     (loop $while-in (result i32)
      (if (result i32)
       (local.get $0)
       (block
        (local.set $2
         (i32.load8_s
          (local.get $5)
         )
        )
        (i32.store
         (local.get $4)
         (i32.add
          (local.tee $3
           (i32.load
            (local.get $4)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $3)
         (local.get $2)
        )
        (local.set $5
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (i32.const -1)
         )
        )
        (br $while-in)
       )
       (i32.const 0)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (i32.load
    (i32.const 37316)
   )
  )
  (if
   (local.tee $2
    (i32.load offset=8
     (local.get $0)
    )
   )
   (i32.store
    (i32.const 37316)
    (select
     (i32.const 53288)
     (local.get $2)
     (i32.eq
      (local.get $2)
      (i32.const -1)
     )
    )
   )
  )
  (local.set $1
   (select
    (i32.const -1)
    (local.get $1)
    (i32.eq
     (local.get $1)
     (i32.const 53288)
    )
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (if
   (local.get $1)
   (block
    (drop
     (i32.load
      (i32.const 37316)
     )
    )
    (if
     (local.get $1)
     (i32.store
      (i32.const 37316)
      (select
       (i32.const 53288)
       (local.get $1)
       (i32.eq
        (local.get $1)
        (i32.const -1)
       )
      )
     )
    )
   )
  )
  (if (result i32)
   (local.tee $0
    (i32.load offset=8
     (local.get $0)
    )
   )
   (block (result i32)
    (local.set $1
     (i32.load
      (i32.const 37316)
     )
    )
    (if
     (local.get $0)
     (i32.store
      (i32.const 37316)
      (select
       (i32.const 53288)
       (local.get $0)
       (i32.eq
        (local.get $0)
        (i32.const -1)
       )
      )
     )
    )
    (local.set $0
     (select
      (i32.const -1)
      (local.get $1)
      (i32.eq
       (local.get $1)
       (i32.const 53288)
      )
     )
    )
    (local.set $1
     (select
      (i32.const 4)
      (i32.const 1)
      (i32.load
       (i32.load
        (i32.const 37316)
       )
      )
     )
    )
    (if
     (local.get $0)
     (block
      (drop
       (i32.load
        (i32.const 37316)
       )
      )
      (if
       (local.get $0)
       (i32.store
        (i32.const 37316)
        (select
         (i32.const 53288)
         (local.get $0)
         (i32.eq
          (local.get $0)
          (i32.const -1)
         )
        )
       )
      )
     )
    )
    (i32.eq
     (local.get $1)
     (i32.const 1)
    )
   )
   (i32.const 1)
  )
 )
 (func $__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (local.get $3)
  )
  (loop $label$continue$L1
   (block $label$break$L1
    (br_if $label$break$L1
     (i32.or
      (i32.eq
       (local.get $2)
       (local.get $6)
      )
      (i32.ge_u
       (local.get $7)
       (local.get $4)
      )
     )
    )
    (local.set $9
     (i32.sub
      (local.get $6)
      (local.get $2)
     )
    )
    (local.set $3
     (i32.load
      (i32.const 37316)
     )
    )
    (if
     (local.tee $5
      (i32.load offset=8
       (local.get $0)
      )
     )
     (i32.store
      (i32.const 37316)
      (select
       (i32.const 53288)
       (local.get $5)
       (i32.eq
        (local.get $5)
        (i32.const -1)
       )
      )
     )
    )
    (local.set $5
     (select
      (i32.const -1)
      (local.get $3)
      (i32.eq
       (local.get $3)
       (i32.const 53288)
      )
     )
    )
    (local.set $3
     (call $_mbrtowc
      (i32.const 0)
      (local.get $2)
      (local.get $9)
      (select
       (local.get $1)
       (i32.const 53344)
       (local.get $1)
      )
     )
    )
    (if
     (local.get $5)
     (block
      (drop
       (i32.load
        (i32.const 37316)
       )
      )
      (if
       (local.get $5)
       (i32.store
        (i32.const 37316)
        (select
         (i32.const 53288)
         (local.get $5)
         (i32.eq
          (local.get $5)
          (i32.const -1)
         )
        )
       )
      )
     )
    )
    (block $switch
     (block $switch-case1
      (br_table $label$break$L1 $label$break$L1 $switch-case1 $switch
       (i32.sub
        (local.get $3)
        (i32.const -2)
       )
      )
     )
     (local.set $3
      (i32.const 1)
     )
    )
    (local.set $7
     (i32.add
      (local.get $7)
      (i32.const 1)
     )
    )
    (local.set $8
     (i32.add
      (local.get $3)
      (local.get $8)
     )
    )
    (local.set $2
     (i32.add
      (local.get $2)
      (local.get $3)
     )
    )
    (br $label$continue$L1)
   )
  )
  (local.get $8)
 )
 (func $__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (local.tee $0
    (i32.load offset=8
     (local.get $0)
    )
   )
   (block
    (local.set $1
     (i32.load
      (i32.const 37316)
     )
    )
    (if
     (local.get $0)
     (i32.store
      (i32.const 37316)
      (select
       (i32.const 53288)
       (local.get $0)
       (i32.eq
        (local.get $0)
        (i32.const -1)
       )
      )
     )
    )
    (local.set $1
     (select
      (i32.const -1)
      (local.get $1)
      (i32.eq
       (local.get $1)
       (i32.const 53288)
      )
     )
    )
    (local.set $0
     (select
      (i32.const 4)
      (i32.const 1)
      (i32.load
       (i32.load
        (i32.const 37316)
       )
      )
     )
    )
    (if
     (local.get $1)
     (block
      (drop
       (i32.load
        (i32.const 37316)
       )
      )
      (if
       (local.get $1)
       (i32.store
        (i32.const 37316)
        (select
         (i32.const 53288)
         (local.get $1)
         (i32.eq
          (local.get $1)
          (i32.const -1)
         )
        )
       )
      )
     )
    )
   )
   (local.set $0
    (i32.const 1)
   )
  )
  (local.get $0)
 )
 (func $__ZNSt3__27codecvtIwc11__mbstate_tED2Ev (; has Stack IR ;) (param $0 i32)
  (i32.store
   (local.get $0)
   (i32.const 40204)
  )
  (if
   (i32.ne
    (i32.load offset=8
     (local.get $0)
    )
    (call $__ZNSt3__26__clocEv)
   )
   (call $_freelocale
    (i32.load offset=8
     (local.get $0)
    )
   )
  )
 )
 (func $__ZNSt3__27codecvtIwc11__mbstate_tED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__27codecvtIwc11__mbstate_tED2Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $0)
     (i32.const 4)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.get $0)
   (local.get $5)
  )
  (local.set $2
   (call $__ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE
    (local.get $2)
    (local.get $3)
    (local.get $1)
    (local.get $5)
    (local.get $6)
    (local.get $0)
   )
  )
  (i32.store
   (local.get $4)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $2)
 )
 (func $__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $0)
     (i32.const 4)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.get $0)
   (local.get $5)
  )
  (local.set $2
   (call $__ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE
    (local.get $2)
    (local.get $3)
    (local.get $1)
    (local.get $5)
    (local.get $6)
    (local.get $0)
   )
  )
  (i32.store
   (local.get $4)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store
   (local.get $7)
   (i32.load
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
  (local.get $2)
 )
 (func $__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (call $__ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE
   (local.get $2)
   (local.get $3)
   (local.get $4)
  )
 )
 (func $__ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $7
   (local.get $1)
  )
  (local.set $1
   (local.get $0)
  )
  (loop $label$continue$L7
   (block $label$break$L7
    (br_if $label$break$L7
     (i32.eqz
      (i32.and
       (i32.lt_u
        (local.get $1)
        (local.get $7)
       )
       (i32.lt_u
        (local.get $6)
        (local.get $2)
       )
      )
     )
    )
    (br_if $label$break$L7
     (i32.gt_u
      (local.tee $9
       (i32.and
        (local.tee $3
         (i32.load8_s
          (local.get $1)
         )
        )
        (i32.const 255)
       )
      )
      (i32.const 1114111)
     )
    )
    (local.set $1
     (if (result i32)
      (i32.gt_s
       (local.get $3)
       (i32.const -1)
      )
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
      (block $do-once (result i32)
       (br_if $label$break$L7
        (i32.lt_s
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 194)
        )
       )
       (if
        (i32.lt_s
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 224)
        )
        (block
         (br_if $label$break$L7
          (i32.lt_s
           (i32.sub
            (local.get $7)
            (local.get $1)
           )
           (i32.const 2)
          )
         )
         (br_if $label$break$L7
          (i32.ne
           (i32.and
            (local.tee $4
             (i32.load8_u offset=1
              (local.get $1)
             )
            )
            (i32.const 192)
           )
           (i32.const 128)
          )
         )
         (br_if $label$break$L7
          (i32.gt_u
           (i32.or
            (i32.and
             (i32.shl
              (local.get $9)
              (i32.const 6)
             )
             (i32.const 1984)
            )
            (i32.and
             (local.get $4)
             (i32.const 63)
            )
           )
           (i32.const 1114111)
          )
         )
         (br $do-once
          (i32.add
           (local.get $1)
           (i32.const 2)
          )
         )
        )
       )
       (if
        (i32.lt_s
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 240)
        )
        (block
         (br_if $label$break$L7
          (i32.lt_s
           (i32.sub
            (local.get $7)
            (local.get $1)
           )
           (i32.const 3)
          )
         )
         (local.set $5
          (i32.load8_s offset=1
           (local.get $1)
          )
         )
         (local.set $4
          (i32.load8_u offset=2
           (local.get $1)
          )
         )
         (block $switch
          (block $switch-default
           (block $switch-case0
            (block $switch-case
             (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default
              (i32.sub
               (local.get $3)
               (i32.const -32)
              )
             )
            )
            (br_if $label$break$L7
             (i32.ne
              (i32.and
               (local.get $5)
               (i32.const 224)
              )
              (i32.const 160)
             )
            )
            (br $switch)
           )
           (br_if $label$break$L7
            (i32.ne
             (i32.and
              (local.get $5)
              (i32.const 224)
             )
             (i32.const 128)
            )
           )
           (br $switch)
          )
          (br_if $label$break$L7
           (i32.ne
            (i32.and
             (local.get $5)
             (i32.const 192)
            )
            (i32.const 128)
           )
          )
         )
         (br_if $label$break$L7
          (i32.ne
           (i32.and
            (local.get $4)
            (i32.const 192)
           )
           (i32.const 128)
          )
         )
         (br_if $label$break$L7
          (i32.gt_u
           (i32.or
            (i32.and
             (local.get $4)
             (i32.const 63)
            )
            (i32.or
             (i32.and
              (i32.shl
               (local.get $9)
               (i32.const 12)
              )
              (i32.const 61440)
             )
             (i32.shl
              (i32.and
               (local.get $5)
               (i32.const 63)
              )
              (i32.const 6)
             )
            )
           )
           (i32.const 1114111)
          )
         )
         (br $do-once
          (i32.add
           (local.get $1)
           (i32.const 3)
          )
         )
        )
       )
       (br_if $label$break$L7
        (i32.ge_s
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 245)
        )
       )
       (br_if $label$break$L7
        (i32.or
         (i32.lt_s
          (i32.sub
           (local.get $7)
           (local.get $1)
          )
          (i32.const 4)
         )
         (i32.lt_u
          (i32.sub
           (local.get $2)
           (local.get $6)
          )
          (i32.const 2)
         )
        )
       )
       (local.set $8
        (i32.load8_s offset=1
         (local.get $1)
        )
       )
       (local.set $4
        (i32.load8_u offset=2
         (local.get $1)
        )
       )
       (local.set $5
        (i32.load8_u offset=3
         (local.get $1)
        )
       )
       (block $switch1
        (block $switch-default4
         (block $switch-case3
          (block $switch-case2
           (br_table $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-case3 $switch-default4
            (i32.sub
             (local.get $3)
             (i32.const -16)
            )
           )
          )
          (br_if $label$break$L7
           (i32.ge_s
            (i32.and
             (i32.shr_s
              (i32.shl
               (i32.add
                (local.get $8)
                (i32.const 112)
               )
               (i32.const 24)
              )
              (i32.const 24)
             )
             (i32.const 255)
            )
            (i32.const 48)
           )
          )
          (br $switch1)
         )
         (br_if $label$break$L7
          (i32.ne
           (i32.and
            (local.get $8)
            (i32.const 240)
           )
           (i32.const 128)
          )
         )
         (br $switch1)
        )
        (br_if $label$break$L7
         (i32.ne
          (i32.and
           (local.get $8)
           (i32.const 192)
          )
          (i32.const 128)
         )
        )
       )
       (br_if $label$break$L7
        (i32.ne
         (i32.and
          (local.get $4)
          (i32.const 192)
         )
         (i32.const 128)
        )
       )
       (br_if $label$break$L7
        (i32.ne
         (i32.and
          (local.get $5)
          (i32.const 192)
         )
         (i32.const 128)
        )
       )
       (br_if $label$break$L7
        (i32.gt_u
         (i32.or
          (i32.and
           (local.get $5)
           (i32.const 63)
          )
          (i32.or
           (i32.and
            (i32.shl
             (local.get $4)
             (i32.const 6)
            )
            (i32.const 4032)
           )
           (i32.or
            (i32.and
             (i32.shl
              (local.get $9)
              (i32.const 18)
             )
             (i32.const 1835008)
            )
            (i32.shl
             (i32.and
              (local.get $8)
              (i32.const 63)
             )
             (i32.const 12)
            )
           )
          )
         )
         (i32.const 1114111)
        )
       )
       (local.set $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
     )
    )
    (local.set $6
     (i32.add
      (local.get $6)
      (i32.const 1)
     )
    )
    (br $label$continue$L7)
   )
  )
  (i32.sub
   (local.get $1)
   (local.get $0)
  )
 )
 (func $__ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (i32.store
   (local.get $5)
   (local.get $3)
  )
  (loop $label$continue$L9
   (block $label$break$L9
    (if
     (i32.ge_u
      (local.tee $3
       (i32.load
        (local.get $2)
       )
      )
      (local.get $1)
     )
     (block
      (local.set $0
       (i32.const 0)
      )
      (br $label$break$L9)
     )
    )
    (if
     (i32.ge_u
      (local.tee $8
       (i32.load
        (local.get $5)
       )
      )
      (local.get $4)
     )
     (block
      (local.set $0
       (i32.const 1)
      )
      (br $label$break$L9)
     )
    )
    (if
     (i32.gt_u
      (local.tee $9
       (i32.and
        (local.tee $7
         (i32.load8_s
          (local.get $3)
         )
        )
        (i32.const 255)
       )
      )
      (i32.const 1114111)
     )
     (block
      (local.set $0
       (i32.const 2)
      )
      (br $label$break$L9)
     )
    )
    (i32.store
     (local.get $2)
     (if (result i32)
      (i32.gt_s
       (local.get $7)
       (i32.const -1)
      )
      (block (result i32)
       (i32.store16
        (local.get $8)
        (i32.and
         (local.get $7)
         (i32.const 255)
        )
       )
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (block $do-once (result i32)
       (if
        (i32.lt_s
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 194)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.lt_s
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 224)
        )
        (block
         (if
          (i32.lt_s
           (i32.sub
            (local.get $1)
            (local.get $3)
           )
           (i32.const 2)
          )
          (block
           (local.set $0
            (i32.const 1)
           )
           (br $label$break$L9)
          )
         )
         (if
          (i32.ne
           (i32.and
            (local.tee $0
             (i32.load8_u offset=1
              (local.get $3)
             )
            )
            (i32.const 192)
           )
           (i32.const 128)
          )
          (block
           (local.set $0
            (i32.const 2)
           )
           (br $label$break$L9)
          )
         )
         (if
          (i32.gt_u
           (local.tee $0
            (i32.or
             (i32.and
              (i32.shl
               (local.get $9)
               (i32.const 6)
              )
              (i32.const 1984)
             )
             (i32.and
              (local.get $0)
              (i32.const 63)
             )
            )
           )
           (i32.const 1114111)
          )
          (block
           (local.set $0
            (i32.const 2)
           )
           (br $label$break$L9)
          )
         )
         (i32.store16
          (local.get $8)
          (local.get $0)
         )
         (br $do-once
          (i32.add
           (local.get $3)
           (i32.const 2)
          )
         )
        )
       )
       (if
        (i32.lt_s
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 240)
        )
        (block
         (if
          (i32.lt_s
           (i32.sub
            (local.get $1)
            (local.get $3)
           )
           (i32.const 3)
          )
          (block
           (local.set $0
            (i32.const 1)
           )
           (br $label$break$L9)
          )
         )
         (local.set $6
          (i32.load8_s offset=1
           (local.get $3)
          )
         )
         (local.set $0
          (i32.load8_u offset=2
           (local.get $3)
          )
         )
         (block $switch
          (block $switch-default
           (block $switch-case0
            (block $switch-case
             (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default
              (i32.sub
               (local.get $7)
               (i32.const -32)
              )
             )
            )
            (if
             (i32.ne
              (i32.and
               (local.get $6)
               (i32.const 224)
              )
              (i32.const 160)
             )
             (block
              (local.set $0
               (i32.const 2)
              )
              (br $label$break$L9)
             )
            )
            (br $switch)
           )
           (if
            (i32.ne
             (i32.and
              (local.get $6)
              (i32.const 224)
             )
             (i32.const 128)
            )
            (block
             (local.set $0
              (i32.const 2)
             )
             (br $label$break$L9)
            )
           )
           (br $switch)
          )
          (if
           (i32.ne
            (i32.and
             (local.get $6)
             (i32.const 192)
            )
            (i32.const 128)
           )
           (block
            (local.set $0
             (i32.const 2)
            )
            (br $label$break$L9)
           )
          )
         )
         (if
          (i32.ne
           (i32.and
            (local.get $0)
            (i32.const 192)
           )
           (i32.const 128)
          )
          (block
           (local.set $0
            (i32.const 2)
           )
           (br $label$break$L9)
          )
         )
         (if
          (i32.gt_u
           (i32.and
            (local.tee $0
             (i32.or
              (i32.and
               (local.get $0)
               (i32.const 63)
              )
              (i32.or
               (i32.shl
                (local.get $9)
                (i32.const 12)
               )
               (i32.shl
                (i32.and
                 (local.get $6)
                 (i32.const 63)
                )
                (i32.const 6)
               )
              )
             )
            )
            (i32.const 65535)
           )
           (i32.const 1114111)
          )
          (block
           (local.set $0
            (i32.const 2)
           )
           (br $label$break$L9)
          )
         )
         (i32.store16
          (local.get $8)
          (local.get $0)
         )
         (br $do-once
          (i32.add
           (local.get $3)
           (i32.const 3)
          )
         )
        )
       )
       (if
        (i32.ge_s
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 245)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.lt_s
         (i32.sub
          (local.get $1)
          (local.get $3)
         )
         (i32.const 4)
        )
        (block
         (local.set $0
          (i32.const 1)
         )
         (br $label$break$L9)
        )
       )
       (local.set $6
        (i32.load8_s offset=1
         (local.get $3)
        )
       )
       (local.set $0
        (i32.load8_u offset=2
         (local.get $3)
        )
       )
       (local.set $3
        (i32.load8_u offset=3
         (local.get $3)
        )
       )
       (block $switch1
        (block $switch-default4
         (block $switch-case3
          (block $switch-case2
           (br_table $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-case3 $switch-default4
            (i32.sub
             (local.get $7)
             (i32.const -16)
            )
           )
          )
          (if
           (i32.ge_s
            (i32.and
             (i32.shr_s
              (i32.shl
               (i32.add
                (local.get $6)
                (i32.const 112)
               )
               (i32.const 24)
              )
              (i32.const 24)
             )
             (i32.const 255)
            )
            (i32.const 48)
           )
           (block
            (local.set $0
             (i32.const 2)
            )
            (br $label$break$L9)
           )
          )
          (br $switch1)
         )
         (if
          (i32.ne
           (i32.and
            (local.get $6)
            (i32.const 240)
           )
           (i32.const 128)
          )
          (block
           (local.set $0
            (i32.const 2)
           )
           (br $label$break$L9)
          )
         )
         (br $switch1)
        )
        (if
         (i32.ne
          (i32.and
           (local.get $6)
           (i32.const 192)
          )
          (i32.const 128)
         )
         (block
          (local.set $0
           (i32.const 2)
          )
          (br $label$break$L9)
         )
        )
       )
       (if
        (i32.ne
         (i32.and
          (local.get $0)
          (i32.const 192)
         )
         (i32.const 128)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.ne
         (i32.and
          (local.get $3)
          (i32.const 192)
         )
         (i32.const 128)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.lt_s
         (i32.sub
          (local.get $4)
          (local.get $8)
         )
         (i32.const 4)
        )
        (block
         (local.set $0
          (i32.const 1)
         )
         (br $label$break$L9)
        )
       )
       (if
        (i32.gt_u
         (i32.or
          (local.tee $7
           (i32.and
            (local.get $3)
            (i32.const 63)
           )
          )
          (i32.or
           (i32.and
            (local.tee $10
             (i32.shl
              (local.get $0)
              (i32.const 6)
             )
            )
            (i32.const 4032)
           )
           (i32.or
            (i32.and
             (i32.shl
              (local.tee $3
               (i32.and
                (local.get $6)
                (i32.const 255)
               )
              )
              (i32.const 12)
             )
             (i32.const 258048)
            )
            (i32.shl
             (local.tee $6
              (i32.and
               (local.get $9)
               (i32.const 7)
              )
             )
             (i32.const 18)
            )
           )
          )
         )
         (i32.const 1114111)
        )
        (block
         (local.set $0
          (i32.const 2)
         )
         (br $label$break$L9)
        )
       )
       (i32.store16
        (local.get $8)
        (i32.or
         (i32.or
          (i32.add
           (i32.shl
            (i32.or
             (i32.and
              (i32.shr_u
               (local.get $3)
               (i32.const 4)
              )
              (i32.const 3)
             )
             (i32.shl
              (local.get $6)
              (i32.const 2)
             )
            )
            (i32.const 6)
           )
           (i32.const 16320)
          )
          (i32.or
           (i32.and
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
            (i32.const 60)
           )
           (i32.and
            (i32.shr_u
             (local.get $0)
             (i32.const 4)
            )
            (i32.const 3)
           )
          )
         )
         (i32.const 55296)
        )
       )
       (i32.store
        (local.get $5)
        (i32.add
         (local.get $8)
         (i32.const 2)
        )
       )
       (i32.store16 offset=2
        (local.get $8)
        (i32.or
         (i32.or
          (local.get $7)
          (i32.and
           (local.get $10)
           (i32.const 960)
          )
         )
         (i32.const 56320)
        )
       )
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 4)
       )
      )
     )
    )
    (i32.store
     (local.get $5)
     (i32.add
      (i32.load
       (local.get $5)
      )
      (i32.const 2)
     )
    )
    (br $label$continue$L9)
   )
  )
  (local.get $0)
 )
 (func $__ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (i32.store
   (local.get $5)
   (local.get $3)
  )
  (local.set $0
   (i32.load
    (local.get $2)
   )
  )
  (loop $while-in
   (block $label$break$L4
    (if
     (i32.ge_u
      (local.get $0)
      (local.get $1)
     )
     (block
      (local.set $0
       (i32.const 0)
      )
      (br $label$break$L4)
     )
    )
    (if
     (i32.gt_u
      (local.tee $3
       (i32.and
        (local.tee $6
         (i32.load16_s
          (local.get $0)
         )
        )
        (i32.const 65535)
       )
      )
      (i32.const 1114111)
     )
     (block
      (local.set $0
       (i32.const 2)
      )
      (br $label$break$L4)
     )
    )
    (if
     (i32.lt_s
      (i32.and
       (local.get $6)
       (i32.const 65535)
      )
      (i32.const 128)
     )
     (block
      (if
       (i32.lt_s
        (i32.sub
         (local.get $4)
         (local.tee $0
          (i32.load
           (local.get $5)
          )
         )
        )
        (i32.const 1)
       )
       (block
        (local.set $0
         (i32.const 1)
        )
        (br $label$break$L4)
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $0)
       (local.get $6)
      )
     )
     (block $do-once
      (if
       (i32.lt_s
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
        (i32.const 2048)
       )
       (block
        (if
         (i32.lt_s
          (i32.sub
           (local.get $4)
           (local.tee $0
            (i32.load
             (local.get $5)
            )
           )
          )
          (i32.const 2)
         )
         (block
          (local.set $0
           (i32.const 1)
          )
          (br $label$break$L4)
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.or
          (i32.shr_u
           (local.get $3)
           (i32.const 6)
          )
          (i32.const 192)
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.tee $0
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.or
          (i32.and
           (local.get $3)
           (i32.const 63)
          )
          (i32.const 128)
         )
        )
        (br $do-once)
       )
      )
      (if
       (i32.lt_s
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
        (i32.const 55296)
       )
       (block
        (if
         (i32.lt_s
          (i32.sub
           (local.get $4)
           (local.tee $0
            (i32.load
             (local.get $5)
            )
           )
          )
          (i32.const 3)
         )
         (block
          (local.set $0
           (i32.const 1)
          )
          (br $label$break$L4)
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.or
          (i32.shr_u
           (local.get $3)
           (i32.const 12)
          )
          (i32.const 224)
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.tee $0
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.or
          (i32.and
           (i32.shr_u
            (local.get $3)
            (i32.const 6)
           )
           (i32.const 63)
          )
          (i32.const 128)
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.tee $0
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.or
          (i32.and
           (local.get $3)
           (i32.const 63)
          )
          (i32.const 128)
         )
        )
        (br $do-once)
       )
      )
      (if
       (i32.ge_s
        (i32.and
         (local.get $6)
         (i32.const 65535)
        )
        (i32.const 56320)
       )
       (block
        (if
         (i32.lt_s
          (i32.and
           (local.get $6)
           (i32.const 65535)
          )
          (i32.const 57344)
         )
         (block
          (local.set $0
           (i32.const 2)
          )
          (br $label$break$L4)
         )
        )
        (if
         (i32.lt_s
          (i32.sub
           (local.get $4)
           (local.tee $0
            (i32.load
             (local.get $5)
            )
           )
          )
          (i32.const 3)
         )
         (block
          (local.set $0
           (i32.const 1)
          )
          (br $label$break$L4)
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.or
          (i32.shr_u
           (local.get $3)
           (i32.const 12)
          )
          (i32.const 224)
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.tee $0
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.or
          (i32.and
           (i32.shr_u
            (local.get $3)
            (i32.const 6)
           )
           (i32.const 63)
          )
          (i32.const 128)
         )
        )
        (i32.store
         (local.get $5)
         (i32.add
          (local.tee $0
           (i32.load
            (local.get $5)
           )
          )
          (i32.const 1)
         )
        )
        (i32.store8
         (local.get $0)
         (i32.or
          (i32.and
           (local.get $3)
           (i32.const 63)
          )
          (i32.const 128)
         )
        )
        (br $do-once)
       )
      )
      (if
       (i32.lt_s
        (i32.sub
         (local.get $1)
         (local.get $0)
        )
        (i32.const 4)
       )
       (block
        (local.set $0
         (i32.const 1)
        )
        (br $label$break$L4)
       )
      )
      (local.set $6
       (i32.add
        (local.get $0)
        (i32.const 2)
       )
      )
      (if
       (i32.ne
        (i32.and
         (local.tee $0
          (i32.load16_u offset=2
           (local.get $0)
          )
         )
         (i32.const 64512)
        )
        (i32.const 56320)
       )
       (block
        (local.set $0
         (i32.const 2)
        )
        (br $label$break$L4)
       )
      )
      (if
       (i32.lt_s
        (i32.sub
         (local.get $4)
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 4)
       )
       (block
        (local.set $0
         (i32.const 1)
        )
        (br $label$break$L4)
       )
      )
      (if
       (i32.gt_u
        (i32.or
         (i32.and
          (local.get $0)
          (i32.const 1023)
         )
         (i32.or
          (i32.add
           (i32.shl
            (local.tee $7
             (i32.and
              (local.get $3)
              (i32.const 960)
             )
            )
            (i32.const 10)
           )
           (i32.const 65536)
          )
          (i32.and
           (i32.shl
            (local.get $3)
            (i32.const 10)
           )
           (i32.const 64512)
          )
         )
        )
        (i32.const 1114111)
       )
       (block
        (local.set $0
         (i32.const 2)
        )
        (br $label$break$L4)
       )
      )
      (i32.store
       (local.get $2)
       (local.get $6)
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.tee $6
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $6)
       (i32.or
        (i32.shr_u
         (local.tee $6
          (i32.add
           (i32.shr_u
            (local.get $7)
            (i32.const 6)
           )
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
        (i32.const 240)
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.tee $7
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $7)
       (i32.or
        (i32.or
         (i32.and
          (i32.shl
           (local.get $6)
           (i32.const 4)
          )
          (i32.const 48)
         )
         (i32.and
          (i32.shr_u
           (local.get $3)
           (i32.const 2)
          )
          (i32.const 15)
         )
        )
        (i32.const 128)
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.tee $6
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $6)
       (i32.or
        (i32.or
         (i32.and
          (i32.shl
           (local.get $3)
           (i32.const 4)
          )
          (i32.const 48)
         )
         (i32.and
          (i32.shr_u
           (local.get $0)
           (i32.const 6)
          )
          (i32.const 15)
         )
        )
        (i32.const 128)
       )
      )
      (i32.store
       (local.get $5)
       (i32.add
        (local.tee $3
         (i32.load
          (local.get $5)
         )
        )
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $3)
       (i32.or
        (i32.and
         (local.get $0)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
     )
    )
    (i32.store
     (local.get $2)
     (local.tee $0
      (i32.add
       (i32.load
        (local.get $2)
       )
       (i32.const 2)
      )
     )
    )
    (br $while-in)
   )
  )
  (local.get $0)
 )
 (func $__ZNSt3__26locale5__impD2Ev (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (i32.store
   (local.get $0)
   (i32.const 40252)
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (loop $while-in
   (if
    (i32.lt_u
     (local.get $2)
     (i32.shr_s
      (i32.sub
       (i32.load offset=12
        (local.get $0)
       )
       (local.tee $1
        (i32.load
         (local.get $3)
        )
       )
      )
      (i32.const 2)
     )
    )
    (block
     (if
      (local.tee $1
       (i32.load
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 2)
         )
         (local.get $1)
        )
       )
      )
      (block
       (i32.store offset=4
        (local.get $1)
        (i32.add
         (local.tee $4
          (i32.load offset=4
           (local.get $1)
          )
         )
         (i32.const -1)
        )
       )
       (if
        (i32.eqz
         (local.get $4)
        )
        (call_indirect (type $i32_=>_none)
         (local.get $1)
         (i32.add
          (i32.and
           (i32.load offset=8
            (i32.load
             (local.get $1)
            )
           )
           (i32.const 127)
          )
          (i32.const 267)
         )
        )
       )
      )
     )
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (i32.add
    (local.get $0)
    (i32.const 144)
   )
  )
  (call $__ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev
   (local.get $3)
  )
 )
 (func $__ZNSt3__26locale5__impD0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__26locale5__impD2Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (local.tee $1
    (i32.load
     (local.get $0)
    )
   )
  )
  (if
   (local.get $1)
   (block
    (i32.store offset=4
     (local.get $0)
     (local.get $2)
    )
    (if
     (i32.eq
      (local.get $1)
      (i32.add
       (local.get $0)
       (i32.const 16)
      )
     )
     (i32.store8 offset=128
      (local.get $0)
      (i32.const 0)
     )
     (block
      (drop
       (i32.load offset=8
        (local.get $0)
       )
      )
      (call $_free
       (local.get $1)
      )
     )
    )
   )
  )
 )
 (func $__ZNSt3__25ctypeIcED2Ev (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (i32.store
   (local.get $0)
   (i32.const 40272)
  )
  (if
   (local.tee $1
    (i32.load offset=8
     (local.get $0)
    )
   )
   (if
    (i32.load8_s offset=12
     (local.get $0)
    )
    (call $_free
     (local.get $1)
    )
   )
  )
 )
 (func $__ZNSt3__25ctypeIcED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__25ctypeIcED2Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZNKSt3__25ctypeIcE10do_toupperEc (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (i32.gt_s
    (i32.shr_s
     (i32.shl
      (local.get $1)
      (i32.const 24)
     )
     (i32.const 24)
    )
    (i32.const -1)
   )
   (i32.and
    (i32.load
     (i32.add
      (i32.load
       (i32.const 37376)
      )
      (i32.shl
       (i32.and
        (local.get $1)
        (i32.const 255)
       )
       (i32.const 2)
      )
     )
    )
    (i32.const 255)
   )
   (local.get $1)
  )
 )
 (func $__ZNKSt3__25ctypeIcE10do_toupperEPcPKc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store8
      (local.get $1)
      (if (result i32)
       (i32.gt_s
        (local.tee $0
         (i32.load8_s
          (local.get $1)
         )
        )
        (i32.const -1)
       )
       (i32.and
        (i32.load
         (i32.add
          (i32.load
           (i32.const 37376)
          )
          (i32.shl
           (i32.load8_s
            (local.get $1)
           )
           (i32.const 2)
          )
         )
        )
        (i32.const 255)
       )
       (local.get $0)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $__ZNKSt3__25ctypeIcE10do_tolowerEc (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (i32.gt_s
    (i32.shr_s
     (i32.shl
      (local.get $1)
      (i32.const 24)
     )
     (i32.const 24)
    )
    (i32.const -1)
   )
   (i32.and
    (i32.load
     (i32.add
      (i32.load
       (i32.const 37136)
      )
      (i32.shl
       (i32.shr_s
        (i32.shl
         (local.get $1)
         (i32.const 24)
        )
        (i32.const 24)
       )
       (i32.const 2)
      )
     )
    )
    (i32.const 255)
   )
   (local.get $1)
  )
 )
 (func $__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store8
      (local.get $1)
      (if (result i32)
       (i32.gt_s
        (local.tee $0
         (i32.load8_s
          (local.get $1)
         )
        )
        (i32.const -1)
       )
       (i32.and
        (i32.load
         (i32.add
          (i32.load
           (i32.const 37136)
          )
          (i32.shl
           (i32.load8_s
            (local.get $1)
           )
           (i32.const 2)
          )
         )
        )
        (i32.const 255)
       )
       (local.get $0)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $__ZNKSt3__25ctypeIcE8do_widenEc (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local.get $1)
 )
 (func $__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store8
      (local.get $3)
      (i32.load8_s
       (local.get $1)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $__ZNKSt3__25ctypeIcE9do_narrowEcc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (select
   (local.get $1)
   (local.get $2)
   (i32.gt_s
    (i32.shr_s
     (i32.shl
      (local.get $1)
      (i32.const 24)
     )
     (i32.const 24)
    )
    (i32.const -1)
   )
  )
 )
 (func $__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store8
      (local.get $4)
      (select
       (local.tee $0
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.get $3)
       (i32.gt_s
        (local.get $0)
        (i32.const -1)
       )
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $__ZNSt3__28numpunctIcED2Ev (; has Stack IR ;) (param $0 i32)
  (i32.store
   (local.get $0)
   (i32.const 40324)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (i32.add
    (local.get $0)
    (i32.const 12)
   )
  )
 )
 (func $__ZNSt3__28numpunctIcED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__28numpunctIcED2Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZNKSt3__28numpunctIcE16do_decimal_pointEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.load8_s offset=8
   (local.get $0)
  )
 )
 (func $__ZNKSt3__28numpunctIcE16do_thousands_sepEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.load8_s offset=9
   (local.get $0)
  )
 )
 (func $__ZNKSt3__28numpunctIcE11do_groupingEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.const 12)
   )
  )
 )
 (func $__ZNKSt3__28numpunctIcE11do_truenameEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
   (local.get $0)
   (i32.const 49414)
   (call $_strlen
    (i32.const 49414)
   )
  )
 )
 (func $__ZNKSt3__28numpunctIcE12do_falsenameEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
   (local.get $0)
   (i32.const 49408)
   (call $_strlen
    (i32.const 49408)
   )
  )
 )
 (func $__ZNSt3__28numpunctIwED2Ev (; has Stack IR ;) (param $0 i32)
  (i32.store
   (local.get $0)
   (i32.const 40364)
  )
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
 )
 (func $__ZNSt3__28numpunctIwED0Ev (; has Stack IR ;) (param $0 i32)
  (call $__ZNSt3__28numpunctIwED2Ev
   (local.get $0)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $__ZNKSt3__28numpunctIwE16do_decimal_pointEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.load offset=8
   (local.get $0)
  )
 )
 (func $__ZNKSt3__28numpunctIwE16do_thousands_sepEv (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.load offset=12
   (local.get $0)
  )
 )
 (func $__ZNKSt3__28numpunctIwE11do_groupingEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.const 16)
   )
  )
 )
 (func $__ZNKSt3__28numpunctIwE11do_truenameEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm
   (local.get $0)
   (i32.const 40420)
   (call $_wcslen
    (i32.const 40420)
   )
  )
 )
 (func $__ZNKSt3__28numpunctIwE12do_falsenameEv (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm
   (local.get $0)
   (i32.const 40396)
   (call $_wcslen
    (i32.const 40396)
   )
  )
 )
 (func $__ZNKSt3__25ctypeIwE5do_isEtw (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if (result i32)
   (i32.lt_u
    (local.get $2)
    (i32.const 128)
   )
   (i32.ne
    (i32.and
     (i32.and
      (local.get $1)
      (i32.load16_s
       (i32.add
        (i32.load
         (i32.const 37372)
        )
        (i32.shl
         (local.get $2)
         (i32.const 1)
        )
       )
      )
     )
     (i32.const 65535)
    )
    (i32.const 0)
   )
   (i32.const 0)
  )
 )
 (func $__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store16
      (local.get $3)
      (if (result i32)
       (i32.lt_u
        (i32.load
         (local.get $1)
        )
        (i32.const 128)
       )
       (i32.load16_u
        (i32.add
         (i32.load
          (i32.const 37372)
         )
         (i32.shl
          (i32.load
           (local.get $1)
          )
          (i32.const 1)
         )
        )
       )
       (i32.const 0)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 2)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (loop $while-in
   (block $while-out
    (if
     (i32.eq
      (local.get $2)
      (local.get $3)
     )
     (block
      (local.set $2
       (local.get $3)
      )
      (br $while-out)
     )
    )
    (if
     (i32.lt_u
      (i32.load
       (local.get $2)
      )
      (i32.const 128)
     )
     (br_if $while-out
      (i32.and
       (i32.and
        (local.get $1)
        (i32.load16_s
         (i32.add
          (i32.load
           (i32.const 37372)
          )
          (i32.shl
           (i32.load
            (local.get $2)
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 65535)
      )
     )
    )
    (local.set $2
     (i32.add
      (local.get $2)
      (i32.const 4)
     )
    )
    (br $while-in)
   )
  )
  (local.get $2)
 )
 (func $__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (loop $while-in
   (block $while-out
    (if
     (i32.eq
      (local.get $2)
      (local.get $3)
     )
     (block
      (local.set $2
       (local.get $3)
      )
      (br $while-out)
     )
    )
    (br_if $while-out
     (i32.ge_u
      (i32.load
       (local.get $2)
      )
      (i32.const 128)
     )
    )
    (if
     (i32.and
      (i32.and
       (local.get $1)
       (i32.load16_s
        (i32.add
         (i32.load
          (i32.const 37372)
         )
         (i32.shl
          (i32.load
           (local.get $2)
          )
          (i32.const 1)
         )
        )
       )
      )
      (i32.const 65535)
     )
     (block
      (local.set $2
       (i32.add
        (local.get $2)
        (i32.const 4)
       )
      )
      (br $while-in)
     )
    )
   )
  )
  (local.get $2)
 )
 (func $__ZNKSt3__25ctypeIwE10do_toupperEw (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (i32.lt_u
    (local.get $1)
    (i32.const 128)
   )
   (i32.load
    (i32.add
     (i32.load
      (i32.const 37376)
     )
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
   )
   (local.get $1)
  )
 )
 (func $__ZNKSt3__25ctypeIwE10do_toupperEPwPKw (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store
      (local.get $1)
      (if (result i32)
       (i32.lt_u
        (local.tee $0
         (i32.load
          (local.get $1)
         )
        )
        (i32.const 128)
       )
       (i32.load
        (i32.add
         (i32.load
          (i32.const 37376)
         )
         (i32.shl
          (i32.load
           (local.get $1)
          )
          (i32.const 2)
         )
        )
       )
       (local.get $0)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $__ZNKSt3__25ctypeIwE10do_tolowerEw (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (i32.lt_u
    (local.get $1)
    (i32.const 128)
   )
   (i32.load
    (i32.add
     (i32.load
      (i32.const 37136)
     )
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
   )
   (local.get $1)
  )
 )
 (func $__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store
      (local.get $1)
      (if (result i32)
       (i32.lt_u
        (local.tee $0
         (i32.load
          (local.get $1)
         )
        )
        (i32.const 128)
       )
       (i32.load
        (i32.add
         (i32.load
          (i32.const 37136)
         )
         (i32.shl
          (i32.load
           (local.get $1)
          )
          (i32.const 2)
         )
        )
       )
       (local.get $0)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $__ZNKSt3__25ctypeIwE8do_widenEc (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (i32.shr_s
   (i32.shl
    (local.get $1)
    (i32.const 24)
   )
   (i32.const 24)
  )
 )
 (func $__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store
      (local.get $3)
      (i32.load8_s
       (local.get $1)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (i32.const 4)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $__ZNKSt3__25ctypeIwE9do_narrowEwc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (select
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
   (local.get $2)
   (i32.lt_u
    (local.get $1)
    (i32.const 128)
   )
  )
 )
 (func $__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (i32.shr_u
    (i32.sub
     (local.get $2)
     (local.get $1)
    )
    (i32.const 2)
   )
  )
  (local.set $0
   (local.get $1)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $0)
     (local.get $2)
    )
    (block
     (i32.store8
      (local.get $4)
      (select
       (i32.and
        (local.tee $6
         (i32.load
          (local.get $0)
         )
        )
        (i32.const 255)
       )
       (local.get $3)
       (i32.lt_u
        (local.get $6)
        (i32.const 128)
       )
      )
     )
     (local.set $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.add
   (i32.shl
    (local.get $5)
    (i32.const 2)
   )
   (local.get $1)
  )
 )
 (func $__ZNSt3__26locale5__impC2Em (; has Stack IR ;)
  (i32.store
   (i32.const 53060)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53056)
   (i32.const 40252)
  )
  (call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em)
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
   (i32.const 53200)
   (i32.const 47353)
   (call $_strlen
    (i32.const 47353)
   )
  )
  (i32.store
   (i32.const 53068)
   (i32.load
    (i32.const 53064)
   )
  )
  (i32.store
   (i32.const 52740)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52736)
   (i32.const 38108)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52736)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54384)
   )
  )
  (i32.store
   (i32.const 52748)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52744)
   (i32.const 38140)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52744)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54392)
   )
  )
  (i32.store
   (i32.const 52756)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52752)
   (i32.const 40272)
  )
  (i32.store
   (i32.const 52760)
   (i32.const 0)
  )
  (i32.store8
   (i32.const 52764)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52760)
   (i32.load
    (i32.const 37372)
   )
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52752)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54400)
   )
  )
  (i32.store
   (i32.const 52772)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52768)
   (i32.const 40468)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52768)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54432)
   )
  )
  (i32.store
   (i32.const 52780)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52776)
   (i32.const 40536)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52776)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54704)
   )
  )
  (i32.store
   (i32.const 52788)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52784)
   (i32.const 40204)
  )
  (i32.store
   (i32.const 52792)
   (call $__ZNSt3__26__clocEv)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52784)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54712)
   )
  )
  (i32.store
   (i32.const 52804)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52800)
   (i32.const 40584)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52800)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54720)
   )
  )
  (i32.store
   (i32.const 52812)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52808)
   (i32.const 40632)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52808)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54728)
   )
  )
  (call $__ZNSt3__28numpunctIcEC2Em)
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52816)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54416)
   )
  )
  (call $__ZNSt3__28numpunctIwEC2Em)
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52840)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54440)
   )
  )
  (i32.store
   (i32.const 52876)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52872)
   (i32.const 38172)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52872)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54424)
   )
  )
  (i32.store
   (i32.const 52884)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52880)
   (i32.const 38236)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52880)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54448)
   )
  )
  (i32.store
   (i32.const 52892)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52888)
   (i32.const 38300)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52888)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54456)
   )
  )
  (i32.store
   (i32.const 52900)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52896)
   (i32.const 38352)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52896)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54464)
   )
  )
  (i32.store
   (i32.const 52908)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52904)
   (i32.const 39708)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52904)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54624)
   )
  )
  (i32.store
   (i32.const 52916)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52912)
   (i32.const 39764)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52912)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54632)
   )
  )
  (i32.store
   (i32.const 52924)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52920)
   (i32.const 39820)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52920)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54640)
   )
  )
  (i32.store
   (i32.const 52932)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52928)
   (i32.const 39876)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52928)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54648)
   )
  )
  (i32.store
   (i32.const 52940)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52936)
   (i32.const 39932)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52936)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54656)
   )
  )
  (i32.store
   (i32.const 52948)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52944)
   (i32.const 39960)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52944)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54664)
   )
  )
  (i32.store
   (i32.const 52956)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52952)
   (i32.const 39988)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52952)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54672)
   )
  )
  (i32.store
   (i32.const 52964)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52960)
   (i32.const 40016)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52960)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54680)
   )
  )
  (i32.store
   (i32.const 52972)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52968)
   (i32.const 40448)
  )
  (i32.store
   (i32.const 52976)
   (i32.const 40680)
  )
  (i32.store
   (i32.const 52968)
   (i32.const 38404)
  )
  (i32.store
   (i32.const 52976)
   (i32.const 38452)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52968)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54532)
   )
  )
  (i32.store
   (i32.const 52988)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52984)
   (i32.const 40448)
  )
  (i32.store
   (i32.const 52992)
   (i32.const 40716)
  )
  (i32.store
   (i32.const 52984)
   (i32.const 38488)
  )
  (i32.store
   (i32.const 52992)
   (i32.const 38536)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 52984)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54600)
   )
  )
  (i32.store
   (i32.const 53004)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53000)
   (i32.const 40448)
  )
  (i32.store
   (i32.const 53008)
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (i32.const 53000)
   (i32.const 39660)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 53000)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54608)
   )
  )
  (i32.store
   (i32.const 53020)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53016)
   (i32.const 40448)
  )
  (i32.store
   (i32.const 53024)
   (call $__ZNSt3__26__clocEv)
  )
  (i32.store
   (i32.const 53016)
   (i32.const 39684)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 53016)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54616)
   )
  )
  (i32.store
   (i32.const 53036)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53032)
   (i32.const 40044)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 53032)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54688)
   )
  )
  (i32.store
   (i32.const 53044)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53040)
   (i32.const 40076)
  )
  (call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
   (i32.const 53040)
   (call $__ZNSt3__26locale2id5__getEv
    (i32.const 54696)
   )
  )
 )
 (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em (; has Stack IR ;)
  (i32.store
   (i32.const 53064)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53068)
   (i32.const 0)
  )
  (i32.store
   (i32.const 53072)
   (i32.const 0)
  )
  (i32.store8
   (i32.const 53192)
   (i32.const 0)
  )
  (call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE11__vallocateEm)
  (call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm
   (i32.const 28)
  )
 )
 (func $__ZNSt3__26locale5__imp7installEPNS0_5facetEl (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
  (if
   (local.tee $2
    (i32.load
     (i32.add
      (if (result i32)
       (i32.le_u
        (i32.shr_s
         (i32.sub
          (i32.load
           (i32.const 53068)
          )
          (local.tee $2
           (i32.load
            (i32.const 53064)
           )
          )
         )
         (i32.const 2)
        )
        (local.get $1)
       )
       (block (result i32)
        (call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.load
         (i32.const 53064)
        )
       )
       (local.get $2)
      )
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
     )
    )
   )
   (block
    (i32.store offset=4
     (local.get $2)
     (i32.add
      (local.tee $3
       (i32.load offset=4
        (local.get $2)
       )
      )
      (i32.const -1)
     )
    )
    (if
     (i32.eqz
      (local.get $3)
     )
     (call_indirect (type $i32_=>_none)
      (local.get $2)
      (i32.add
       (i32.and
        (i32.load offset=8
         (i32.load
          (local.get $2)
         )
        )
        (i32.const 127)
       )
       (i32.const 267)
      )
     )
    )
   )
  )
  (i32.store
   (i32.add
    (i32.load
     (i32.const 53064)
    )
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
   )
   (local.get $0)
  )
 )
 (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (i32.lt_u
    (local.tee $1
     (i32.shr_s
      (i32.sub
       (i32.load
        (i32.const 53068)
       )
       (local.tee $2
        (i32.load
         (i32.const 53064)
        )
       )
      )
      (i32.const 2)
     )
    )
    (local.get $0)
   )
   (call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm
    (i32.sub
     (local.get $0)
     (local.get $1)
    )
   )
   (if
    (i32.gt_u
     (local.get $1)
     (local.get $0)
    )
    (i32.store
     (i32.const 53068)
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 2)
      )
      (local.get $2)
     )
    )
   )
  )
 )
 (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.lt_u
    (i32.shr_s
     (i32.sub
      (i32.load
       (i32.const 53072)
      )
      (local.tee $2
       (i32.load
        (i32.const 53068)
       )
      )
     )
     (i32.const 2)
    )
    (local.get $0)
   )
   (if
    (i32.lt_u
     (i32.const 1073741823)
     (local.tee $2
      (i32.add
       (local.get $0)
       (i32.shr_s
        (i32.sub
         (local.get $2)
         (i32.load
          (i32.const 53064)
         )
        )
        (i32.const 2)
       )
      )
     )
    )
    (call $_abort)
    (block
     (call $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_
      (local.get $1)
      (select
       (select
        (local.get $2)
        (local.tee $5
         (i32.shr_s
          (local.tee $4
           (i32.sub
            (i32.load
             (i32.const 53072)
            )
            (local.tee $3
             (i32.load
              (i32.const 53064)
             )
            )
           )
          )
          (i32.const 1)
         )
        )
        (i32.lt_u
         (local.get $5)
         (local.get $2)
        )
       )
       (i32.const 1073741823)
       (i32.lt_u
        (i32.shr_s
         (local.get $4)
         (i32.const 2)
        )
        (i32.const 536870911)
       )
      )
      (i32.shr_s
       (i32.sub
        (i32.load
         (i32.const 53068)
        )
        (local.get $3)
       )
       (i32.const 2)
      )
     )
     (call $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm
      (local.get $1)
      (local.get $0)
     )
     (call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE
      (local.get $1)
     )
     (call $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev
      (local.get $1)
     )
    )
   )
   (call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 53064)
  )
  (i32.store offset=4
   (local.get $1)
   (local.tee $2
    (i32.load
     (i32.const 53068)
    )
   )
  )
  (i32.store offset=8
   (local.get $1)
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 2)
    )
    (local.get $2)
   )
  )
  (local.set $0
   (i32.load offset=4
    (local.get $1)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $0)
     (i32.load offset=8
      (local.get $1)
     )
    )
    (block
     (i32.store
      (local.get $0)
      (i32.const 0)
     )
     (i32.store offset=4
      (local.get $1)
      (local.tee $0
       (i32.add
        (i32.load offset=4
         (local.get $1)
        )
        (i32.const 4)
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store offset=4
   (i32.load
    (local.get $1)
   )
   (i32.load offset=4
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_ (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local.set $3
   (i32.const 53080)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=16
   (local.get $0)
   (i32.const 53080)
  )
  (if
   (local.get $1)
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 53192)
      )
     )
     (i32.lt_u
      (local.get $1)
      (i32.const 29)
     )
    )
    (i32.store8
     (i32.const 53192)
     (i32.const 1)
    )
    (local.set $3
     (call $__Znwm
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
     )
    )
   )
   (local.set $3
    (i32.const 0)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=8
   (local.get $0)
   (local.tee $2
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
     (local.get $3)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $3)
   )
  )
 )
 (func $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (i32.store offset=4
   (local.get $2)
   (i32.add
    (i32.load offset=8
     (local.get $0)
    )
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
   )
  )
  (i32.store offset=8
   (local.get $2)
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (local.set $0
   (i32.load
    (local.get $2)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $0)
     (i32.load offset=4
      (local.get $2)
     )
    )
    (block
     (i32.store
      (local.get $0)
      (i32.const 0)
     )
     (i32.store
      (local.get $2)
      (local.tee $0
       (i32.add
        (i32.load
         (local.get $2)
        )
        (i32.const 4)
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (i32.load offset=8
    (local.get $2)
   )
   (i32.load
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (i32.store offset=4
   (local.get $0)
   (local.tee $1
    (i32.add
     (i32.load offset=4
      (local.get $0)
     )
     (i32.shl
      (i32.sub
       (i32.const 0)
       (i32.shr_s
        (local.tee $2
         (i32.sub
          (i32.load
           (i32.const 53068)
          )
          (local.tee $3
           (i32.load
            (i32.const 53064)
           )
          )
         )
        )
        (i32.const 2)
       )
      )
      (i32.const 2)
     )
    )
   )
  )
  (if
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
   (block
    (drop
     (call $_memcpy
      (local.get $1)
      (local.get $3)
      (local.get $2)
     )
    )
    (local.set $1
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
  (local.set $2
   (i32.load
    (i32.const 53064)
   )
  )
  (i32.store
   (i32.const 53064)
   (local.get $1)
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $2)
  )
  (local.set $1
   (i32.load
    (i32.const 53068)
   )
  )
  (i32.store
   (i32.const 53068)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $1)
  )
  (local.set $1
   (i32.load
    (i32.const 53072)
   )
  )
  (i32.store
   (i32.const 53072)
   (i32.load offset=12
    (local.get $0)
   )
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $1)
  )
  (i32.store
   (local.get $0)
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $1
   (i32.load offset=8
    (local.get $0)
   )
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $1)
     (local.get $2)
    )
    (block
     (i32.store offset=8
      (local.get $0)
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const -4)
       )
      )
     )
     (br $while-in)
    )
   )
  )
  (if
   (local.tee $1
    (i32.load
     (local.get $0)
    )
   )
   (if
    (i32.eq
     (local.tee $2
      (i32.load offset=16
       (local.get $0)
      )
     )
     (local.get $1)
    )
    (i32.store8 offset=112
     (local.get $2)
     (i32.const 0)
    )
    (block
     (drop
      (i32.load offset=12
       (local.get $0)
      )
     )
     (call $_free
      (local.get $1)
     )
    )
   )
  )
 )
 (func $__ZNSt3__28numpunctIwEC2Em (; has Stack IR ;)
  (local $0 i32)
  (i32.store
   (i32.const 52844)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52840)
   (i32.const 40364)
  )
  (i32.store
   (i32.const 52848)
   (i32.const 46)
  )
  (i32.store
   (i32.const 52852)
   (i32.const 44)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (i32.const 52856)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $__ZNSt3__28numpunctIcEC2Em (; has Stack IR ;)
  (local $0 i32)
  (i32.store
   (i32.const 52820)
   (i32.const 0)
  )
  (i32.store
   (i32.const 52816)
   (i32.const 40324)
  )
  (i32.store8
   (i32.const 52824)
   (i32.const 46)
  )
  (i32.store8
   (i32.const 52825)
   (i32.const 44)
  )
  (loop $while-in
   (if
    (i32.ne
     (local.get $0)
     (i32.const 3)
    )
    (block
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (i32.const 52828)
      )
      (i32.const 0)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in)
    )
   )
  )
 )
 (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE11__vallocateEm (; has Stack IR ;)
  (local $0 i32)
  (i32.store
   (i32.const 53068)
   (local.tee $0
    (if (result i32)
     (i32.load8_s
      (i32.const 53192)
     )
     (call $__Znwm
      (i32.const 112)
     )
     (block (result i32)
      (i32.store8
       (i32.const 53192)
       (i32.const 1)
      )
      (i32.const 53080)
     )
    )
   )
  )
  (i32.store
   (i32.const 53064)
   (local.get $0)
  )
  (i32.store
   (i32.const 53072)
   (i32.add
    (local.get $0)
    (i32.const 112)
   )
  )
 )
 (func $__ZNSt3__26locale7classicEv (; has Stack IR ;) (result i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 53048)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 53048)
    )
    (block
     (call $__ZNSt3__26locale5__impC2Em)
     (i32.store
      (i32.const 54736)
      (i32.const 53056)
     )
     (i32.store
      (i32.const 54740)
      (i32.const 54736)
     )
     (call $___cxa_guard_release
      (i32.const 53048)
     )
    )
   )
  )
  (i32.load
   (i32.const 54740)
  )
 )
 (func $__ZNSt3__26locale8__globalEv (; has Stack IR ;) (result i32)
  (local $0 i32)
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 53216)
    )
   )
   (if
    (call $___cxa_guard_acquire
     (i32.const 53216)
    )
    (block
     (i32.store
      (i32.const 54744)
      (local.tee $0
       (i32.load
        (call $__ZNSt3__26locale7classicEv)
       )
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.add
       (i32.load offset=4
        (local.get $0)
       )
       (i32.const 1)
      )
     )
     (i32.store
      (i32.const 54748)
      (i32.const 54744)
     )
     (call $___cxa_guard_release
      (i32.const 53216)
     )
    )
   )
  )
  (i32.load
   (i32.const 54748)
  )
 )
 (func $__ZNSt3__26localeC2Ev (; has Stack IR ;) (param $0 i32)
  (i32.store
   (local.get $0)
   (local.tee $0
    (i32.load
     (call $__ZNSt3__26locale8__globalEv)
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 1)
   )
  )
 )
 (func $__ZNSt3__211__call_onceERVmPvPFvS2_E (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (loop $while-in
   (br_if $while-in
    (i32.eq
     (i32.load
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $0)
    )
   )
   (block
    (i32.store
     (local.get $0)
     (i32.const 1)
    )
    (call_indirect (type $i32_=>_none)
     (local.get $1)
     (i32.const 360)
    )
    (i32.store
     (local.get $0)
     (i32.const -1)
    )
   )
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_ (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $1)
    )
    (i32.const 0)
   )
   (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
    (local.get $0)
    (i32.load
     (local.get $1)
    )
    (i32.load offset=4
     (local.get $1)
    )
   )
   (block
    (i64.store align=4
     (local.get $0)
     (i64.load align=4
      (local.get $1)
     )
    )
    (i32.store offset=8
     (local.get $0)
     (i32.load offset=8
      (local.get $1)
     )
    )
   )
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_u
    (local.get $2)
    (i32.const -17)
   )
   (call $_abort)
  )
  (if
   (i32.lt_u
    (local.get $2)
    (i32.const 11)
   )
   (i32.store8 offset=11
    (local.get $0)
    (local.get $2)
   )
   (block
    (i32.store
     (local.get $0)
     (local.tee $5
      (call $__Znwm
       (local.tee $4
        (i32.and
         (i32.add
          (local.get $2)
          (i32.const 16)
         )
         (i32.const -16)
        )
       )
      )
     )
    )
    (i32.store offset=8
     (local.get $0)
     (i32.or
      (local.get $4)
      (i32.const -2147483648)
     )
    )
    (i32.store offset=4
     (local.get $0)
     (local.get $2)
    )
    (local.set $0
     (local.get $5)
    )
   )
  )
  (call $__ZNSt3__211char_traitsIcE4copyEPcPKcm
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
  (i32.store8
   (local.get $3)
   (i32.const 0)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $2)
   )
   (i32.load8_s
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const -17)
   )
   (call $_abort)
  )
  (if
   (i32.lt_u
    (local.get $1)
    (i32.const 11)
   )
   (i32.store8 offset=11
    (local.get $0)
    (local.get $1)
   )
   (block
    (i32.store
     (local.get $0)
     (local.tee $5
      (call $__Znwm
       (local.tee $4
        (i32.and
         (i32.add
          (local.get $1)
          (i32.const 16)
         )
         (i32.const -16)
        )
       )
      )
     )
    )
    (i32.store offset=8
     (local.get $0)
     (i32.or
      (local.get $4)
      (i32.const -2147483648)
     )
    )
    (i32.store offset=4
     (local.get $0)
     (local.get $1)
    )
    (local.set $0
     (local.get $5)
    )
   )
  )
  (call $__ZNSt3__211char_traitsIcE6assignEPcmc
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
  (i32.store8
   (local.get $3)
   (i32.const 0)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (i32.load8_s
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__211char_traitsIcE6assignEPcmc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (local.get $1)
   (drop
    (call $_memset
     (local.get $0)
     (i32.and
      (local.get $2)
      (i32.const 255)
     )
     (local.get $1)
    )
   )
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev (; has Stack IR ;) (param $0 i32)
  (if
   (i32.lt_s
    (i32.load8_s offset=11
     (local.get $0)
    )
    (i32.const 0)
   )
   (block
    (drop
     (i32.load offset=8
      (local.get $0)
     )
    )
    (call $_free
     (i32.load
      (local.get $0)
     )
    )
   )
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_u
    (local.tee $4
     (if (result i32)
      (local.tee $3
       (i32.lt_s
        (local.tee $6
         (i32.load8_s offset=11
          (local.get $0)
         )
        )
        (i32.const 0)
       )
      )
      (i32.add
       (i32.and
        (i32.load offset=8
         (local.get $0)
        )
        (i32.const 2147483647)
       )
       (i32.const -1)
      )
      (i32.const 10)
     )
    )
    (local.get $2)
   )
   (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc
    (local.get $0)
    (local.get $4)
    (i32.sub
     (local.get $2)
     (local.get $4)
    )
    (local.tee $0
     (if (result i32)
      (local.get $3)
      (i32.load offset=4
       (local.get $0)
      )
      (i32.and
       (local.get $6)
       (i32.const 255)
      )
     )
    )
    (i32.const 0)
    (local.get $0)
    (local.get $2)
    (local.get $1)
   )
   (block
    (local.set $4
     (local.tee $3
      (if (result i32)
       (local.get $3)
       (i32.load
        (local.get $0)
       )
       (local.get $0)
      )
     )
    )
    (if
     (local.get $2)
     (drop
      (call $_memmove
       (local.get $4)
       (local.get $1)
       (local.get $2)
      )
     )
    )
    (i32.store8
     (local.get $5)
     (i32.const 0)
    )
    (i32.store8
     (i32.add
      (local.get $2)
      (local.get $3)
     )
     (i32.load8_s
      (local.get $5)
     )
    )
    (if
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $0)
      )
      (i32.const 0)
     )
     (i32.store offset=4
      (local.get $0)
      (local.get $2)
     )
     (i32.store8 offset=11
      (local.get $0)
      (local.get $2)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_u
    (i32.sub
     (i32.const -18)
     (local.get $1)
    )
    (local.get $2)
   )
   (call $_abort)
  )
  (local.set $9
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $0)
     )
     (i32.const 0)
    )
    (i32.load
     (local.get $0)
    )
    (local.get $0)
   )
  )
  (local.set $2
   (call $__Znwm
    (local.tee $10
     (if (result i32)
      (i32.lt_u
       (local.get $1)
       (i32.const 2147483623)
      )
      (select
       (i32.const 11)
       (i32.and
        (i32.add
         (local.tee $2
          (select
           (local.tee $10
            (i32.shl
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.tee $2
            (i32.add
             (local.get $1)
             (local.get $2)
            )
           )
           (i32.lt_u
            (local.get $2)
            (local.get $10)
           )
          )
         )
         (i32.const 16)
        )
        (i32.const -16)
       )
       (i32.lt_u
        (local.get $2)
        (i32.const 11)
       )
      )
      (i32.const -17)
     )
    )
   )
  )
  (if
   (local.get $4)
   (call $__ZNSt3__211char_traitsIcE4copyEPcPKcm
    (local.get $2)
    (local.get $9)
    (local.get $4)
   )
  )
  (if
   (local.get $6)
   (call $__ZNSt3__211char_traitsIcE4copyEPcPKcm
    (i32.add
     (local.get $2)
     (local.get $4)
    )
    (local.get $7)
    (local.get $6)
   )
  )
  (if
   (local.tee $7
    (i32.sub
     (local.tee $3
      (i32.sub
       (local.get $3)
       (local.get $5)
      )
     )
     (local.get $4)
    )
   )
   (call $__ZNSt3__211char_traitsIcE4copyEPcPKcm
    (i32.add
     (local.get $6)
     (i32.add
      (local.get $2)
      (local.get $4)
     )
    )
    (i32.add
     (local.get $5)
     (i32.add
      (local.get $4)
      (local.get $9)
     )
    )
    (local.get $7)
   )
  )
  (if
   (i32.ne
    (local.get $1)
    (i32.const 10)
   )
   (call $_free
    (local.get $9)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.or
    (local.get $10)
    (i32.const -2147483648)
   )
  )
  (i32.store offset=4
   (local.get $0)
   (local.tee $0
    (i32.add
     (local.get $3)
     (local.get $6)
    )
   )
  )
  (i32.store8
   (local.get $8)
   (i32.const 0)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $2)
   )
   (i32.load8_s
    (local.get $8)
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm
   (local.get $0)
   (local.get $1)
   (call $_strlen
    (local.get $1)
   )
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_u
    (local.tee $3
     (if (result i32)
      (local.tee $4
       (i32.lt_s
        (local.tee $3
         (i32.load8_s offset=11
          (local.get $0)
         )
        )
        (i32.const 0)
       )
      )
      (i32.load offset=4
       (local.get $0)
      )
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
     )
    )
    (local.get $1)
   )
   (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc
    (local.get $0)
    (i32.sub
     (local.get $1)
     (local.get $3)
    )
   )
   (if
    (local.get $4)
    (block
     (local.set $3
      (i32.add
       (local.get $1)
       (i32.load
        (local.get $0)
       )
      )
     )
     (i32.store8
      (local.get $2)
      (i32.const 0)
     )
     (i32.store8
      (local.get $3)
      (i32.load8_s
       (local.get $2)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (local.get $1)
     )
    )
    (block
     (i32.store8
      (local.get $2)
      (i32.const 0)
     )
     (i32.store8
      (i32.add
       (local.get $0)
       (local.get $1)
      )
      (i32.load8_s
       (local.get $2)
      )
     )
     (i32.store8 offset=11
      (local.get $0)
      (local.get $1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (local.get $1)
   (block
    (call $__ZNSt3__211char_traitsIcE6assignEPcmc
     (i32.add
      (local.tee $3
       (if (result i32)
        (i32.lt_s
         (if (result i32)
          (i32.lt_u
           (i32.sub
            (local.tee $5
             (if (result i32)
              (i32.lt_s
               (local.tee $3
                (i32.load8_s offset=11
                 (local.get $0)
                )
               )
               (i32.const 0)
              )
              (block (result i32)
               (local.set $2
                (i32.load offset=4
                 (local.get $0)
                )
               )
               (i32.add
                (i32.and
                 (i32.load offset=8
                  (local.get $0)
                 )
                 (i32.const 2147483647)
                )
                (i32.const -1)
               )
              )
              (block (result i32)
               (local.set $2
                (i32.and
                 (local.get $3)
                 (i32.const 255)
                )
               )
               (i32.const 10)
              )
             )
            )
            (local.get $2)
           )
           (local.get $1)
          )
          (block (result i32)
           (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm
            (local.get $0)
            (local.get $5)
            (i32.sub
             (i32.add
              (local.get $1)
              (local.get $2)
             )
             (local.get $5)
            )
            (local.get $2)
            (local.get $2)
           )
           (i32.load8_s offset=11
            (local.get $0)
           )
          )
          (local.get $3)
         )
         (i32.const 0)
        )
        (i32.load
         (local.get $0)
        )
        (local.get $0)
       )
      )
      (local.get $2)
     )
     (local.get $1)
     (i32.const 0)
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
    (if
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $0)
      )
      (i32.const 0)
     )
     (i32.store offset=4
      (local.get $0)
      (local.get $1)
     )
     (i32.store8 offset=11
      (local.get $0)
      (local.get $1)
     )
    )
    (i32.store8
     (local.get $4)
     (i32.const 0)
    )
    (i32.store8
     (i32.add
      (local.get $1)
      (local.get $3)
     )
     (i32.load8_s
      (local.get $4)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.lt_u
    (i32.sub
     (i32.const -17)
     (local.get $1)
    )
    (local.get $2)
   )
   (call $_abort)
  )
  (local.set $5
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $0)
     )
     (i32.const 0)
    )
    (i32.load
     (local.get $0)
    )
    (local.get $0)
   )
  )
  (local.set $2
   (call $__Znwm
    (local.tee $6
     (if (result i32)
      (i32.lt_u
       (local.get $1)
       (i32.const 2147483623)
      )
      (select
       (i32.const 11)
       (i32.and
        (i32.add
         (local.tee $2
          (select
           (local.tee $6
            (i32.shl
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.tee $2
            (i32.add
             (local.get $1)
             (local.get $2)
            )
           )
           (i32.lt_u
            (local.get $2)
            (local.get $6)
           )
          )
         )
         (i32.const 16)
        )
        (i32.const -16)
       )
       (i32.lt_u
        (local.get $2)
        (i32.const 11)
       )
      )
      (i32.const -17)
     )
    )
   )
  )
  (if
   (local.get $4)
   (call $__ZNSt3__211char_traitsIcE4copyEPcPKcm
    (local.get $2)
    (local.get $5)
    (local.get $4)
   )
  )
  (if
   (local.tee $3
    (i32.sub
     (local.get $3)
     (local.get $4)
    )
   )
   (call $__ZNSt3__211char_traitsIcE4copyEPcPKcm
    (i32.add
     (local.get $2)
     (local.get $4)
    )
    (i32.add
     (local.get $4)
     (local.get $5)
    )
    (local.get $3)
   )
  )
  (if
   (i32.ne
    (local.get $1)
    (i32.const 10)
   )
   (call $_free
    (local.get $5)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.or
    (local.get $6)
    (i32.const -2147483648)
   )
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (if (result i32)
    (local.tee $6
     (i32.lt_s
      (local.tee $3
       (i32.load8_s offset=11
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (block (result i32)
     (local.set $4
      (i32.add
       (i32.and
        (i32.load offset=8
         (local.get $0)
        )
        (i32.const 2147483647)
       )
       (i32.const -1)
      )
     )
     (i32.load offset=4
      (local.get $0)
     )
    )
    (block (result i32)
     (local.set $4
      (i32.const 10)
     )
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
    )
   )
  )
  (if
   (i32.lt_u
    (i32.sub
     (local.get $4)
     (local.get $3)
    )
    (local.get $2)
   )
   (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc
    (local.get $0)
    (local.get $4)
    (i32.sub
     (i32.add
      (local.get $2)
      (local.get $3)
     )
     (local.get $4)
    )
    (local.get $3)
    (local.get $3)
    (i32.const 0)
    (local.get $2)
    (local.get $1)
   )
   (if
    (local.get $2)
    (block
     (call $__ZNSt3__211char_traitsIcE4copyEPcPKcm
      (i32.add
       (local.get $3)
       (local.tee $4
        (if (result i32)
         (local.get $6)
         (i32.load
          (local.get $0)
         )
         (local.get $0)
        )
       )
      )
      (local.get $1)
      (local.get $2)
     )
     (local.set $1
      (i32.add
       (local.get $2)
       (local.get $3)
      )
     )
     (if
      (i32.lt_s
       (i32.load8_s offset=11
        (local.get $0)
       )
       (i32.const 0)
      )
      (i32.store offset=4
       (local.get $0)
       (local.get $1)
      )
      (i32.store8 offset=11
       (local.get $0)
       (local.get $1)
      )
     )
     (i32.store8
      (local.get $5)
      (i32.const 0)
     )
     (i32.store8
      (i32.add
       (local.get $1)
       (local.get $4)
      )
      (i32.load8_s
       (local.get $5)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $3)
   (local.get $1)
  )
  (local.set $1
   (if (result i32)
    (local.tee $5
     (i32.lt_s
      (local.tee $1
       (i32.load8_s offset=11
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (block (result i32)
     (local.set $2
      (i32.load offset=4
       (local.get $0)
      )
     )
     (i32.add
      (i32.and
       (i32.load offset=8
        (local.get $0)
       )
       (i32.const 2147483647)
      )
      (i32.const -1)
     )
    )
    (block (result i32)
     (local.set $2
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (i32.const 10)
    )
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (if
     (i32.eq
      (local.get $1)
      (local.get $2)
     )
     (block
      (call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm
       (local.get $0)
       (local.get $1)
       (i32.const 1)
       (local.get $1)
       (local.get $1)
      )
      (br_if $__rjti$1
       (i32.lt_s
        (i32.load8_s offset=11
         (local.get $0)
        )
        (i32.const 0)
       )
      )
     )
     (br_if $__rjti$1
      (local.get $5)
     )
    )
    (i32.store8 offset=11
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (br $__rjto$1)
   )
   (local.set $1
    (i32.load
     (local.get $0)
    )
   )
   (i32.store offset=4
    (local.get $0)
    (i32.add
     (local.get $2)
     (i32.const 1)
    )
   )
   (local.set $0
    (local.get $1)
   )
  )
  (i32.store8
   (local.tee $0
    (i32.add
     (local.get $0)
     (local.get $2)
    )
   )
   (i32.load8_s
    (local.get $3)
   )
  )
  (i32.store8
   (local.get $4)
   (i32.const 0)
  )
  (i32.store8 offset=1
   (local.get $0)
   (i32.load8_s
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_u
    (local.get $2)
    (i32.const 1073741807)
   )
   (call $_abort)
  )
  (if
   (i32.lt_u
    (local.get $2)
    (i32.const 2)
   )
   (block
    (i32.store8 offset=11
     (local.get $0)
     (local.get $2)
    )
    (local.set $4
     (local.get $0)
    )
   )
   (if
    (i32.gt_u
     (local.tee $5
      (i32.and
       (i32.add
        (local.get $2)
        (i32.const 4)
       )
       (i32.const -4)
      )
     )
     (i32.const 1073741823)
    )
    (call $_abort)
    (block
     (i32.store
      (local.get $0)
      (local.tee $4
       (call $__Znwm
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
       )
      )
     )
     (i32.store offset=8
      (local.get $0)
      (i32.or
       (local.get $5)
       (i32.const -2147483648)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (local.get $2)
     )
    )
   )
  )
  (call $__ZNSt3__211char_traitsIwE4copyEPwPKwm
   (local.get $4)
   (local.get $1)
   (local.get $2)
  )
  (i32.store
   (local.get $3)
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.shl
     (local.get $2)
     (i32.const 2)
    )
    (local.get $4)
   )
   (i32.load
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const 1073741807)
   )
   (call $_abort)
  )
  (if
   (i32.lt_u
    (local.get $1)
    (i32.const 2)
   )
   (block
    (i32.store8 offset=11
     (local.get $0)
     (local.get $1)
    )
    (local.set $4
     (local.get $0)
    )
   )
   (if
    (i32.gt_u
     (local.tee $5
      (i32.and
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
       (i32.const -4)
      )
     )
     (i32.const 1073741823)
    )
    (call $_abort)
    (block
     (i32.store
      (local.get $0)
      (local.tee $4
       (call $__Znwm
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
       )
      )
     )
     (i32.store offset=8
      (local.get $0)
      (i32.or
       (local.get $5)
       (i32.const -2147483648)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (local.get $1)
     )
    )
   )
  )
  (if
   (local.get $1)
   (call $_wmemset
    (local.get $4)
    (local.get $2)
    (local.get $1)
   )
  )
  (i32.store
   (local.get $3)
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
    (local.get $4)
   )
   (i32.load
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_u
    (local.tee $4
     (if (result i32)
      (local.tee $3
       (i32.lt_s
        (local.tee $6
         (i32.load8_s offset=11
          (local.get $0)
         )
        )
        (i32.const 0)
       )
      )
      (i32.add
       (i32.and
        (i32.load offset=8
         (local.get $0)
        )
        (i32.const 2147483647)
       )
       (i32.const -1)
      )
      (i32.const 1)
     )
    )
    (local.get $2)
   )
   (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw
    (local.get $0)
    (local.get $4)
    (i32.sub
     (local.get $2)
     (local.get $4)
    )
    (local.tee $0
     (if (result i32)
      (local.get $3)
      (i32.load offset=4
       (local.get $0)
      )
      (i32.and
       (local.get $6)
       (i32.const 255)
      )
     )
    )
    (i32.const 0)
    (local.get $0)
    (local.get $2)
    (local.get $1)
   )
   (block
    (local.set $4
     (local.tee $3
      (if (result i32)
       (local.get $3)
       (i32.load
        (local.get $0)
       )
       (local.get $0)
      )
     )
    )
    (if
     (local.get $2)
     (call $_wmemmove
      (local.get $4)
      (local.get $1)
      (local.get $2)
     )
    )
    (i32.store
     (local.get $5)
     (i32.const 0)
    )
    (i32.store
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
      (local.get $3)
     )
     (i32.load
      (local.get $5)
     )
    )
    (if
     (i32.lt_s
      (i32.load8_s offset=11
       (local.get $0)
      )
      (i32.const 0)
     )
     (i32.store offset=4
      (local.get $0)
      (local.get $2)
     )
     (i32.store8 offset=11
      (local.get $0)
      (local.get $2)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_u
    (i32.sub
     (i32.const 1073741806)
     (local.get $1)
    )
    (local.get $2)
   )
   (call $_abort)
  )
  (local.set $9
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $0)
     )
     (i32.const 0)
    )
    (i32.load
     (local.get $0)
    )
    (local.get $0)
   )
  )
  (if
   (i32.lt_u
    (local.get $1)
    (i32.const 536870887)
   )
   (if
    (i32.gt_u
     (local.tee $2
      (select
       (i32.const 2)
       (i32.and
        (i32.add
         (local.tee $2
          (select
           (local.tee $11
            (i32.shl
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.tee $2
            (i32.add
             (local.get $1)
             (local.get $2)
            )
           )
           (i32.lt_u
            (local.get $2)
            (local.get $11)
           )
          )
         )
         (i32.const 4)
        )
        (i32.const -4)
       )
       (i32.lt_u
        (local.get $2)
        (i32.const 2)
       )
      )
     )
     (i32.const 1073741823)
    )
    (call $_abort)
    (local.set $10
     (local.get $2)
    )
   )
   (local.set $10
    (i32.const 1073741807)
   )
  )
  (local.set $2
   (call $__Znwm
    (i32.shl
     (local.get $10)
     (i32.const 2)
    )
   )
  )
  (if
   (local.get $4)
   (call $__ZNSt3__211char_traitsIwE4copyEPwPKwm
    (local.get $2)
    (local.get $9)
    (local.get $4)
   )
  )
  (if
   (local.get $6)
   (call $__ZNSt3__211char_traitsIwE4copyEPwPKwm
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
     (local.get $2)
    )
    (local.get $7)
    (local.get $6)
   )
  )
  (if
   (local.tee $7
    (i32.sub
     (local.tee $3
      (i32.sub
       (local.get $3)
       (local.get $5)
      )
     )
     (local.get $4)
    )
   )
   (call $__ZNSt3__211char_traitsIwE4copyEPwPKwm
    (i32.add
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (local.get $2)
     )
     (i32.shl
      (local.get $6)
      (i32.const 2)
     )
    )
    (i32.add
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (local.get $9)
     )
     (i32.shl
      (local.get $5)
      (i32.const 2)
     )
    )
    (local.get $7)
   )
  )
  (if
   (i32.ne
    (local.get $1)
    (i32.const 1)
   )
   (call $_free
    (local.get $9)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.or
    (local.get $10)
    (i32.const -2147483648)
   )
  )
  (i32.store offset=4
   (local.get $0)
   (local.tee $0
    (i32.add
     (local.get $3)
     (local.get $6)
    )
   )
  )
  (i32.store
   (local.get $8)
   (i32.const 0)
  )
  (i32.store
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 2)
    )
    (local.get $2)
   )
   (i32.load
    (local.get $8)
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm
   (local.get $0)
   (local.get $1)
   (call $_wcslen
    (local.get $1)
   )
  )
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (if
   (i32.lt_u
    (i32.sub
     (i32.const 1073741807)
     (local.get $1)
    )
    (local.get $2)
   )
   (call $_abort)
  )
  (local.set $5
   (if (result i32)
    (i32.lt_s
     (i32.load8_s offset=11
      (local.get $0)
     )
     (i32.const 0)
    )
    (i32.load
     (local.get $0)
    )
    (local.get $0)
   )
  )
  (if
   (i32.lt_u
    (local.get $1)
    (i32.const 536870887)
   )
   (if
    (i32.gt_u
     (local.tee $2
      (select
       (i32.const 2)
       (i32.and
        (i32.add
         (local.tee $2
          (select
           (local.tee $7
            (i32.shl
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.tee $2
            (i32.add
             (local.get $1)
             (local.get $2)
            )
           )
           (i32.lt_u
            (local.get $2)
            (local.get $7)
           )
          )
         )
         (i32.const 4)
        )
        (i32.const -4)
       )
       (i32.lt_u
        (local.get $2)
        (i32.const 2)
       )
      )
     )
     (i32.const 1073741823)
    )
    (call $_abort)
    (local.set $6
     (local.get $2)
    )
   )
   (local.set $6
    (i32.const 1073741807)
   )
  )
  (local.set $2
   (call $__Znwm
    (i32.shl
     (local.get $6)
     (i32.const 2)
    )
   )
  )
  (if
   (local.get $4)
   (call $__ZNSt3__211char_traitsIwE4copyEPwPKwm
    (local.get $2)
    (local.get $5)
    (local.get $4)
   )
  )
  (if
   (local.tee $3
    (i32.sub
     (local.get $3)
     (local.get $4)
    )
   )
   (call $__ZNSt3__211char_traitsIwE4copyEPwPKwm
    (i32.add
     (local.get $2)
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
    )
    (i32.add
     (local.get $5)
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
    )
    (local.get $3)
   )
  )
  (if
   (i32.ne
    (local.get $1)
    (i32.const 1)
   )
   (call $_free
    (local.get $5)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.or
    (local.get $6)
    (i32.const -2147483648)
   )
  )
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (local.set $3
   (if (result i32)
    (local.tee $6
     (i32.lt_s
      (local.tee $3
       (i32.load8_s offset=11
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (block (result i32)
     (local.set $4
      (i32.add
       (i32.and
        (i32.load offset=8
         (local.get $0)
        )
        (i32.const 2147483647)
       )
       (i32.const -1)
      )
     )
     (i32.load offset=4
      (local.get $0)
     )
    )
    (block (result i32)
     (local.set $4
      (i32.const 1)
     )
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
    )
   )
  )
  (if
   (i32.lt_u
    (i32.sub
     (local.get $4)
     (local.get $3)
    )
    (local.get $2)
   )
   (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw
    (local.get $0)
    (local.get $4)
    (i32.sub
     (i32.add
      (local.get $2)
      (local.get $3)
     )
     (local.get $4)
    )
    (local.get $3)
    (local.get $3)
    (i32.const 0)
    (local.get $2)
    (local.get $1)
   )
   (if
    (local.get $2)
    (block
     (call $__ZNSt3__211char_traitsIwE4copyEPwPKwm
      (i32.add
       (local.tee $4
        (if (result i32)
         (local.get $6)
         (i32.load
          (local.get $0)
         )
         (local.get $0)
        )
       )
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
      )
      (local.get $1)
      (local.get $2)
     )
     (local.set $1
      (i32.add
       (local.get $2)
       (local.get $3)
      )
     )
     (if
      (i32.lt_s
       (i32.load8_s offset=11
        (local.get $0)
       )
       (i32.const 0)
      )
      (i32.store offset=4
       (local.get $0)
       (local.get $1)
      )
      (i32.store8 offset=11
       (local.get $0)
       (local.get $1)
      )
     )
     (i32.store
      (local.get $5)
      (i32.const 0)
     )
     (i32.store
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $4)
      )
      (i32.load
       (local.get $5)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $1)
  )
  (local.set $1
   (if (result i32)
    (local.tee $5
     (i32.lt_s
      (local.tee $1
       (i32.load8_s offset=11
        (local.get $0)
       )
      )
      (i32.const 0)
     )
    )
    (block (result i32)
     (local.set $2
      (i32.load offset=4
       (local.get $0)
      )
     )
     (i32.add
      (i32.and
       (i32.load offset=8
        (local.get $0)
       )
       (i32.const 2147483647)
      )
      (i32.const -1)
     )
    )
    (block (result i32)
     (local.set $2
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (i32.const 1)
    )
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (if
     (i32.eq
      (local.get $1)
      (local.get $2)
     )
     (block
      (call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm
       (local.get $0)
       (local.get $1)
       (i32.const 1)
       (local.get $1)
       (local.get $1)
      )
      (br_if $__rjti$1
       (i32.lt_s
        (i32.load8_s offset=11
         (local.get $0)
        )
        (i32.const 0)
       )
      )
     )
     (br_if $__rjti$1
      (local.get $5)
     )
    )
    (i32.store8 offset=11
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (br $__rjto$1)
   )
   (local.set $1
    (i32.load
     (local.get $0)
    )
   )
   (i32.store offset=4
    (local.get $0)
    (i32.add
     (local.get $2)
     (i32.const 1)
    )
   )
   (local.set $0
    (local.get $1)
   )
  )
  (i32.store
   (local.tee $0
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
     (local.get $0)
    )
   )
   (i32.load
    (local.get $3)
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.load
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_malloc (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.lt_u
    (local.get $0)
    (i32.const 245)
   )
   (block
    (if
     (i32.and
      (local.tee $1
       (i32.shr_u
        (local.tee $5
         (i32.load
          (i32.const 54828)
         )
        )
        (local.tee $0
         (i32.shr_u
          (local.tee $2
           (select
            (i32.const 16)
            (i32.and
             (i32.add
              (local.get $0)
              (i32.const 11)
             )
             (i32.const -8)
            )
            (i32.lt_u
             (local.get $0)
             (i32.const 11)
            )
           )
          )
          (i32.const 3)
         )
        )
       )
      )
      (i32.const 3)
     )
     (block
      (local.set $1
       (i32.load
        (local.tee $4
         (i32.add
          (local.tee $3
           (i32.load offset=8
            (local.tee $0
             (i32.add
              (i32.shl
               (local.tee $2
                (i32.add
                 (i32.xor
                  (i32.and
                   (local.get $1)
                   (i32.const 1)
                  )
                  (i32.const 1)
                 )
                 (local.get $0)
                )
               )
               (i32.const 3)
              )
              (i32.const 54868)
             )
            )
           )
          )
          (i32.const 8)
         )
        )
       )
      )
      (if
       (i32.eq
        (local.get $0)
        (local.get $1)
       )
       (i32.store
        (i32.const 54828)
        (i32.and
         (i32.xor
          (i32.shl
           (i32.const 1)
           (local.get $2)
          )
          (i32.const -1)
         )
         (local.get $5)
        )
       )
       (block
        (i32.store offset=12
         (local.get $1)
         (local.get $0)
        )
        (i32.store offset=8
         (local.get $0)
         (local.get $1)
        )
       )
      )
      (i32.store offset=4
       (local.get $3)
       (i32.or
        (local.tee $0
         (i32.shl
          (local.get $2)
          (i32.const 3)
         )
        )
        (i32.const 3)
       )
      )
      (i32.store offset=4
       (local.tee $0
        (i32.add
         (local.get $0)
         (local.get $3)
        )
       )
       (i32.or
        (i32.load offset=4
         (local.get $0)
        )
        (i32.const 1)
       )
      )
      (global.set $STACKTOP
       (local.get $10)
      )
      (return
       (local.get $4)
      )
     )
    )
    (local.set $0
     (if (result i32)
      (i32.gt_u
       (local.get $2)
       (local.tee $9
        (i32.load
         (i32.const 54836)
        )
       )
      )
      (block (result i32)
       (if
        (local.get $1)
        (block
         (local.set $3
          (i32.load
           (local.tee $6
            (i32.add
             (local.tee $1
              (i32.load offset=8
               (local.tee $0
                (i32.add
                 (i32.shl
                  (local.tee $4
                   (i32.add
                    (i32.or
                     (i32.or
                      (i32.or
                       (i32.or
                        (local.tee $1
                         (i32.and
                          (i32.shr_u
                           (local.tee $0
                            (i32.add
                             (i32.and
                              (local.tee $0
                               (i32.and
                                (i32.or
                                 (local.tee $3
                                  (i32.shl
                                   (i32.const 2)
                                   (local.get $0)
                                  )
                                 )
                                 (i32.sub
                                  (i32.const 0)
                                  (local.get $3)
                                 )
                                )
                                (i32.shl
                                 (local.get $1)
                                 (local.get $0)
                                )
                               )
                              )
                              (i32.sub
                               (i32.const 0)
                               (local.get $0)
                              )
                             )
                             (i32.const -1)
                            )
                           )
                           (i32.const 12)
                          )
                          (i32.const 16)
                         )
                        )
                        (local.tee $1
                         (i32.and
                          (i32.shr_u
                           (local.tee $0
                            (i32.shr_u
                             (local.get $0)
                             (local.get $1)
                            )
                           )
                           (i32.const 5)
                          )
                          (i32.const 8)
                         )
                        )
                       )
                       (local.tee $1
                        (i32.and
                         (i32.shr_u
                          (local.tee $0
                           (i32.shr_u
                            (local.get $0)
                            (local.get $1)
                           )
                          )
                          (i32.const 2)
                         )
                         (i32.const 4)
                        )
                       )
                      )
                      (local.tee $1
                       (i32.and
                        (i32.shr_u
                         (local.tee $0
                          (i32.shr_u
                           (local.get $0)
                           (local.get $1)
                          )
                         )
                         (i32.const 1)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                     (local.tee $1
                      (i32.and
                       (i32.shr_u
                        (local.tee $0
                         (i32.shr_u
                          (local.get $0)
                          (local.get $1)
                         )
                        )
                        (i32.const 1)
                       )
                       (i32.const 1)
                      )
                     )
                    )
                    (i32.shr_u
                     (local.get $0)
                     (local.get $1)
                    )
                   )
                  )
                  (i32.const 3)
                 )
                 (i32.const 54868)
                )
               )
              )
             )
             (i32.const 8)
            )
           )
          )
         )
         (if
          (i32.eq
           (local.get $0)
           (local.get $3)
          )
          (i32.store
           (i32.const 54828)
           (local.tee $0
            (i32.and
             (i32.xor
              (i32.shl
               (i32.const 1)
               (local.get $4)
              )
              (i32.const -1)
             )
             (local.get $5)
            )
           )
          )
          (block
           (i32.store offset=12
            (local.get $3)
            (local.get $0)
           )
           (i32.store offset=8
            (local.get $0)
            (local.get $3)
           )
           (local.set $0
            (local.get $5)
           )
          )
         )
         (i32.store offset=4
          (local.get $1)
          (i32.or
           (local.get $2)
           (i32.const 3)
          )
         )
         (i32.store offset=4
          (local.tee $5
           (i32.add
            (local.get $1)
            (local.get $2)
           )
          )
          (i32.or
           (local.tee $4
            (i32.sub
             (local.tee $3
              (i32.shl
               (local.get $4)
               (i32.const 3)
              )
             )
             (local.get $2)
            )
           )
           (i32.const 1)
          )
         )
         (i32.store
          (i32.add
           (local.get $1)
           (local.get $3)
          )
          (local.get $4)
         )
         (if
          (local.get $9)
          (block
           (local.set $1
            (i32.load
             (i32.const 54848)
            )
           )
           (local.set $3
            (i32.add
             (i32.shl
              (local.tee $2
               (i32.shr_u
                (local.get $9)
                (i32.const 3)
               )
              )
              (i32.const 3)
             )
             (i32.const 54868)
            )
           )
           (local.set $0
            (if (result i32)
             (i32.and
              (local.tee $2
               (i32.shl
                (i32.const 1)
                (local.get $2)
               )
              )
              (local.get $0)
             )
             (i32.load
              (local.tee $2
               (i32.add
                (local.get $3)
                (i32.const 8)
               )
              )
             )
             (block (result i32)
              (i32.store
               (i32.const 54828)
               (i32.or
                (local.get $0)
                (local.get $2)
               )
              )
              (local.set $2
               (i32.add
                (local.get $3)
                (i32.const 8)
               )
              )
              (local.get $3)
             )
            )
           )
           (i32.store
            (local.get $2)
            (local.get $1)
           )
           (i32.store offset=12
            (local.get $0)
            (local.get $1)
           )
           (i32.store offset=8
            (local.get $1)
            (local.get $0)
           )
           (i32.store offset=12
            (local.get $1)
            (local.get $3)
           )
          )
         )
         (i32.store
          (i32.const 54836)
          (local.get $4)
         )
         (i32.store
          (i32.const 54848)
          (local.get $5)
         )
         (global.set $STACKTOP
          (local.get $10)
         )
         (return
          (local.get $6)
         )
        )
       )
       (if (result i32)
        (local.tee $11
         (i32.load
          (i32.const 54832)
         )
        )
        (block (result i32)
         (local.set $0
          (local.tee $4
           (i32.load
            (i32.add
             (i32.shl
              (i32.add
               (i32.or
                (i32.or
                 (i32.or
                  (i32.or
                   (local.tee $1
                    (i32.and
                     (i32.shr_u
                      (local.tee $0
                       (i32.add
                        (i32.and
                         (i32.sub
                          (i32.const 0)
                          (local.get $11)
                         )
                         (local.get $11)
                        )
                        (i32.const -1)
                       )
                      )
                      (i32.const 12)
                     )
                     (i32.const 16)
                    )
                   )
                   (local.tee $1
                    (i32.and
                     (i32.shr_u
                      (local.tee $0
                       (i32.shr_u
                        (local.get $0)
                        (local.get $1)
                       )
                      )
                      (i32.const 5)
                     )
                     (i32.const 8)
                    )
                   )
                  )
                  (local.tee $1
                   (i32.and
                    (i32.shr_u
                     (local.tee $0
                      (i32.shr_u
                       (local.get $0)
                       (local.get $1)
                      )
                     )
                     (i32.const 2)
                    )
                    (i32.const 4)
                   )
                  )
                 )
                 (local.tee $1
                  (i32.and
                   (i32.shr_u
                    (local.tee $0
                     (i32.shr_u
                      (local.get $0)
                      (local.get $1)
                     )
                    )
                    (i32.const 1)
                   )
                   (i32.const 2)
                  )
                 )
                )
                (local.tee $1
                 (i32.and
                  (i32.shr_u
                   (local.tee $0
                    (i32.shr_u
                     (local.get $0)
                     (local.get $1)
                    )
                   )
                   (i32.const 1)
                  )
                  (i32.const 1)
                 )
                )
               )
               (i32.shr_u
                (local.get $0)
                (local.get $1)
               )
              )
              (i32.const 2)
             )
             (i32.const 55132)
            )
           )
          )
         )
         (local.set $8
          (i32.sub
           (i32.and
            (i32.load offset=4
             (local.get $4)
            )
            (i32.const -8)
           )
           (local.get $2)
          )
         )
         (loop $while-in
          (block $while-out
           (if
            (local.tee $1
             (i32.load offset=16
              (local.get $0)
             )
            )
            (local.set $0
             (local.get $1)
            )
            (br_if $while-out
             (i32.eqz
              (local.tee $0
               (i32.load offset=20
                (local.get $0)
               )
              )
             )
            )
           )
           (local.set $4
            (select
             (local.get $0)
             (local.get $4)
             (local.tee $3
              (i32.lt_u
               (local.tee $1
                (i32.sub
                 (i32.and
                  (i32.load offset=4
                   (local.get $0)
                  )
                  (i32.const -8)
                 )
                 (local.get $2)
                )
               )
               (local.get $8)
              )
             )
            )
           )
           (local.set $8
            (select
             (local.get $1)
             (local.get $8)
             (local.get $3)
            )
           )
           (br $while-in)
          )
         )
         (if (result i32)
          (i32.gt_u
           (local.tee $12
            (i32.add
             (local.get $2)
             (local.get $4)
            )
           )
           (local.get $4)
          )
          (block
           (local.set $7
            (i32.load offset=24
             (local.get $4)
            )
           )
           (if
            (i32.eq
             (local.get $4)
             (local.tee $0
              (i32.load offset=12
               (local.get $4)
              )
             )
            )
            (block $do-once0
             (if
              (i32.eqz
               (local.tee $0
                (i32.load
                 (local.tee $1
                  (i32.add
                   (local.get $4)
                   (i32.const 20)
                  )
                 )
                )
               )
              )
              (if
               (i32.eqz
                (local.tee $0
                 (i32.load
                  (local.tee $1
                   (i32.add
                    (local.get $4)
                    (i32.const 16)
                   )
                  )
                 )
                )
               )
               (block
                (local.set $0
                 (i32.const 0)
                )
                (br $do-once0)
               )
              )
             )
             (loop $while-in3
              (block $while-out2
               (if
                (i32.eqz
                 (local.tee $6
                  (i32.load
                   (local.tee $3
                    (i32.add
                     (local.get $0)
                     (i32.const 20)
                    )
                   )
                  )
                 )
                )
                (br_if $while-out2
                 (i32.eqz
                  (local.tee $6
                   (i32.load
                    (local.tee $3
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                    )
                   )
                  )
                 )
                )
               )
               (local.set $1
                (local.get $3)
               )
               (local.set $0
                (local.get $6)
               )
               (br $while-in3)
              )
             )
             (i32.store
              (local.get $1)
              (i32.const 0)
             )
            )
            (block
             (i32.store offset=12
              (local.tee $1
               (i32.load offset=8
                (local.get $4)
               )
              )
              (local.get $0)
             )
             (i32.store offset=8
              (local.get $0)
              (local.get $1)
             )
            )
           )
           (if
            (local.get $7)
            (block $do-once4
             (if
              (i32.eq
               (local.get $4)
               (i32.load
                (local.tee $3
                 (i32.add
                  (i32.shl
                   (local.tee $1
                    (i32.load offset=28
                     (local.get $4)
                    )
                   )
                   (i32.const 2)
                  )
                  (i32.const 55132)
                 )
                )
               )
              )
              (block
               (i32.store
                (local.get $3)
                (local.get $0)
               )
               (if
                (i32.eqz
                 (local.get $0)
                )
                (block
                 (i32.store
                  (i32.const 54832)
                  (i32.and
                   (i32.xor
                    (i32.shl
                     (i32.const 1)
                     (local.get $1)
                    )
                    (i32.const -1)
                   )
                   (local.get $11)
                  )
                 )
                 (br $do-once4)
                )
               )
              )
              (block
               (i32.store
                (select
                 (i32.add
                  (local.get $7)
                  (i32.const 16)
                 )
                 (i32.add
                  (local.get $7)
                  (i32.const 20)
                 )
                 (i32.eq
                  (local.get $4)
                  (i32.load offset=16
                   (local.get $7)
                  )
                 )
                )
                (local.get $0)
               )
               (br_if $do-once4
                (i32.eqz
                 (local.get $0)
                )
               )
              )
             )
             (i32.store offset=24
              (local.get $0)
              (local.get $7)
             )
             (if
              (local.tee $1
               (i32.load offset=16
                (local.get $4)
               )
              )
              (block
               (i32.store offset=16
                (local.get $0)
                (local.get $1)
               )
               (i32.store offset=24
                (local.get $1)
                (local.get $0)
               )
              )
             )
             (if
              (local.tee $1
               (i32.load offset=20
                (local.get $4)
               )
              )
              (block
               (i32.store offset=20
                (local.get $0)
                (local.get $1)
               )
               (i32.store offset=24
                (local.get $1)
                (local.get $0)
               )
              )
             )
            )
           )
           (if
            (i32.lt_u
             (local.get $8)
             (i32.const 16)
            )
            (block
             (i32.store offset=4
              (local.get $4)
              (i32.or
               (local.tee $0
                (i32.add
                 (local.get $2)
                 (local.get $8)
                )
               )
               (i32.const 3)
              )
             )
             (i32.store offset=4
              (local.tee $0
               (i32.add
                (local.get $0)
                (local.get $4)
               )
              )
              (i32.or
               (i32.load offset=4
                (local.get $0)
               )
               (i32.const 1)
              )
             )
            )
            (block
             (i32.store offset=4
              (local.get $4)
              (i32.or
               (local.get $2)
               (i32.const 3)
              )
             )
             (i32.store offset=4
              (local.get $12)
              (i32.or
               (local.get $8)
               (i32.const 1)
              )
             )
             (i32.store
              (i32.add
               (local.get $8)
               (local.get $12)
              )
              (local.get $8)
             )
             (if
              (local.get $9)
              (block
               (local.set $0
                (i32.load
                 (i32.const 54848)
                )
               )
               (local.set $1
                (i32.add
                 (i32.shl
                  (local.tee $2
                   (i32.shr_u
                    (local.get $9)
                    (i32.const 3)
                   )
                  )
                  (i32.const 3)
                 )
                 (i32.const 54868)
                )
               )
               (local.set $3
                (if (result i32)
                 (i32.and
                  (local.tee $2
                   (i32.shl
                    (i32.const 1)
                    (local.get $2)
                   )
                  )
                  (local.get $5)
                 )
                 (i32.load
                  (local.tee $2
                   (i32.add
                    (local.get $1)
                    (i32.const 8)
                   )
                  )
                 )
                 (block (result i32)
                  (i32.store
                   (i32.const 54828)
                   (i32.or
                    (local.get $2)
                    (local.get $5)
                   )
                  )
                  (local.set $2
                   (i32.add
                    (local.get $1)
                    (i32.const 8)
                   )
                  )
                  (local.get $1)
                 )
                )
               )
               (i32.store
                (local.get $2)
                (local.get $0)
               )
               (i32.store offset=12
                (local.get $3)
                (local.get $0)
               )
               (i32.store offset=8
                (local.get $0)
                (local.get $3)
               )
               (i32.store offset=12
                (local.get $0)
                (local.get $1)
               )
              )
             )
             (i32.store
              (i32.const 54836)
              (local.get $8)
             )
             (i32.store
              (i32.const 54848)
              (local.get $12)
             )
            )
           )
           (global.set $STACKTOP
            (local.get $10)
           )
           (return
            (i32.add
             (local.get $4)
             (i32.const 8)
            )
           )
          )
          (local.get $2)
         )
        )
        (local.get $2)
       )
      )
      (local.get $2)
     )
    )
   )
   (if
    (i32.gt_u
     (local.get $0)
     (i32.const -65)
    )
    (local.set $0
     (i32.const -1)
    )
    (block $do-once
     (local.set $0
      (i32.and
       (local.tee $1
        (i32.add
         (local.get $0)
         (i32.const 11)
        )
       )
       (i32.const -8)
      )
     )
     (if
      (local.tee $5
       (i32.load
        (i32.const 54832)
       )
      )
      (block
       (local.set $4
        (i32.sub
         (i32.const 0)
         (local.get $0)
        )
       )
       (block $__rjto$1
        (block $__rjti$1
         (br_if $__rjti$1
          (local.tee $2
           (if (result i32)
            (i32.or
             (local.tee $1
              (if (result i32)
               (local.tee $1
                (i32.load
                 (i32.add
                  (i32.shl
                   (local.tee $7
                    (if (result i32)
                     (local.tee $1
                      (i32.shr_u
                       (local.get $1)
                       (i32.const 8)
                      )
                     )
                     (if (result i32)
                      (i32.gt_u
                       (local.get $0)
                       (i32.const 16777215)
                      )
                      (i32.const 31)
                      (block (result i32)
                       (local.set $1
                        (i32.and
                         (i32.shr_u
                          (i32.add
                           (local.tee $6
                            (i32.shl
                             (local.get $1)
                             (local.tee $2
                              (i32.and
                               (i32.shr_u
                                (i32.add
                                 (local.get $1)
                                 (i32.const 1048320)
                                )
                                (i32.const 16)
                               )
                               (i32.const 8)
                              )
                             )
                            )
                           )
                           (i32.const 520192)
                          )
                          (i32.const 16)
                         )
                         (i32.const 4)
                        )
                       )
                       (i32.or
                        (i32.shl
                         (local.tee $1
                          (i32.add
                           (i32.sub
                            (i32.const 14)
                            (i32.or
                             (local.tee $8
                              (i32.and
                               (i32.shr_u
                                (i32.add
                                 (local.tee $6
                                  (i32.shl
                                   (local.get $6)
                                   (local.get $1)
                                  )
                                 )
                                 (i32.const 245760)
                                )
                                (i32.const 16)
                               )
                               (i32.const 2)
                              )
                             )
                             (i32.or
                              (local.get $1)
                              (local.get $2)
                             )
                            )
                           )
                           (i32.shr_u
                            (i32.shl
                             (local.get $6)
                             (local.get $8)
                            )
                            (i32.const 15)
                           )
                          )
                         )
                         (i32.const 1)
                        )
                        (i32.and
                         (i32.shr_u
                          (local.get $0)
                          (i32.add
                           (local.get $1)
                           (i32.const 7)
                          )
                         )
                         (i32.const 1)
                        )
                       )
                      )
                     )
                     (i32.const 0)
                    )
                   )
                   (i32.const 2)
                  )
                  (i32.const 55132)
                 )
                )
               )
               (block (result i32)
                (local.set $2
                 (i32.const 0)
                )
                (local.set $6
                 (i32.shl
                  (local.get $0)
                  (select
                   (i32.const 0)
                   (i32.sub
                    (i32.const 25)
                    (i32.shr_u
                     (local.get $7)
                     (i32.const 1)
                    )
                   )
                   (i32.eq
                    (local.get $7)
                    (i32.const 31)
                   )
                  )
                 )
                )
                (loop $while-in8 (result i32)
                 (if
                  (i32.lt_u
                   (local.tee $8
                    (i32.sub
                     (i32.and
                      (i32.load offset=4
                       (local.get $1)
                      )
                      (i32.const -8)
                     )
                     (local.get $0)
                    )
                   )
                   (local.get $4)
                  )
                  (local.set $2
                   (if (result i32)
                    (local.get $8)
                    (block (result i32)
                     (local.set $4
                      (local.get $8)
                     )
                     (local.get $1)
                    )
                    (block
                     (local.set $4
                      (i32.const 0)
                     )
                     (local.set $2
                      (local.get $1)
                     )
                     (br $__rjti$1)
                    )
                   )
                  )
                 )
                 (local.set $3
                  (select
                   (local.get $3)
                   (local.tee $3
                    (i32.load offset=20
                     (local.get $1)
                    )
                   )
                   (i32.or
                    (i32.eqz
                     (local.get $3)
                    )
                    (i32.eq
                     (local.get $3)
                     (local.tee $1
                      (i32.load
                       (i32.add
                        (i32.add
                         (local.get $1)
                         (i32.const 16)
                        )
                        (i32.shl
                         (i32.shr_u
                          (local.get $6)
                          (i32.const 31)
                         )
                         (i32.const 2)
                        )
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                 (local.set $6
                  (i32.shl
                   (local.get $6)
                   (i32.const 1)
                  )
                 )
                 (br_if $while-in8
                  (local.get $1)
                 )
                 (local.get $2)
                )
               )
               (i32.const 0)
              )
             )
             (local.get $3)
            )
            (local.get $3)
            (block (result i32)
             (br_if $do-once
              (i32.eqz
               (local.tee $2
                (i32.and
                 (local.get $5)
                 (i32.or
                  (local.tee $1
                   (i32.shl
                    (i32.const 2)
                    (local.get $7)
                   )
                  )
                  (i32.sub
                   (i32.const 0)
                   (local.get $1)
                  )
                 )
                )
               )
              )
             )
             (local.set $1
              (i32.const 0)
             )
             (i32.load
              (i32.add
               (i32.shl
                (i32.add
                 (i32.or
                  (i32.or
                   (i32.or
                    (i32.or
                     (local.tee $3
                      (i32.and
                       (i32.shr_u
                        (local.tee $2
                         (i32.add
                          (i32.and
                           (local.get $2)
                           (i32.sub
                            (i32.const 0)
                            (local.get $2)
                           )
                          )
                          (i32.const -1)
                         )
                        )
                        (i32.const 12)
                       )
                       (i32.const 16)
                      )
                     )
                     (local.tee $3
                      (i32.and
                       (i32.shr_u
                        (local.tee $2
                         (i32.shr_u
                          (local.get $2)
                          (local.get $3)
                         )
                        )
                        (i32.const 5)
                       )
                       (i32.const 8)
                      )
                     )
                    )
                    (local.tee $3
                     (i32.and
                      (i32.shr_u
                       (local.tee $2
                        (i32.shr_u
                         (local.get $2)
                         (local.get $3)
                        )
                       )
                       (i32.const 2)
                      )
                      (i32.const 4)
                     )
                    )
                   )
                   (local.tee $3
                    (i32.and
                     (i32.shr_u
                      (local.tee $2
                       (i32.shr_u
                        (local.get $2)
                        (local.get $3)
                       )
                      )
                      (i32.const 1)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                  (local.tee $3
                   (i32.and
                    (i32.shr_u
                     (local.tee $2
                      (i32.shr_u
                       (local.get $2)
                       (local.get $3)
                      )
                     )
                     (i32.const 1)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (i32.shr_u
                  (local.get $2)
                  (local.get $3)
                 )
                )
                (i32.const 2)
               )
               (i32.const 55132)
              )
             )
            )
           )
          )
         )
         (local.set $3
          (local.get $1)
         )
         (br $__rjto$1)
        )
        (local.set $3
         (local.get $1)
        )
        (local.set $1
         (local.get $4)
        )
        (local.set $4
         (loop $while-in10 (result i32)
          (local.set $6
           (i32.lt_u
            (local.tee $8
             (i32.sub
              (i32.and
               (i32.load offset=4
                (local.get $2)
               )
               (i32.const -8)
              )
              (local.get $0)
             )
            )
            (local.get $1)
           )
          )
          (local.set $1
           (select
            (local.get $8)
            (local.get $1)
            (local.get $6)
           )
          )
          (local.set $3
           (select
            (local.get $2)
            (local.get $3)
            (local.get $6)
           )
          )
          (if (result i32)
           (block (result i32)
            (if
             (i32.eqz
              (local.tee $4
               (i32.load offset=16
                (local.get $2)
               )
              )
             )
             (local.set $4
              (i32.load offset=20
               (local.get $2)
              )
             )
            )
            (local.get $4)
           )
           (block
            (local.set $2
             (local.get $4)
            )
            (br $while-in10)
           )
           (local.get $1)
          )
         )
        )
       )
       (if
        (local.get $3)
        (if
         (i32.lt_u
          (local.get $4)
          (i32.sub
           (i32.load
            (i32.const 54836)
           )
           (local.get $0)
          )
         )
         (if
          (i32.gt_u
           (local.tee $7
            (i32.add
             (local.get $0)
             (local.get $3)
            )
           )
           (local.get $3)
          )
          (block
           (local.set $9
            (i32.load offset=24
             (local.get $3)
            )
           )
           (if
            (i32.eq
             (local.get $3)
             (local.tee $1
              (i32.load offset=12
               (local.get $3)
              )
             )
            )
            (block $do-once11
             (if
              (i32.eqz
               (local.tee $1
                (i32.load
                 (local.tee $2
                  (i32.add
                   (local.get $3)
                   (i32.const 20)
                  )
                 )
                )
               )
              )
              (if
               (i32.eqz
                (local.tee $1
                 (i32.load
                  (local.tee $2
                   (i32.add
                    (local.get $3)
                    (i32.const 16)
                   )
                  )
                 )
                )
               )
               (block
                (local.set $1
                 (i32.const 0)
                )
                (br $do-once11)
               )
              )
             )
             (loop $while-in14
              (block $while-out13
               (if
                (i32.eqz
                 (local.tee $8
                  (i32.load
                   (local.tee $6
                    (i32.add
                     (local.get $1)
                     (i32.const 20)
                    )
                   )
                  )
                 )
                )
                (br_if $while-out13
                 (i32.eqz
                  (local.tee $8
                   (i32.load
                    (local.tee $6
                     (i32.add
                      (local.get $1)
                      (i32.const 16)
                     )
                    )
                   )
                  )
                 )
                )
               )
               (local.set $2
                (local.get $6)
               )
               (local.set $1
                (local.get $8)
               )
               (br $while-in14)
              )
             )
             (i32.store
              (local.get $2)
              (i32.const 0)
             )
            )
            (block
             (i32.store offset=12
              (local.tee $2
               (i32.load offset=8
                (local.get $3)
               )
              )
              (local.get $1)
             )
             (i32.store offset=8
              (local.get $1)
              (local.get $2)
             )
            )
           )
           (if
            (local.get $9)
            (block $do-once15
             (if
              (i32.eq
               (local.get $3)
               (i32.load
                (local.tee $6
                 (i32.add
                  (i32.shl
                   (local.tee $2
                    (i32.load offset=28
                     (local.get $3)
                    )
                   )
                   (i32.const 2)
                  )
                  (i32.const 55132)
                 )
                )
               )
              )
              (block
               (i32.store
                (local.get $6)
                (local.get $1)
               )
               (if
                (i32.eqz
                 (local.get $1)
                )
                (block
                 (i32.store
                  (i32.const 54832)
                  (local.tee $1
                   (i32.and
                    (local.get $5)
                    (i32.xor
                     (i32.shl
                      (i32.const 1)
                      (local.get $2)
                     )
                     (i32.const -1)
                    )
                   )
                  )
                 )
                 (br $do-once15)
                )
               )
              )
              (block
               (i32.store
                (select
                 (i32.add
                  (local.get $9)
                  (i32.const 16)
                 )
                 (i32.add
                  (local.get $9)
                  (i32.const 20)
                 )
                 (i32.eq
                  (local.get $3)
                  (i32.load offset=16
                   (local.get $9)
                  )
                 )
                )
                (local.get $1)
               )
               (if
                (i32.eqz
                 (local.get $1)
                )
                (block
                 (local.set $1
                  (local.get $5)
                 )
                 (br $do-once15)
                )
               )
              )
             )
             (i32.store offset=24
              (local.get $1)
              (local.get $9)
             )
             (if
              (local.tee $2
               (i32.load offset=16
                (local.get $3)
               )
              )
              (block
               (i32.store offset=16
                (local.get $1)
                (local.get $2)
               )
               (i32.store offset=24
                (local.get $2)
                (local.get $1)
               )
              )
             )
             (if
              (local.tee $2
               (i32.load offset=20
                (local.get $3)
               )
              )
              (block
               (i32.store offset=20
                (local.get $1)
                (local.get $2)
               )
               (i32.store offset=24
                (local.get $2)
                (local.get $1)
               )
              )
             )
             (local.set $1
              (local.get $5)
             )
            )
            (local.set $1
             (local.get $5)
            )
           )
           (if
            (i32.lt_u
             (local.get $4)
             (i32.const 16)
            )
            (block
             (i32.store offset=4
              (local.get $3)
              (i32.or
               (local.tee $0
                (i32.add
                 (local.get $0)
                 (local.get $4)
                )
               )
               (i32.const 3)
              )
             )
             (i32.store offset=4
              (local.tee $0
               (i32.add
                (local.get $0)
                (local.get $3)
               )
              )
              (i32.or
               (i32.load offset=4
                (local.get $0)
               )
               (i32.const 1)
              )
             )
            )
            (block $label$break$L128
             (i32.store offset=4
              (local.get $3)
              (i32.or
               (local.get $0)
               (i32.const 3)
              )
             )
             (i32.store offset=4
              (local.get $7)
              (i32.or
               (local.get $4)
               (i32.const 1)
              )
             )
             (i32.store
              (i32.add
               (local.get $4)
               (local.get $7)
              )
              (local.get $4)
             )
             (local.set $2
              (i32.shr_u
               (local.get $4)
               (i32.const 3)
              )
             )
             (if
              (i32.lt_u
               (local.get $4)
               (i32.const 256)
              )
              (block
               (local.set $0
                (i32.add
                 (i32.shl
                  (local.get $2)
                  (i32.const 3)
                 )
                 (i32.const 54868)
                )
               )
               (local.set $1
                (if (result i32)
                 (i32.and
                  (local.tee $1
                   (i32.load
                    (i32.const 54828)
                   )
                  )
                  (local.tee $2
                   (i32.shl
                    (i32.const 1)
                    (local.get $2)
                   )
                  )
                 )
                 (i32.load
                  (local.tee $2
                   (i32.add
                    (local.get $0)
                    (i32.const 8)
                   )
                  )
                 )
                 (block (result i32)
                  (i32.store
                   (i32.const 54828)
                   (i32.or
                    (local.get $1)
                    (local.get $2)
                   )
                  )
                  (local.set $2
                   (i32.add
                    (local.get $0)
                    (i32.const 8)
                   )
                  )
                  (local.get $0)
                 )
                )
               )
               (i32.store
                (local.get $2)
                (local.get $7)
               )
               (i32.store offset=12
                (local.get $1)
                (local.get $7)
               )
               (i32.store offset=8
                (local.get $7)
                (local.get $1)
               )
               (i32.store offset=12
                (local.get $7)
                (local.get $0)
               )
               (br $label$break$L128)
              )
             )
             (local.set $0
              (i32.add
               (i32.shl
                (local.tee $2
                 (if (result i32)
                  (local.tee $0
                   (i32.shr_u
                    (local.get $4)
                    (i32.const 8)
                   )
                  )
                  (if (result i32)
                   (i32.gt_u
                    (local.get $4)
                    (i32.const 16777215)
                   )
                   (i32.const 31)
                   (block (result i32)
                    (local.set $0
                     (i32.and
                      (i32.shr_u
                       (i32.add
                        (local.tee $6
                         (i32.shl
                          (local.get $0)
                          (local.tee $2
                           (i32.and
                            (i32.shr_u
                             (i32.add
                              (local.get $0)
                              (i32.const 1048320)
                             )
                             (i32.const 16)
                            )
                            (i32.const 8)
                           )
                          )
                         )
                        )
                        (i32.const 520192)
                       )
                       (i32.const 16)
                      )
                      (i32.const 4)
                     )
                    )
                    (i32.or
                     (i32.shl
                      (local.tee $0
                       (i32.add
                        (i32.sub
                         (i32.const 14)
                         (i32.or
                          (local.tee $5
                           (i32.and
                            (i32.shr_u
                             (i32.add
                              (local.tee $6
                               (i32.shl
                                (local.get $6)
                                (local.get $0)
                               )
                              )
                              (i32.const 245760)
                             )
                             (i32.const 16)
                            )
                            (i32.const 2)
                           )
                          )
                          (i32.or
                           (local.get $0)
                           (local.get $2)
                          )
                         )
                        )
                        (i32.shr_u
                         (i32.shl
                          (local.get $6)
                          (local.get $5)
                         )
                         (i32.const 15)
                        )
                       )
                      )
                      (i32.const 1)
                     )
                     (i32.and
                      (i32.shr_u
                       (local.get $4)
                       (i32.add
                        (local.get $0)
                        (i32.const 7)
                       )
                      )
                      (i32.const 1)
                     )
                    )
                   )
                  )
                  (i32.const 0)
                 )
                )
                (i32.const 2)
               )
               (i32.const 55132)
              )
             )
             (i32.store offset=28
              (local.get $7)
              (local.get $2)
             )
             (i32.store offset=20
              (local.get $7)
              (i32.const 0)
             )
             (i32.store offset=16
              (local.get $7)
              (i32.const 0)
             )
             (if
              (i32.eqz
               (i32.and
                (local.tee $6
                 (i32.shl
                  (i32.const 1)
                  (local.get $2)
                 )
                )
                (local.get $1)
               )
              )
              (block
               (i32.store
                (i32.const 54832)
                (i32.or
                 (local.get $1)
                 (local.get $6)
                )
               )
               (i32.store
                (local.get $0)
                (local.get $7)
               )
               (i32.store offset=24
                (local.get $7)
                (local.get $0)
               )
               (i32.store offset=12
                (local.get $7)
                (local.get $7)
               )
               (i32.store offset=8
                (local.get $7)
                (local.get $7)
               )
               (br $label$break$L128)
              )
             )
             (if
              (i32.eq
               (local.get $4)
               (i32.and
                (i32.load offset=4
                 (local.tee $0
                  (i32.load
                   (local.get $0)
                  )
                 )
                )
                (i32.const -8)
               )
              )
              (local.set $1
               (local.get $0)
              )
              (block $label$break$L145
               (local.set $2
                (i32.shl
                 (local.get $4)
                 (select
                  (i32.const 0)
                  (i32.sub
                   (i32.const 25)
                   (i32.shr_u
                    (local.get $2)
                    (i32.const 1)
                   )
                  )
                  (i32.eq
                   (local.get $2)
                   (i32.const 31)
                  )
                 )
                )
               )
               (loop $while-in20
                (if
                 (local.tee $1
                  (i32.load
                   (local.tee $6
                    (i32.add
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                     (i32.shl
                      (i32.shr_u
                       (local.get $2)
                       (i32.const 31)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                 )
                 (block
                  (local.set $2
                   (i32.shl
                    (local.get $2)
                    (i32.const 1)
                   )
                  )
                  (br_if $label$break$L145
                   (i32.eq
                    (local.get $4)
                    (i32.and
                     (i32.load offset=4
                      (local.get $1)
                     )
                     (i32.const -8)
                    )
                   )
                  )
                  (local.set $0
                   (local.get $1)
                  )
                  (br $while-in20)
                 )
                )
               )
               (i32.store
                (local.get $6)
                (local.get $7)
               )
               (i32.store offset=24
                (local.get $7)
                (local.get $0)
               )
               (i32.store offset=12
                (local.get $7)
                (local.get $7)
               )
               (i32.store offset=8
                (local.get $7)
                (local.get $7)
               )
               (br $label$break$L128)
              )
             )
             (i32.store offset=12
              (local.tee $0
               (i32.load offset=8
                (local.get $1)
               )
              )
              (local.get $7)
             )
             (i32.store offset=8
              (local.get $1)
              (local.get $7)
             )
             (i32.store offset=8
              (local.get $7)
              (local.get $0)
             )
             (i32.store offset=12
              (local.get $7)
              (local.get $1)
             )
             (i32.store offset=24
              (local.get $7)
              (i32.const 0)
             )
            )
           )
           (global.set $STACKTOP
            (local.get $10)
           )
           (return
            (i32.add
             (local.get $3)
             (i32.const 8)
            )
           )
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (block $folding-inner2
   (block $folding-inner1
    (if
     (i32.ge_u
      (local.tee $2
       (i32.load
        (i32.const 54836)
       )
      )
      (local.get $0)
     )
     (block
      (local.set $1
       (i32.load
        (i32.const 54848)
       )
      )
      (if
       (i32.gt_u
        (local.tee $3
         (i32.sub
          (local.get $2)
          (local.get $0)
         )
        )
        (i32.const 15)
       )
       (block
        (i32.store
         (i32.const 54848)
         (local.tee $4
          (i32.add
           (local.get $0)
           (local.get $1)
          )
         )
        )
        (i32.store
         (i32.const 54836)
         (local.get $3)
        )
        (i32.store offset=4
         (local.get $4)
         (i32.or
          (local.get $3)
          (i32.const 1)
         )
        )
        (i32.store
         (i32.add
          (local.get $1)
          (local.get $2)
         )
         (local.get $3)
        )
        (i32.store offset=4
         (local.get $1)
         (i32.or
          (local.get $0)
          (i32.const 3)
         )
        )
       )
       (block
        (i32.store
         (i32.const 54836)
         (i32.const 0)
        )
        (i32.store
         (i32.const 54848)
         (i32.const 0)
        )
        (i32.store offset=4
         (local.get $1)
         (i32.or
          (local.get $2)
          (i32.const 3)
         )
        )
        (i32.store offset=4
         (local.tee $0
          (i32.add
           (local.get $1)
           (local.get $2)
          )
         )
         (i32.or
          (i32.load offset=4
           (local.get $0)
          )
          (i32.const 1)
         )
        )
       )
      )
      (br $folding-inner1)
     )
    )
    (block $folding-inner0
     (if
      (i32.gt_u
       (local.tee $1
        (i32.load
         (i32.const 54840)
        )
       )
       (local.get $0)
      )
      (br $folding-inner0)
     )
     (if
      (i32.le_u
       (local.tee $6
        (i32.and
         (local.tee $3
          (i32.add
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 47)
            )
           )
           (local.tee $2
            (if (result i32)
             (i32.load
              (i32.const 55300)
             )
             (i32.load
              (i32.const 55308)
             )
             (block (result i32)
              (i32.store
               (i32.const 55308)
               (i32.const 4096)
              )
              (i32.store
               (i32.const 55304)
               (i32.const 4096)
              )
              (i32.store
               (i32.const 55312)
               (i32.const -1)
              )
              (i32.store
               (i32.const 55316)
               (i32.const -1)
              )
              (i32.store
               (i32.const 55320)
               (i32.const 0)
              )
              (i32.store
               (i32.const 55272)
               (i32.const 0)
              )
              (i32.store
               (i32.const 55300)
               (i32.xor
                (i32.and
                 (local.get $10)
                 (i32.const -16)
                )
                (i32.const 1431655768)
               )
              )
              (i32.const 4096)
             )
            )
           )
          )
         )
         (local.tee $8
          (i32.sub
           (i32.const 0)
           (local.get $2)
          )
         )
        )
       )
       (local.get $0)
      )
      (br $folding-inner2)
     )
     (if
      (local.tee $2
       (i32.load
        (i32.const 55268)
       )
      )
      (if
       (i32.or
        (i32.le_u
         (local.tee $7
          (i32.add
           (local.get $6)
           (local.tee $4
            (i32.load
             (i32.const 55260)
            )
           )
          )
         )
         (local.get $4)
        )
        (i32.gt_u
         (local.get $7)
         (local.get $2)
        )
       )
       (br $folding-inner2)
      )
     )
     (local.set $7
      (i32.add
       (local.get $0)
       (i32.const 48)
      )
     )
     (block $__rjto$7
      (block $__rjti$7
       (if
        (i32.and
         (i32.load
          (i32.const 55272)
         )
         (i32.const 4)
        )
        (local.set $2
         (i32.const 0)
        )
        (block
         (block $do-once27
          (block $__rjti$3
           (block $__rjti$2
            (br_if $__rjti$2
             (i32.eqz
              (local.tee $2
               (i32.load
                (i32.const 54852)
               )
              )
             )
            )
            (local.set $4
             (i32.const 55276)
            )
            (loop $while-in24
             (block $while-out23
              (if
               (i32.le_u
                (local.tee $9
                 (i32.load
                  (local.get $4)
                 )
                )
                (local.get $2)
               )
               (br_if $while-out23
                (i32.gt_u
                 (i32.add
                  (local.get $9)
                  (i32.load offset=4
                   (local.get $4)
                  )
                 )
                 (local.get $2)
                )
               )
              )
              (br_if $while-in24
               (local.tee $4
                (i32.load offset=8
                 (local.get $4)
                )
               )
              )
              (br $__rjti$2)
             )
            )
            (if
             (i32.lt_u
              (local.tee $2
               (i32.and
                (local.get $8)
                (i32.sub
                 (local.get $3)
                 (local.get $1)
                )
               )
              )
              (i32.const 2147483647)
             )
             (if
              (i32.eq
               (local.tee $1
                (call $_sbrk
                 (local.get $2)
                )
               )
               (i32.add
                (i32.load
                 (local.get $4)
                )
                (i32.load offset=4
                 (local.get $4)
                )
               )
              )
              (br_if $__rjti$7
               (i32.ne
                (local.get $1)
                (i32.const -1)
               )
              )
              (br $__rjti$3)
             )
             (local.set $2
              (i32.const 0)
             )
            )
            (br $do-once27)
           )
           (local.set $2
            (if (result i32)
             (i32.eq
              (local.tee $1
               (call $_sbrk
                (i32.const 0)
               )
              )
              (i32.const -1)
             )
             (i32.const 0)
             (block (result i32)
              (local.set $3
               (i32.add
                (local.tee $4
                 (i32.load
                  (i32.const 55260)
                 )
                )
                (local.tee $2
                 (i32.add
                  (local.get $6)
                  (select
                   (i32.sub
                    (i32.and
                     (i32.add
                      (local.get $1)
                      (local.tee $3
                       (i32.add
                        (local.tee $2
                         (i32.load
                          (i32.const 55304)
                         )
                        )
                        (i32.const -1)
                       )
                      )
                     )
                     (i32.sub
                      (i32.const 0)
                      (local.get $2)
                     )
                    )
                    (local.get $1)
                   )
                   (i32.const 0)
                   (i32.and
                    (local.get $1)
                    (local.get $3)
                   )
                  )
                 )
                )
               )
              )
              (if (result i32)
               (i32.and
                (i32.lt_u
                 (local.get $2)
                 (i32.const 2147483647)
                )
                (i32.gt_u
                 (local.get $2)
                 (local.get $0)
                )
               )
               (block
                (if
                 (local.tee $8
                  (i32.load
                   (i32.const 55268)
                  )
                 )
                 (if
                  (i32.or
                   (i32.le_u
                    (local.get $3)
                    (local.get $4)
                   )
                   (i32.gt_u
                    (local.get $3)
                    (local.get $8)
                   )
                  )
                  (block
                   (local.set $2
                    (i32.const 0)
                   )
                   (br $do-once27)
                  )
                 )
                )
                (br_if $__rjti$7
                 (i32.eq
                  (local.get $1)
                  (local.tee $3
                   (call $_sbrk
                    (local.get $2)
                   )
                  )
                 )
                )
                (local.set $1
                 (local.get $3)
                )
                (br $__rjti$3)
               )
               (i32.const 0)
              )
             )
            )
           )
           (br $do-once27)
          )
          (if
           (i32.eqz
            (i32.and
             (i32.and
              (i32.ne
               (local.get $1)
               (i32.const -1)
              )
              (i32.lt_u
               (local.get $2)
               (i32.const 2147483647)
              )
             )
             (i32.gt_u
              (local.get $7)
              (local.get $2)
             )
            )
           )
           (if
            (i32.eq
             (local.get $1)
             (i32.const -1)
            )
            (block
             (local.set $2
              (i32.const 0)
             )
             (br $do-once27)
            )
            (br $__rjti$7)
           )
          )
          (br_if $__rjti$7
           (i32.ge_u
            (local.tee $3
             (i32.and
              (i32.add
               (local.tee $3
                (i32.load
                 (i32.const 55308)
                )
               )
               (i32.sub
                (local.get $5)
                (local.get $2)
               )
              )
              (i32.sub
               (i32.const 0)
               (local.get $3)
              )
             )
            )
            (i32.const 2147483647)
           )
          )
          (local.set $4
           (i32.sub
            (i32.const 0)
            (local.get $2)
           )
          )
          (local.set $2
           (if (result i32)
            (i32.eq
             (call $_sbrk
              (local.get $3)
             )
             (i32.const -1)
            )
            (block (result i32)
             (drop
              (call $_sbrk
               (local.get $4)
              )
             )
             (i32.const 0)
            )
            (block
             (local.set $2
              (i32.add
               (local.get $2)
               (local.get $3)
              )
             )
             (br $__rjti$7)
            )
           )
          )
         )
         (i32.store
          (i32.const 55272)
          (i32.or
           (i32.load
            (i32.const 55272)
           )
           (i32.const 4)
          )
         )
        )
       )
       (if
        (i32.lt_u
         (local.get $6)
         (i32.const 2147483647)
        )
        (block
         (local.set $1
          (call $_sbrk
           (local.get $6)
          )
         )
         (local.set $4
          (i32.gt_u
           (local.tee $6
            (i32.sub
             (local.tee $3
              (call $_sbrk
               (i32.const 0)
              )
             )
             (local.get $1)
            )
           )
           (i32.add
            (local.get $0)
            (i32.const 40)
           )
          )
         )
         (local.set $2
          (select
           (local.get $6)
           (local.get $2)
           (local.get $4)
          )
         )
         (br_if $__rjti$7
          (i32.eqz
           (i32.or
            (i32.or
             (i32.xor
              (local.get $4)
              (i32.const 1)
             )
             (i32.eq
              (local.get $1)
              (i32.const -1)
             )
            )
            (i32.xor
             (i32.and
              (i32.and
               (i32.ne
                (local.get $1)
                (i32.const -1)
               )
               (i32.ne
                (local.get $3)
                (i32.const -1)
               )
              )
              (i32.lt_u
               (local.get $1)
               (local.get $3)
              )
             )
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (br $__rjto$7)
      )
      (i32.store
       (i32.const 55260)
       (local.tee $3
        (i32.add
         (local.get $2)
         (i32.load
          (i32.const 55260)
         )
        )
       )
      )
      (if
       (i32.gt_u
        (local.get $3)
        (i32.load
         (i32.const 55264)
        )
       )
       (i32.store
        (i32.const 55264)
        (local.get $3)
       )
      )
      (if
       (local.tee $3
        (i32.load
         (i32.const 54852)
        )
       )
       (block $label$break$L215
        (local.set $4
         (i32.const 55276)
        )
        (block $__rjto$4
         (block $__rjti$4
          (loop $while-in31
           (br_if $__rjti$4
            (i32.eq
             (local.get $1)
             (i32.add
              (local.tee $6
               (i32.load
                (local.get $4)
               )
              )
              (local.tee $5
               (i32.load offset=4
                (local.get $4)
               )
              )
             )
            )
           )
           (br_if $while-in31
            (local.tee $4
             (i32.load offset=8
              (local.get $4)
             )
            )
           )
          )
          (br $__rjto$4)
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=12
             (local.get $4)
            )
            (i32.const 8)
           )
          )
          (if
           (i32.and
            (i32.le_u
             (local.get $6)
             (local.get $3)
            )
            (i32.gt_u
             (local.get $1)
             (local.get $3)
            )
           )
           (block
            (i32.store offset=4
             (local.get $4)
             (i32.add
              (local.get $2)
              (local.get $5)
             )
            )
            (local.set $1
             (i32.add
              (local.get $3)
              (local.tee $4
               (select
                (i32.and
                 (i32.sub
                  (i32.const 0)
                  (local.tee $1
                   (i32.add
                    (local.get $3)
                    (i32.const 8)
                   )
                  )
                 )
                 (i32.const 7)
                )
                (i32.const 0)
                (i32.and
                 (local.get $1)
                 (i32.const 7)
                )
               )
              )
             )
            )
            (local.set $2
             (i32.sub
              (local.tee $6
               (i32.add
                (local.get $2)
                (i32.load
                 (i32.const 54840)
                )
               )
              )
              (local.get $4)
             )
            )
            (i32.store
             (i32.const 54852)
             (local.get $1)
            )
            (i32.store
             (i32.const 54840)
             (local.get $2)
            )
            (i32.store offset=4
             (local.get $1)
             (i32.or
              (local.get $2)
              (i32.const 1)
             )
            )
            (i32.store offset=4
             (i32.add
              (local.get $3)
              (local.get $6)
             )
             (i32.const 40)
            )
            (i32.store
             (i32.const 54856)
             (i32.load
              (i32.const 55316)
             )
            )
            (br $label$break$L215)
           )
          )
         )
        )
        (if
         (i32.lt_u
          (local.get $1)
          (i32.load
           (i32.const 54844)
          )
         )
         (i32.store
          (i32.const 54844)
          (local.get $1)
         )
        )
        (local.set $6
         (i32.add
          (local.get $1)
          (local.get $2)
         )
        )
        (local.set $4
         (i32.const 55276)
        )
        (block $__rjto$5
         (block $__rjti$5
          (loop $while-in33
           (br_if $__rjti$5
            (i32.eq
             (local.get $6)
             (i32.load
              (local.get $4)
             )
            )
           )
           (br_if $while-in33
            (local.tee $4
             (i32.load offset=8
              (local.get $4)
             )
            )
           )
          )
          (br $__rjto$5)
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=12
             (local.get $4)
            )
            (i32.const 8)
           )
          )
          (block
           (i32.store
            (local.get $4)
            (local.get $1)
           )
           (i32.store offset=4
            (local.get $4)
            (i32.add
             (local.get $2)
             (i32.load offset=4
              (local.get $4)
             )
            )
           )
           (local.set $5
            (i32.add
             (local.get $0)
             (local.tee $7
              (i32.add
               (local.get $1)
               (select
                (i32.and
                 (i32.sub
                  (i32.const 0)
                  (local.tee $2
                   (i32.add
                    (local.get $1)
                    (i32.const 8)
                   )
                  )
                 )
                 (i32.const 7)
                )
                (i32.const 0)
                (i32.and
                 (local.get $2)
                 (i32.const 7)
                )
               )
              )
             )
            )
           )
           (local.set $4
            (i32.sub
             (i32.sub
              (local.tee $2
               (i32.add
                (local.get $6)
                (select
                 (i32.and
                  (i32.sub
                   (i32.const 0)
                   (local.tee $1
                    (i32.add
                     (local.get $6)
                     (i32.const 8)
                    )
                   )
                  )
                  (i32.const 7)
                 )
                 (i32.const 0)
                 (i32.and
                  (local.get $1)
                  (i32.const 7)
                 )
                )
               )
              )
              (local.get $7)
             )
             (local.get $0)
            )
           )
           (i32.store offset=4
            (local.get $7)
            (i32.or
             (local.get $0)
             (i32.const 3)
            )
           )
           (if
            (i32.eq
             (local.get $2)
             (local.get $3)
            )
            (block
             (i32.store
              (i32.const 54840)
              (local.tee $0
               (i32.add
                (local.get $4)
                (i32.load
                 (i32.const 54840)
                )
               )
              )
             )
             (i32.store
              (i32.const 54852)
              (local.get $5)
             )
             (i32.store offset=4
              (local.get $5)
              (i32.or
               (local.get $0)
               (i32.const 1)
              )
             )
            )
            (block $label$break$L238
             (if
              (i32.eq
               (local.get $2)
               (i32.load
                (i32.const 54848)
               )
              )
              (block
               (i32.store
                (i32.const 54836)
                (local.tee $0
                 (i32.add
                  (local.get $4)
                  (i32.load
                   (i32.const 54836)
                  )
                 )
                )
               )
               (i32.store
                (i32.const 54848)
                (local.get $5)
               )
               (i32.store offset=4
                (local.get $5)
                (i32.or
                 (local.get $0)
                 (i32.const 1)
                )
               )
               (i32.store
                (i32.add
                 (local.get $0)
                 (local.get $5)
                )
                (local.get $0)
               )
               (br $label$break$L238)
              )
             )
             (if
              (i32.eq
               (i32.and
                (local.tee $9
                 (i32.load offset=4
                  (local.get $2)
                 )
                )
                (i32.const 3)
               )
               (i32.const 1)
              )
              (block
               (local.set $3
                (i32.shr_u
                 (local.get $9)
                 (i32.const 3)
                )
               )
               (if
                (i32.lt_u
                 (local.get $9)
                 (i32.const 256)
                )
                (if
                 (i32.eq
                  (local.tee $0
                   (i32.load offset=8
                    (local.get $2)
                   )
                  )
                  (local.tee $1
                   (i32.load offset=12
                    (local.get $2)
                   )
                  )
                 )
                 (i32.store
                  (i32.const 54828)
                  (i32.and
                   (i32.load
                    (i32.const 54828)
                   )
                   (i32.xor
                    (i32.shl
                     (i32.const 1)
                     (local.get $3)
                    )
                    (i32.const -1)
                   )
                  )
                 )
                 (block
                  (i32.store offset=12
                   (local.get $0)
                   (local.get $1)
                  )
                  (i32.store offset=8
                   (local.get $1)
                   (local.get $0)
                  )
                 )
                )
                (block $label$break$L246
                 (local.set $8
                  (i32.load offset=24
                   (local.get $2)
                  )
                 )
                 (if
                  (i32.eq
                   (local.get $2)
                   (local.tee $0
                    (i32.load offset=12
                     (local.get $2)
                    )
                   )
                  )
                  (block $do-once36
                   (if
                    (local.tee $0
                     (i32.load
                      (local.tee $3
                       (i32.add
                        (local.tee $1
                         (i32.add
                          (local.get $2)
                          (i32.const 16)
                         )
                        )
                        (i32.const 4)
                       )
                      )
                     )
                    )
                    (local.set $1
                     (local.get $3)
                    )
                    (if
                     (i32.eqz
                      (local.tee $0
                       (i32.load offset=16
                        (local.get $2)
                       )
                      )
                     )
                     (block
                      (local.set $0
                       (i32.const 0)
                      )
                      (br $do-once36)
                     )
                    )
                   )
                   (loop $while-in39
                    (block $while-out38
                     (if
                      (i32.eqz
                       (local.tee $3
                        (i32.load
                         (local.tee $6
                          (i32.add
                           (local.get $0)
                           (i32.const 20)
                          )
                         )
                        )
                       )
                      )
                      (br_if $while-out38
                       (i32.eqz
                        (local.tee $3
                         (i32.load
                          (local.tee $6
                           (i32.add
                            (local.get $0)
                            (i32.const 16)
                           )
                          )
                         )
                        )
                       )
                      )
                     )
                     (local.set $1
                      (local.get $6)
                     )
                     (local.set $0
                      (local.get $3)
                     )
                     (br $while-in39)
                    )
                   )
                   (i32.store
                    (local.get $1)
                    (i32.const 0)
                   )
                  )
                  (block
                   (i32.store offset=12
                    (local.tee $1
                     (i32.load offset=8
                      (local.get $2)
                     )
                    )
                    (local.get $0)
                   )
                   (i32.store offset=8
                    (local.get $0)
                    (local.get $1)
                   )
                  )
                 )
                 (br_if $label$break$L246
                  (i32.eqz
                   (local.get $8)
                  )
                 )
                 (if
                  (i32.eq
                   (local.get $2)
                   (i32.load
                    (local.tee $3
                     (i32.add
                      (i32.shl
                       (local.tee $1
                        (i32.load offset=28
                         (local.get $2)
                        )
                       )
                       (i32.const 2)
                      )
                      (i32.const 55132)
                     )
                    )
                   )
                  )
                  (block $do-once40
                   (i32.store
                    (local.get $3)
                    (local.get $0)
                   )
                   (br_if $do-once40
                    (local.get $0)
                   )
                   (i32.store
                    (i32.const 54832)
                    (i32.and
                     (i32.load
                      (i32.const 54832)
                     )
                     (i32.xor
                      (i32.shl
                       (i32.const 1)
                       (local.get $1)
                      )
                      (i32.const -1)
                     )
                    )
                   )
                   (br $label$break$L246)
                  )
                  (block
                   (i32.store
                    (select
                     (i32.add
                      (local.get $8)
                      (i32.const 16)
                     )
                     (i32.add
                      (local.get $8)
                      (i32.const 20)
                     )
                     (i32.eq
                      (local.get $2)
                      (i32.load offset=16
                       (local.get $8)
                      )
                     )
                    )
                    (local.get $0)
                   )
                   (br_if $label$break$L246
                    (i32.eqz
                     (local.get $0)
                    )
                   )
                  )
                 )
                 (i32.store offset=24
                  (local.get $0)
                  (local.get $8)
                 )
                 (if
                  (local.tee $1
                   (i32.load offset=16
                    (local.get $2)
                   )
                  )
                  (block
                   (i32.store offset=16
                    (local.get $0)
                    (local.get $1)
                   )
                   (i32.store offset=24
                    (local.get $1)
                    (local.get $0)
                   )
                  )
                 )
                 (br_if $label$break$L246
                  (i32.eqz
                   (local.tee $1
                    (i32.load offset=20
                     (local.get $2)
                    )
                   )
                  )
                 )
                 (i32.store offset=20
                  (local.get $0)
                  (local.get $1)
                 )
                 (i32.store offset=24
                  (local.get $1)
                  (local.get $0)
                 )
                )
               )
               (local.set $2
                (i32.add
                 (local.get $2)
                 (local.tee $0
                  (i32.and
                   (local.get $9)
                   (i32.const -8)
                  )
                 )
                )
               )
               (local.set $4
                (i32.add
                 (local.get $0)
                 (local.get $4)
                )
               )
              )
             )
             (i32.store offset=4
              (local.get $2)
              (i32.and
               (i32.load offset=4
                (local.get $2)
               )
               (i32.const -2)
              )
             )
             (i32.store offset=4
              (local.get $5)
              (i32.or
               (local.get $4)
               (i32.const 1)
              )
             )
             (i32.store
              (i32.add
               (local.get $4)
               (local.get $5)
              )
              (local.get $4)
             )
             (local.set $1
              (i32.shr_u
               (local.get $4)
               (i32.const 3)
              )
             )
             (if
              (i32.lt_u
               (local.get $4)
               (i32.const 256)
              )
              (block
               (local.set $0
                (i32.add
                 (i32.shl
                  (local.get $1)
                  (i32.const 3)
                 )
                 (i32.const 54868)
                )
               )
               (local.set $1
                (if (result i32)
                 (i32.and
                  (local.tee $2
                   (i32.load
                    (i32.const 54828)
                   )
                  )
                  (local.tee $1
                   (i32.shl
                    (i32.const 1)
                    (local.get $1)
                   )
                  )
                 )
                 (i32.load
                  (local.tee $2
                   (i32.add
                    (local.get $0)
                    (i32.const 8)
                   )
                  )
                 )
                 (block (result i32)
                  (i32.store
                   (i32.const 54828)
                   (i32.or
                    (local.get $1)
                    (local.get $2)
                   )
                  )
                  (local.set $2
                   (i32.add
                    (local.get $0)
                    (i32.const 8)
                   )
                  )
                  (local.get $0)
                 )
                )
               )
               (i32.store
                (local.get $2)
                (local.get $5)
               )
               (i32.store offset=12
                (local.get $1)
                (local.get $5)
               )
               (i32.store offset=8
                (local.get $5)
                (local.get $1)
               )
               (i32.store offset=12
                (local.get $5)
                (local.get $0)
               )
               (br $label$break$L238)
              )
             )
             (local.set $0
              (i32.add
               (i32.shl
                (local.tee $1
                 (if (result i32)
                  (local.tee $0
                   (i32.shr_u
                    (local.get $4)
                    (i32.const 8)
                   )
                  )
                  (if (result i32)
                   (i32.gt_u
                    (local.get $4)
                    (i32.const 16777215)
                   )
                   (i32.const 31)
                   (block (result i32)
                    (local.set $0
                     (i32.and
                      (i32.shr_u
                       (i32.add
                        (local.tee $2
                         (i32.shl
                          (local.get $0)
                          (local.tee $1
                           (i32.and
                            (i32.shr_u
                             (i32.add
                              (local.get $0)
                              (i32.const 1048320)
                             )
                             (i32.const 16)
                            )
                            (i32.const 8)
                           )
                          )
                         )
                        )
                        (i32.const 520192)
                       )
                       (i32.const 16)
                      )
                      (i32.const 4)
                     )
                    )
                    (i32.or
                     (i32.shl
                      (local.tee $0
                       (i32.add
                        (i32.sub
                         (i32.const 14)
                         (i32.or
                          (local.tee $3
                           (i32.and
                            (i32.shr_u
                             (i32.add
                              (local.tee $2
                               (i32.shl
                                (local.get $2)
                                (local.get $0)
                               )
                              )
                              (i32.const 245760)
                             )
                             (i32.const 16)
                            )
                            (i32.const 2)
                           )
                          )
                          (i32.or
                           (local.get $0)
                           (local.get $1)
                          )
                         )
                        )
                        (i32.shr_u
                         (i32.shl
                          (local.get $2)
                          (local.get $3)
                         )
                         (i32.const 15)
                        )
                       )
                      )
                      (i32.const 1)
                     )
                     (i32.and
                      (i32.shr_u
                       (local.get $4)
                       (i32.add
                        (local.get $0)
                        (i32.const 7)
                       )
                      )
                      (i32.const 1)
                     )
                    )
                   )
                  )
                  (i32.const 0)
                 )
                )
                (i32.const 2)
               )
               (i32.const 55132)
              )
             )
             (i32.store offset=28
              (local.get $5)
              (local.get $1)
             )
             (i32.store offset=20
              (local.get $5)
              (i32.const 0)
             )
             (i32.store offset=16
              (local.get $5)
              (i32.const 0)
             )
             (if
              (i32.eqz
               (i32.and
                (local.tee $2
                 (i32.load
                  (i32.const 54832)
                 )
                )
                (local.tee $3
                 (i32.shl
                  (i32.const 1)
                  (local.get $1)
                 )
                )
               )
              )
              (block
               (i32.store
                (i32.const 54832)
                (i32.or
                 (local.get $2)
                 (local.get $3)
                )
               )
               (i32.store
                (local.get $0)
                (local.get $5)
               )
               (i32.store offset=24
                (local.get $5)
                (local.get $0)
               )
               (i32.store offset=12
                (local.get $5)
                (local.get $5)
               )
               (i32.store offset=8
                (local.get $5)
                (local.get $5)
               )
               (br $label$break$L238)
              )
             )
             (if
              (i32.eq
               (local.get $4)
               (i32.and
                (i32.load offset=4
                 (local.tee $0
                  (i32.load
                   (local.get $0)
                  )
                 )
                )
                (i32.const -8)
               )
              )
              (local.set $1
               (local.get $0)
              )
              (block $label$break$L291
               (local.set $2
                (i32.shl
                 (local.get $4)
                 (select
                  (i32.const 0)
                  (i32.sub
                   (i32.const 25)
                   (i32.shr_u
                    (local.get $1)
                    (i32.const 1)
                   )
                  )
                  (i32.eq
                   (local.get $1)
                   (i32.const 31)
                  )
                 )
                )
               )
               (loop $while-in46
                (if
                 (local.tee $1
                  (i32.load
                   (local.tee $3
                    (i32.add
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                     (i32.shl
                      (i32.shr_u
                       (local.get $2)
                       (i32.const 31)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                 )
                 (block
                  (local.set $2
                   (i32.shl
                    (local.get $2)
                    (i32.const 1)
                   )
                  )
                  (br_if $label$break$L291
                   (i32.eq
                    (local.get $4)
                    (i32.and
                     (i32.load offset=4
                      (local.get $1)
                     )
                     (i32.const -8)
                    )
                   )
                  )
                  (local.set $0
                   (local.get $1)
                  )
                  (br $while-in46)
                 )
                )
               )
               (i32.store
                (local.get $3)
                (local.get $5)
               )
               (i32.store offset=24
                (local.get $5)
                (local.get $0)
               )
               (i32.store offset=12
                (local.get $5)
                (local.get $5)
               )
               (i32.store offset=8
                (local.get $5)
                (local.get $5)
               )
               (br $label$break$L238)
              )
             )
             (i32.store offset=12
              (local.tee $0
               (i32.load offset=8
                (local.get $1)
               )
              )
              (local.get $5)
             )
             (i32.store offset=8
              (local.get $1)
              (local.get $5)
             )
             (i32.store offset=8
              (local.get $5)
              (local.get $0)
             )
             (i32.store offset=12
              (local.get $5)
              (local.get $1)
             )
             (i32.store offset=24
              (local.get $5)
              (i32.const 0)
             )
            )
           )
           (global.set $STACKTOP
            (local.get $10)
           )
           (return
            (i32.add
             (local.get $7)
             (i32.const 8)
            )
           )
          )
         )
        )
        (local.set $4
         (i32.const 55276)
        )
        (loop $while-in48
         (block $while-out47
          (if
           (i32.le_u
            (local.tee $6
             (i32.load
              (local.get $4)
             )
            )
            (local.get $3)
           )
           (br_if $while-out47
            (i32.gt_u
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.load offset=4
                (local.get $4)
               )
              )
             )
             (local.get $3)
            )
           )
          )
          (local.set $4
           (i32.load offset=8
            (local.get $4)
           )
          )
          (br $while-in48)
         )
        )
        (i32.store
         (i32.const 54852)
         (local.tee $5
          (i32.add
           (local.get $1)
           (local.tee $4
            (select
             (i32.and
              (i32.sub
               (i32.const 0)
               (local.tee $4
                (i32.add
                 (local.get $1)
                 (i32.const 8)
                )
               )
              )
              (i32.const 7)
             )
             (i32.const 0)
             (i32.and
              (local.get $4)
              (i32.const 7)
             )
            )
           )
          )
         )
        )
        (i32.store
         (i32.const 54840)
         (local.tee $4
          (i32.sub
           (local.tee $8
            (i32.add
             (local.get $2)
             (i32.const -40)
            )
           )
           (local.get $4)
          )
         )
        )
        (i32.store offset=4
         (local.get $5)
         (i32.or
          (local.get $4)
          (i32.const 1)
         )
        )
        (i32.store offset=4
         (i32.add
          (local.get $1)
          (local.get $8)
         )
         (i32.const 40)
        )
        (i32.store
         (i32.const 54856)
         (i32.load
          (i32.const 55316)
         )
        )
        (i32.store offset=4
         (local.tee $4
          (select
           (local.get $3)
           (local.tee $4
            (i32.add
             (select
              (i32.and
               (i32.sub
                (i32.const 0)
                (local.tee $5
                 (i32.add
                  (local.tee $4
                   (i32.add
                    (local.get $6)
                    (i32.const -47)
                   )
                  )
                  (i32.const 8)
                 )
                )
               )
               (i32.const 7)
              )
              (i32.const 0)
              (i32.and
               (local.get $5)
               (i32.const 7)
              )
             )
             (local.get $4)
            )
           )
           (i32.lt_u
            (local.get $4)
            (i32.add
             (local.get $3)
             (i32.const 16)
            )
           )
          )
         )
         (i32.const 27)
        )
        (i64.store offset=8 align=4
         (local.get $4)
         (i64.load align=4
          (i32.const 55276)
         )
        )
        (i64.store offset=16 align=4
         (local.get $4)
         (i64.load align=4
          (i32.const 55284)
         )
        )
        (i32.store
         (i32.const 55276)
         (local.get $1)
        )
        (i32.store
         (i32.const 55280)
         (local.get $2)
        )
        (i32.store
         (i32.const 55288)
         (i32.const 0)
        )
        (i32.store
         (i32.const 55284)
         (i32.add
          (local.get $4)
          (i32.const 8)
         )
        )
        (local.set $1
         (i32.add
          (local.get $4)
          (i32.const 24)
         )
        )
        (loop $while-in50
         (i32.store
          (local.tee $2
           (i32.add
            (local.get $1)
            (i32.const 4)
           )
          )
          (i32.const 7)
         )
         (if
          (i32.lt_u
           (i32.add
            (local.get $1)
            (i32.const 8)
           )
           (local.get $6)
          )
          (block
           (local.set $1
            (local.get $2)
           )
           (br $while-in50)
          )
         )
        )
        (if
         (i32.ne
          (local.get $3)
          (local.get $4)
         )
         (block
          (i32.store offset=4
           (local.get $4)
           (i32.and
            (i32.load offset=4
             (local.get $4)
            )
            (i32.const -2)
           )
          )
          (i32.store offset=4
           (local.get $3)
           (i32.or
            (local.tee $6
             (i32.sub
              (local.get $4)
              (local.get $3)
             )
            )
            (i32.const 1)
           )
          )
          (i32.store
           (local.get $4)
           (local.get $6)
          )
          (local.set $2
           (i32.shr_u
            (local.get $6)
            (i32.const 3)
           )
          )
          (if
           (i32.lt_u
            (local.get $6)
            (i32.const 256)
           )
           (block
            (local.set $1
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 3)
              )
              (i32.const 54868)
             )
            )
            (local.set $2
             (if (result i32)
              (i32.and
               (local.tee $4
                (i32.load
                 (i32.const 54828)
                )
               )
               (local.tee $2
                (i32.shl
                 (i32.const 1)
                 (local.get $2)
                )
               )
              )
              (i32.load
               (local.tee $4
                (i32.add
                 (local.get $1)
                 (i32.const 8)
                )
               )
              )
              (block (result i32)
               (i32.store
                (i32.const 54828)
                (i32.or
                 (local.get $2)
                 (local.get $4)
                )
               )
               (local.set $4
                (i32.add
                 (local.get $1)
                 (i32.const 8)
                )
               )
               (local.get $1)
              )
             )
            )
            (i32.store
             (local.get $4)
             (local.get $3)
            )
            (i32.store offset=12
             (local.get $2)
             (local.get $3)
            )
            (i32.store offset=8
             (local.get $3)
             (local.get $2)
            )
            (i32.store offset=12
             (local.get $3)
             (local.get $1)
            )
            (br $label$break$L215)
           )
          )
          (local.set $1
           (i32.add
            (i32.shl
             (local.tee $2
              (if (result i32)
               (local.tee $1
                (i32.shr_u
                 (local.get $6)
                 (i32.const 8)
                )
               )
               (if (result i32)
                (i32.gt_u
                 (local.get $6)
                 (i32.const 16777215)
                )
                (i32.const 31)
                (block (result i32)
                 (local.set $1
                  (i32.and
                   (i32.shr_u
                    (i32.add
                     (local.tee $4
                      (i32.shl
                       (local.get $1)
                       (local.tee $2
                        (i32.and
                         (i32.shr_u
                          (i32.add
                           (local.get $1)
                           (i32.const 1048320)
                          )
                          (i32.const 16)
                         )
                         (i32.const 8)
                        )
                       )
                      )
                     )
                     (i32.const 520192)
                    )
                    (i32.const 16)
                   )
                   (i32.const 4)
                  )
                 )
                 (i32.or
                  (i32.shl
                   (local.tee $1
                    (i32.add
                     (i32.sub
                      (i32.const 14)
                      (i32.or
                       (local.tee $5
                        (i32.and
                         (i32.shr_u
                          (i32.add
                           (local.tee $4
                            (i32.shl
                             (local.get $4)
                             (local.get $1)
                            )
                           )
                           (i32.const 245760)
                          )
                          (i32.const 16)
                         )
                         (i32.const 2)
                        )
                       )
                       (i32.or
                        (local.get $1)
                        (local.get $2)
                       )
                      )
                     )
                     (i32.shr_u
                      (i32.shl
                       (local.get $4)
                       (local.get $5)
                      )
                      (i32.const 15)
                     )
                    )
                   )
                   (i32.const 1)
                  )
                  (i32.and
                   (i32.shr_u
                    (local.get $6)
                    (i32.add
                     (local.get $1)
                     (i32.const 7)
                    )
                   )
                   (i32.const 1)
                  )
                 )
                )
               )
               (i32.const 0)
              )
             )
             (i32.const 2)
            )
            (i32.const 55132)
           )
          )
          (i32.store offset=28
           (local.get $3)
           (local.get $2)
          )
          (i32.store offset=20
           (local.get $3)
           (i32.const 0)
          )
          (i32.store offset=16
           (local.get $3)
           (i32.const 0)
          )
          (if
           (i32.eqz
            (i32.and
             (local.tee $4
              (i32.load
               (i32.const 54832)
              )
             )
             (local.tee $5
              (i32.shl
               (i32.const 1)
               (local.get $2)
              )
             )
            )
           )
           (block
            (i32.store
             (i32.const 54832)
             (i32.or
              (local.get $4)
              (local.get $5)
             )
            )
            (i32.store
             (local.get $1)
             (local.get $3)
            )
            (i32.store offset=24
             (local.get $3)
             (local.get $1)
            )
            (i32.store offset=12
             (local.get $3)
             (local.get $3)
            )
            (i32.store offset=8
             (local.get $3)
             (local.get $3)
            )
            (br $label$break$L215)
           )
          )
          (if
           (i32.eq
            (local.get $6)
            (i32.and
             (i32.load offset=4
              (local.tee $1
               (i32.load
                (local.get $1)
               )
              )
             )
             (i32.const -8)
            )
           )
           (local.set $2
            (local.get $1)
           )
           (block $label$break$L325
            (local.set $4
             (i32.shl
              (local.get $6)
              (select
               (i32.const 0)
               (i32.sub
                (i32.const 25)
                (i32.shr_u
                 (local.get $2)
                 (i32.const 1)
                )
               )
               (i32.eq
                (local.get $2)
                (i32.const 31)
               )
              )
             )
            )
            (loop $while-in53
             (if
              (local.tee $2
               (i32.load
                (local.tee $5
                 (i32.add
                  (i32.add
                   (local.get $1)
                   (i32.const 16)
                  )
                  (i32.shl
                   (i32.shr_u
                    (local.get $4)
                    (i32.const 31)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
              )
              (block
               (local.set $4
                (i32.shl
                 (local.get $4)
                 (i32.const 1)
                )
               )
               (br_if $label$break$L325
                (i32.eq
                 (local.get $6)
                 (i32.and
                  (i32.load offset=4
                   (local.get $2)
                  )
                  (i32.const -8)
                 )
                )
               )
               (local.set $1
                (local.get $2)
               )
               (br $while-in53)
              )
             )
            )
            (i32.store
             (local.get $5)
             (local.get $3)
            )
            (i32.store offset=24
             (local.get $3)
             (local.get $1)
            )
            (i32.store offset=12
             (local.get $3)
             (local.get $3)
            )
            (i32.store offset=8
             (local.get $3)
             (local.get $3)
            )
            (br $label$break$L215)
           )
          )
          (i32.store offset=12
           (local.tee $1
            (i32.load offset=8
             (local.get $2)
            )
           )
           (local.get $3)
          )
          (i32.store offset=8
           (local.get $2)
           (local.get $3)
          )
          (i32.store offset=8
           (local.get $3)
           (local.get $1)
          )
          (i32.store offset=12
           (local.get $3)
           (local.get $2)
          )
          (i32.store offset=24
           (local.get $3)
           (i32.const 0)
          )
         )
        )
       )
       (block
        (if
         (i32.or
          (i32.eqz
           (local.tee $3
            (i32.load
             (i32.const 54844)
            )
           )
          )
          (i32.lt_u
           (local.get $1)
           (local.get $3)
          )
         )
         (i32.store
          (i32.const 54844)
          (local.get $1)
         )
        )
        (i32.store
         (i32.const 55276)
         (local.get $1)
        )
        (i32.store
         (i32.const 55280)
         (local.get $2)
        )
        (i32.store
         (i32.const 55288)
         (i32.const 0)
        )
        (i32.store
         (i32.const 54864)
         (i32.load
          (i32.const 55300)
         )
        )
        (i32.store
         (i32.const 54860)
         (i32.const -1)
        )
        (i32.store
         (i32.const 54880)
         (i32.const 54868)
        )
        (i32.store
         (i32.const 54876)
         (i32.const 54868)
        )
        (i32.store
         (i32.const 54888)
         (i32.const 54876)
        )
        (i32.store
         (i32.const 54884)
         (i32.const 54876)
        )
        (i32.store
         (i32.const 54896)
         (i32.const 54884)
        )
        (i32.store
         (i32.const 54892)
         (i32.const 54884)
        )
        (i32.store
         (i32.const 54904)
         (i32.const 54892)
        )
        (i32.store
         (i32.const 54900)
         (i32.const 54892)
        )
        (i32.store
         (i32.const 54912)
         (i32.const 54900)
        )
        (i32.store
         (i32.const 54908)
         (i32.const 54900)
        )
        (i32.store
         (i32.const 54920)
         (i32.const 54908)
        )
        (i32.store
         (i32.const 54916)
         (i32.const 54908)
        )
        (i32.store
         (i32.const 54928)
         (i32.const 54916)
        )
        (i32.store
         (i32.const 54924)
         (i32.const 54916)
        )
        (i32.store
         (i32.const 54936)
         (i32.const 54924)
        )
        (i32.store
         (i32.const 54932)
         (i32.const 54924)
        )
        (i32.store
         (i32.const 54944)
         (i32.const 54932)
        )
        (i32.store
         (i32.const 54940)
         (i32.const 54932)
        )
        (i32.store
         (i32.const 54952)
         (i32.const 54940)
        )
        (i32.store
         (i32.const 54948)
         (i32.const 54940)
        )
        (i32.store
         (i32.const 54960)
         (i32.const 54948)
        )
        (i32.store
         (i32.const 54956)
         (i32.const 54948)
        )
        (i32.store
         (i32.const 54968)
         (i32.const 54956)
        )
        (i32.store
         (i32.const 54964)
         (i32.const 54956)
        )
        (i32.store
         (i32.const 54976)
         (i32.const 54964)
        )
        (i32.store
         (i32.const 54972)
         (i32.const 54964)
        )
        (i32.store
         (i32.const 54984)
         (i32.const 54972)
        )
        (i32.store
         (i32.const 54980)
         (i32.const 54972)
        )
        (i32.store
         (i32.const 54992)
         (i32.const 54980)
        )
        (i32.store
         (i32.const 54988)
         (i32.const 54980)
        )
        (i32.store
         (i32.const 55000)
         (i32.const 54988)
        )
        (i32.store
         (i32.const 54996)
         (i32.const 54988)
        )
        (i32.store
         (i32.const 55008)
         (i32.const 54996)
        )
        (i32.store
         (i32.const 55004)
         (i32.const 54996)
        )
        (i32.store
         (i32.const 55016)
         (i32.const 55004)
        )
        (i32.store
         (i32.const 55012)
         (i32.const 55004)
        )
        (i32.store
         (i32.const 55024)
         (i32.const 55012)
        )
        (i32.store
         (i32.const 55020)
         (i32.const 55012)
        )
        (i32.store
         (i32.const 55032)
         (i32.const 55020)
        )
        (i32.store
         (i32.const 55028)
         (i32.const 55020)
        )
        (i32.store
         (i32.const 55040)
         (i32.const 55028)
        )
        (i32.store
         (i32.const 55036)
         (i32.const 55028)
        )
        (i32.store
         (i32.const 55048)
         (i32.const 55036)
        )
        (i32.store
         (i32.const 55044)
         (i32.const 55036)
        )
        (i32.store
         (i32.const 55056)
         (i32.const 55044)
        )
        (i32.store
         (i32.const 55052)
         (i32.const 55044)
        )
        (i32.store
         (i32.const 55064)
         (i32.const 55052)
        )
        (i32.store
         (i32.const 55060)
         (i32.const 55052)
        )
        (i32.store
         (i32.const 55072)
         (i32.const 55060)
        )
        (i32.store
         (i32.const 55068)
         (i32.const 55060)
        )
        (i32.store
         (i32.const 55080)
         (i32.const 55068)
        )
        (i32.store
         (i32.const 55076)
         (i32.const 55068)
        )
        (i32.store
         (i32.const 55088)
         (i32.const 55076)
        )
        (i32.store
         (i32.const 55084)
         (i32.const 55076)
        )
        (i32.store
         (i32.const 55096)
         (i32.const 55084)
        )
        (i32.store
         (i32.const 55092)
         (i32.const 55084)
        )
        (i32.store
         (i32.const 55104)
         (i32.const 55092)
        )
        (i32.store
         (i32.const 55100)
         (i32.const 55092)
        )
        (i32.store
         (i32.const 55112)
         (i32.const 55100)
        )
        (i32.store
         (i32.const 55108)
         (i32.const 55100)
        )
        (i32.store
         (i32.const 55120)
         (i32.const 55108)
        )
        (i32.store
         (i32.const 55116)
         (i32.const 55108)
        )
        (i32.store
         (i32.const 55128)
         (i32.const 55116)
        )
        (i32.store
         (i32.const 55124)
         (i32.const 55116)
        )
        (i32.store
         (i32.const 54852)
         (local.tee $4
          (i32.add
           (local.get $1)
           (local.tee $3
            (select
             (i32.and
              (i32.sub
               (i32.const 0)
               (local.tee $3
                (i32.add
                 (local.get $1)
                 (i32.const 8)
                )
               )
              )
              (i32.const 7)
             )
             (i32.const 0)
             (i32.and
              (local.get $3)
              (i32.const 7)
             )
            )
           )
          )
         )
        )
        (i32.store
         (i32.const 54840)
         (local.tee $3
          (i32.sub
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const -40)
            )
           )
           (local.get $3)
          )
         )
        )
        (i32.store offset=4
         (local.get $4)
         (i32.or
          (local.get $3)
          (i32.const 1)
         )
        )
        (i32.store offset=4
         (i32.add
          (local.get $1)
          (local.get $2)
         )
         (i32.const 40)
        )
        (i32.store
         (i32.const 54856)
         (i32.load
          (i32.const 55316)
         )
        )
       )
      )
      (if
       (i32.gt_u
        (local.tee $1
         (i32.load
          (i32.const 54840)
         )
        )
        (local.get $0)
       )
       (br $folding-inner0)
      )
     )
     (i32.store
      (i32.const 53312)
      (i32.const 48)
     )
     (br $folding-inner2)
    )
    (i32.store
     (i32.const 54840)
     (local.tee $2
      (i32.sub
       (local.get $1)
       (local.get $0)
      )
     )
    )
    (i32.store
     (i32.const 54852)
     (local.tee $3
      (i32.add
       (local.get $0)
       (local.tee $1
        (i32.load
         (i32.const 54852)
        )
       )
      )
     )
    )
    (i32.store offset=4
     (local.get $3)
     (i32.or
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store offset=4
     (local.get $1)
     (i32.or
      (local.get $0)
      (i32.const 3)
     )
    )
   )
   (global.set $STACKTOP
    (local.get $10)
   )
   (return
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
  (i32.const 0)
 )
 (func $_free (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return)
  )
  (local.set $4
   (i32.load
    (i32.const 54844)
   )
  )
  (local.set $5
   (i32.add
    (local.tee $3
     (i32.add
      (local.get $0)
      (i32.const -8)
     )
    )
    (local.tee $0
     (i32.and
      (local.tee $2
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
      )
      (i32.const -8)
     )
    )
   )
  )
  (if
   (i32.ge_u
    (local.tee $7
     (if (result i32)
      (i32.and
       (local.get $2)
       (i32.const 1)
      )
      (local.get $3)
      (block $do-once (result i32)
       (local.set $1
        (i32.load
         (local.get $3)
        )
       )
       (if
        (i32.eqz
         (i32.and
          (local.get $2)
          (i32.const 3)
         )
        )
        (return)
       )
       (if
        (i32.lt_u
         (local.tee $3
          (i32.sub
           (local.get $3)
           (local.get $1)
          )
         )
         (local.get $4)
        )
        (return)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $1)
        )
       )
       (if
        (i32.eq
         (local.get $3)
         (i32.load
          (i32.const 54848)
         )
        )
        (block
         (drop
          (br_if $do-once
           (local.get $3)
           (i32.ne
            (i32.and
             (local.tee $1
              (i32.load offset=4
               (local.get $5)
              )
             )
             (i32.const 3)
            )
            (i32.const 3)
           )
          )
         )
         (i32.store
          (i32.const 54836)
          (local.get $0)
         )
         (i32.store offset=4
          (local.get $5)
          (i32.and
           (local.get $1)
           (i32.const -2)
          )
         )
         (i32.store offset=4
          (local.get $3)
          (i32.or
           (local.get $0)
           (i32.const 1)
          )
         )
         (i32.store
          (i32.add
           (local.get $0)
           (local.get $3)
          )
          (local.get $0)
         )
         (return)
        )
       )
       (local.set $4
        (i32.shr_u
         (local.get $1)
         (i32.const 3)
        )
       )
       (if
        (i32.lt_u
         (local.get $1)
         (i32.const 256)
        )
        (block
         (if
          (i32.eq
           (local.tee $1
            (i32.load offset=8
             (local.get $3)
            )
           )
           (local.tee $2
            (i32.load offset=12
             (local.get $3)
            )
           )
          )
          (i32.store
           (i32.const 54828)
           (i32.and
            (i32.load
             (i32.const 54828)
            )
            (i32.xor
             (i32.shl
              (i32.const 1)
              (local.get $4)
             )
             (i32.const -1)
            )
           )
          )
          (block
           (i32.store offset=12
            (local.get $1)
            (local.get $2)
           )
           (i32.store offset=8
            (local.get $2)
            (local.get $1)
           )
          )
         )
         (br $do-once
          (local.get $3)
         )
        )
       )
       (local.set $7
        (i32.load offset=24
         (local.get $3)
        )
       )
       (if
        (i32.eq
         (local.get $3)
         (local.tee $1
          (i32.load offset=12
           (local.get $3)
          )
         )
        )
        (block $do-once0
         (if
          (local.tee $1
           (i32.load
            (local.tee $4
             (i32.add
              (local.tee $2
               (i32.add
                (local.get $3)
                (i32.const 16)
               )
              )
              (i32.const 4)
             )
            )
           )
          )
          (local.set $2
           (local.get $4)
          )
          (if
           (i32.eqz
            (local.tee $1
             (i32.load
              (local.get $2)
             )
            )
           )
           (block
            (local.set $1
             (i32.const 0)
            )
            (br $do-once0)
           )
          )
         )
         (loop $while-in
          (block $while-out
           (if
            (i32.eqz
             (local.tee $6
              (i32.load
               (local.tee $4
                (i32.add
                 (local.get $1)
                 (i32.const 20)
                )
               )
              )
             )
            )
            (br_if $while-out
             (i32.eqz
              (local.tee $6
               (i32.load
                (local.tee $4
                 (i32.add
                  (local.get $1)
                  (i32.const 16)
                 )
                )
               )
              )
             )
            )
           )
           (local.set $2
            (local.get $4)
           )
           (local.set $1
            (local.get $6)
           )
           (br $while-in)
          )
         )
         (i32.store
          (local.get $2)
          (i32.const 0)
         )
        )
        (block
         (i32.store offset=12
          (local.tee $2
           (i32.load offset=8
            (local.get $3)
           )
          )
          (local.get $1)
         )
         (i32.store offset=8
          (local.get $1)
          (local.get $2)
         )
        )
       )
       (if (result i32)
        (local.get $7)
        (block (result i32)
         (if
          (i32.eq
           (local.get $3)
           (i32.load
            (local.tee $4
             (i32.add
              (i32.shl
               (local.tee $2
                (i32.load offset=28
                 (local.get $3)
                )
               )
               (i32.const 2)
              )
              (i32.const 55132)
             )
            )
           )
          )
          (block
           (i32.store
            (local.get $4)
            (local.get $1)
           )
           (if
            (i32.eqz
             (local.get $1)
            )
            (block
             (i32.store
              (i32.const 54832)
              (i32.and
               (i32.load
                (i32.const 54832)
               )
               (i32.xor
                (i32.shl
                 (i32.const 1)
                 (local.get $2)
                )
                (i32.const -1)
               )
              )
             )
             (br $do-once
              (local.get $3)
             )
            )
           )
          )
          (block
           (i32.store
            (select
             (local.tee $2
              (i32.add
               (local.get $7)
               (i32.const 16)
              )
             )
             (i32.add
              (local.get $7)
              (i32.const 20)
             )
             (i32.eq
              (local.get $3)
              (i32.load
               (local.get $2)
              )
             )
            )
            (local.get $1)
           )
           (drop
            (br_if $do-once
             (local.get $3)
             (i32.eqz
              (local.get $1)
             )
            )
           )
          )
         )
         (i32.store offset=24
          (local.get $1)
          (local.get $7)
         )
         (if
          (local.tee $2
           (i32.load offset=16
            (local.get $3)
           )
          )
          (block
           (i32.store offset=16
            (local.get $1)
            (local.get $2)
           )
           (i32.store offset=24
            (local.get $2)
            (local.get $1)
           )
          )
         )
         (if
          (local.tee $2
           (i32.load offset=20
            (local.get $3)
           )
          )
          (block
           (i32.store offset=20
            (local.get $1)
            (local.get $2)
           )
           (i32.store offset=24
            (local.get $2)
            (local.get $1)
           )
          )
         )
         (local.get $3)
        )
        (local.get $3)
       )
      )
     )
    )
    (local.get $5)
   )
   (return)
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $8
      (i32.load offset=4
       (local.get $5)
      )
     )
     (i32.const 1)
    )
   )
   (return)
  )
  (if
   (i32.and
    (local.get $8)
    (i32.const 2)
   )
   (block
    (i32.store offset=4
     (local.get $5)
     (i32.and
      (local.get $8)
      (i32.const -2)
     )
    )
    (i32.store offset=4
     (local.get $3)
     (i32.or
      (local.get $0)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (local.get $7)
     )
     (local.get $0)
    )
    (local.set $2
     (local.get $0)
    )
   )
   (block
    (if
     (i32.eq
      (local.get $5)
      (i32.load
       (i32.const 54852)
      )
     )
     (block
      (i32.store
       (i32.const 54840)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.load
          (i32.const 54840)
         )
        )
       )
      )
      (i32.store
       (i32.const 54852)
       (local.get $3)
      )
      (i32.store offset=4
       (local.get $3)
       (i32.or
        (local.get $0)
        (i32.const 1)
       )
      )
      (if
       (i32.ne
        (i32.load
         (i32.const 54848)
        )
        (local.get $3)
       )
       (return)
      )
      (i32.store
       (i32.const 54848)
       (i32.const 0)
      )
      (i32.store
       (i32.const 54836)
       (i32.const 0)
      )
      (return)
     )
    )
    (if
     (i32.eq
      (i32.load
       (i32.const 54848)
      )
      (local.get $5)
     )
     (block
      (i32.store
       (i32.const 54836)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.load
          (i32.const 54836)
         )
        )
       )
      )
      (i32.store
       (i32.const 54848)
       (local.get $7)
      )
      (i32.store offset=4
       (local.get $3)
       (i32.or
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (local.get $7)
       )
       (local.get $0)
      )
      (return)
     )
    )
    (local.set $4
     (i32.shr_u
      (local.get $8)
      (i32.const 3)
     )
    )
    (if
     (i32.lt_u
      (local.get $8)
      (i32.const 256)
     )
     (if
      (i32.eq
       (local.tee $1
        (i32.load offset=8
         (local.get $5)
        )
       )
       (local.tee $2
        (i32.load offset=12
         (local.get $5)
        )
       )
      )
      (i32.store
       (i32.const 54828)
       (i32.and
        (i32.load
         (i32.const 54828)
        )
        (i32.xor
         (i32.shl
          (i32.const 1)
          (local.get $4)
         )
         (i32.const -1)
        )
       )
      )
      (block
       (i32.store offset=12
        (local.get $1)
        (local.get $2)
       )
       (i32.store offset=8
        (local.get $2)
        (local.get $1)
       )
      )
     )
     (block $do-once2
      (local.set $9
       (i32.load offset=24
        (local.get $5)
       )
      )
      (if
       (i32.eq
        (local.tee $1
         (i32.load offset=12
          (local.get $5)
         )
        )
        (local.get $5)
       )
       (block $do-once4
        (if
         (local.tee $1
          (i32.load
           (local.tee $4
            (i32.add
             (local.tee $2
              (i32.add
               (local.get $5)
               (i32.const 16)
              )
             )
             (i32.const 4)
            )
           )
          )
         )
         (local.set $2
          (local.get $4)
         )
         (if
          (i32.eqz
           (local.tee $1
            (i32.load
             (local.get $2)
            )
           )
          )
          (block
           (local.set $1
            (i32.const 0)
           )
           (br $do-once4)
          )
         )
        )
        (loop $while-in7
         (block $while-out6
          (if
           (i32.eqz
            (local.tee $6
             (i32.load
              (local.tee $4
               (i32.add
                (local.get $1)
                (i32.const 20)
               )
              )
             )
            )
           )
           (br_if $while-out6
            (i32.eqz
             (local.tee $6
              (i32.load
               (local.tee $4
                (i32.add
                 (local.get $1)
                 (i32.const 16)
                )
               )
              )
             )
            )
           )
          )
          (local.set $2
           (local.get $4)
          )
          (local.set $1
           (local.get $6)
          )
          (br $while-in7)
         )
        )
        (i32.store
         (local.get $2)
         (i32.const 0)
        )
       )
       (block
        (i32.store offset=12
         (local.tee $2
          (i32.load offset=8
           (local.get $5)
          )
         )
         (local.get $1)
        )
        (i32.store offset=8
         (local.get $1)
         (local.get $2)
        )
       )
      )
      (if
       (local.get $9)
       (block
        (if
         (i32.eq
          (i32.load
           (local.tee $4
            (i32.add
             (i32.shl
              (local.tee $2
               (i32.load offset=28
                (local.get $5)
               )
              )
              (i32.const 2)
             )
             (i32.const 55132)
            )
           )
          )
          (local.get $5)
         )
         (block
          (i32.store
           (local.get $4)
           (local.get $1)
          )
          (if
           (i32.eqz
            (local.get $1)
           )
           (block
            (i32.store
             (i32.const 54832)
             (i32.and
              (i32.load
               (i32.const 54832)
              )
              (i32.xor
               (i32.shl
                (i32.const 1)
                (local.get $2)
               )
               (i32.const -1)
              )
             )
            )
            (br $do-once2)
           )
          )
         )
         (block
          (i32.store
           (select
            (local.tee $2
             (i32.add
              (local.get $9)
              (i32.const 16)
             )
            )
            (i32.add
             (local.get $9)
             (i32.const 20)
            )
            (i32.eq
             (i32.load
              (local.get $2)
             )
             (local.get $5)
            )
           )
           (local.get $1)
          )
          (br_if $do-once2
           (i32.eqz
            (local.get $1)
           )
          )
         )
        )
        (i32.store offset=24
         (local.get $1)
         (local.get $9)
        )
        (if
         (local.tee $2
          (i32.load offset=16
           (local.get $5)
          )
         )
         (block
          (i32.store offset=16
           (local.get $1)
           (local.get $2)
          )
          (i32.store offset=24
           (local.get $2)
           (local.get $1)
          )
         )
        )
        (if
         (local.tee $2
          (i32.load offset=20
           (local.get $5)
          )
         )
         (block
          (i32.store offset=20
           (local.get $1)
           (local.get $2)
          )
          (i32.store offset=24
           (local.get $2)
           (local.get $1)
          )
         )
        )
       )
      )
     )
    )
    (i32.store offset=4
     (local.get $3)
     (i32.or
      (local.tee $2
       (i32.add
        (local.get $0)
        (i32.and
         (local.get $8)
         (i32.const -8)
        )
       )
      )
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (local.get $7)
     )
     (local.get $2)
    )
    (if
     (i32.eq
      (local.get $3)
      (i32.load
       (i32.const 54848)
      )
     )
     (block
      (i32.store
       (i32.const 54836)
       (local.get $2)
      )
      (return)
     )
    )
   )
  )
  (local.set $1
   (i32.shr_u
    (local.get $2)
    (i32.const 3)
   )
  )
  (if
   (i32.lt_u
    (local.get $2)
    (i32.const 256)
   )
   (block
    (local.set $0
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 3)
      )
      (i32.const 54868)
     )
    )
    (local.set $1
     (if (result i32)
      (i32.and
       (local.tee $2
        (i32.load
         (i32.const 54828)
        )
       )
       (local.tee $1
        (i32.shl
         (i32.const 1)
         (local.get $1)
        )
       )
      )
      (i32.load
       (local.tee $2
        (i32.add
         (local.get $0)
         (i32.const 8)
        )
       )
      )
      (block (result i32)
       (i32.store
        (i32.const 54828)
        (i32.or
         (local.get $1)
         (local.get $2)
        )
       )
       (local.set $2
        (i32.add
         (local.get $0)
         (i32.const 8)
        )
       )
       (local.get $0)
      )
     )
    )
    (i32.store
     (local.get $2)
     (local.get $3)
    )
    (i32.store offset=12
     (local.get $1)
     (local.get $3)
    )
    (i32.store offset=8
     (local.get $3)
     (local.get $1)
    )
    (i32.store offset=12
     (local.get $3)
     (local.get $0)
    )
    (return)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.tee $1
      (if (result i32)
       (local.tee $0
        (i32.shr_u
         (local.get $2)
         (i32.const 8)
        )
       )
       (if (result i32)
        (i32.gt_u
         (local.get $2)
         (i32.const 16777215)
        )
        (i32.const 31)
        (block (result i32)
         (local.set $0
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $4
              (i32.shl
               (local.get $0)
               (local.tee $1
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.get $0)
                   (i32.const 1048320)
                  )
                  (i32.const 16)
                 )
                 (i32.const 8)
                )
               )
              )
             )
             (i32.const 520192)
            )
            (i32.const 16)
           )
           (i32.const 4)
          )
         )
         (i32.or
          (i32.shl
           (local.tee $0
            (i32.add
             (i32.sub
              (i32.const 14)
              (i32.or
               (i32.or
                (local.get $0)
                (local.get $1)
               )
               (local.tee $1
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.tee $0
                    (i32.shl
                     (local.get $4)
                     (local.get $0)
                    )
                   )
                   (i32.const 245760)
                  )
                  (i32.const 16)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (i32.shr_u
              (i32.shl
               (local.get $0)
               (local.get $1)
              )
              (i32.const 15)
             )
            )
           )
           (i32.const 1)
          )
          (i32.and
           (i32.shr_u
            (local.get $2)
            (i32.add
             (local.get $0)
             (i32.const 7)
            )
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
    (i32.const 55132)
   )
  )
  (i32.store offset=28
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=20
   (local.get $3)
   (i32.const 0)
  )
  (i32.store offset=16
   (local.get $3)
   (i32.const 0)
  )
  (if
   (i32.and
    (local.tee $4
     (i32.load
      (i32.const 54832)
     )
    )
    (local.tee $6
     (i32.shl
      (i32.const 1)
      (local.get $1)
     )
    )
   )
   (block $label$break$L112
    (if
     (i32.eq
      (local.get $2)
      (i32.and
       (i32.load offset=4
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i32.const -8)
      )
     )
     (local.set $1
      (local.get $0)
     )
     (block $label$break$L115
      (local.set $4
       (i32.shl
        (local.get $2)
        (select
         (i32.const 0)
         (i32.sub
          (i32.const 25)
          (i32.shr_u
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.eq
          (local.get $1)
          (i32.const 31)
         )
        )
       )
      )
      (loop $while-in11
       (if
        (local.tee $1
         (i32.load
          (local.tee $6
           (i32.add
            (i32.add
             (local.get $0)
             (i32.const 16)
            )
            (i32.shl
             (i32.shr_u
              (local.get $4)
              (i32.const 31)
             )
             (i32.const 2)
            )
           )
          )
         )
        )
        (block
         (local.set $4
          (i32.shl
           (local.get $4)
           (i32.const 1)
          )
         )
         (br_if $label$break$L115
          (i32.eq
           (local.get $2)
           (i32.and
            (i32.load offset=4
             (local.get $1)
            )
            (i32.const -8)
           )
          )
         )
         (local.set $0
          (local.get $1)
         )
         (br $while-in11)
        )
       )
      )
      (i32.store
       (local.get $6)
       (local.get $3)
      )
      (i32.store offset=24
       (local.get $3)
       (local.get $0)
      )
      (i32.store offset=12
       (local.get $3)
       (local.get $3)
      )
      (i32.store offset=8
       (local.get $3)
       (local.get $3)
      )
      (br $label$break$L112)
     )
    )
    (i32.store offset=12
     (local.tee $0
      (i32.load offset=8
       (local.get $1)
      )
     )
     (local.get $3)
    )
    (i32.store offset=8
     (local.get $1)
     (local.get $3)
    )
    (i32.store offset=8
     (local.get $3)
     (local.get $0)
    )
    (i32.store offset=12
     (local.get $3)
     (local.get $1)
    )
    (i32.store offset=24
     (local.get $3)
     (i32.const 0)
    )
   )
   (block
    (i32.store
     (i32.const 54832)
     (i32.or
      (local.get $4)
      (local.get $6)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $3)
    )
    (i32.store offset=24
     (local.get $3)
     (local.get $0)
    )
    (i32.store offset=12
     (local.get $3)
     (local.get $3)
    )
    (i32.store offset=8
     (local.get $3)
     (local.get $3)
    )
   )
  )
  (i32.store
   (i32.const 54860)
   (local.tee $0
    (i32.add
     (i32.load
      (i32.const 54860)
     )
     (i32.const -1)
    )
   )
  )
  (if
   (local.get $0)
   (return)
  )
  (local.set $0
   (i32.const 55284)
  )
  (loop $while-in13
   (local.set $0
    (i32.add
     (local.tee $3
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 8)
    )
   )
   (br_if $while-in13
    (local.get $3)
   )
  )
  (i32.store
   (i32.const 54860)
   (i32.const -1)
  )
 )
 (func $_calloc (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (i32.eqz
    (local.tee $0
     (call $_malloc
      (block (result i32)
       (if
        (local.get $0)
        (if
         (i32.gt_u
          (i32.or
           (local.tee $1
            (local.get $0)
           )
           (i32.const 1)
          )
          (i32.const 65535)
         )
         (local.set $1
          (select
           (local.get $1)
           (i32.const -1)
           (i32.eq
            (i32.div_u
             (local.get $1)
             (local.get $1)
            )
            (i32.const 1)
           )
          )
         )
        )
       )
       (local.get $1)
      )
     )
    )
   )
   (return
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const -4)
      )
     )
     (i32.const 3)
    )
   )
   (return
    (local.get $0)
   )
  )
  (drop
   (call $_memset
    (local.get $0)
    (i32.const 0)
    (local.get $1)
   )
  )
  (local.get $0)
 )
 (func $_realloc (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (call $_malloc
     (local.get $1)
    )
   )
  )
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const -65)
   )
   (block
    (i32.store
     (i32.const 53312)
     (i32.const 48)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (local.tee $2
    (call $_try_realloc_chunk
     (i32.add
      (local.get $0)
      (i32.const -8)
     )
     (select
      (i32.const 16)
      (i32.and
       (i32.add
        (local.get $1)
        (i32.const 11)
       )
       (i32.const -8)
      )
      (i32.lt_u
       (local.get $1)
       (i32.const 11)
      )
     )
    )
   )
   (return
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $2
     (call $_malloc
      (local.get $1)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $_memcpy
    (local.get $2)
    (local.get $0)
    (select
     (local.tee $3
      (i32.sub
       (i32.and
        (local.tee $3
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const -4)
          )
         )
        )
        (i32.const -8)
       )
       (select
        (i32.const 4)
        (i32.const 8)
        (i32.and
         (local.get $3)
         (i32.const 3)
        )
       )
      )
     )
     (local.get $1)
     (i32.lt_u
      (local.get $3)
      (local.get $1)
     )
    )
   )
  )
  (call $_free
   (local.get $0)
  )
  (local.get $2)
 )
 (func $_try_realloc_chunk (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $2
   (i32.and
    (local.tee $6
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.const -8)
   )
  )
  (block $folding-inner0
   (if
    (i32.eqz
     (i32.and
      (local.get $6)
      (i32.const 3)
     )
    )
    (block
     (br_if $folding-inner0
      (i32.lt_u
       (local.get $1)
       (i32.const 256)
      )
     )
     (if
      (i32.ge_u
       (local.get $2)
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (if
       (i32.le_u
        (i32.sub
         (local.get $2)
         (local.get $1)
        )
        (i32.shl
         (i32.load
          (i32.const 55308)
         )
         (i32.const 1)
        )
       )
       (return
        (local.get $0)
       )
      )
     )
     (br $folding-inner0)
    )
   )
   (local.set $4
    (i32.add
     (local.get $0)
     (local.get $2)
    )
   )
   (if
    (i32.ge_u
     (local.get $2)
     (local.get $1)
    )
    (block
     (if
      (i32.le_u
       (local.tee $2
        (i32.sub
         (local.get $2)
         (local.get $1)
        )
       )
       (i32.const 15)
      )
      (return
       (local.get $0)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $1)
        (i32.and
         (local.get $6)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.or
       (local.get $2)
       (i32.const 3)
      )
     )
     (i32.store offset=4
      (local.get $4)
      (i32.or
       (i32.load offset=4
        (local.get $4)
       )
       (i32.const 1)
      )
     )
     (call $_dispose_chunk
      (local.get $1)
      (local.get $2)
     )
     (return
      (local.get $0)
     )
    )
   )
   (if
    (i32.eq
     (i32.load
      (i32.const 54852)
     )
     (local.get $4)
    )
    (block
     (br_if $folding-inner0
      (i32.le_u
       (local.tee $2
        (i32.add
         (i32.load
          (i32.const 54840)
         )
         (local.get $2)
        )
       )
       (local.get $1)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $1)
        (i32.and
         (local.get $6)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $3
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.or
       (local.tee $1
        (i32.sub
         (local.get $2)
         (local.get $1)
        )
       )
       (i32.const 1)
      )
     )
     (i32.store
      (i32.const 54852)
      (local.get $3)
     )
     (i32.store
      (i32.const 54840)
      (local.get $1)
     )
     (return
      (local.get $0)
     )
    )
   )
   (if
    (i32.eq
     (i32.load
      (i32.const 54848)
     )
     (local.get $4)
    )
    (block
     (br_if $folding-inner0
      (i32.lt_u
       (local.tee $3
        (i32.add
         (local.get $2)
         (i32.load
          (i32.const 54836)
         )
        )
       )
       (local.get $1)
      )
     )
     (if
      (i32.gt_u
       (local.tee $2
        (i32.sub
         (local.get $3)
         (local.get $1)
        )
       )
       (i32.const 15)
      )
      (block
       (i32.store offset=4
        (local.get $0)
        (i32.or
         (i32.or
          (local.get $1)
          (i32.and
           (local.get $6)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
       (i32.store offset=4
        (local.tee $1
         (i32.add
          (local.get $0)
          (local.get $1)
         )
        )
        (i32.or
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.store
        (local.tee $3
         (i32.add
          (local.get $0)
          (local.get $3)
         )
        )
        (local.get $2)
       )
       (i32.store offset=4
        (local.get $3)
        (i32.and
         (i32.load offset=4
          (local.get $3)
         )
         (i32.const -2)
        )
       )
      )
      (block
       (i32.store offset=4
        (local.get $0)
        (i32.or
         (i32.or
          (local.get $3)
          (i32.and
           (local.get $6)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
       (i32.store offset=4
        (local.tee $1
         (i32.add
          (local.get $0)
          (local.get $3)
         )
        )
        (i32.or
         (i32.load offset=4
          (local.get $1)
         )
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
      )
     )
     (i32.store
      (i32.const 54836)
      (local.get $2)
     )
     (i32.store
      (i32.const 54848)
      (local.get $1)
     )
     (return
      (local.get $0)
     )
    )
   )
   (br_if $folding-inner0
    (i32.and
     (local.tee $3
      (i32.load offset=4
       (local.get $4)
      )
     )
     (i32.const 2)
    )
   )
   (br_if $folding-inner0
    (i32.lt_u
     (local.tee $7
      (i32.add
       (local.get $2)
       (i32.and
        (local.get $3)
        (i32.const -8)
       )
      )
     )
     (local.get $1)
    )
   )
   (local.set $5
    (i32.shr_u
     (local.get $3)
     (i32.const 3)
    )
   )
   (if
    (i32.lt_u
     (local.get $3)
     (i32.const 256)
    )
    (if
     (i32.eq
      (local.tee $2
       (i32.load offset=8
        (local.get $4)
       )
      )
      (local.tee $3
       (i32.load offset=12
        (local.get $4)
       )
      )
     )
     (i32.store
      (i32.const 54828)
      (i32.and
       (i32.load
        (i32.const 54828)
       )
       (i32.xor
        (i32.shl
         (i32.const 1)
         (local.get $5)
        )
        (i32.const -1)
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $2)
       (local.get $3)
      )
      (i32.store offset=8
       (local.get $3)
       (local.get $2)
      )
     )
    )
    (block $do-once
     (local.set $8
      (i32.load offset=24
       (local.get $4)
      )
     )
     (if
      (i32.eq
       (local.get $4)
       (local.tee $2
        (i32.load offset=12
         (local.get $4)
        )
       )
      )
      (block $do-once0
       (if
        (local.tee $2
         (i32.load
          (local.tee $5
           (i32.add
            (local.tee $3
             (i32.add
              (local.get $4)
              (i32.const 16)
             )
            )
            (i32.const 4)
           )
          )
         )
        )
        (local.set $3
         (local.get $5)
        )
        (if
         (i32.eqz
          (local.tee $2
           (i32.load
            (local.get $3)
           )
          )
         )
         (block
          (local.set $2
           (i32.const 0)
          )
          (br $do-once0)
         )
        )
       )
       (loop $while-in
        (block $while-out
         (if
          (i32.eqz
           (local.tee $9
            (i32.load
             (local.tee $5
              (i32.add
               (local.get $2)
               (i32.const 20)
              )
             )
            )
           )
          )
          (br_if $while-out
           (i32.eqz
            (local.tee $9
             (i32.load
              (local.tee $5
               (i32.add
                (local.get $2)
                (i32.const 16)
               )
              )
             )
            )
           )
          )
         )
         (local.set $3
          (local.get $5)
         )
         (local.set $2
          (local.get $9)
         )
         (br $while-in)
        )
       )
       (i32.store
        (local.get $3)
        (i32.const 0)
       )
      )
      (block
       (i32.store offset=12
        (local.tee $3
         (i32.load offset=8
          (local.get $4)
         )
        )
        (local.get $2)
       )
       (i32.store offset=8
        (local.get $2)
        (local.get $3)
       )
      )
     )
     (if
      (local.get $8)
      (block
       (if
        (i32.eq
         (i32.load
          (local.tee $5
           (i32.add
            (i32.shl
             (local.tee $3
              (i32.load offset=28
               (local.get $4)
              )
             )
             (i32.const 2)
            )
            (i32.const 55132)
           )
          )
         )
         (local.get $4)
        )
        (block
         (i32.store
          (local.get $5)
          (local.get $2)
         )
         (if
          (i32.eqz
           (local.get $2)
          )
          (block
           (i32.store
            (i32.const 54832)
            (i32.and
             (i32.load
              (i32.const 54832)
             )
             (i32.xor
              (i32.shl
               (i32.const 1)
               (local.get $3)
              )
              (i32.const -1)
             )
            )
           )
           (br $do-once)
          )
         )
        )
        (block
         (i32.store
          (select
           (local.tee $3
            (i32.add
             (local.get $8)
             (i32.const 16)
            )
           )
           (i32.add
            (local.get $8)
            (i32.const 20)
           )
           (i32.eq
            (i32.load
             (local.get $3)
            )
            (local.get $4)
           )
          )
          (local.get $2)
         )
         (br_if $do-once
          (i32.eqz
           (local.get $2)
          )
         )
        )
       )
       (i32.store offset=24
        (local.get $2)
        (local.get $8)
       )
       (if
        (local.tee $3
         (i32.load offset=16
          (local.get $4)
         )
        )
        (block
         (i32.store offset=16
          (local.get $2)
          (local.get $3)
         )
         (i32.store offset=24
          (local.get $3)
          (local.get $2)
         )
        )
       )
       (if
        (local.tee $3
         (i32.load offset=20
          (local.get $4)
         )
        )
        (block
         (i32.store offset=20
          (local.get $2)
          (local.get $3)
         )
         (i32.store offset=24
          (local.get $3)
          (local.get $2)
         )
        )
       )
      )
     )
    )
   )
   (if
    (i32.lt_u
     (local.tee $2
      (i32.sub
       (local.get $7)
       (local.get $1)
      )
     )
     (i32.const 16)
    )
    (block
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (i32.and
         (local.get $6)
         (i32.const 1)
        )
        (local.get $7)
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $7)
       )
      )
      (i32.or
       (i32.load offset=4
        (local.get $1)
       )
       (i32.const 1)
      )
     )
    )
    (block
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $1)
        (i32.and
         (local.get $6)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.or
       (local.get $2)
       (i32.const 3)
      )
     )
     (i32.store offset=4
      (local.tee $3
       (i32.add
        (local.get $0)
        (local.get $7)
       )
      )
      (i32.or
       (i32.load offset=4
        (local.get $3)
       )
       (i32.const 1)
      )
     )
     (call $_dispose_chunk
      (local.get $1)
      (local.get $2)
     )
    )
   )
   (return
    (local.get $0)
   )
  )
  (i32.const 0)
 )
 (func $_dispose_chunk (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (i32.add
    (local.get $0)
    (local.get $1)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $3
      (i32.load offset=4
       (local.get $0)
      )
     )
     (i32.const 1)
    )
   )
   (block $do-once
    (local.set $2
     (i32.load
      (local.get $0)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (local.get $3)
       (i32.const 3)
      )
     )
     (return)
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
    (if
     (i32.eq
      (local.tee $0
       (i32.sub
        (local.get $0)
        (local.get $2)
       )
      )
      (i32.load
       (i32.const 54848)
      )
     )
     (block
      (br_if $do-once
       (i32.ne
        (i32.and
         (local.tee $2
          (i32.load offset=4
           (local.get $5)
          )
         )
         (i32.const 3)
        )
        (i32.const 3)
       )
      )
      (i32.store
       (i32.const 54836)
       (local.get $1)
      )
      (i32.store offset=4
       (local.get $5)
       (i32.and
        (local.get $2)
        (i32.const -2)
       )
      )
      (i32.store offset=4
       (local.get $0)
       (i32.or
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $5)
       (local.get $1)
      )
      (return)
     )
    )
    (local.set $4
     (i32.shr_u
      (local.get $2)
      (i32.const 3)
     )
    )
    (if
     (i32.lt_u
      (local.get $2)
      (i32.const 256)
     )
     (block
      (if
       (i32.eq
        (local.tee $2
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.tee $3
         (i32.load offset=12
          (local.get $0)
         )
        )
       )
       (i32.store
        (i32.const 54828)
        (i32.and
         (i32.load
          (i32.const 54828)
         )
         (i32.xor
          (i32.shl
           (i32.const 1)
           (local.get $4)
          )
          (i32.const -1)
         )
        )
       )
       (block
        (i32.store offset=12
         (local.get $2)
         (local.get $3)
        )
        (i32.store offset=8
         (local.get $3)
         (local.get $2)
        )
       )
      )
      (br $do-once)
     )
    )
    (local.set $7
     (i32.load offset=24
      (local.get $0)
     )
    )
    (if
     (i32.eq
      (local.get $0)
      (local.tee $2
       (i32.load offset=12
        (local.get $0)
       )
      )
     )
     (block $do-once0
      (if
       (local.tee $2
        (i32.load
         (local.tee $4
          (i32.add
           (local.tee $3
            (i32.add
             (local.get $0)
             (i32.const 16)
            )
           )
           (i32.const 4)
          )
         )
        )
       )
       (local.set $3
        (local.get $4)
       )
       (if
        (i32.eqz
         (local.tee $2
          (i32.load
           (local.get $3)
          )
         )
        )
        (block
         (local.set $2
          (i32.const 0)
         )
         (br $do-once0)
        )
       )
      )
      (loop $while-in
       (block $while-out
        (if
         (i32.eqz
          (local.tee $6
           (i32.load
            (local.tee $4
             (i32.add
              (local.get $2)
              (i32.const 20)
             )
            )
           )
          )
         )
         (br_if $while-out
          (i32.eqz
           (local.tee $6
            (i32.load
             (local.tee $4
              (i32.add
               (local.get $2)
               (i32.const 16)
              )
             )
            )
           )
          )
         )
        )
        (local.set $3
         (local.get $4)
        )
        (local.set $2
         (local.get $6)
        )
        (br $while-in)
       )
      )
      (i32.store
       (local.get $3)
       (i32.const 0)
      )
     )
     (block
      (i32.store offset=12
       (local.tee $3
        (i32.load offset=8
         (local.get $0)
        )
       )
       (local.get $2)
      )
      (i32.store offset=8
       (local.get $2)
       (local.get $3)
      )
     )
    )
    (if
     (local.get $7)
     (block
      (if
       (i32.eq
        (local.get $0)
        (i32.load
         (local.tee $4
          (i32.add
           (i32.shl
            (local.tee $3
             (i32.load offset=28
              (local.get $0)
             )
            )
            (i32.const 2)
           )
           (i32.const 55132)
          )
         )
        )
       )
       (block
        (i32.store
         (local.get $4)
         (local.get $2)
        )
        (if
         (i32.eqz
          (local.get $2)
         )
         (block
          (i32.store
           (i32.const 54832)
           (i32.and
            (i32.load
             (i32.const 54832)
            )
            (i32.xor
             (i32.shl
              (i32.const 1)
              (local.get $3)
             )
             (i32.const -1)
            )
           )
          )
          (br $do-once)
         )
        )
       )
       (block
        (i32.store
         (select
          (local.tee $3
           (i32.add
            (local.get $7)
            (i32.const 16)
           )
          )
          (i32.add
           (local.get $7)
           (i32.const 20)
          )
          (i32.eq
           (local.get $0)
           (i32.load
            (local.get $3)
           )
          )
         )
         (local.get $2)
        )
        (br_if $do-once
         (i32.eqz
          (local.get $2)
         )
        )
       )
      )
      (i32.store offset=24
       (local.get $2)
       (local.get $7)
      )
      (if
       (local.tee $3
        (i32.load offset=16
         (local.get $0)
        )
       )
       (block
        (i32.store offset=16
         (local.get $2)
         (local.get $3)
        )
        (i32.store offset=24
         (local.get $3)
         (local.get $2)
        )
       )
      )
      (if
       (local.tee $3
        (i32.load offset=20
         (local.get $0)
        )
       )
       (block
        (i32.store offset=20
         (local.get $2)
         (local.get $3)
        )
        (i32.store offset=24
         (local.get $3)
         (local.get $2)
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.and
    (local.tee $7
     (i32.load offset=4
      (local.get $5)
     )
    )
    (i32.const 2)
   )
   (block
    (i32.store offset=4
     (local.get $5)
     (i32.and
      (local.get $7)
      (i32.const -2)
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.or
      (local.get $1)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (local.get $1)
     )
     (local.get $1)
    )
    (local.set $3
     (local.get $1)
    )
   )
   (block
    (if
     (i32.eq
      (local.get $5)
      (i32.load
       (i32.const 54852)
      )
     )
     (block
      (i32.store
       (i32.const 54840)
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.load
          (i32.const 54840)
         )
        )
       )
      )
      (i32.store
       (i32.const 54852)
       (local.get $0)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.or
        (local.get $1)
        (i32.const 1)
       )
      )
      (if
       (i32.ne
        (i32.load
         (i32.const 54848)
        )
        (local.get $0)
       )
       (return)
      )
      (i32.store
       (i32.const 54848)
       (i32.const 0)
      )
      (i32.store
       (i32.const 54836)
       (i32.const 0)
      )
      (return)
     )
    )
    (if
     (i32.eq
      (local.get $5)
      (i32.load
       (i32.const 54848)
      )
     )
     (block
      (i32.store
       (i32.const 54836)
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.load
          (i32.const 54836)
         )
        )
       )
      )
      (i32.store
       (i32.const 54848)
       (local.get $0)
      )
      (i32.store offset=4
       (local.get $0)
       (i32.or
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (local.get $1)
       )
       (local.get $1)
      )
      (return)
     )
    )
    (local.set $4
     (i32.shr_u
      (local.get $7)
      (i32.const 3)
     )
    )
    (if
     (i32.lt_u
      (local.get $7)
      (i32.const 256)
     )
     (if
      (i32.eq
       (local.tee $2
        (i32.load offset=8
         (local.get $5)
        )
       )
       (local.tee $3
        (i32.load offset=12
         (local.get $5)
        )
       )
      )
      (i32.store
       (i32.const 54828)
       (i32.and
        (i32.load
         (i32.const 54828)
        )
        (i32.xor
         (i32.shl
          (i32.const 1)
          (local.get $4)
         )
         (i32.const -1)
        )
       )
      )
      (block
       (i32.store offset=12
        (local.get $2)
        (local.get $3)
       )
       (i32.store offset=8
        (local.get $3)
        (local.get $2)
       )
      )
     )
     (block $do-once2
      (local.set $8
       (i32.load offset=24
        (local.get $5)
       )
      )
      (if
       (i32.eq
        (local.tee $2
         (i32.load offset=12
          (local.get $5)
         )
        )
        (local.get $5)
       )
       (block $do-once4
        (if
         (local.tee $2
          (i32.load
           (local.tee $4
            (i32.add
             (local.tee $3
              (i32.add
               (local.get $5)
               (i32.const 16)
              )
             )
             (i32.const 4)
            )
           )
          )
         )
         (local.set $3
          (local.get $4)
         )
         (if
          (i32.eqz
           (local.tee $2
            (i32.load
             (local.get $3)
            )
           )
          )
          (block
           (local.set $2
            (i32.const 0)
           )
           (br $do-once4)
          )
         )
        )
        (loop $while-in7
         (block $while-out6
          (if
           (i32.eqz
            (local.tee $6
             (i32.load
              (local.tee $4
               (i32.add
                (local.get $2)
                (i32.const 20)
               )
              )
             )
            )
           )
           (br_if $while-out6
            (i32.eqz
             (local.tee $6
              (i32.load
               (local.tee $4
                (i32.add
                 (local.get $2)
                 (i32.const 16)
                )
               )
              )
             )
            )
           )
          )
          (local.set $3
           (local.get $4)
          )
          (local.set $2
           (local.get $6)
          )
          (br $while-in7)
         )
        )
        (i32.store
         (local.get $3)
         (i32.const 0)
        )
       )
       (block
        (i32.store offset=12
         (local.tee $3
          (i32.load offset=8
           (local.get $5)
          )
         )
         (local.get $2)
        )
        (i32.store offset=8
         (local.get $2)
         (local.get $3)
        )
       )
      )
      (if
       (local.get $8)
       (block
        (if
         (i32.eq
          (i32.load
           (local.tee $4
            (i32.add
             (i32.shl
              (local.tee $3
               (i32.load offset=28
                (local.get $5)
               )
              )
              (i32.const 2)
             )
             (i32.const 55132)
            )
           )
          )
          (local.get $5)
         )
         (block
          (i32.store
           (local.get $4)
           (local.get $2)
          )
          (if
           (i32.eqz
            (local.get $2)
           )
           (block
            (i32.store
             (i32.const 54832)
             (i32.and
              (i32.load
               (i32.const 54832)
              )
              (i32.xor
               (i32.shl
                (i32.const 1)
                (local.get $3)
               )
               (i32.const -1)
              )
             )
            )
            (br $do-once2)
           )
          )
         )
         (block
          (i32.store
           (select
            (local.tee $3
             (i32.add
              (local.get $8)
              (i32.const 16)
             )
            )
            (i32.add
             (local.get $8)
             (i32.const 20)
            )
            (i32.eq
             (i32.load
              (local.get $3)
             )
             (local.get $5)
            )
           )
           (local.get $2)
          )
          (br_if $do-once2
           (i32.eqz
            (local.get $2)
           )
          )
         )
        )
        (i32.store offset=24
         (local.get $2)
         (local.get $8)
        )
        (if
         (local.tee $3
          (i32.load offset=16
           (local.get $5)
          )
         )
         (block
          (i32.store offset=16
           (local.get $2)
           (local.get $3)
          )
          (i32.store offset=24
           (local.get $3)
           (local.get $2)
          )
         )
        )
        (if
         (local.tee $3
          (i32.load offset=20
           (local.get $5)
          )
         )
         (block
          (i32.store offset=20
           (local.get $2)
           (local.get $3)
          )
          (i32.store offset=24
           (local.get $3)
           (local.get $2)
          )
         )
        )
       )
      )
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.or
      (local.tee $3
       (i32.add
        (local.get $1)
        (i32.and
         (local.get $7)
         (i32.const -8)
        )
       )
      )
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $0)
      (local.get $3)
     )
     (local.get $3)
    )
    (if
     (i32.eq
      (local.get $0)
      (i32.load
       (i32.const 54848)
      )
     )
     (block
      (i32.store
       (i32.const 54836)
       (local.get $3)
      )
      (return)
     )
    )
   )
  )
  (local.set $2
   (i32.shr_u
    (local.get $3)
    (i32.const 3)
   )
  )
  (if
   (i32.lt_u
    (local.get $3)
    (i32.const 256)
   )
   (block
    (local.set $1
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 3)
      )
      (i32.const 54868)
     )
    )
    (local.set $2
     (if (result i32)
      (i32.and
       (local.tee $3
        (i32.load
         (i32.const 54828)
        )
       )
       (local.tee $2
        (i32.shl
         (i32.const 1)
         (local.get $2)
        )
       )
      )
      (i32.load
       (local.tee $3
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
      )
      (block (result i32)
       (i32.store
        (i32.const 54828)
        (i32.or
         (local.get $2)
         (local.get $3)
        )
       )
       (local.set $3
        (i32.add
         (local.get $1)
         (i32.const 8)
        )
       )
       (local.get $1)
      )
     )
    )
    (i32.store
     (local.get $3)
     (local.get $0)
    )
    (i32.store offset=12
     (local.get $2)
     (local.get $0)
    )
    (i32.store offset=8
     (local.get $0)
     (local.get $2)
    )
    (i32.store offset=12
     (local.get $0)
     (local.get $1)
    )
    (return)
   )
  )
  (local.set $1
   (i32.add
    (i32.shl
     (local.tee $2
      (if (result i32)
       (local.tee $1
        (i32.shr_u
         (local.get $3)
         (i32.const 8)
        )
       )
       (if (result i32)
        (i32.gt_u
         (local.get $3)
         (i32.const 16777215)
        )
        (i32.const 31)
        (block (result i32)
         (local.set $1
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $4
              (i32.shl
               (local.get $1)
               (local.tee $2
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.get $1)
                   (i32.const 1048320)
                  )
                  (i32.const 16)
                 )
                 (i32.const 8)
                )
               )
              )
             )
             (i32.const 520192)
            )
            (i32.const 16)
           )
           (i32.const 4)
          )
         )
         (i32.or
          (i32.shl
           (local.tee $1
            (i32.add
             (i32.sub
              (i32.const 14)
              (i32.or
               (i32.or
                (local.get $1)
                (local.get $2)
               )
               (local.tee $2
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.tee $1
                    (i32.shl
                     (local.get $4)
                     (local.get $1)
                    )
                   )
                   (i32.const 245760)
                  )
                  (i32.const 16)
                 )
                 (i32.const 2)
                )
               )
              )
             )
             (i32.shr_u
              (i32.shl
               (local.get $1)
               (local.get $2)
              )
              (i32.const 15)
             )
            )
           )
           (i32.const 1)
          )
          (i32.and
           (i32.shr_u
            (local.get $3)
            (i32.add
             (local.get $1)
             (i32.const 7)
            )
           )
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
    (i32.const 55132)
   )
  )
  (i32.store offset=28
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=20
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=16
   (local.get $0)
   (i32.const 0)
  )
  (block $folding-inner0
   (if
    (i32.eqz
     (i32.and
      (local.tee $4
       (i32.load
        (i32.const 54832)
       )
      )
      (local.tee $6
       (i32.shl
        (i32.const 1)
        (local.get $2)
       )
      )
     )
    )
    (block
     (i32.store
      (i32.const 54832)
      (i32.or
       (local.get $4)
       (local.get $6)
      )
     )
     (i32.store
      (local.get $1)
      (local.get $0)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.eq
     (local.get $3)
     (i32.and
      (i32.load offset=4
       (local.tee $1
        (i32.load
         (local.get $1)
        )
       )
      )
      (i32.const -8)
     )
    )
    (local.set $2
     (local.get $1)
    )
    (block $label$break$L104
     (local.set $4
      (i32.shl
       (local.get $3)
       (select
        (i32.const 0)
        (i32.sub
         (i32.const 25)
         (i32.shr_u
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.eq
         (local.get $2)
         (i32.const 31)
        )
       )
      )
     )
     (loop $while-in10
      (if
       (local.tee $2
        (i32.load
         (local.tee $6
          (i32.add
           (i32.add
            (local.get $1)
            (i32.const 16)
           )
           (i32.shl
            (i32.shr_u
             (local.get $4)
             (i32.const 31)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (block
        (local.set $4
         (i32.shl
          (local.get $4)
          (i32.const 1)
         )
        )
        (br_if $label$break$L104
         (i32.eq
          (local.get $3)
          (i32.and
           (i32.load offset=4
            (local.get $2)
           )
           (i32.const -8)
          )
         )
        )
        (local.set $1
         (local.get $2)
        )
        (br $while-in10)
       )
      )
     )
     (i32.store
      (local.get $6)
      (local.get $0)
     )
     (br $folding-inner0)
    )
   )
   (i32.store offset=12
    (local.tee $1
     (i32.load offset=8
      (local.get $2)
     )
    )
    (local.get $0)
   )
   (i32.store offset=8
    (local.get $2)
    (local.get $0)
   )
   (i32.store offset=8
    (local.get $0)
    (local.get $1)
   )
   (i32.store offset=12
    (local.get $0)
    (local.get $2)
   )
   (i32.store offset=24
    (local.get $0)
    (i32.const 0)
   )
   (return)
  )
  (i32.store offset=24
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $0)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $0)
  )
 )
 (func $_sbrk (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (i32.or
    (i32.lt_s
     (local.tee $0
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 3)
       )
       (i32.const -4)
      )
     )
     (i32.const 1)
    )
    (i32.gt_u
     (local.tee $0
      (i32.add
       (local.get $0)
       (local.tee $1
        (i32.load
         (i32.const 56368)
        )
       )
      )
     )
     (local.get $1)
    )
   )
   (block $do-once
    (if
     (i32.gt_u
      (local.get $0)
      (call $_emscripten_get_heap_size)
     )
     (br_if $do-once
      (i32.eqz
       (call $_emscripten_resize_heap
        (local.get $0)
       )
      )
     )
    )
    (i32.store
     (i32.const 56368)
     (local.get $0)
    )
    (return
     (local.get $1)
    )
   )
  )
  (i32.store
   (i32.const 53312)
   (i32.const 48)
  )
  (i32.const -1)
 )
 (func $stackAlloc (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (local.get $0)
    (global.get $STACKTOP)
   )
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 15)
    )
    (i32.const -16)
   )
  )
  (local.get $1)
 )
 (func $stackRestore (; has Stack IR ;) (param $0 i32)
  (global.set $STACKTOP
   (local.get $0)
  )
 )
 (func $stackSave (; has Stack IR ;) (result i32)
  (global.get $STACKTOP)
 )
 (func $_emscripten_get_sbrk_ptr (; has Stack IR ;) (result i32)
  (i32.const 56368)
 )
 (func $_memcpy (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.ge_s
    (local.get $2)
    (i32.const 512)
   )
   (block
    (drop
     (call $_emscripten_memcpy_big
      (local.get $0)
      (local.get $1)
      (local.get $2)
     )
    )
    (return
     (local.get $0)
    )
   )
  )
  (local.set $4
   (local.get $0)
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.and
     (local.get $1)
     (i32.const 3)
    )
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (local.get $0)
       (i32.const 3)
      )
      (block
       (if
        (i32.eqz
         (local.get $2)
        )
        (return
         (local.get $4)
        )
       )
       (i32.store8
        (local.get $0)
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $2)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $5
     (i32.add
      (local.tee $2
       (i32.and
        (local.get $3)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (local.get $0)
       (local.get $5)
      )
      (block
       (i32.store
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
       (i32.store offset=4
        (local.get $0)
        (i32.load offset=4
         (local.get $1)
        )
       )
       (i32.store offset=8
        (local.get $0)
        (i32.load offset=8
         (local.get $1)
        )
       )
       (i32.store offset=12
        (local.get $0)
        (i32.load offset=12
         (local.get $1)
        )
       )
       (i32.store offset=16
        (local.get $0)
        (i32.load offset=16
         (local.get $1)
        )
       )
       (i32.store offset=20
        (local.get $0)
        (i32.load offset=20
         (local.get $1)
        )
       )
       (i32.store offset=24
        (local.get $0)
        (i32.load offset=24
         (local.get $1)
        )
       )
       (i32.store offset=28
        (local.get $0)
        (i32.load offset=28
         (local.get $1)
        )
       )
       (i32.store offset=32
        (local.get $0)
        (i32.load offset=32
         (local.get $1)
        )
       )
       (i32.store offset=36
        (local.get $0)
        (i32.load offset=36
         (local.get $1)
        )
       )
       (i32.store offset=40
        (local.get $0)
        (i32.load offset=40
         (local.get $1)
        )
       )
       (i32.store offset=44
        (local.get $0)
        (i32.load offset=44
         (local.get $1)
        )
       )
       (i32.store offset=48
        (local.get $0)
        (i32.load offset=48
         (local.get $1)
        )
       )
       (i32.store offset=52
        (local.get $0)
        (i32.load offset=52
         (local.get $1)
        )
       )
       (i32.store offset=56
        (local.get $0)
        (i32.load offset=56
         (local.get $1)
        )
       )
       (i32.store offset=60
        (local.get $0)
        (i32.load offset=60
         (local.get $1)
        )
       )
       (local.set $0
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
       (local.set $1
        (i32.sub
         (local.get $1)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $2)
      )
      (block
       (i32.store
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
   (block
    (local.set $2
     (i32.sub
      (local.get $3)
      (i32.const 4)
     )
    )
    (loop $while-in5
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $2)
      )
      (block
       (i32.store8
        (local.get $0)
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.store8 offset=1
        (local.get $0)
        (i32.load8_s offset=1
         (local.get $1)
        )
       )
       (i32.store8 offset=2
        (local.get $0)
        (i32.load8_s offset=2
         (local.get $1)
        )
       )
       (i32.store8 offset=3
        (local.get $0)
        (i32.load8_s offset=3
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in5)
      )
     )
    )
   )
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $3)
    )
    (block
     (i32.store8
      (local.get $0)
      (i32.load8_s
       (local.get $1)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (local.get $4)
 )
 (func $_memmove (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.and
    (i32.lt_s
     (local.get $1)
     (local.get $0)
    )
    (i32.lt_s
     (local.get $0)
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
   )
   (block
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
    (local.set $0
     (i32.add
      (local.tee $3
       (local.get $0)
      )
      (local.get $2)
     )
    )
    (loop $while-in
     (if
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       (local.set $2
        (i32.sub
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.tee $0
         (i32.sub
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.load8_s
         (local.tee $1
          (i32.sub
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $0
     (local.get $3)
    )
   )
   (drop
    (call $_memcpy
     (local.get $0)
     (local.get $1)
     (local.get $2)
    )
   )
  )
  (local.get $0)
 )
 (func $_memset (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (local.set $3
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
  )
  (if
   (i32.ge_s
    (local.get $2)
    (i32.const 67)
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (local.get $0)
       (i32.const 3)
      )
      (block
       (i32.store8
        (local.get $0)
        (local.get $3)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $1
     (i32.or
      (i32.or
       (i32.or
        (i32.shl
         (local.get $3)
         (i32.const 8)
        )
        (local.get $3)
       )
       (i32.shl
        (local.get $3)
        (i32.const 16)
       )
      )
      (i32.shl
       (local.get $3)
       (i32.const 24)
      )
     )
    )
    (local.set $6
     (i32.add
      (local.tee $5
       (i32.and
        (local.get $4)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (local.get $0)
       (local.get $6)
      )
      (block
       (i32.store
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=4
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=8
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=12
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=16
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=20
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=24
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=28
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=32
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=36
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=40
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=44
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=48
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=52
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=56
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=60
        (local.get $0)
        (local.get $1)
       )
       (local.set $0
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $5)
      )
      (block
       (i32.store
        (local.get $0)
        (local.get $1)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $4)
    )
    (block
     (i32.store8
      (local.get $0)
      (local.get $3)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (i32.sub
   (local.get $4)
   (local.get $2)
  )
 )
 (func $dynCall_ii (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call_indirect (type $i32_=>_i32)
   (local.get $1)
   (i32.and
    (local.get $0)
    (i32.const 63)
   )
  )
 )
 (func $dynCall_iidiiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f64) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (call_indirect (type $i32_f64_i32_i32_i32_i32_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (i32.sub
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const -64)
   )
  )
 )
 (func $dynCall_iii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call_indirect (type $i32_i32_=>_i32)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 15)
    )
    (i32.const 66)
   )
  )
 )
 (func $dynCall_iiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call_indirect (type $i32_i32_i32_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 82)
   )
  )
 )
 (func $dynCall_iiiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (call_indirect (type $i32_i32_i32_i32_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 114)
   )
  )
 )
 (func $dynCall_iiiiid (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (result i32)
  (call_indirect (type $i32_i32_i32_i32_f64_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 122)
   )
  )
 )
 (func $dynCall_iiiiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call_indirect (type $i32_i32_i32_i32_i32_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 130)
   )
  )
 )
 (func $dynCall_iiiiiid (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 f64) (result i32)
  (call_indirect (type $i32_i32_i32_i32_i32_f64_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 162)
   )
  )
 )
 (func $dynCall_iiiiiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 63)
    )
    (i32.const 166)
   )
  )
 )
 (func $dynCall_iiiiiiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 230)
   )
  )
 )
 (func $dynCall_iiiiiiiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (result i32)
  (call_indirect (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (local.get $8)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 15)
    )
    (i32.const 238)
   )
  )
 )
 (func $dynCall_v (; has Stack IR ;) (param $0 i32)
  (call_indirect (type $none_=>_none)
   (i32.const 266)
  )
 )
 (func $dynCall_vi (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call_indirect (type $i32_=>_none)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 127)
    )
    (i32.const 267)
   )
  )
 )
 (func $dynCall_vii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call_indirect (type $i32_i32_=>_none)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 63)
    )
    (i32.const 395)
   )
  )
 )
 (func $dynCall_viii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call_indirect (type $i32_i32_i32_=>_none)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.const 459)
  )
 )
 (func $dynCall_viiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (call_indirect (type $i32_i32_i32_i32_=>_none)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 460)
   )
  )
 )
 (func $dynCall_viiiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (call_indirect (type $i32_i32_i32_i32_i32_=>_none)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 468)
   )
  )
 )
 (func $dynCall_viiiiii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (call_indirect (type $i32_i32_i32_i32_i32_i32_=>_none)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 472)
   )
  )
 )
 (func $b0 (; has Stack IR ;) (param $0 i32) (result i32)
  (call $abort
   (i32.const 0)
  )
  (i32.const 0)
 )
 (func $b1 (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call $abort
   (i32.const 1)
  )
  (i32.const 0)
 )
 (func $b2 (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call $abort
   (i32.const 2)
  )
  (i32.const 0)
 )
 (func $b3 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call $abort
   (i32.const 3)
  )
  (i32.const 0)
 )
 (func $b4 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call $abort
   (i32.const 4)
  )
  (i32.const 0)
 )
 (func $b5 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f64) (result i32)
  (call $abort
   (i32.const 5)
  )
  (i32.const 0)
 )
 (func $b6 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (call $abort
   (i32.const 6)
  )
  (i32.const 0)
 )
 (func $b7 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (result i32)
  (call $abort
   (i32.const 7)
  )
  (i32.const 0)
 )
 (func $b8 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call $abort
   (i32.const 8)
  )
  (i32.const 0)
 )
 (func $b9 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (call $abort
   (i32.const 9)
  )
  (i32.const 0)
 )
 (func $b10 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (call $abort
   (i32.const 10)
  )
  (i32.const 0)
 )
 (func $b11 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (result i32)
  (call $abort
   (i32.const 11)
  )
  (i32.const 0)
 )
 (func $b12 (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (result i64)
  (call $abort
   (i32.const 12)
  )
  (i64.const 0)
 )
 (func $b13 (; has Stack IR ;)
  (call $abort
   (i32.const 13)
  )
 )
 (func $b14 (; has Stack IR ;) (param $0 i32)
  (call $abort
   (i32.const 14)
  )
 )
 (func $b15 (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $abort
   (i32.const 15)
  )
 )
 (func $b16 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $abort
   (i32.const 16)
  )
 )
 (func $b17 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $abort
   (i32.const 17)
  )
 )
 (func $b18 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (call $abort
   (i32.const 18)
  )
 )
 (func $b19 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (call $abort
   (i32.const 19)
  )
 )
 (func $b20 (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (param $4 i32)
  (call $abort
   (i32.const 20)
  )
 )
 (func $legalstub$dynCall_iiiiij (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (call_indirect (type $i32_i32_i32_i32_i64_=>_i32)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i64.or
    (i64.extend_i32_u
     (local.get $5)
    )
    (i64.shl
     (i64.extend_i32_u
      (local.get $6)
     )
     (i64.const 32)
    )
   )
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 254)
   )
  )
 )
 (func $legalstub$dynCall_jiji (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i64)
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.tee $5
      (call_indirect (type $i32_i64_i32_=>_i64)
       (local.get $1)
       (i64.or
        (i64.extend_i32_u
         (local.get $2)
        )
        (i64.shl
         (i64.extend_i32_u
          (local.get $3)
         )
         (i64.const 32)
        )
       )
       (local.get $4)
       (i32.add
        (i32.and
         (local.get $0)
         (i32.const 3)
        )
        (i32.const 262)
       )
      )
     )
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $5)
  )
 )
 (func $legalstub$dynCall_viijii (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (call_indirect (type $i32_i32_i64_i32_i32_=>_none)
   (local.get $1)
   (local.get $2)
   (i64.or
    (i64.extend_i32_u
     (local.get $3)
    )
    (i64.shl
     (i64.extend_i32_u
      (local.get $4)
     )
     (i64.const 32)
    )
   )
   (local.get $5)
   (local.get $6)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 480)
   )
  )
 )
)
